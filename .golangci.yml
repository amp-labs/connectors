run:
  timeout: 10m
output:
  formats:
    - format: colored-line-number
      path: stdout
linters:
  enable-all: true
  disable:
    # Disabled because we use inits all over the place
    - gochecknoinits
    # Highly annoying. We'd need to whitelist all packages we import, which is a lot of work and adds very little value.
    - depguard
    # Annoying and unhelpful. Assumes uninitialized (zero-valued) fields are always a bug, which is plain wrong.
    - exhaustruct
    # Marks [TODO, FIXME, BUG] comments as errors. We use these, so this is not helpful - unless we decide this is a good policy.
    - godox
    # We're not doing black-box testing, so enabling this would be counterproductive. We might want to discuss this though, it's a good practice.
    - testpackage
    # Annoying and not useful. Disabling otherwise we have to have comment everywhere
    - wrapcheck
    # Buggy, it complains about unused nolint rules, when those nolint rules are actually used (and removing them cause other lint errors)
    - nolintlint
    # Named returns are helpful if there are multiple return values of the same type, and acts as self-documentation of the function.
    - nonamedreturns
    # There are many legitimate cases for preallocating the length of a slice, so this is not helpful.
    - makezero
    - tenv
linters-settings:
  # See https://golangci-lint.run/usage/linters#revive
  revive:
    rules:
      # Use var-naming, but add a special rule to accept "Id" rather than forcing "ID"
      - name: var-naming
        disabled: false
        arguments:
          - ["ID", "API"]
  # See https://staticcheck.io/docs/configuration/options/#checks
  stylecheck:
    checks: ["all", "-ST1003"]
  varnamelen:
    # The longest distance, in source lines, that is being considered a "small scope" where it is ok to use short variable names.
    # The default is 5, which is quite strict.
    max-distance: 10

issues:
  exclude-dirs:
    - "playground"
    - "test"
  exclude-rules:
    - text: "don't use ALL_CAPS in Go names"
      linters:
        - revive
