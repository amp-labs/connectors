{
  "openapi": "3.0.2",
  "info": {
    "title": "Klaviyo API",
    "version": "2024-10-15",
    "description": "The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.",
    "contact": {
      "name": "Klaviyo Developer Experience Team",
      "email": "developers@klaviyo.com",
      "url": "https://developers.klaviyo.com"
    },
    "termsOfService": "https://www.klaviyo.com/legal/api-terms",
    "license": {
      "name": "License",
      "url": "https://www.klaviyo.com/legal"
    }
  },
  "servers": [
    {
      "url": "https://a.klaviyo.com",
      "description": "Production"
    }
  ],
  "paths": {
    "/api/accounts": {
      "get": {
        "operationId": "get_accounts",
        "summary": "Get Accounts",
        "description": "Retrieve the account(s) associated with a given private API key. This will return 1 account object within the array.\n\nYou can use this to retrieve account-specific data (contact information, timezone, currency, Public API key, etc.) or test if a Private API Key belongs to the correct account prior to performing subsequent actions with the API.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`\n\n**Scopes:**\n`accounts:read`",
        "parameters": [
          {
            "name": "fields[account]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "test_account",
                  "contact_information",
                  "contact_information.default_sender_name",
                  "contact_information.default_sender_email",
                  "contact_information.website_url",
                  "contact_information.organization_name",
                  "contact_information.street_address",
                  "contact_information.street_address.address1",
                  "contact_information.street_address.address2",
                  "contact_information.street_address.city",
                  "contact_information.street_address.region",
                  "contact_information.street_address.country",
                  "contact_information.street_address.zip",
                  "industry",
                  "timezone",
                  "preferred_currency",
                  "public_api_key",
                  "locale"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Accounts"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "15/m"
        },
        "x-klaviyo-scopes": [
          "accounts:read"
        ]
      }
    },
    "/api/accounts/{id}": {
      "get": {
        "operationId": "get_account",
        "summary": "Get Account",
        "description": "Retrieve a single account object by its account ID. You can only request the account by which the private API key was generated.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`\n\n**Scopes:**\n`accounts:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the account",
            "required": true,
            "schema": {
              "description": "The ID of the account",
              "type": "string",
              "example": "AbC123"
            }
          },
          {
            "name": "fields[account]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "test_account",
                  "contact_information",
                  "contact_information.default_sender_name",
                  "contact_information.default_sender_email",
                  "contact_information.website_url",
                  "contact_information.organization_name",
                  "contact_information.street_address",
                  "contact_information.street_address.address1",
                  "contact_information.street_address.address2",
                  "contact_information.street_address.city",
                  "contact_information.street_address.region",
                  "contact_information.street_address.country",
                  "contact_information.street_address.zip",
                  "industry",
                  "timezone",
                  "preferred_currency",
                  "public_api_key",
                  "locale"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Accounts"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "15/m"
        },
        "x-klaviyo-scopes": [
          "accounts:read"
        ]
      }
    },
    "/api/campaigns": {
      "get": {
        "operationId": "get_campaigns",
        "summary": "Get Campaigns",
        "description": "Returns some or all campaigns based on filters.\n\nA channel filter is required to list campaigns. Please provide either:\n`?filter=equals(messages.channel,'email')` to list email campaigns, or\n`?filter=equals(messages.channel,'sms')` to list SMS campaigns.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`messages.channel`: `equals`<br>`name`: `contains`<br>`status`: `any`, `equals`<br>`archived`: `equals`<br>`created_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`scheduled_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "required": true,
            "schema": {
              "type": "string",
              "example": "equals(messages.channel,'sms')"
            }
          },
          {
            "name": "fields[campaign-message]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "label",
                  "channel",
                  "content",
                  "content.subject",
                  "content.preview_text",
                  "content.from_email",
                  "content.from_label",
                  "content.reply_to_email",
                  "content.cc_email",
                  "content.bcc_email",
                  "content.body",
                  "content.media_url",
                  "send_times",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[campaign]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "audiences",
                  "audiences.included",
                  "audiences.excluded",
                  "send_options",
                  "send_options.use_smart_sending",
                  "tracking_options",
                  "tracking_options.add_tracking_params",
                  "tracking_options.custom_tracking_params",
                  "tracking_options.is_tracking_clicks",
                  "tracking_options.is_tracking_opens",
                  "send_strategy",
                  "send_strategy.method",
                  "send_strategy.options_static",
                  "send_strategy.options_static.datetime",
                  "send_strategy.options_static.is_local",
                  "send_strategy.options_static.send_past_recipients_immediately",
                  "send_strategy.options_throttled",
                  "send_strategy.options_throttled.datetime",
                  "send_strategy.options_throttled.throttle_percentage",
                  "send_strategy.options_sto",
                  "send_strategy.options_sto.date",
                  "created_at",
                  "scheduled_at",
                  "updated_at",
                  "send_time"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[tag]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "campaign-messages",
                  "tags"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "-created_at",
                "id",
                "-id",
                "name",
                "-name",
                "scheduled_at",
                "-scheduled_at",
                "updated_at",
                "-updated_at"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ],
        "x-klaviyo-subtag": "Campaigns"
      },
      "post": {
        "operationId": "create_campaign",
        "summary": "Create Campaign",
        "description": "Creates a campaign given a set of parameters, then returns it.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "description": "Creates a campaign from parameters",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignCreateQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCampaignResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:write"
        ],
        "x-klaviyo-subtag": "Campaigns"
      }
    },
    "/api/campaigns/{id}": {
      "get": {
        "operationId": "get_campaign",
        "summary": "Get Campaign",
        "description": "Returns a specific campaign based on a required id.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The campaign ID to be retrieved",
            "required": true,
            "schema": {
              "description": "The campaign ID to be retrieved",
              "type": "string"
            }
          },
          {
            "name": "fields[campaign-message]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "label",
                  "channel",
                  "content",
                  "content.subject",
                  "content.preview_text",
                  "content.from_email",
                  "content.from_label",
                  "content.reply_to_email",
                  "content.cc_email",
                  "content.bcc_email",
                  "content.body",
                  "content.media_url",
                  "send_times",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[campaign]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "audiences",
                  "audiences.included",
                  "audiences.excluded",
                  "send_options",
                  "send_options.use_smart_sending",
                  "tracking_options",
                  "tracking_options.add_tracking_params",
                  "tracking_options.custom_tracking_params",
                  "tracking_options.is_tracking_clicks",
                  "tracking_options.is_tracking_opens",
                  "send_strategy",
                  "send_strategy.method",
                  "send_strategy.options_static",
                  "send_strategy.options_static.datetime",
                  "send_strategy.options_static.is_local",
                  "send_strategy.options_static.send_past_recipients_immediately",
                  "send_strategy.options_throttled",
                  "send_strategy.options_throttled.datetime",
                  "send_strategy.options_throttled.throttle_percentage",
                  "send_strategy.options_sto",
                  "send_strategy.options_sto.date",
                  "created_at",
                  "scheduled_at",
                  "updated_at",
                  "send_time"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[tag]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "campaign-messages",
                  "tags"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ],
        "x-klaviyo-subtag": "Campaigns"
      },
      "patch": {
        "operationId": "update_campaign",
        "summary": "Update Campaign",
        "description": "Update a campaign with the given campaign ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The campaign ID to be retrieved",
            "required": true,
            "schema": {
              "description": "The campaign ID to be retrieved",
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "description": "Update a campaign and return it",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignPartialUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchCampaignResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:write"
        ],
        "x-klaviyo-subtag": "Campaigns"
      },
      "delete": {
        "operationId": "delete_campaign",
        "summary": "Delete Campaign",
        "description": "Delete a campaign with the given campaign ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The campaign ID to be deleted",
            "required": true,
            "schema": {
              "description": "The campaign ID to be deleted",
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:write"
        ],
        "x-klaviyo-subtag": "Campaigns"
      }
    },
    "/api/campaign-messages/{id}": {
      "get": {
        "operationId": "get_campaign_message",
        "summary": "Get Campaign Message",
        "description": "Returns a specific message based on a required id.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The message ID to be retrieved",
            "required": true,
            "schema": {
              "description": "The message ID to be retrieved",
              "type": "string"
            }
          },
          {
            "name": "fields[campaign-message]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "label",
                  "channel",
                  "content",
                  "content.subject",
                  "content.preview_text",
                  "content.from_email",
                  "content.from_label",
                  "content.reply_to_email",
                  "content.cc_email",
                  "content.bcc_email",
                  "content.body",
                  "content.media_url",
                  "send_times",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[campaign]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "audiences",
                  "audiences.included",
                  "audiences.excluded",
                  "send_options",
                  "send_options.use_smart_sending",
                  "tracking_options",
                  "tracking_options.add_tracking_params",
                  "tracking_options.custom_tracking_params",
                  "tracking_options.is_tracking_clicks",
                  "tracking_options.is_tracking_opens",
                  "send_strategy",
                  "send_strategy.method",
                  "send_strategy.options_static",
                  "send_strategy.options_static.datetime",
                  "send_strategy.options_static.is_local",
                  "send_strategy.options_static.send_past_recipients_immediately",
                  "send_strategy.options_throttled",
                  "send_strategy.options_throttled.datetime",
                  "send_strategy.options_throttled.throttle_percentage",
                  "send_strategy.options_sto",
                  "send_strategy.options_sto.date",
                  "created_at",
                  "scheduled_at",
                  "updated_at",
                  "send_time"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[template]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "editor_type",
                  "html",
                  "text",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "campaign",
                  "template"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignMessageResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ],
        "x-klaviyo-subtag": "Messages"
      },
      "patch": {
        "operationId": "update_campaign_message",
        "summary": "Update Campaign Message",
        "description": "Update a campaign message<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The message ID to be retrieved",
            "required": true,
            "schema": {
              "description": "The message ID to be retrieved",
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "description": "Update a message and return it",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMessagePartialUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchCampaignMessageResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:write"
        ],
        "x-klaviyo-subtag": "Messages"
      }
    },
    "/api/campaign-send-jobs/{id}": {
      "get": {
        "operationId": "get_campaign_send_job",
        "summary": "Get Campaign Send Job",
        "description": "Get a campaign send job<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the campaign to send",
            "required": true,
            "schema": {
              "description": "The ID of the campaign to send",
              "type": "string"
            }
          },
          {
            "name": "fields[campaign-send-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignSendJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ],
        "x-klaviyo-subtag": "Jobs"
      },
      "patch": {
        "operationId": "cancel_campaign_send",
        "summary": "Cancel Campaign Send",
        "description": "Permanently cancel the campaign, setting the status to CANCELED or\nrevert the campaign, setting the status back to DRAFT<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the currently sending campaign to cancel or revert",
            "required": true,
            "schema": {
              "description": "The ID of the currently sending campaign to cancel or revert",
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "description": "Permanently cancel the campaign, setting the status to CANCELED or\nrevert the campaign, setting the status back to DRAFT",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignSendJobPartialUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-operation-aliases": [
          "update_campaign_send_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:write"
        ],
        "x-klaviyo-subtag": "Jobs"
      }
    },
    "/api/campaign-recipient-estimation-jobs/{id}": {
      "get": {
        "operationId": "get_campaign_recipient_estimation_job",
        "summary": "Get Campaign Recipient Estimation Job",
        "description": "Retrieve the status of a recipient estimation job triggered\nwith the `Create Campaign Recipient Estimation Job` endpoint.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the campaign to get recipient estimation status",
            "required": true,
            "schema": {
              "description": "The ID of the campaign to get recipient estimation status",
              "type": "string"
            }
          },
          {
            "name": "fields[campaign-recipient-estimation-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignRecipientEstimationJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ],
        "x-klaviyo-subtag": "Jobs"
      }
    },
    "/api/campaign-recipient-estimations/{id}": {
      "get": {
        "operationId": "get_campaign_recipient_estimation",
        "summary": "Get Campaign Recipient Estimation",
        "description": "Get the estimated recipient count for a campaign with the provided campaign ID.\nYou can refresh this count by using the `Create Campaign Recipient Estimation Job` endpoint.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the campaign for which to get the estimated number of recipients",
            "required": true,
            "schema": {
              "description": "The ID of the campaign for which to get the estimated number of recipients",
              "type": "string"
            }
          },
          {
            "name": "fields[campaign-recipient-estimation]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "estimated_recipient_count"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignRecipientEstimationResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ],
        "x-klaviyo-subtag": "Campaigns"
      }
    },
    "/api/campaign-clone": {
      "post": {
        "operationId": "create_campaign_clone",
        "summary": "Create Campaign Clone",
        "description": "Clones an existing campaign, returning a new campaign based on the original with a new ID and name.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "description": "Clones a campaign from an existing campaign",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignCloneQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCampaignResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-operation-aliases": [
          "clone_campaign"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:write"
        ],
        "x-klaviyo-subtag": "Campaigns"
      }
    },
    "/api/campaign-message-assign-template": {
      "post": {
        "operationId": "assign_template_to_campaign_message",
        "summary": "Assign Template to Campaign Message",
        "description": "Creates a non-reusable version of the template and assigns it to the message.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "description": "Takes a reusable template, clones it, and assigns the non-reusable clone to the message.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMessageAssignTemplateQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCampaignMessageResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-operation-aliases": [
          "create_campaign_message_assign_template"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:write"
        ],
        "x-klaviyo-subtag": "Messages"
      }
    },
    "/api/campaign-send-jobs": {
      "post": {
        "operationId": "send_campaign",
        "summary": "Send Campaign",
        "description": "Trigger a campaign to send asynchronously<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "description": "Trigger the campaign to send asynchronously",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignSendJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCampaignSendJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-operation-aliases": [
          "create_campaign_send_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:write"
        ],
        "x-klaviyo-subtag": "Jobs"
      }
    },
    "/api/campaign-recipient-estimation-jobs": {
      "post": {
        "operationId": "refresh_campaign_recipient_estimation",
        "summary": "Refresh Campaign Recipient Estimation",
        "description": "Trigger an asynchronous job to update the estimated number of recipients\nfor the given campaign ID. Use the `Get Campaign Recipient Estimation\nJob` endpoint to retrieve the status of this estimation job. Use the\n`Get Campaign Recipient Estimation` endpoint to retrieve the estimated\nrecipient count for a given campaign.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "description": "Trigger an asynchronous job to update the estimated number of recipients\nfor the given campaign ID. Use the `Get Campaign Recipient Estimation\nJob` endpoint to retrieve the status of this estimation job. Use the\n`Get Campaign Recipient Estimation` endpoint to retrieve the estimated\nrecipient count for a given campaign.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignRecipientEstimationJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCampaignRecipientEstimationJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-operation-aliases": [
          "create_campaign_recipient_estimation_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:write"
        ],
        "x-klaviyo-subtag": "Jobs"
      }
    },
    "/api/campaign-messages/{id}/relationships/campaign": {
      "get": {
        "operationId": "get_campaign_id_for_campaign_message",
        "summary": "Get Campaign ID for Campaign Message",
        "description": "Returns the ID of the related campaign<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignMessageCampaignRelationshipResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-operation-aliases": [
          "get_campaign_message_relationships_campaign"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ],
        "x-klaviyo-subtag": "Messages"
      }
    },
    "/api/campaign-messages/{id}/campaign": {
      "get": {
        "operationId": "get_campaign_for_campaign_message",
        "summary": "Get Campaign for Campaign Message",
        "description": "Return the related campaign<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[campaign]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "audiences",
                  "audiences.included",
                  "audiences.excluded",
                  "send_options",
                  "send_options.use_smart_sending",
                  "tracking_options",
                  "tracking_options.add_tracking_params",
                  "tracking_options.custom_tracking_params",
                  "tracking_options.is_tracking_clicks",
                  "tracking_options.is_tracking_opens",
                  "send_strategy",
                  "send_strategy.method",
                  "send_strategy.options_static",
                  "send_strategy.options_static.datetime",
                  "send_strategy.options_static.is_local",
                  "send_strategy.options_static.send_past_recipients_immediately",
                  "send_strategy.options_throttled",
                  "send_strategy.options_throttled.datetime",
                  "send_strategy.options_throttled.throttle_percentage",
                  "send_strategy.options_sto",
                  "send_strategy.options_sto.date",
                  "created_at",
                  "scheduled_at",
                  "updated_at",
                  "send_time"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-operation-aliases": [
          "get_campaign_message_campaign"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ],
        "x-klaviyo-subtag": "Messages"
      }
    },
    "/api/campaign-messages/{id}/relationships/template": {
      "get": {
        "operationId": "get_template_id_for_campaign_message",
        "summary": "Get Template ID for Campaign Message",
        "description": "Returns the ID of the related template<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`\n`templates:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignMessageTemplateRelationshipListResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-operation-aliases": [
          "get_campaign_message_relationships_template"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:read",
          "templates:read"
        ],
        "x-klaviyo-subtag": "Messages"
      }
    },
    "/api/campaign-messages/{id}/template": {
      "get": {
        "operationId": "get_template_for_campaign_message",
        "summary": "Get Template for Campaign Message",
        "description": "Return the related template<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`\n`templates:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[template]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "editor_type",
                  "html",
                  "text",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTemplateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-operation-aliases": [
          "get_campaign_message_template"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:read",
          "templates:read"
        ],
        "x-klaviyo-subtag": "Messages"
      }
    },
    "/api/campaigns/{id}/relationships/tags": {
      "get": {
        "operationId": "get_tag_ids_for_campaign",
        "summary": "Get Tag IDs for Campaign",
        "description": "Returns the IDs of all tags associated with the given campaign.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`campaigns:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignTagRelationshipListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-operation-aliases": [
          "get_campaign_relationships_tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:read",
          "tags:read"
        ],
        "x-klaviyo-subtag": "Campaigns"
      }
    },
    "/api/campaigns/{id}/tags": {
      "get": {
        "operationId": "get_campaign_tags",
        "summary": "Get Campaign Tags",
        "description": "Return all tags that belong to the given campaign.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`campaigns:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[tag]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:read",
          "tags:read"
        ],
        "x-klaviyo-subtag": "Campaigns"
      }
    },
    "/api/campaigns/{id}/relationships/campaign-messages": {
      "get": {
        "operationId": "get_message_ids_for_campaign",
        "summary": "Get Message IDs for Campaign",
        "description": "Returns the IDs of all messages associated with the given campaign.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignMessagesRelationshipListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-operation-aliases": [
          "get_campaign_relationships_campaign_messages"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ],
        "x-klaviyo-subtag": "Campaigns"
      }
    },
    "/api/campaigns/{id}/campaign-messages": {
      "get": {
        "operationId": "get_messages_for_campaign",
        "summary": "Get Messages for Campaign",
        "description": "Return all messages that belong to the given campaign.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[campaign-message]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "label",
                  "channel",
                  "content",
                  "content.subject",
                  "content.preview_text",
                  "content.from_email",
                  "content.from_label",
                  "content.reply_to_email",
                  "content.cc_email",
                  "content.bcc_email",
                  "content.body",
                  "content.media_url",
                  "send_times",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[campaign]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "audiences",
                  "audiences.included",
                  "audiences.excluded",
                  "send_options",
                  "send_options.use_smart_sending",
                  "tracking_options",
                  "tracking_options.add_tracking_params",
                  "tracking_options.custom_tracking_params",
                  "tracking_options.is_tracking_clicks",
                  "tracking_options.is_tracking_opens",
                  "send_strategy",
                  "send_strategy.method",
                  "send_strategy.options_static",
                  "send_strategy.options_static.datetime",
                  "send_strategy.options_static.is_local",
                  "send_strategy.options_static.send_past_recipients_immediately",
                  "send_strategy.options_throttled",
                  "send_strategy.options_throttled.datetime",
                  "send_strategy.options_throttled.throttle_percentage",
                  "send_strategy.options_sto",
                  "send_strategy.options_sto.date",
                  "created_at",
                  "scheduled_at",
                  "updated_at",
                  "send_time"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[template]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "editor_type",
                  "html",
                  "text",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "campaign",
                  "template"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignMessageResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-operation-aliases": [
          "get_campaign_campaign_messages"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ],
        "x-klaviyo-subtag": "Campaigns"
      }
    },
    "/api/catalog-items": {
      "get": {
        "operationId": "get_catalog_items",
        "summary": "Get Catalog Items",
        "description": "Get all catalog items in an account.\n\nCatalog items can be sorted by the following fields, in ascending and descending order:\n`created`\n\nCurrently, the only supported integration type is `$custom`, and the only supported catalog type is `$default`.\n\nReturns a maximum of 100 items per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-item]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[catalog-variant]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`category.id`: `equals`<br>`title`: `contains`<br>`published`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "variants"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Items"
      },
      "post": {
        "operationId": "create_catalog_item",
        "summary": "Create Catalog Item",
        "description": "Create a new catalog item.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemCreateQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogItemResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Items"
      }
    },
    "/api/catalog-items/{id}": {
      "get": {
        "operationId": "get_catalog_item",
        "summary": "Get Catalog Item",
        "description": "Get a specific catalog item with the given item ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "required": true,
            "schema": {
              "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
            }
          },
          {
            "name": "fields[catalog-item]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[catalog-variant]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "variants"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Items"
      },
      "patch": {
        "operationId": "update_catalog_item",
        "summary": "Update Catalog Item",
        "description": "Update a catalog item with the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "required": true,
            "schema": {
              "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchCatalogItemResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Items"
      },
      "delete": {
        "operationId": "delete_catalog_item",
        "summary": "Delete Catalog Item",
        "description": "Delete a catalog item with the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "required": true,
            "schema": {
              "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Items"
      }
    },
    "/api/catalog-variants": {
      "get": {
        "operationId": "get_catalog_variants",
        "summary": "Get Catalog Variants",
        "description": "Get all variants in an account.\n\nVariants can be sorted by the following fields, in ascending and descending order:\n`created`\n\nCurrently, the only supported integration type is `$custom`, and the only supported catalog type is `$default`.\n\nReturns a maximum of 100 variants per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-variant]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`item.id`: `equals`<br>`sku`: `equals`<br>`title`: `contains`<br>`published`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Variants"
      },
      "post": {
        "operationId": "create_catalog_variant",
        "summary": "Create Catalog Variant",
        "description": "Create a new variant for a related catalog item.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogVariantCreateQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogVariantResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Variants"
      }
    },
    "/api/catalog-variants/{id}": {
      "get": {
        "operationId": "get_catalog_variant",
        "summary": "Get Catalog Variant",
        "description": "Get a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "required": true,
            "schema": {
              "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
            }
          },
          {
            "name": "fields[catalog-variant]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Variants"
      },
      "patch": {
        "operationId": "update_catalog_variant",
        "summary": "Update Catalog Variant",
        "description": "Update a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "required": true,
            "schema": {
              "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogVariantUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchCatalogVariantResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Variants"
      },
      "delete": {
        "operationId": "delete_catalog_variant",
        "summary": "Delete Catalog Variant",
        "description": "Delete a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "required": true,
            "schema": {
              "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Variants"
      }
    },
    "/api/catalog-categories": {
      "get": {
        "operationId": "get_catalog_categories",
        "summary": "Get Catalog Categories",
        "description": "Get all catalog categories in an account.\n\nCatalog categories can be sorted by the following fields, in ascending and descending order:\n`created`\n\nCurrently, the only supported integration type is `$custom`, and the only supported catalog type is `$default`.\n\nReturns a maximum of 100 categories per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-category]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "name",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`item.id`: `equals`<br>`name`: `contains`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Categories"
      },
      "post": {
        "operationId": "create_catalog_category",
        "summary": "Create Catalog Category",
        "description": "Create a new catalog category.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryCreateQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogCategoryResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Categories"
      }
    },
    "/api/catalog-categories/{id}": {
      "get": {
        "operationId": "get_catalog_category",
        "summary": "Get Catalog Category",
        "description": "Get a catalog category with the given category ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "required": true,
            "schema": {
              "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
            }
          },
          {
            "name": "fields[catalog-category]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "name",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Categories"
      },
      "patch": {
        "operationId": "update_catalog_category",
        "summary": "Update Catalog Category",
        "description": "Update a catalog category with the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "required": true,
            "schema": {
              "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchCatalogCategoryResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Categories"
      },
      "delete": {
        "operationId": "delete_catalog_category",
        "summary": "Delete Catalog Category",
        "description": "Delete a catalog category using the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "required": true,
            "schema": {
              "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Categories"
      }
    },
    "/api/catalog-item-bulk-create-jobs": {
      "get": {
        "operationId": "get_bulk_create_catalog_items_jobs",
        "summary": "Get Bulk Create Catalog Items Jobs",
        "description": "Get all catalog item bulk create jobs.\n\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-item-bulk-create-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemCreateJobResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "get_create_items_jobs",
          "get_catalog_item_bulk_create_jobs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Items"
      },
      "post": {
        "operationId": "bulk_create_catalog_items",
        "summary": "Bulk Create Catalog Items",
        "description": "Create a catalog item bulk create job to create a batch of catalog items.\n\nAccepts up to 100 catalog items per request. The maximum allowed payload size is 5MB.\nThe maximum number of jobs in progress at one time is 500.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemCreateJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogItemCreateJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "spawn_create_items_job",
          "create_catalog_item_bulk_create_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Items"
      }
    },
    "/api/catalog-item-bulk-create-jobs/{job_id}": {
      "get": {
        "operationId": "get_bulk_create_catalog_items_job",
        "summary": "Get Bulk Create Catalog Items Job",
        "description": "Get a catalog item bulk create job with the given job ID.\n\nAn `include` parameter can be provided to get the following related resource data: `items`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "ID of the job to retrieve.",
            "required": true,
            "schema": {
              "description": "ID of the job to retrieve.",
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
            }
          },
          {
            "name": "fields[catalog-item-bulk-create-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[catalog-item]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "items"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemCreateJobResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "get_create_items_job",
          "get_catalog_item_bulk_create_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Items"
      }
    },
    "/api/catalog-item-bulk-update-jobs": {
      "get": {
        "operationId": "get_bulk_update_catalog_items_jobs",
        "summary": "Get Bulk Update Catalog Items Jobs",
        "description": "Get all catalog item bulk update jobs.\n\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-item-bulk-update-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemUpdateJobResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "get_update_items_jobs",
          "get_catalog_item_bulk_update_jobs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Items"
      },
      "post": {
        "operationId": "bulk_update_catalog_items",
        "summary": "Bulk Update Catalog Items",
        "description": "Create a catalog item bulk update job to update a batch of catalog items.\n\nAccepts up to 100 catalog items per request. The maximum allowed payload size is 5MB.\nThe maximum number of jobs in progress at one time is 500.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemUpdateJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogItemUpdateJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "spawn_update_items_job",
          "create_catalog_item_bulk_update_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Items"
      }
    },
    "/api/catalog-item-bulk-update-jobs/{job_id}": {
      "get": {
        "operationId": "get_bulk_update_catalog_items_job",
        "summary": "Get Bulk Update Catalog Items Job",
        "description": "Get a catalog item bulk update job with the given job ID.\n\nAn `include` parameter can be provided to get the following related resource data: `items`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "ID of the job to retrieve.",
            "required": true,
            "schema": {
              "description": "ID of the job to retrieve.",
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
            }
          },
          {
            "name": "fields[catalog-item-bulk-update-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[catalog-item]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "items"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemUpdateJobResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "get_update_items_job",
          "get_catalog_item_bulk_update_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Items"
      }
    },
    "/api/catalog-item-bulk-delete-jobs": {
      "get": {
        "operationId": "get_bulk_delete_catalog_items_jobs",
        "summary": "Get Bulk Delete Catalog Items Jobs",
        "description": "Get all catalog item bulk delete jobs.\n\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-item-bulk-delete-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemDeleteJobResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "get_delete_items_jobs",
          "get_catalog_item_bulk_delete_jobs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Items"
      },
      "post": {
        "operationId": "bulk_delete_catalog_items",
        "summary": "Bulk Delete Catalog Items",
        "description": "Create a catalog item bulk delete job to delete a batch of catalog items.\n\nAccepts up to 100 catalog items per request. The maximum allowed payload size is 5MB.\nThe maximum number of jobs in progress at one time is 500.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemDeleteJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogItemDeleteJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "spawn_delete_items_job",
          "create_catalog_item_bulk_delete_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Items"
      }
    },
    "/api/catalog-item-bulk-delete-jobs/{job_id}": {
      "get": {
        "operationId": "get_bulk_delete_catalog_items_job",
        "summary": "Get Bulk Delete Catalog Items Job",
        "description": "Get a catalog item bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "ID of the job to retrieve.",
            "required": true,
            "schema": {
              "description": "ID of the job to retrieve.",
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
            }
          },
          {
            "name": "fields[catalog-item-bulk-delete-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemDeleteJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "get_delete_items_job",
          "get_catalog_item_bulk_delete_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Items"
      }
    },
    "/api/catalog-variant-bulk-create-jobs": {
      "get": {
        "operationId": "get_create_variants_jobs",
        "summary": "Get Create Variants Jobs",
        "description": "Get all catalog variant bulk create jobs.\n\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-variant-bulk-create-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantCreateJobResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "get_catalog_variant_bulk_create_jobs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Variants"
      },
      "post": {
        "operationId": "bulk_create_catalog_variants",
        "summary": "Bulk Create Catalog Variants",
        "description": "Create a catalog variant bulk create job to create a batch of catalog variants.\n\nAccepts up to 100 catalog variants per request. The maximum allowed payload size is 5MB.\nThe maximum number of jobs in progress at one time is 500.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogVariantCreateJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogVariantCreateJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "spawn_create_variants_job",
          "create_catalog_variant_bulk_create_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Variants"
      }
    },
    "/api/catalog-variant-bulk-create-jobs/{job_id}": {
      "get": {
        "operationId": "get_create_variants_job",
        "summary": "Get Create Variants Job",
        "description": "Get a catalog variant bulk create job with the given job ID.\n\nAn `include` parameter can be provided to get the following related resource data: `variants`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "ID of the job to retrieve.",
            "required": true,
            "schema": {
              "description": "ID of the job to retrieve.",
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
            }
          },
          {
            "name": "fields[catalog-variant-bulk-create-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[catalog-variant]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "variants"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantCreateJobResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "get_catalog_variant_bulk_create_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Variants"
      }
    },
    "/api/catalog-variant-bulk-update-jobs": {
      "get": {
        "operationId": "get_update_variants_jobs",
        "summary": "Get Update Variants Jobs",
        "description": "Get all catalog variant bulk update jobs.\n\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-variant-bulk-update-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantUpdateJobResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "get_catalog_variant_bulk_update_jobs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Variants"
      },
      "post": {
        "operationId": "bulk_update_catalog_variants",
        "summary": "Bulk Update Catalog Variants",
        "description": "Create a catalog variant bulk update job to update a batch of catalog variants.\n\nAccepts up to 100 catalog variants per request. The maximum allowed payload size is 5MB.\nThe maximum number of jobs in progress at one time is 500.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogVariantUpdateJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogVariantUpdateJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "spawn_update_variants_job",
          "create_catalog_variant_bulk_update_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Variants"
      }
    },
    "/api/catalog-variant-bulk-update-jobs/{job_id}": {
      "get": {
        "operationId": "get_update_variants_job",
        "summary": "Get Update Variants Job",
        "description": "Get a catalog variate bulk update job with the given job ID.\n\nAn `include` parameter can be provided to get the following related resource data: `variants`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "ID of the job to retrieve.",
            "required": true,
            "schema": {
              "description": "ID of the job to retrieve.",
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
            }
          },
          {
            "name": "fields[catalog-variant-bulk-update-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[catalog-variant]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "variants"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantUpdateJobResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "get_catalog_variant_bulk_update_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Variants"
      }
    },
    "/api/catalog-variant-bulk-delete-jobs": {
      "get": {
        "operationId": "get_delete_variants_jobs",
        "summary": "Get Delete Variants Jobs",
        "description": "Get all catalog variant bulk delete jobs.\n\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-variant-bulk-delete-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantDeleteJobResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "get_catalog_variant_bulk_delete_jobs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Variants"
      },
      "post": {
        "operationId": "bulk_delete_catalog_variants",
        "summary": "Bulk Delete Catalog Variants",
        "description": "Create a catalog variant bulk delete job to delete a batch of catalog variants.\n\nAccepts up to 100 catalog variants per request. The maximum allowed payload size is 5MB.\nThe maximum number of jobs in progress at one time is 500.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogVariantDeleteJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogVariantDeleteJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "spawn_delete_variants_job",
          "create_catalog_variant_bulk_delete_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Variants"
      }
    },
    "/api/catalog-variant-bulk-delete-jobs/{job_id}": {
      "get": {
        "operationId": "get_delete_variants_job",
        "summary": "Get Delete Variants Job",
        "description": "Get a catalog variant bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "ID of the job to retrieve.",
            "required": true,
            "schema": {
              "description": "ID of the job to retrieve.",
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
            }
          },
          {
            "name": "fields[catalog-variant-bulk-delete-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantDeleteJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "get_catalog_variant_bulk_delete_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Variants"
      }
    },
    "/api/catalog-category-bulk-create-jobs": {
      "get": {
        "operationId": "get_create_categories_jobs",
        "summary": "Get Create Categories Jobs",
        "description": "Get all catalog category bulk create jobs.\n\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-category-bulk-create-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryCreateJobResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "get_catalog_category_bulk_create_jobs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Categories"
      },
      "post": {
        "operationId": "bulk_create_catalog_categories",
        "summary": "Bulk Create Catalog Categories",
        "description": "Create a catalog category bulk create job to create a batch of catalog categories.\n\nAccepts up to 100 catalog categories per request. The maximum allowed payload size is 5MB.\nThe maximum number of jobs in progress at one time is 500.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryCreateJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogCategoryCreateJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "spawn_create_categories_job",
          "create_catalog_category_bulk_create_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Categories"
      }
    },
    "/api/catalog-category-bulk-create-jobs/{job_id}": {
      "get": {
        "operationId": "get_create_categories_job",
        "summary": "Get Create Categories Job",
        "description": "Get a catalog category bulk create job with the given job ID.\n\nAn `include` parameter can be provided to get the following related resource data: `categories`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "ID of the job to retrieve.",
            "required": true,
            "schema": {
              "description": "ID of the job to retrieve.",
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
            }
          },
          {
            "name": "fields[catalog-category-bulk-create-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[catalog-category]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "name",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "categories"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryCreateJobResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "get_catalog_category_bulk_create_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Categories"
      }
    },
    "/api/catalog-category-bulk-update-jobs": {
      "get": {
        "operationId": "get_update_categories_jobs",
        "summary": "Get Update Categories Jobs",
        "description": "Get all catalog category bulk update jobs.\n\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-category-bulk-update-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryUpdateJobResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "get_catalog_category_bulk_update_jobs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Categories"
      },
      "post": {
        "operationId": "bulk_update_catalog_categories",
        "summary": "Bulk Update Catalog Categories",
        "description": "Create a catalog category bulk update job to update a batch of catalog categories.\n\nAccepts up to 100 catalog categories per request. The maximum allowed payload size is 5MB.\nThe maximum number of jobs in progress at one time is 500.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryUpdateJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogCategoryUpdateJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "spawn_update_categories_job",
          "create_catalog_category_bulk_update_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Categories"
      }
    },
    "/api/catalog-category-bulk-update-jobs/{job_id}": {
      "get": {
        "operationId": "get_update_categories_job",
        "summary": "Get Update Categories Job",
        "description": "Get a catalog category bulk update job with the given job ID.\n\nAn `include` parameter can be provided to get the following related resource data: `categories`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "ID of the job to retrieve.",
            "required": true,
            "schema": {
              "description": "ID of the job to retrieve.",
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
            }
          },
          {
            "name": "fields[catalog-category-bulk-update-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[catalog-category]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "name",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "categories"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryUpdateJobResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "get_catalog_category_bulk_update_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Categories"
      }
    },
    "/api/catalog-category-bulk-delete-jobs": {
      "get": {
        "operationId": "get_delete_categories_jobs",
        "summary": "Get Delete Categories Jobs",
        "description": "Get all catalog category bulk delete jobs.\n\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-category-bulk-delete-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryDeleteJobResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "get_catalog_category_bulk_delete_jobs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Categories"
      },
      "post": {
        "operationId": "bulk_delete_catalog_categories",
        "summary": "Bulk Delete Catalog Categories",
        "description": "Create a catalog category bulk delete job to delete a batch of catalog categories.\n\nAccepts up to 100 catalog categories per request. The maximum allowed payload size is 5MB.\nThe maximum number of jobs in progress at one time is 500.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryDeleteJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogCategoryDeleteJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "spawn_delete_categories_job",
          "create_catalog_category_bulk_delete_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Categories"
      }
    },
    "/api/catalog-category-bulk-delete-jobs/{job_id}": {
      "get": {
        "operationId": "get_delete_categories_job",
        "summary": "Get Delete Categories Job",
        "description": "Get a catalog category bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "ID of the job to retrieve.",
            "required": true,
            "schema": {
              "description": "ID of the job to retrieve.",
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
            }
          },
          {
            "name": "fields[catalog-category-bulk-delete-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryDeleteJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "get_catalog_category_bulk_delete_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Categories"
      }
    },
    "/api/back-in-stock-subscriptions": {
      "post": {
        "operationId": "create_back_in_stock_subscription",
        "summary": "Create Back In Stock Subscription",
        "description": "Subscribe a profile to receive back in stock notifications. Check out [our Back in Stock API guide](https://developers.klaviyo.com/en/docs/how_to_set_up_custom_back_in_stock) for more details.\n\nThis endpoint is specifically designed to be called from server-side applications. To create subscriptions from client-side contexts, use [POST /client/back-in-stock-subscriptions](https://developers.klaviyo.com/en/reference/create_client_back_in_stock_subscription).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:write`\n`profiles:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ServerBISSubscriptionCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write",
          "profiles:write"
        ],
        "x-klaviyo-subtag": "Back In Stock"
      }
    },
    "/api/catalog-categories/{id}/items": {
      "get": {
        "operationId": "get_items_for_catalog_category",
        "summary": "Get Items for Catalog Category",
        "description": "Get all items in a category with the given category ID.\n\nItems can be sorted by the following fields, in ascending and descending order:\n`created`\n\nReturns a maximum of 100 items per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "required": true,
            "schema": {
              "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL",
              "nullable": true
            }
          },
          {
            "name": "fields[catalog-item]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[catalog-variant]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`category.id`: `equals`<br>`title`: `contains`<br>`published`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "variants"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "get_catalog_category_items"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Items"
      }
    },
    "/api/catalog-items/{id}/variants": {
      "get": {
        "operationId": "get_variants_for_catalog_item",
        "summary": "Get Variants for Catalog Item",
        "description": "Get all variants related to the given item ID.\n\nVariants can be sorted by the following fields, in ascending and descending order:\n`created`\n\nReturns a maximum of 100 variants per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "required": true,
            "schema": {
              "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1",
              "nullable": true
            }
          },
          {
            "name": "fields[catalog-variant]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`item.id`: `equals`<br>`sku`: `equals`<br>`title`: `contains`<br>`published`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "get_catalog_item_variants"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Variants"
      }
    },
    "/api/catalog-items/{id}/categories": {
      "get": {
        "operationId": "get_categories_for_catalog_item",
        "summary": "Get Categories for Catalog Item",
        "description": "Get all catalog categories that an item with the given item ID is in.\n\nCatalog categories can be sorted by the following fields, in ascending and descending order:\n`created`\n\nReturns a maximum of 100 categories per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "required": true,
            "schema": {
              "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1",
              "nullable": true
            }
          },
          {
            "name": "fields[catalog-category]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "name",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`item.id`: `equals`<br>`name`: `contains`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "get_catalog_item_categories"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Categories"
      }
    },
    "/api/catalog-categories/{id}/relationships/items": {
      "get": {
        "operationId": "get_item_ids_for_catalog_category",
        "summary": "Get Item IDs for Catalog Category",
        "description": "Get all items in the given category ID.\n\nReturns a maximum of 100 items per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "required": true,
            "schema": {
              "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryItemListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "get_catalog_category_relationships_items"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Categories"
      },
      "post": {
        "operationId": "add_items_to_catalog_category",
        "summary": "Add Items to Catalog Category",
        "description": "Create a new item relationship for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "required": true,
            "schema": {
              "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryItemOp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "create_catalog_category_relationships_items",
          "create_catalog_category_relationships_item"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Categories"
      },
      "patch": {
        "operationId": "update_items_for_catalog_category",
        "summary": "Update Items for Catalog Category",
        "description": "Update item relationships for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "required": true,
            "schema": {
              "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryItemOp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "update_catalog_category_relationships_items"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Categories"
      },
      "delete": {
        "operationId": "remove_items_from_catalog_category",
        "summary": "Remove Items from Catalog Category",
        "description": "Delete item relationships for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "required": true,
            "schema": {
              "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryItemOp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "delete_catalog_category_relationships_items"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Categories"
      }
    },
    "/api/catalog-items/{id}/relationships/categories": {
      "get": {
        "operationId": "get_category_ids_for_catalog_item",
        "summary": "Get Category IDs for Catalog Item",
        "description": "Get all catalog categories that a particular item is in.\n\nReturns a maximum of 100 categories per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "required": true,
            "schema": {
              "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemCategoryListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "get_catalog_item_relationships_categories"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Items"
      },
      "post": {
        "operationId": "add_category_to_catalog_item",
        "summary": "Add Category to Catalog Item",
        "description": "Create a new catalog category relationship for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "required": true,
            "schema": {
              "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemCategoryOp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "create_catalog_item_relationships_categories",
          "create_catalog_item_relationships_category"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Items"
      },
      "patch": {
        "operationId": "update_categories_for_catalog_item",
        "summary": "Update Categories for Catalog Item",
        "description": "Update catalog category relationships for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "required": true,
            "schema": {
              "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemCategoryOp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "update_catalog_item_relationships_categories"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Items"
      },
      "delete": {
        "operationId": "remove_categories_from_catalog_item",
        "summary": "Remove Categories from Catalog Item",
        "description": "Delete catalog category relationships for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "required": true,
            "schema": {
              "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemCategoryOp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-operation-aliases": [
          "delete_catalog_item_relationships_categories"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Items"
      }
    },
    "/api/coupons": {
      "get": {
        "operationId": "get_coupons",
        "summary": "Get Coupons",
        "description": "Get all coupons in an account.\n\nTo learn more, see our [Coupons API guide](https://developers.klaviyo.com/en/docs/use_klaviyos_coupons_api).<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`coupons:read`",
        "parameters": [
          {
            "name": "fields[coupon]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "description"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCouponResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "coupons:read"
        ]
      },
      "post": {
        "operationId": "create_coupon",
        "summary": "Create Coupon",
        "description": "Creates a new coupon.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`coupons:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CouponCreateQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCouponResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "coupons:write"
        ]
      }
    },
    "/api/coupons/{id}": {
      "get": {
        "operationId": "get_coupon",
        "summary": "Get Coupon",
        "description": "Get a specific coupon with the given coupon ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`coupons:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The internal id of a Coupon is equivalent to its external id stored within an integration.",
            "required": true,
            "schema": {
              "description": "The internal id of a Coupon is equivalent to its external id stored within an integration.",
              "type": "string",
              "example": "10OFF"
            }
          },
          {
            "name": "fields[coupon]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "description"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCouponResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "coupons:read"
        ]
      },
      "patch": {
        "operationId": "update_coupon",
        "summary": "Update Coupon",
        "description": "*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`coupons:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The internal id of a Coupon is equivalent to its external id stored within an integration.",
            "required": true,
            "schema": {
              "description": "The internal id of a Coupon is equivalent to its external id stored within an integration.",
              "type": "string",
              "example": "10OFF"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CouponUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchCouponResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "coupons:write"
        ]
      },
      "delete": {
        "operationId": "delete_coupon",
        "summary": "Delete Coupon",
        "description": "Delete the coupon with the given coupon ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`coupons:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The internal id of a Coupon is equivalent to its external id stored within an integration.",
            "required": true,
            "schema": {
              "description": "The internal id of a Coupon is equivalent to its external id stored within an integration.",
              "type": "string",
              "example": "10OFF"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "coupons:write"
        ]
      }
    },
    "/api/coupon-codes": {
      "get": {
        "operationId": "get_coupon_codes",
        "summary": "Get Coupon Codes",
        "description": "Gets a list of coupon codes associated with a coupon/coupons or a profile/profiles.\n\nA coupon/coupons or a profile/profiles must be provided as required filter params.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`coupon-codes:read`",
        "parameters": [
          {
            "name": "fields[coupon-code]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "unique_code",
                  "expires_at",
                  "status"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[coupon]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "description"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`expires_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`status`: `equals`<br>`coupon.id`: `any`, `equals`<br>`profile.id`: `any`, `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "coupon"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCouponCodeResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "coupon-codes:read"
        ]
      },
      "post": {
        "operationId": "create_coupon_code",
        "summary": "Create Coupon Code",
        "description": "Synchronously creates a coupon code for the given coupon.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`coupon-codes:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CouponCodeCreateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCouponCodeResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "coupon-codes:write"
        ]
      }
    },
    "/api/coupon-codes/{id}": {
      "get": {
        "operationId": "get_coupon_code",
        "summary": "Get Coupon Code",
        "description": "Returns a Coupon Code specified by the given identifier.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`coupon-codes:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with.",
            "required": true,
            "schema": {
              "description": "The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with.",
              "type": "string",
              "example": "10OFF-ASD325FHK324UJDOI2M3JNES99"
            }
          },
          {
            "name": "fields[coupon-code]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "unique_code",
                  "expires_at",
                  "status"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[coupon]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "description"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "coupon"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCouponCodeResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "coupon-codes:read"
        ]
      },
      "patch": {
        "operationId": "update_coupon_code",
        "summary": "Update Coupon Code",
        "description": "Updates a coupon code specified by the given identifier synchronously. We allow updating the 'status' and\n'expires_at' of coupon codes.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`coupon-codes:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with.",
            "required": true,
            "schema": {
              "description": "The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with.",
              "type": "string",
              "example": "10OFF-ASD325FHK324UJDOI2M3JNES99"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CouponCodeUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchCouponCodeResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "coupon-codes:write"
        ]
      },
      "delete": {
        "operationId": "delete_coupon_code",
        "summary": "Delete Coupon Code",
        "description": "Deletes a coupon code specified by the given identifier synchronously. If a profile has been assigned to the\ncoupon code, an exception will be raised<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`coupon-codes:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with.",
            "required": true,
            "schema": {
              "description": "The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with.",
              "type": "string",
              "example": "10OFF-ASD325FHK324UJDOI2M3JNES99"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "coupon-codes:write"
        ]
      }
    },
    "/api/coupon-code-bulk-create-jobs": {
      "get": {
        "operationId": "get_bulk_create_coupon_code_jobs",
        "summary": "Get Bulk Create Coupon Code Jobs",
        "description": "Get all coupon code bulk create jobs.\n\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`coupon-codes:read`",
        "parameters": [
          {
            "name": "fields[coupon-code-bulk-create-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCouponCodeCreateJobResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-operation-aliases": [
          "get_coupon_code_bulk_create_jobs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "coupon-codes:read"
        ]
      },
      "post": {
        "operationId": "bulk_create_coupon_codes",
        "summary": "Bulk Create Coupon Codes",
        "description": "Create a coupon-code-bulk-create-job to bulk create a list of coupon codes.\n\nMax number of coupon codes per job we allow for is 1000.\nMax number of jobs queued at once we allow for is 100.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`coupon-codes:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CouponCodeCreateJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCouponCodeCreateJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-operation-aliases": [
          "spawn_coupon_code_bulk_create_job",
          "create_coupon_code_bulk_create_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "coupon-codes:write"
        ]
      }
    },
    "/api/coupon-code-bulk-create-jobs/{job_id}": {
      "get": {
        "operationId": "get_bulk_create_coupon_codes_job",
        "summary": "Get Bulk Create Coupon Codes Job",
        "description": "Get a coupon code bulk create job with the given job ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`coupon-codes:read`",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "ID of the job to retrieve.",
            "required": true,
            "schema": {
              "description": "ID of the job to retrieve.",
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
            }
          },
          {
            "name": "fields[coupon-code-bulk-create-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[coupon-code]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "unique_code",
                  "expires_at",
                  "status"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "coupon-codes"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCouponCodeCreateJobResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-operation-aliases": [
          "get_coupon_code_bulk_create_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "coupon-codes:read"
        ]
      }
    },
    "/api/coupon-codes/{id}/coupon": {
      "get": {
        "operationId": "get_coupon_for_coupon_code",
        "summary": "Get Coupon For Coupon Code",
        "description": "Get the coupon associated with a given coupon code ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`coupons:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the coupon to look up the relationship of.",
            "required": true,
            "schema": {
              "description": "The ID of the coupon to look up the relationship of.",
              "type": "string",
              "example": "10OFF"
            }
          },
          {
            "name": "fields[coupon]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "description"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCouponResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-operation-aliases": [
          "get_coupon_code_coupon"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "coupons:read"
        ]
      }
    },
    "/api/coupon-codes/{id}/relationships/coupon": {
      "get": {
        "operationId": "get_coupon_id_for_coupon_code",
        "summary": "Get Coupon ID for Coupon Code",
        "description": "Gets the coupon relationship associated with the given coupon code id<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`coupons:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the coupon code to look up the relationship of.",
            "required": true,
            "schema": {
              "description": "The ID of the coupon code to look up the relationship of.",
              "type": "string",
              "example": "10OFF-ASD325FHK324UJDOI2M3JNES99"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCouponCodeRelationshipCouponResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-operation-aliases": [
          "get_coupon_relationships_coupon_codes"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "coupons:read"
        ]
      }
    },
    "/api/coupons/{id}/coupon-codes": {
      "get": {
        "operationId": "get_coupon_codes_for_coupon",
        "summary": "Get Coupon Codes For Coupon",
        "description": "Gets a list of coupon codes associated with the given coupon id<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`coupon-codes:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "example": "10OFF"
            }
          },
          {
            "name": "fields[coupon-code]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "unique_code",
                  "expires_at",
                  "status"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`expires_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`status`: `equals`<br>`coupon.id`: `any`, `equals`<br>`profile.id`: `any`, `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCouponCodeResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-operation-aliases": [
          "get_coupon_coupon_codes"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "coupon-codes:read"
        ]
      }
    },
    "/api/coupons/{id}/relationships/coupon-codes": {
      "get": {
        "operationId": "get_code_ids_for_coupon",
        "summary": "Get Code IDs for Coupon",
        "description": "Gets a list of coupon code relationships associated with the given coupon id<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`coupon-codes:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the coupon to look up the relationship of.",
            "required": true,
            "schema": {
              "description": "The ID of the coupon to look up the relationship of.",
              "type": "string",
              "example": "10OFF"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCouponRelationshipCouponCodesListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-operation-aliases": [
          "get_coupon_code_relationships_coupon"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "coupon-codes:read"
        ]
      }
    },
    "/api/data-privacy-deletion-jobs": {
      "post": {
        "operationId": "request_profile_deletion",
        "summary": "Request Profile Deletion",
        "description": "Request a deletion for the profiles corresponding to one of the following identifiers: `email`, `phone_number`, or `id`. If multiple identifiers are provided, we will return an error.\n\nAll profiles that match the provided identifier will be deleted.\n\nThe deletion occurs asynchronously; however, once it has completed, the deleted profile will appear on the [Deleted Profiles page](https://www.klaviyo.com/account/deleted).\n\nFor more information on the deletion process, please refer to our [Help Center docs on how to handle GDPR and CCPA deletion requests](https://help.klaviyo.com/hc/en-us/articles/360004217631-How-to-Handle-GDPR-Requests#record-gdpr-and-ccpa%20%20-deletion-requests2).<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`data-privacy:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/DataPrivacyCreateDeletionJobQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Data Privacy"
        ],
        "x-klaviyo-operation-aliases": [
          "create_data_privacy_deletion_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "data-privacy:write"
        ]
      }
    },
    "/api/events": {
      "get": {
        "operationId": "get_events",
        "summary": "Get Events",
        "description": "Get all events in an account\n\nRequests can be sorted by the following fields:\n`datetime`, `timestamp`\n\nReturns a maximum of 200 events per page.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`events:read`",
        "parameters": [
          {
            "name": "fields[event]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "timestamp",
                  "event_properties",
                  "datetime",
                  "uuid"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[metric]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "integration"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[profile]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "locale",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "location.ip",
                  "properties"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`metric_id`: `equals`<br>`profile_id`: `equals`<br>`profile`: `has`<br>`datetime`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`timestamp`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "attributions",
                  "metric",
                  "profile"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "datetime",
                "-datetime",
                "timestamp",
                "-timestamp"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEventResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Events"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "events:read"
        ]
      },
      "post": {
        "operationId": "create_event",
        "summary": "Create Event",
        "description": "Create a new event to track a profile's activity.\n\nNote that this endpoint allows you to create a new profile or update an existing profile's properties.\n\nAt a minimum, profile and metric objects should include at least one profile identifier (e.g., `id`, `email`, or `phone_number`) and the metric `name`, respectively.\n\nSuccessful response indicates that the event was validated and submitted for processing, but does not guarantee that processing is complete.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`events:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/EventCreateQueryV2"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Events"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "events:write"
        ]
      }
    },
    "/api/events/{id}": {
      "get": {
        "operationId": "get_event",
        "summary": "Get Event",
        "description": "Get an event with the given event ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`events:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the event",
            "required": true,
            "schema": {
              "description": "ID of the event",
              "type": "string"
            }
          },
          {
            "name": "fields[event]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "timestamp",
                  "event_properties",
                  "datetime",
                  "uuid"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[metric]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "integration"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[profile]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "locale",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "location.ip",
                  "properties"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "attributions",
                  "metric",
                  "profile"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEventResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Events"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "events:read"
        ]
      }
    },
    "/api/event-bulk-create-jobs": {
      "post": {
        "operationId": "bulk_create_events",
        "summary": "Bulk Create Events",
        "description": "Create a batch of events for one or more profiles.\n\nNote that this endpoint allows you to create new profiles or update existing profile properties.\n\nAt a minimum, profile and metric objects should include at least one profile identifier (e.g., `id`, `email`, or `phone_number`) and the metric `name`, respectively.\n\nAccepts up to 1,000 events per request. The maximum allowed payload size is 5MB.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`events:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/EventsBulkCreateJob"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Events"
        ],
        "x-klaviyo-operation-aliases": [
          "create_event_bulk_create_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "events:write"
        ]
      }
    },
    "/api/events/{id}/relationships/metric": {
      "get": {
        "operationId": "get_metric_id_for_event",
        "summary": "Get Metric ID for Event",
        "description": "Get a list of related Metrics for an Event<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`events:read`\n`metrics:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the event",
            "required": true,
            "schema": {
              "description": "ID of the event",
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEventMetricRelationshipResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Events"
        ],
        "x-klaviyo-operation-aliases": [
          "get_event_relationships_metric"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "events:read",
          "metrics:read"
        ]
      }
    },
    "/api/events/{id}/metric": {
      "get": {
        "operationId": "get_event_metric",
        "summary": "Get Event Metric",
        "description": "Get the metric for an event with the given event ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`events:read`\n`metrics:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the event",
            "required": true,
            "schema": {
              "description": "ID of the event",
              "type": "string"
            }
          },
          {
            "name": "fields[metric]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "integration"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMetricResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Events"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "events:read",
          "metrics:read"
        ]
      }
    },
    "/api/events/{id}/relationships/profile": {
      "get": {
        "operationId": "get_profile_id_for_event",
        "summary": "Get Profile ID for Event",
        "description": "Get profile [relationships](https://developers.klaviyo.com/en/reference/api_overview#relationships) for an event with the given event ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`events:read`\n`profiles:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the event",
            "required": true,
            "schema": {
              "description": "ID of the event",
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEventProfileRelationshipResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Events"
        ],
        "x-klaviyo-operation-aliases": [
          "get_event_relationships_profile"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "events:read",
          "profiles:read"
        ]
      }
    },
    "/api/events/{id}/profile": {
      "get": {
        "operationId": "get_event_profile",
        "summary": "Get Event Profile",
        "description": "Get the profile associated with an event with the given event ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`events:read`\n`profiles:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the event",
            "required": true,
            "schema": {
              "description": "ID of the event",
              "type": "string"
            }
          },
          {
            "name": "additional-fields[profile]",
            "in": "query",
            "description": "Request additional fields not included by default in the response. Supported values: 'subscriptions', 'predictive_analytics'",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscriptions",
                  "predictive_analytics"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[profile]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "locale",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "location.ip",
                  "properties",
                  "subscriptions",
                  "subscriptions.email",
                  "subscriptions.email.marketing",
                  "subscriptions.email.marketing.can_receive_email_marketing",
                  "subscriptions.email.marketing.consent",
                  "subscriptions.email.marketing.consent_timestamp",
                  "subscriptions.email.marketing.last_updated",
                  "subscriptions.email.marketing.method",
                  "subscriptions.email.marketing.method_detail",
                  "subscriptions.email.marketing.custom_method_detail",
                  "subscriptions.email.marketing.double_optin",
                  "subscriptions.email.marketing.suppression",
                  "subscriptions.email.marketing.list_suppressions",
                  "subscriptions.sms",
                  "subscriptions.sms.marketing",
                  "subscriptions.sms.marketing.can_receive_sms_marketing",
                  "subscriptions.sms.marketing.consent",
                  "subscriptions.sms.marketing.consent_timestamp",
                  "subscriptions.sms.marketing.method",
                  "subscriptions.sms.marketing.method_detail",
                  "subscriptions.sms.marketing.last_updated",
                  "subscriptions.sms.transactional",
                  "subscriptions.sms.transactional.can_receive_sms_transactional",
                  "subscriptions.sms.transactional.consent",
                  "subscriptions.sms.transactional.consent_timestamp",
                  "subscriptions.sms.transactional.method",
                  "subscriptions.sms.transactional.method_detail",
                  "subscriptions.sms.transactional.last_updated",
                  "subscriptions.mobile_push",
                  "subscriptions.mobile_push.marketing",
                  "subscriptions.mobile_push.marketing.can_receive_push_marketing",
                  "subscriptions.mobile_push.marketing.consent",
                  "subscriptions.mobile_push.marketing.consent_timestamp",
                  "predictive_analytics",
                  "predictive_analytics.historic_clv",
                  "predictive_analytics.predicted_clv",
                  "predictive_analytics.total_clv",
                  "predictive_analytics.historic_number_of_orders",
                  "predictive_analytics.predicted_number_of_orders",
                  "predictive_analytics.average_days_between_orders",
                  "predictive_analytics.average_order_value",
                  "predictive_analytics.churn_probability",
                  "predictive_analytics.expected_date_of_next_order"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Events"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "events:read",
          "profiles:read"
        ]
      }
    },
    "/api/flows": {
      "get": {
        "operationId": "get_flows",
        "summary": "Get Flows",
        "description": "Get all flows in an account.\n\nReturns a maximum of 50 flows per request, which can be paginated with cursor-based pagination.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "fields[flow-action]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action_type",
                  "status",
                  "created",
                  "updated",
                  "settings",
                  "tracking_options",
                  "tracking_options.add_utm",
                  "tracking_options.utm_params",
                  "tracking_options.is_tracking_opens",
                  "tracking_options.is_tracking_clicks",
                  "send_options",
                  "send_options.use_smart_sending",
                  "send_options.is_transactional",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[flow]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "created",
                  "updated",
                  "trigger_type"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[tag]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`<br>`status`: `equals`<br>`archived`: `equals`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`trigger_type`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "flow-actions",
                  "tags"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 50. Min: 1. Max: 50.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "maximum": 50,
              "minimum": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created",
                "id",
                "-id",
                "name",
                "-name",
                "status",
                "-status",
                "trigger_type",
                "-trigger_type",
                "updated",
                "-updated"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ]
      }
    },
    "/api/flows/{id}": {
      "get": {
        "operationId": "get_flow",
        "summary": "Get Flow",
        "description": "Get a flow with the given flow ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[flow-action]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action_type",
                  "status",
                  "created",
                  "updated",
                  "settings",
                  "tracking_options",
                  "tracking_options.add_utm",
                  "tracking_options.utm_params",
                  "tracking_options.is_tracking_opens",
                  "tracking_options.is_tracking_clicks",
                  "send_options",
                  "send_options.use_smart_sending",
                  "send_options.is_transactional",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[flow]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "created",
                  "updated",
                  "trigger_type"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[tag]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "flow-actions",
                  "tags"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ]
      },
      "patch": {
        "operationId": "update_flow",
        "summary": "Update Flow Status",
        "description": "Update the status of a flow with the given flow ID, and all actions in that flow.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Flow to update. Ex: XVTP5Q",
            "required": true,
            "schema": {
              "description": "ID of the Flow to update. Ex: XVTP5Q",
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/FlowUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchFlowResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:write"
        ]
      },
      "delete": {
        "operationId": "delete_flow",
        "summary": "Delete Flow",
        "description": "Delete a flow with the given flow ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Flow to delete. Ex: XVTP5Q",
            "required": true,
            "schema": {
              "description": "ID of the Flow to delete. Ex: XVTP5Q",
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:write"
        ]
      }
    },
    "/api/flow-actions/{id}": {
      "get": {
        "operationId": "get_flow_action",
        "summary": "Get Flow Action",
        "description": "Get a flow action from a flow with the given flow action ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[flow-action]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action_type",
                  "status",
                  "created",
                  "updated",
                  "settings",
                  "tracking_options",
                  "tracking_options.add_utm",
                  "tracking_options.utm_params",
                  "tracking_options.is_tracking_opens",
                  "tracking_options.is_tracking_clicks",
                  "send_options",
                  "send_options.use_smart_sending",
                  "send_options.is_transactional",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[flow-message]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "channel",
                  "content",
                  "content.subject",
                  "content.preview_text",
                  "content.from_email",
                  "content.from_label",
                  "content.reply_to_email",
                  "content.cc_email",
                  "content.bcc_email",
                  "content.body",
                  "content.media_url",
                  "content.title",
                  "content.sound",
                  "content.badge",
                  "content.dynamic_image",
                  "content.ios_link",
                  "content.android_link",
                  "content.on_open",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[flow]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "created",
                  "updated",
                  "trigger_type"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "flow",
                  "flow-messages"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowActionResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ]
      }
    },
    "/api/flow-messages/{id}": {
      "get": {
        "operationId": "get_flow_message",
        "summary": "Get Flow Message",
        "description": "Get the flow message of a flow with the given message ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[flow-action]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action_type",
                  "status",
                  "created",
                  "updated",
                  "settings",
                  "tracking_options",
                  "tracking_options.add_utm",
                  "tracking_options.utm_params",
                  "tracking_options.is_tracking_opens",
                  "tracking_options.is_tracking_clicks",
                  "send_options",
                  "send_options.use_smart_sending",
                  "send_options.is_transactional",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[flow-message]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "channel",
                  "content",
                  "content.subject",
                  "content.preview_text",
                  "content.from_email",
                  "content.from_label",
                  "content.reply_to_email",
                  "content.cc_email",
                  "content.bcc_email",
                  "content.body",
                  "content.media_url",
                  "content.title",
                  "content.sound",
                  "content.badge",
                  "content.dynamic_image",
                  "content.ios_link",
                  "content.android_link",
                  "content.on_open",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[template]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "editor_type",
                  "html",
                  "text",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "flow-action",
                  "template"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowMessageResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ]
      }
    },
    "/api/flows/{id}/flow-actions": {
      "get": {
        "operationId": "get_actions_for_flow",
        "summary": "Get Actions for Flow",
        "description": "Get all flow actions associated with the given flow ID.\n\nReturns a maximum of 50 flows per request, which can be paginated with cursor-based pagination.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[flow-action]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action_type",
                  "status",
                  "created",
                  "updated",
                  "settings",
                  "tracking_options",
                  "tracking_options.add_utm",
                  "tracking_options.utm_params",
                  "tracking_options.is_tracking_opens",
                  "tracking_options.is_tracking_clicks",
                  "send_options",
                  "send_options.use_smart_sending",
                  "send_options.is_transactional",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`<br>`action_type`: `any`, `equals`<br>`status`: `equals`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 50. Min: 1. Max: 50.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "maximum": 50,
              "minimum": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "action_type",
                "-action_type",
                "created",
                "-created",
                "id",
                "-id",
                "status",
                "-status",
                "updated",
                "-updated"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowActionResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-operation-aliases": [
          "get_flow_flow_actions"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ]
      }
    },
    "/api/flows/{id}/relationships/flow-actions": {
      "get": {
        "operationId": "get_action_ids_for_flow",
        "summary": "Get Action IDs for Flow",
        "description": "Get all [relationships](https://developers.klaviyo.com/en/reference/api_overview#relationships) for flow actions associated with the given flow ID.\n\nFlow action relationships can be sorted by the following fields, in ascending and descending order:\n`id`,  `status`, `created`, `updated`\n\nUse filters to narrow your results.\n\nReturns a maximum of 50 flow action relationships per request, which can be paginated with offset pagination. Offset pagination uses the following parameters: `page[size]` and `page[number]`.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Flow to update. Ex: XVTP5Q",
            "required": true,
            "schema": {
              "description": "ID of the Flow to update. Ex: XVTP5Q",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`action_type`: `equals`<br>`status`: `equals`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 50. Min: 1. Max: 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "maximum": 100,
              "minimum": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created",
                "id",
                "-id",
                "status",
                "-status",
                "updated",
                "-updated"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowFlowActionRelationshipListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-operation-aliases": [
          "get_flow_relationships_flow_actions"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ]
      }
    },
    "/api/flows/{id}/relationships/tags": {
      "get": {
        "operationId": "get_tag_ids_for_flow",
        "summary": "Get Tag IDs for Flow",
        "description": "Return the tag IDs of all tags associated with the given flow.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowTagRelationshipListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-operation-aliases": [
          "get_flow_relationships_tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read",
          "tags:read"
        ]
      }
    },
    "/api/flows/{id}/tags": {
      "get": {
        "operationId": "get_flow_tags",
        "summary": "Get Flow Tags",
        "description": "Return all tags associated with the given flow ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[tag]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read",
          "tags:read"
        ]
      }
    },
    "/api/flow-actions/{id}/flow": {
      "get": {
        "operationId": "get_flow_action_flow",
        "summary": "Get Flow For Flow Action",
        "description": "Get the flow associated with the given action ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[flow]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "created",
                  "updated",
                  "trigger_type"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ]
      }
    },
    "/api/flow-actions/{id}/relationships/flow": {
      "get": {
        "operationId": "get_flow_id_for_flow_action",
        "summary": "Get Flow ID for Flow Action",
        "description": "Get the flow associated with the given action ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowActionFlowRelationshipResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-operation-aliases": [
          "get_flow_action_relationships_flow"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ]
      }
    },
    "/api/flow-actions/{id}/flow-messages": {
      "get": {
        "operationId": "get_messages_for_flow_action",
        "summary": "Get Messages for Flow Action",
        "description": "Get all flow messages associated with the given action ID.\n\nFlow messages can be sorted by the following fields, in ascending and descending order:\n\nascending: `id`,  `name`, `created`, `updated`\ndescending: `-id`,  `-name`, `-created`, `-updated`\n\nReturns a maximum of 50 flows per request, which can be paginated with offset pagination. Offset pagination uses the following parameters: `page[size]` and `page[number]`<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[flow-message]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "channel",
                  "content",
                  "content.subject",
                  "content.preview_text",
                  "content.from_email",
                  "content.from_label",
                  "content.reply_to_email",
                  "content.cc_email",
                  "content.bcc_email",
                  "content.body",
                  "content.media_url",
                  "content.title",
                  "content.sound",
                  "content.badge",
                  "content.dynamic_image",
                  "content.ios_link",
                  "content.android_link",
                  "content.on_open",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 50. Min: 1. Max: 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "maximum": 100,
              "minimum": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created",
                "id",
                "-id",
                "name",
                "-name",
                "updated",
                "-updated"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowMessageResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-operation-aliases": [
          "get_flow_action_messages"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ]
      }
    },
    "/api/flow-actions/{id}/relationships/flow-messages": {
      "get": {
        "operationId": "get_message_ids_for_flow_action",
        "summary": "Get Message IDs for Flow Action",
        "description": "Get all relationships for flow messages associated with the given flow action ID.\n\nReturns a maximum of 50 flow message relationships per request, which can be paginated with cursor-based pagination.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 50. Min: 1. Max: 50.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "maximum": 50,
              "minimum": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created",
                "id",
                "-id",
                "name",
                "-name",
                "updated",
                "-updated"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowActionFlowMessageRelationshipResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-operation-aliases": [
          "get_flow_action_relationships_messages"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ]
      }
    },
    "/api/flow-messages/{id}/flow-action": {
      "get": {
        "operationId": "get_flow_message_action",
        "summary": "Get Flow Action For Message",
        "description": "Get the flow action for a flow message with the given message ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[flow-action]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action_type",
                  "status",
                  "created",
                  "updated",
                  "settings",
                  "tracking_options",
                  "tracking_options.add_utm",
                  "tracking_options.utm_params",
                  "tracking_options.is_tracking_opens",
                  "tracking_options.is_tracking_clicks",
                  "send_options",
                  "send_options.use_smart_sending",
                  "send_options.is_transactional",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowActionResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ]
      }
    },
    "/api/flow-messages/{id}/relationships/flow-action": {
      "get": {
        "operationId": "get_action_id_for_flow_message",
        "summary": "Get Action ID for Flow Message",
        "description": "Get the [relationship](https://developers.klaviyo.com/en/reference/api_overview#relationships) for a flow message's flow action, given the flow ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowMessageFlowActionRelationshipResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-operation-aliases": [
          "get_flow_message_relationships_action"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ]
      }
    },
    "/api/flow-messages/{id}/relationships/template": {
      "get": {
        "operationId": "get_template_id_for_flow_message",
        "summary": "Get Template ID for Flow Message",
        "description": "Returns the ID of the related template<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`templates:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowMessageTemplateRelationshipResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-operation-aliases": [
          "get_flow_message_relationships_template"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "templates:read"
        ]
      }
    },
    "/api/flow-messages/{id}/template": {
      "get": {
        "operationId": "get_template_for_flow_message",
        "summary": "Get Template for Flow Message",
        "description": "Return the related template<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`templates:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[template]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "editor_type",
                  "html",
                  "text",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTemplateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-operation-aliases": [
          "get_flow_message_template"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "templates:read"
        ]
      }
    },
    "/api/forms": {
      "get": {
        "operationId": "get_forms",
        "summary": "Get Forms",
        "description": "Get all forms in an account.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`forms:read`",
        "parameters": [
          {
            "name": "fields[form]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "ab_test",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`, `equals`<br>`name`: `any`, `contains`, `equals`<br>`ab_test`: `equals`<br>`updated_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`created_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 20. Min: 1. Max: 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 100,
              "minimum": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "-created_at",
                "updated_at",
                "-updated_at"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFormResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Forms"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "forms:read"
        ]
      }
    },
    "/api/forms/{id}": {
      "get": {
        "operationId": "get_form",
        "summary": "Get Form",
        "description": "Get the form with the given ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`forms:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the form",
            "required": true,
            "schema": {
              "description": "The ID of the form",
              "type": "string",
              "example": "Y6nRLr"
            }
          },
          {
            "name": "fields[form-version]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "form_type",
                  "ab_test",
                  "ab_test.variation_name",
                  "status",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[form]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "ab_test",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "form-versions"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFormResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Forms"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "forms:read"
        ]
      }
    },
    "/api/form-versions/{id}": {
      "get": {
        "operationId": "get_form_version",
        "summary": "Get Form Version",
        "description": "Get the form version with the given ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`forms:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the form version",
            "required": true,
            "schema": {
              "description": "The ID of the form version",
              "type": "string",
              "example": "1234567"
            }
          },
          {
            "name": "fields[form-version]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "form_type",
                  "ab_test",
                  "ab_test.variation_name",
                  "status",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFormVersionResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Forms"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "forms:read"
        ]
      }
    },
    "/api/forms/{id}/form-versions": {
      "get": {
        "operationId": "get_versions_for_form",
        "summary": "Get Versions for Form",
        "description": "Get the form versions for the given form.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`forms:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the form",
            "required": true,
            "schema": {
              "description": "The ID of the form",
              "type": "string",
              "example": "Y6nRLr",
              "nullable": true
            }
          },
          {
            "name": "fields[form-version]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "form_type",
                  "ab_test",
                  "ab_test.variation_name",
                  "status",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`form_type`: `any`, `equals`<br>`status`: `equals`<br>`updated_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`created_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 20. Min: 1. Max: 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 100,
              "minimum": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "-created_at",
                "updated_at",
                "-updated_at"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFormVersionResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Forms"
        ],
        "x-klaviyo-operation-aliases": [
          "get_form_form_versions"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "forms:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/forms/{id}/relationships/form-versions": {
      "get": {
        "operationId": "get_version_ids_for_form",
        "summary": "Get Version IDs for Form",
        "description": "Get the IDs of the form versions for the given form.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`forms:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the form",
            "required": true,
            "schema": {
              "description": "The ID of the form",
              "type": "string",
              "example": "Y6nRLr"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFormFormVersionRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Forms"
        ],
        "x-klaviyo-operation-aliases": [
          "get_form_relationships_form_versions"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "forms:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/form-versions/{id}/relationships/form": {
      "get": {
        "operationId": "get_form_id_for_form_version",
        "summary": "Get Form ID for Form Version",
        "description": "Get the ID of the form associated with the given form version.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`forms:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the form version",
            "required": true,
            "schema": {
              "description": "The ID of the form version",
              "type": "string",
              "example": "1234567"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFormVersionFormRelationshipResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Forms"
        ],
        "x-klaviyo-operation-aliases": [
          "get_form_version_relationships_form"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "forms:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/form-versions/{id}/form": {
      "get": {
        "operationId": "get_form_for_form_version",
        "summary": "Get Form for Form Version",
        "description": "Get the form associated with the given form version.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`forms:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the form version",
            "required": true,
            "schema": {
              "description": "The ID of the form version",
              "type": "string",
              "example": "1234567"
            }
          },
          {
            "name": "fields[form]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "ab_test",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFormResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Forms"
        ],
        "x-klaviyo-operation-aliases": [
          "get_form_version_form"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "forms:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/images": {
      "get": {
        "operationId": "get_images",
        "summary": "Get Images",
        "description": "Get all images in an account.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`images:read`",
        "parameters": [
          {
            "name": "fields[image]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "image_url",
                  "format",
                  "size",
                  "hidden",
                  "updated_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`, `equals`<br>`updated_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`format`: `any`, `equals`<br>`name`: `any`, `contains`, `ends-with`, `equals`, `starts-with`<br>`size`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`hidden`: `any`, `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 20. Min: 1. Max: 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 100,
              "minimum": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "format",
                "-format",
                "id",
                "-id",
                "name",
                "-name",
                "size",
                "-size",
                "updated_at",
                "-updated_at"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetImageResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Images"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "images:read"
        ]
      },
      "post": {
        "operationId": "upload_image_from_url",
        "summary": "Upload Image From URL",
        "description": "Import an image from a url or data uri.\n\nIf you want to upload an image from a file, use the Upload Image From File endpoint instead.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `100/m`<br>Daily: `100/d`\n\n**Scopes:**\n`images:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ImageCreateQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostImageResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Images"
        ],
        "x-klaviyo-operation-aliases": [
          "create_image"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "100/m",
          "daily": "100/d"
        },
        "x-klaviyo-scopes": [
          "images:write"
        ]
      }
    },
    "/api/images/{id}": {
      "get": {
        "operationId": "get_image",
        "summary": "Get Image",
        "description": "Get the image with the given image ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`images:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the image",
            "required": true,
            "schema": {
              "description": "The ID of the image",
              "type": "string",
              "example": "7"
            }
          },
          {
            "name": "fields[image]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "image_url",
                  "format",
                  "size",
                  "hidden",
                  "updated_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetImageResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Images"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "images:read"
        ]
      },
      "patch": {
        "operationId": "update_image",
        "summary": "Update Image",
        "description": "Update the image with the given image ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`images:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the image",
            "required": true,
            "schema": {
              "description": "The ID of the image",
              "type": "string",
              "example": "7"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ImagePartialUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchImageResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Images"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "images:write"
        ]
      }
    },
    "/api/image-upload": {
      "post": {
        "operationId": "upload_image_from_file",
        "summary": "Upload Image From File",
        "description": "Upload an image from a file.\n\nIf you want to import an image from an existing url or a data uri, use the Upload Image From URL endpoint instead.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `100/m`<br>Daily: `100/d`\n\n**Scopes:**\n`images:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ImageUploadQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostImageResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Images"
        ],
        "x-klaviyo-operation-aliases": [
          "create_image_upload"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "100/m",
          "daily": "100/d"
        },
        "x-klaviyo-scopes": [
          "images:write"
        ]
      }
    },
    "/api/lists": {
      "get": {
        "operationId": "get_lists",
        "summary": "Get Lists",
        "description": "Get all lists in an account.\n\nFilter to request a subset of all lists. Lists can be filtered by `id`, `name`, `created`, and `updated` fields.\n\nReturns a maximum of 10 results per page.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`lists:read`",
        "parameters": [
          {
            "name": "fields[flow]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "created",
                  "updated",
                  "trigger_type"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[list]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "opt_in_process"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[tag]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `any`, `equals`<br>`id`: `any`, `equals`<br>`created`: `greater-than`<br>`updated`: `greater-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "flow-triggers",
                  "tags"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created",
                "id",
                "-id",
                "name",
                "-name",
                "updated",
                "-updated"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListListResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "lists:read"
        ]
      },
      "post": {
        "operationId": "create_list",
        "summary": "Create List",
        "description": "Create a new list.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`<br>Daily: `150/d`\n\n**Scopes:**\n`lists:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ListCreateQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostListCreateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m",
          "daily": "150/d"
        },
        "x-klaviyo-scopes": [
          "lists:write"
        ]
      }
    },
    "/api/lists/{id}": {
      "get": {
        "operationId": "get_list",
        "summary": "Get List",
        "description": "Get a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`<br><br>Rate limits when using the `additional-fields[list]=profile_count` parameter in your API request:<br>Burst: `1/s`<br>Steady: `15/m`<br><br>To learn more about how the `additional-fields` parameter impacts rate limits, check out our [Rate limits, status codes, and errors](https://developers.klaviyo.com/en/v2024-10-15/docs/rate_limits_and_error_handling) guide.\n\n**Scopes:**\n`lists:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
            "required": true,
            "schema": {
              "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
              "type": "string",
              "example": "Y6nRLr"
            }
          },
          {
            "name": "additional-fields[list]",
            "in": "query",
            "description": "Request additional fields not included by default in the response. Supported values: 'profile_count'",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "profile_count"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[flow]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "created",
                  "updated",
                  "trigger_type"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[list]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "opt_in_process",
                  "profile_count"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[tag]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "flow-triggers",
                  "tags"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListRetrieveResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "lists:read"
        ]
      },
      "patch": {
        "operationId": "update_list",
        "summary": "Update List",
        "description": "Update the name of a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`lists:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
            "required": true,
            "schema": {
              "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
              "type": "string",
              "example": "Y6nRLr"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ListPartialUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchListPartialUpdateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "lists:write"
        ]
      },
      "delete": {
        "operationId": "delete_list",
        "summary": "Delete List",
        "description": "Delete a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`lists:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
            "required": true,
            "schema": {
              "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
              "type": "string",
              "example": "Y6nRLr"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "lists:write"
        ]
      }
    },
    "/api/lists/{id}/relationships/tags": {
      "get": {
        "operationId": "get_tag_ids_for_list",
        "summary": "Get Tag IDs for List",
        "description": "Returns the tag IDs of all tags associated with the given list.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`lists:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListTagRelationshipListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-operation-aliases": [
          "get_list_relationships_tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "lists:read",
          "tags:read"
        ]
      }
    },
    "/api/lists/{id}/tags": {
      "get": {
        "operationId": "get_list_tags",
        "summary": "Get List Tags",
        "description": "Return all tags associated with the given list ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`lists:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
            "required": true,
            "schema": {
              "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
              "type": "string",
              "example": "Y6nRLr"
            }
          },
          {
            "name": "fields[tag]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "lists:read",
          "tags:read"
        ]
      }
    },
    "/api/lists/{id}/relationships/profiles": {
      "get": {
        "operationId": "get_profile_ids_for_list",
        "summary": "Get Profile IDs for List",
        "description": "Get profile membership [relationships](https://developers.klaviyo.com/en/reference/api_overview#relationships) for a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`lists:read`\n`profiles:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
            "required": true,
            "schema": {
              "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
              "type": "string",
              "example": "Y6nRLr"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`email`: `any`, `equals`<br>`phone_number`: `any`, `equals`<br>`push_token`: `any`, `equals`<br>`_kx`: `equals`<br>`joined_group_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 20. Min: 1. Max: 1000.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 1000,
              "minimum": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "joined_group_at",
                "-joined_group_at"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-operation-aliases": [
          "get_list_relationships_profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "lists:read",
          "profiles:read"
        ]
      },
      "post": {
        "operationId": "create_list_relationships",
        "summary": "Add Profile To List",
        "description": "Add a profile to a list with the given list ID.\n\nIt is recommended that you use the [Subscribe Profiles endpoint](https://developers.klaviyo.com/en/reference/subscribe_profiles) if you're trying to give a profile [consent](https://developers.klaviyo.com/en/docs/collect_email_and_sms_consent_via_api) to receive email marketing, SMS marketing, or both.\n\nThis endpoint accepts a maximum of 1000 profiles per call.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`lists:write`\n`profiles:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ListMembersAddQuery"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-operation-aliases": [
          "create_list_relationships_profile"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "lists:write",
          "profiles:write"
        ]
      },
      "delete": {
        "operationId": "delete_list_relationships",
        "summary": "Remove Profile From List",
        "description": "Remove a profile from a list with the given list ID.\n\nThe provided profile will no longer receive marketing from this particular list once removed.\n\nRemoving a profile from a list will not impact the profile's [consent](https://developers.klaviyo.com/en/docs/collect_email_and_sms_consent_via_api) status or subscription status in general.\nTo update a profile's subscription status, please use the [Unsubscribe Profiles endpoint](https://developers.klaviyo.com/en/reference/unsubscribe_profiles).\n\nThis endpoint accepts a maximum of 1000 profiles per call.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`lists:write`\n`profiles:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ListMembersDeleteQuery"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-operation-aliases": [
          "delete_list_relationships_profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "lists:write",
          "profiles:write"
        ]
      }
    },
    "/api/lists/{id}/profiles": {
      "get": {
        "operationId": "get_list_profiles",
        "summary": "Get List Profiles",
        "description": "Get all profiles within a list with the given list ID.\n\nFilter to request a subset of all profiles. Profiles can be filtered by `email`, `phone_number`, `push_token`, and `joined_group_at` fields. Profiles can be sorted by the following fields, in ascending and descending order: `joined_group_at`<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`<br><br>Rate limits when using the `additional-fields[profile]=predictive_analytics` parameter in your API request:<br>Burst: `10/s`<br>Steady: `150/m`<br><br>To learn more about how the `additional-fields` parameter impacts rate limits, check out our [Rate limits, status codes, and errors](https://developers.klaviyo.com/en/v2024-10-15/docs/rate_limits_and_error_handling) guide.\n\n**Scopes:**\n`lists:read`\n`profiles:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
            "required": true,
            "schema": {
              "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
              "type": "string",
              "example": "Y6nRLr"
            }
          },
          {
            "name": "additional-fields[profile]",
            "in": "query",
            "description": "Request additional fields not included by default in the response. Supported values: 'subscriptions', 'predictive_analytics'",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscriptions",
                  "predictive_analytics"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[profile]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "locale",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "location.ip",
                  "properties",
                  "joined_group_at",
                  "subscriptions",
                  "subscriptions.email",
                  "subscriptions.email.marketing",
                  "subscriptions.email.marketing.can_receive_email_marketing",
                  "subscriptions.email.marketing.consent",
                  "subscriptions.email.marketing.consent_timestamp",
                  "subscriptions.email.marketing.last_updated",
                  "subscriptions.email.marketing.method",
                  "subscriptions.email.marketing.method_detail",
                  "subscriptions.email.marketing.custom_method_detail",
                  "subscriptions.email.marketing.double_optin",
                  "subscriptions.email.marketing.suppression",
                  "subscriptions.email.marketing.list_suppressions",
                  "subscriptions.sms",
                  "subscriptions.sms.marketing",
                  "subscriptions.sms.marketing.can_receive_sms_marketing",
                  "subscriptions.sms.marketing.consent",
                  "subscriptions.sms.marketing.consent_timestamp",
                  "subscriptions.sms.marketing.method",
                  "subscriptions.sms.marketing.method_detail",
                  "subscriptions.sms.marketing.last_updated",
                  "subscriptions.sms.transactional",
                  "subscriptions.sms.transactional.can_receive_sms_transactional",
                  "subscriptions.sms.transactional.consent",
                  "subscriptions.sms.transactional.consent_timestamp",
                  "subscriptions.sms.transactional.method",
                  "subscriptions.sms.transactional.method_detail",
                  "subscriptions.sms.transactional.last_updated",
                  "subscriptions.mobile_push",
                  "subscriptions.mobile_push.marketing",
                  "subscriptions.mobile_push.marketing.can_receive_push_marketing",
                  "subscriptions.mobile_push.marketing.consent",
                  "subscriptions.mobile_push.marketing.consent_timestamp",
                  "predictive_analytics",
                  "predictive_analytics.historic_clv",
                  "predictive_analytics.predicted_clv",
                  "predictive_analytics.total_clv",
                  "predictive_analytics.historic_number_of_orders",
                  "predictive_analytics.predicted_number_of_orders",
                  "predictive_analytics.average_days_between_orders",
                  "predictive_analytics.average_order_value",
                  "predictive_analytics.churn_probability",
                  "predictive_analytics.expected_date_of_next_order"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`email`: `any`, `equals`<br>`phone_number`: `any`, `equals`<br>`push_token`: `any`, `equals`<br>`_kx`: `equals`<br>`joined_group_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 20. Min: 1. Max: 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 100,
              "minimum": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "joined_group_at",
                "-joined_group_at"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListMemberResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "lists:read",
          "profiles:read"
        ]
      }
    },
    "/api/lists/{id}/relationships/flow-triggers": {
      "get": {
        "operationId": "get_list_relationships_flow_triggers",
        "summary": "Get List Relationships Flow Triggers",
        "description": "Get all flow [relationships](https://developers.klaviyo.com/en/reference/api_overview#relationships) where the given list is being used as the trigger.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`\n`lists:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
            "required": true,
            "schema": {
              "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
              "type": "string",
              "example": "Y6nRLr"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListFlowTriggersRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read",
          "lists:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/lists/{id}/flow-triggers": {
      "get": {
        "operationId": "get_list_flow_triggers",
        "summary": "Get List Flow Triggers",
        "description": "Get all flows where the given lsit ID is being used as the trigger.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`\n`lists:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
            "required": true,
            "schema": {
              "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
              "type": "string",
              "example": "Y6nRLr"
            }
          },
          {
            "name": "fields[flow]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "created",
                  "updated",
                  "trigger_type"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read",
          "lists:read"
        ]
      }
    },
    "/api/metrics": {
      "get": {
        "operationId": "get_metrics",
        "summary": "Get Metrics",
        "description": "Get all metrics in an account.\n\nRequests can be filtered by the following fields:\nintegration `name`, integration `category`\n\nReturns a maximum of 200 results per page.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`metrics:read`",
        "parameters": [
          {
            "name": "fields[flow]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "created",
                  "updated",
                  "trigger_type"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[metric]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "integration"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`integration.name`: `equals`<br>`integration.category`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "flow-triggers"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMetricResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Metrics"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "metrics:read"
        ]
      }
    },
    "/api/metrics/{id}": {
      "get": {
        "operationId": "get_metric",
        "summary": "Get Metric",
        "description": "Get a metric with the given metric ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`metrics:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Metric ID",
            "required": true,
            "schema": {
              "description": "Metric ID",
              "type": "string"
            }
          },
          {
            "name": "fields[flow]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "created",
                  "updated",
                  "trigger_type"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[metric]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "integration"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "flow-triggers"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMetricResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Metrics"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "metrics:read"
        ]
      }
    },
    "/api/metric-properties/{id}": {
      "get": {
        "operationId": "get_metric_property",
        "summary": "Get Metric Property",
        "description": "Get a metric property with the given metric property ID.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`\n\n**Scopes:**\n`metrics:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the metric property",
            "required": true,
            "schema": {
              "description": "The ID of the metric property",
              "type": "string",
              "example": "925e385b52fb405715f3616c337cc65c"
            }
          },
          {
            "name": "additional-fields[metric-property]",
            "in": "query",
            "description": "Request additional fields not included by default in the response. Supported values: 'sample_values'",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "sample_values"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[metric-property]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "label",
                  "property",
                  "inferred_type",
                  "sample_values"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[metric]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "integration"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "metric"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMetricPropertyResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Metrics"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "15/m"
        },
        "x-klaviyo-scopes": [
          "metrics:read"
        ],
        "x-klaviyo-subtag": "Metrics"
      }
    },
    "/api/metric-aggregates": {
      "post": {
        "operationId": "query_metric_aggregates",
        "summary": "Query Metric Aggregates",
        "description": "Query and aggregate event data associated with a metric, including native Klaviyo metrics, integration-specific metrics, and custom events. Queries must be passed in the JSON body of your `POST` request.\n\nTo request campaign and flow performance data that matches the data shown in Klaviyo's UI, we recommend the [Reporting API](https://developers.klaviyo.com/en/reference/reporting_api_overview).\n\nResults can be filtered and grouped by time, event, or profile dimensions.\n\nTo learn more about how to use this endpoint, check out our new [Using the Query Metric Aggregates Endpoint guide](https://developers.klaviyo.com/en/docs/using-the-query-metric-aggregates-endpoint).\n\nFor a comprehensive list of request body parameters, native Klaviyo metrics, and their associated attributes for grouping and filtering, please refer to the [metrics attributes guide](https://developers.klaviyo.com/en/docs/supported_metrics_and_attributes).<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`metrics:read`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "description": "Retrieve Metric Aggregations",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/MetricAggregateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostMetricAggregateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Metrics"
        ],
        "x-klaviyo-operation-aliases": [
          "create_metric_aggregate"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "metrics:read"
        ]
      }
    },
    "/api/metrics/{id}/relationships/flow-triggers": {
      "get": {
        "operationId": "get_metric_relationships_flow_triggers",
        "summary": "Get Metric Relationships Flow Triggers",
        "description": "Get all flows where the given metric is being used as the trigger.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`flows:read`\n`metrics:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMetricFlowTriggersRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Metrics"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "flows:read",
          "metrics:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/metrics/{id}/flow-triggers": {
      "get": {
        "operationId": "get_metric_flow_triggers",
        "summary": "Get Metric Flow Triggers",
        "description": "Get all flows where the given metric is being used as the trigger.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`flows:read`\n`metrics:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[flow]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "created",
                  "updated",
                  "trigger_type"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Metrics"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "flows:read",
          "metrics:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/metric-properties/{id}/relationships/metric": {
      "get": {
        "operationId": "get_metric_id_for_metric_property",
        "summary": "Get Metric ID for Metric Property",
        "description": "Get the ID of the metric for the given metric property.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`\n\n**Scopes:**\n`metrics:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the metric property",
            "required": true,
            "schema": {
              "description": "The ID of the metric property",
              "type": "string",
              "example": "925e385b52fb405715f3616c337cc65c"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMetricPropertyRelationshipMetricResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Metrics"
        ],
        "x-klaviyo-operation-aliases": [
          "get_metric_property_relationships_metric"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "15/m"
        },
        "x-klaviyo-scopes": [
          "metrics:read"
        ],
        "x-klaviyo-subtag": "Metrics"
      }
    },
    "/api/metrics/{id}/metric-properties": {
      "get": {
        "operationId": "get_properties_for_metric",
        "summary": "Get Properties for Metric",
        "description": "Get the metric properties for the given metric ID.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`\n\n**Scopes:**\n`metrics:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the metric",
            "required": true,
            "schema": {
              "description": "The ID of the metric",
              "type": "string",
              "example": "925e38"
            }
          },
          {
            "name": "additional-fields[metric-property]",
            "in": "query",
            "description": "Request additional fields not included by default in the response. Supported values: 'sample_values'",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "sample_values"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[metric-property]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "label",
                  "property",
                  "inferred_type",
                  "sample_values"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMetricPropertyResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Metrics"
        ],
        "x-klaviyo-operation-aliases": [
          "get_metric_metric_properties"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "15/m"
        },
        "x-klaviyo-scopes": [
          "metrics:read"
        ],
        "x-klaviyo-subtag": "Metrics"
      }
    },
    "/api/metrics/{id}/relationships/metric-properties": {
      "get": {
        "operationId": "get_property_ids_for_metric",
        "summary": "Get Property IDs for Metric",
        "description": "Get the IDs of metric properties for the given metric.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`\n\n**Scopes:**\n`metrics:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the metric",
            "required": true,
            "schema": {
              "description": "The ID of the metric",
              "type": "string",
              "example": "925e38"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMetricRelationshipMetricPropertyResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Metrics"
        ],
        "x-klaviyo-operation-aliases": [
          "get_metric_relationships_metric_properties"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "15/m"
        },
        "x-klaviyo-scopes": [
          "metrics:read"
        ],
        "x-klaviyo-subtag": "Metrics"
      }
    },
    "/api/metric-properties/{id}/metric": {
      "get": {
        "operationId": "get_metric_for_metric_property",
        "summary": "Get Metric for Metric Property",
        "description": "Get the metric for the given metric property ID.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`\n\n**Scopes:**\n`metrics:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the metric property",
            "required": true,
            "schema": {
              "description": "The ID of the metric property",
              "type": "string",
              "example": "925e385b52fb405715f3616c337cc65c"
            }
          },
          {
            "name": "fields[metric]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "integration"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMetricResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Metrics"
        ],
        "x-klaviyo-operation-aliases": [
          "get_metric_property_metric"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "15/m"
        },
        "x-klaviyo-scopes": [
          "metrics:read"
        ],
        "x-klaviyo-subtag": "Metrics"
      }
    },
    "/api/profiles": {
      "get": {
        "operationId": "get_profiles",
        "summary": "Get Profiles",
        "description": "Get all profiles in an account.\n\nProfiles can be sorted by the following fields in ascending and descending order: `id`, `created`, `updated`, `email`, `subscriptions.email.marketing.suppression.timestamp`, `subscriptions.email.marketing.list_suppressions.timestamp`<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`<br><br>Rate limits when using the `additional-fields[profile]=predictive_analytics` parameter in your API request:<br>Burst: `10/s`<br>Steady: `150/m`<br><br>To learn more about how the `additional-fields` parameter impacts rate limits, check out our [Rate limits, status codes, and errors](https://developers.klaviyo.com/en/v2024-10-15/docs/rate_limits_and_error_handling) guide.\n\n**Scopes:**\n`profiles:read`",
        "parameters": [
          {
            "name": "additional-fields[profile]",
            "in": "query",
            "description": "Request additional fields not included by default in the response. Supported values: 'subscriptions', 'predictive_analytics'",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscriptions",
                  "predictive_analytics"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[profile]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "locale",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "location.ip",
                  "properties",
                  "subscriptions",
                  "subscriptions.email",
                  "subscriptions.email.marketing",
                  "subscriptions.email.marketing.can_receive_email_marketing",
                  "subscriptions.email.marketing.consent",
                  "subscriptions.email.marketing.consent_timestamp",
                  "subscriptions.email.marketing.last_updated",
                  "subscriptions.email.marketing.method",
                  "subscriptions.email.marketing.method_detail",
                  "subscriptions.email.marketing.custom_method_detail",
                  "subscriptions.email.marketing.double_optin",
                  "subscriptions.email.marketing.suppression",
                  "subscriptions.email.marketing.list_suppressions",
                  "subscriptions.sms",
                  "subscriptions.sms.marketing",
                  "subscriptions.sms.marketing.can_receive_sms_marketing",
                  "subscriptions.sms.marketing.consent",
                  "subscriptions.sms.marketing.consent_timestamp",
                  "subscriptions.sms.marketing.method",
                  "subscriptions.sms.marketing.method_detail",
                  "subscriptions.sms.marketing.last_updated",
                  "subscriptions.sms.transactional",
                  "subscriptions.sms.transactional.can_receive_sms_transactional",
                  "subscriptions.sms.transactional.consent",
                  "subscriptions.sms.transactional.consent_timestamp",
                  "subscriptions.sms.transactional.method",
                  "subscriptions.sms.transactional.method_detail",
                  "subscriptions.sms.transactional.last_updated",
                  "subscriptions.mobile_push",
                  "subscriptions.mobile_push.marketing",
                  "subscriptions.mobile_push.marketing.can_receive_push_marketing",
                  "subscriptions.mobile_push.marketing.consent",
                  "subscriptions.mobile_push.marketing.consent_timestamp",
                  "predictive_analytics",
                  "predictive_analytics.historic_clv",
                  "predictive_analytics.predicted_clv",
                  "predictive_analytics.total_clv",
                  "predictive_analytics.historic_number_of_orders",
                  "predictive_analytics.predicted_number_of_orders",
                  "predictive_analytics.average_days_between_orders",
                  "predictive_analytics.average_order_value",
                  "predictive_analytics.churn_probability",
                  "predictive_analytics.expected_date_of_next_order"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`, `equals`<br>`email`: `any`, `equals`<br>`phone_number`: `any`, `equals`<br>`external_id`: `any`, `equals`<br>`_kx`: `equals`<br>`created`: `greater-than`, `less-than`<br>`updated`: `greater-than`, `less-than`<br>`subscriptions.email.marketing.list_suppressions.reason`: `equals`<br>`subscriptions.email.marketing.list_suppressions.timestamp`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`subscriptions.email.marketing.list_suppressions.list_id`: `equals`<br>`subscriptions.email.marketing.suppression.reason`: `equals`<br>`subscriptions.email.marketing.suppression.timestamp`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 20. Min: 1. Max: 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 100,
              "minimum": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created",
                "email",
                "-email",
                "id",
                "-id",
                "updated",
                "-updated",
                "subscriptions.email.marketing.list_suppressions.timestamp",
                "-subscriptions.email.marketing.list_suppressions.timestamp",
                "subscriptions.email.marketing.suppression.timestamp",
                "-subscriptions.email.marketing.suppression.timestamp"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "profiles:read"
        ]
      },
      "post": {
        "operationId": "create_profile",
        "summary": "Create Profile",
        "description": "Create a new profile.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`profiles:write`",
        "parameters": [
          {
            "name": "additional-fields[profile]",
            "in": "query",
            "description": "Request additional fields not included by default in the response. Supported values: 'subscriptions', 'predictive_analytics'",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscriptions",
                  "predictive_analytics"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileCreateQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostProfileResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "profiles:write"
        ]
      }
    },
    "/api/profiles/{id}": {
      "get": {
        "operationId": "get_profile",
        "summary": "Get Profile",
        "description": "Get the profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`<br><br>Rate limits when using the `include=list` parameter in your API request:<br>Burst: `1/s`<br>Steady: `15/m`<br><br>Rate limits when using the `include=segment` parameter in your API request:<br>Burst: `1/s`<br>Steady: `15/m`<br><br>To learn more about how the `include` parameter impacts rate limits, check out our [Rate limits, status codes, and errors](https://developers.klaviyo.com/en/v2024-10-15/docs/rate_limits_and_error_handling) guide.\n\n**Scopes:**\n`profiles:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additional-fields[profile]",
            "in": "query",
            "description": "Request additional fields not included by default in the response. Supported values: 'subscriptions', 'predictive_analytics'",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscriptions",
                  "predictive_analytics"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[list]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "opt_in_process"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[profile]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "locale",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "location.ip",
                  "properties",
                  "subscriptions",
                  "subscriptions.email",
                  "subscriptions.email.marketing",
                  "subscriptions.email.marketing.can_receive_email_marketing",
                  "subscriptions.email.marketing.consent",
                  "subscriptions.email.marketing.consent_timestamp",
                  "subscriptions.email.marketing.last_updated",
                  "subscriptions.email.marketing.method",
                  "subscriptions.email.marketing.method_detail",
                  "subscriptions.email.marketing.custom_method_detail",
                  "subscriptions.email.marketing.double_optin",
                  "subscriptions.email.marketing.suppression",
                  "subscriptions.email.marketing.list_suppressions",
                  "subscriptions.sms",
                  "subscriptions.sms.marketing",
                  "subscriptions.sms.marketing.can_receive_sms_marketing",
                  "subscriptions.sms.marketing.consent",
                  "subscriptions.sms.marketing.consent_timestamp",
                  "subscriptions.sms.marketing.method",
                  "subscriptions.sms.marketing.method_detail",
                  "subscriptions.sms.marketing.last_updated",
                  "subscriptions.sms.transactional",
                  "subscriptions.sms.transactional.can_receive_sms_transactional",
                  "subscriptions.sms.transactional.consent",
                  "subscriptions.sms.transactional.consent_timestamp",
                  "subscriptions.sms.transactional.method",
                  "subscriptions.sms.transactional.method_detail",
                  "subscriptions.sms.transactional.last_updated",
                  "subscriptions.mobile_push",
                  "subscriptions.mobile_push.marketing",
                  "subscriptions.mobile_push.marketing.can_receive_push_marketing",
                  "subscriptions.mobile_push.marketing.consent",
                  "subscriptions.mobile_push.marketing.consent_timestamp",
                  "predictive_analytics",
                  "predictive_analytics.historic_clv",
                  "predictive_analytics.predicted_clv",
                  "predictive_analytics.total_clv",
                  "predictive_analytics.historic_number_of_orders",
                  "predictive_analytics.predicted_number_of_orders",
                  "predictive_analytics.average_days_between_orders",
                  "predictive_analytics.average_order_value",
                  "predictive_analytics.churn_probability",
                  "predictive_analytics.expected_date_of_next_order"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[segment]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "definition",
                  "definition.condition_groups",
                  "created",
                  "updated",
                  "is_active",
                  "is_processing",
                  "is_starred"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "lists",
                  "segments"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "profiles:read"
        ]
      },
      "patch": {
        "operationId": "update_profile",
        "summary": "Update Profile",
        "description": "Update the profile with the given profile ID.\n\nNote that setting a field to `null` will clear out the field, whereas not including a field in your request will leave it unchanged.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`profiles:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
            "required": true,
            "schema": {
              "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
              "type": "string",
              "example": "01GDDKASAP8TKDDA2GRZDSVP4H"
            }
          },
          {
            "name": "additional-fields[profile]",
            "in": "query",
            "description": "Request additional fields not included by default in the response. Supported values: 'subscriptions', 'predictive_analytics'",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscriptions",
                  "predictive_analytics"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ProfilePartialUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchProfileResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "profiles:write"
        ]
      }
    },
    "/api/profile-bulk-import-jobs": {
      "get": {
        "operationId": "get_bulk_import_profiles_jobs",
        "summary": "Get Bulk Import Profiles Jobs",
        "description": "Get all bulk profile import jobs.\n\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`lists:read`\n`profiles:read`",
        "parameters": [
          {
            "name": "fields[profile-bulk-import-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "expires_at",
                  "started_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `any`, `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 20. Min: 1. Max: 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 100,
              "minimum": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "-created_at"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileImportJobResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-operation-aliases": [
          "get_bulk_profile_import_jobs",
          "get_profile_bulk_import_jobs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "lists:read",
          "profiles:read"
        ],
        "x-klaviyo-subtag": "Bulk Import Profiles"
      },
      "post": {
        "operationId": "spawn_bulk_profile_import_job",
        "summary": "Spawn Bulk Profile Import Job",
        "description": "Create a bulk profile import job to create or update a batch of profiles.\n\nAccepts up to 10,000 profiles per request. The maximum allowed payload size is 5MB.\n\nTo learn more, see our [Bulk Profile Import API guide](https://developers.klaviyo.com/en/docs/use_klaviyos_bulk_profile_import_api).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`lists:write`\n`profiles:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileImportJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostProfileImportJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-operation-aliases": [
          "bulk_import_profiles",
          "create_profile_bulk_import_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "lists:write",
          "profiles:write"
        ],
        "x-klaviyo-subtag": "Bulk Import Profiles"
      }
    },
    "/api/profile-bulk-import-jobs/{job_id}": {
      "get": {
        "operationId": "get_bulk_import_profiles_job",
        "summary": "Get Bulk Import Profiles Job",
        "description": "Get a bulk profile import job with the given job ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`lists:read`\n`profiles:read`",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "ID of the job to retrieve.",
            "required": true,
            "schema": {
              "description": "ID of the job to retrieve.",
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
            }
          },
          {
            "name": "fields[list]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "opt_in_process"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[profile-bulk-import-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "expires_at",
                  "started_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "lists"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileImportJobResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-operation-aliases": [
          "get_bulk_profile_import_job",
          "get_profile_bulk_import_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "lists:read",
          "profiles:read"
        ],
        "x-klaviyo-subtag": "Bulk Import Profiles"
      }
    },
    "/api/profile-suppression-bulk-create-jobs": {
      "get": {
        "operationId": "get_bulk_suppress_profiles_jobs",
        "summary": "Get Bulk Suppress Profiles Jobs",
        "description": "Get the status of all bulk profile suppression jobs.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`subscriptions:read`",
        "parameters": [
          {
            "name": "fields[profile-suppression-bulk-create-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "completed_at",
                  "skipped_count"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`<br>`list_id`: `equals`<br>`segment_id`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBulkProfileSuppressionsCreateJobResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-operation-aliases": [
          "get_profile_suppression_bulk_create_jobs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "subscriptions:read"
        ],
        "x-klaviyo-subtag": "Profiles"
      },
      "post": {
        "operationId": "bulk_suppress_profiles",
        "summary": "Bulk Suppress Profiles",
        "description": "Manually suppress profiles by email address or specify a segment/list ID to suppress all current members of a segment/list.\n\nSuppressed profiles cannot receive email marketing, independent of their consent status. To learn more, see our guides on [email suppressions](https://help.klaviyo.com/hc/en-us/articles/115005246108#what-is-a-suppressed-profile-1) and [collecting consent](https://developers.klaviyo.com/en/docs/collect_email_and_sms_consent_via_api).\n\nEmail address per request limit: 100<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`profiles:write`\n`subscriptions:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "description": "Suppresses one or more profiles from receiving marketing. Currently, supports email only. If a profile is not found with the given email, one will be created and immediately suppressed.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/SuppressionCreateJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostBulkProfileSuppressionsCreateJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-operation-aliases": [
          "suppress_profiles",
          "create_profile_suppression_bulk_create_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "profiles:write",
          "subscriptions:write"
        ],
        "x-klaviyo-subtag": "Consent"
      }
    },
    "/api/profile-suppression-bulk-create-jobs/{job_id}": {
      "get": {
        "operationId": "get_bulk_suppress_profiles_job",
        "summary": "Get Bulk Suppress Profiles Job",
        "description": "Get the bulk suppress profiles job with the given job ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`subscriptions:read`",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "ID of the job to retrieve.",
            "required": true,
            "schema": {
              "description": "ID of the job to retrieve.",
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
            }
          },
          {
            "name": "fields[profile-suppression-bulk-create-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "completed_at",
                  "skipped_count"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBulkProfileSuppressionsCreateJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-operation-aliases": [
          "get_profile_suppression_bulk_create_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "subscriptions:read"
        ],
        "x-klaviyo-subtag": "Profiles"
      }
    },
    "/api/profile-suppression-bulk-delete-jobs": {
      "get": {
        "operationId": "get_bulk_unsuppress_profiles_jobs",
        "summary": "Get Bulk Unsuppress Profiles Jobs",
        "description": "Get all bulk unsuppress profiles jobs.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`subscriptions:read`",
        "parameters": [
          {
            "name": "fields[profile-suppression-bulk-delete-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "completed_at",
                  "skipped_count"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`<br>`list_id`: `equals`<br>`segment_id`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBulkProfileSuppressionsRemoveJobResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-operation-aliases": [
          "get_profile_suppression_bulk_delete_jobs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "subscriptions:read"
        ],
        "x-klaviyo-subtag": "Profiles"
      },
      "post": {
        "operationId": "bulk_unsuppress_profiles",
        "summary": "Bulk Unsuppress Profiles",
        "description": "Manually unsuppress profiles by email address or specify a segment/list ID to unsuppress all current members of a segment/list.\n\nThis only removes suppressions with reason USER_SUPPRESSED ; unsubscribed profiles and suppressed profiles with reason INVALID_EMAIL or HARD_BOUNCE remain unchanged. To learn more, see our guides on [email suppressions](https://help.klaviyo.com/hc/en-us/articles/115005246108#what-is-a-suppressed-profile-1) and [collecting consent](https://developers.klaviyo.com/en/docs/collect_email_and_sms_consent_via_api).\n\nEmail address per request limit: 100<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`subscriptions:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "description": "Unsuppresses one or more profiles from receiving marketing. Currently, supports email only. If a profile is not\nfound with the given email, no action will be taken.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/SuppressionDeleteJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostBulkProfileSuppressionsRemoveJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-operation-aliases": [
          "unsuppress_profiles",
          "create_profile_suppression_bulk_delete_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "subscriptions:write"
        ],
        "x-klaviyo-subtag": "Consent"
      }
    },
    "/api/profile-suppression-bulk-delete-jobs/{job_id}": {
      "get": {
        "operationId": "get_bulk_unsuppress_profiles_job",
        "summary": "Get Bulk Unsuppress Profiles Job",
        "description": "Get the bulk unsuppress profiles job with the given job ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`subscriptions:read`",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "ID of the job to retrieve.",
            "required": true,
            "schema": {
              "description": "ID of the job to retrieve.",
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
            }
          },
          {
            "name": "fields[profile-suppression-bulk-delete-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "completed_at",
                  "skipped_count"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBulkProfileSuppressionsRemoveJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-operation-aliases": [
          "get_profile_suppression_bulk_delete_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "subscriptions:read"
        ],
        "x-klaviyo-subtag": "Profiles"
      }
    },
    "/api/profile-import": {
      "post": {
        "operationId": "create_or_update_profile",
        "summary": "Create or Update Profile",
        "description": "Given a set of profile attributes and optionally an ID, create or update a profile.\n\nReturns 201 if a new profile was created, 200 if an existing profile was updated.\n\nNote that setting a field to `null` will clear out the field, whereas not including a field in your request will leave it unchanged.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`profiles:write`",
        "parameters": [
          {
            "name": "additional-fields[profile]",
            "in": "query",
            "description": "Request additional fields not included by default in the response. Supported values: 'subscriptions', 'predictive_analytics'",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscriptions",
                  "predictive_analytics"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileUpsertQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile Updated Successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostProfileResponse"
                }
              }
            }
          },
          "201": {
            "description": "Profile Created Successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostProfileResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-operation-aliases": [
          "create_profile_import"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "profiles:write"
        ]
      }
    },
    "/api/profile-merge": {
      "post": {
        "operationId": "merge_profiles",
        "summary": "Merge Profiles",
        "description": "Merge a given related profile into a profile with the given profile ID.\n\nThe profile provided under `relationships` (the \"source\" profile) will be merged into the profile provided by the ID in the base data object (the \"destination\" profile).\nThis endpoint queues an asynchronous task which will merge data from the source profile into the destination profile, deleting the source profile in the process. This endpoint accepts only one source profile.\n\nTo learn more about how profile data is preserved or overwritten during a merge, please [visit our Help Center](https://help.klaviyo.com/hc/en-us/articles/115005073847#merge-2-profiles3).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`profiles:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileMergeQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostProfileMergeResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-operation-aliases": [
          "create_profile_merge"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "profiles:write"
        ]
      }
    },
    "/api/profile-subscription-bulk-create-jobs": {
      "post": {
        "operationId": "bulk_subscribe_profiles",
        "summary": "Bulk Subscribe Profiles",
        "description": "Subscribe one or more profiles to email marketing, SMS marketing, or both. If the provided list has double opt-in enabled, profiles will receive a message requiring their confirmation before subscribing. Otherwise, profiles will be immediately subscribed without receiving a confirmation message.\nLearn more about [consent in this guide](https://developers.klaviyo.com/en/docs/collect_email_and_sms_consent_via_api).\n\nIf a list is not provided, the opt-in process used will be determined by the [account-level default opt-in setting](https://www.klaviyo.com/settings/account/api-keys).\n\nTo add someone to a list without changing their subscription status, use [Add Profile to List](https://developers.klaviyo.com/en/reference/create_list_relationships).\n\nThis API will remove any `UNSUBSCRIBE`, `SPAM_REPORT` or `USER_SUPPRESSED` suppressions from the provided profiles. Learn more about [suppressed profiles](https://help.klaviyo.com/hc/en-us/articles/115005246108-Understanding-suppressed-email-profiles#what-is-a-suppressed-profile-1).\n\nMaximum number of profiles can be submitted for subscription: 1000\n\nThis endpoint now supports a `historical_import` flag. If this flag is set `true`, profiles being subscribed will bypass double opt-in emails and be subscribed immediately. They will also bypass any associated \"Added to list\" flows. This is useful for importing historical data where you have already collected consent. If `historical_import` is set to true, the `consented_at` field is required and must be in the past.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`lists:write`\n`profiles:write`\n`subscriptions:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "description": "Subscribes one or more profiles to marketing. Currently, supports email and SMS only. All profiles will be added to the provided list. Either email or phone number is required. Both may be specified to subscribe to both channels.\nIf a profile cannot be found matching the given identifier(s), a new profile will be created and then subscribed.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionCreateJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-operation-aliases": [
          "subscribe_profiles",
          "create_profile_subscription_bulk_create_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "lists:write",
          "profiles:write",
          "subscriptions:write"
        ],
        "x-klaviyo-subtag": "Consent"
      }
    },
    "/api/profile-subscription-bulk-delete-jobs": {
      "post": {
        "operationId": "bulk_unsubscribe_profiles",
        "summary": "Bulk Unsubscribe Profiles",
        "description": "Unsubscribe one or more profiles to email marketing, SMS marketing, or both. Learn more about [consent in this guide](https://developers.klaviyo.com/en/docs/collect_email_and_sms_consent_via_api).\n\nTo remove someone from a list without changing their subscription status, use [Remove Profile from List](https://developers.klaviyo.com/en/reference/delete_list_relationships).\n\nMaximum number of profile can be submitted for unsubscription: 100<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`lists:write`\n`profiles:write`\n`subscriptions:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "description": "Unsubscribes one or more profiles from marketing. Currently, supports email and SMS only. All profiles will be removed from the provided list.\nEither email or phone number is required. If a profile cannot be found matching the given identifier(s), a new profile will be created and then unsubscribed.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionDeleteJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-operation-aliases": [
          "unsubscribe_profiles",
          "create_profile_subscription_bulk_delete_job"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "lists:write",
          "profiles:write",
          "subscriptions:write"
        ],
        "x-klaviyo-subtag": "Consent"
      }
    },
    "/api/push-tokens": {
      "post": {
        "operationId": "create_push_token",
        "summary": "Create or Update Push Token",
        "description": "Create or update a push token.\n\nThis endpoint can be used to migrate push tokens from another platform to Klaviyo. Please use our mobile SDKs ([iOS](https://github.com/klaviyo/klaviyo-swift-sdk) and [Android](https://github.com/klaviyo/klaviyo-android-sdk)) to create push tokens from users' devices.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`profiles:write`\n`push-tokens:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/PushTokenCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "profiles:write",
          "push-tokens:write"
        ]
      }
    },
    "/api/profiles/{id}/lists": {
      "get": {
        "operationId": "get_lists_for_profile",
        "summary": "Get Lists for Profile",
        "description": "Get list memberships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`lists:read`\n`profiles:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[list]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "opt_in_process"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-operation-aliases": [
          "get_profile_lists"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "lists:read",
          "profiles:read"
        ]
      }
    },
    "/api/profiles/{id}/relationships/lists": {
      "get": {
        "operationId": "get_list_ids_for_profile",
        "summary": "Get List IDs for Profile",
        "description": "Get list memberships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`lists:read`\n`profiles:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileListRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-operation-aliases": [
          "get_profile_relationships_lists"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "lists:read",
          "profiles:read"
        ]
      }
    },
    "/api/profiles/{id}/segments": {
      "get": {
        "operationId": "get_segments_for_profile",
        "summary": "Get Segments for Profile",
        "description": "Get segment memberships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`profiles:read`\n`segments:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[segment]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "definition",
                  "definition.condition_groups",
                  "created",
                  "updated",
                  "is_active",
                  "is_processing",
                  "is_starred"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSegmentResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-operation-aliases": [
          "get_profile_segments"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "profiles:read",
          "segments:read"
        ]
      }
    },
    "/api/profiles/{id}/relationships/segments": {
      "get": {
        "operationId": "get_segment_ids_for_profile",
        "summary": "Get Segment IDs for Profile",
        "description": "Get segment membership relationships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`profiles:read`\n`segments:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileSegmentRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-operation-aliases": [
          "get_profile_relationships_segments"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "profiles:read",
          "segments:read"
        ]
      }
    },
    "/api/profile-bulk-import-jobs/{id}/lists": {
      "get": {
        "operationId": "get_list_for_bulk_import_profiles_job",
        "summary": "Get List for Bulk Import Profiles Job",
        "description": "Get list for the bulk profile import job with the given ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`lists:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[list]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "opt_in_process"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-operation-aliases": [
          "get_bulk_profile_import_job_lists",
          "get_profile_bulk_import_job_lists"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "lists:read"
        ],
        "x-klaviyo-subtag": "Bulk Import Profiles"
      }
    },
    "/api/profile-bulk-import-jobs/{id}/relationships/lists": {
      "get": {
        "operationId": "get_list_ids_for_bulk_import_profiles_job",
        "summary": "Get List IDs for Bulk Import Profiles Job",
        "description": "Get list relationship for the bulk profile import job with the given ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`lists:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileImportJobListRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-operation-aliases": [
          "get_bulk_profile_import_job_relationships_lists",
          "get_profile_bulk_import_job_relationships_lists"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "lists:read"
        ],
        "x-klaviyo-subtag": "Bulk Import Profiles"
      }
    },
    "/api/profile-bulk-import-jobs/{id}/profiles": {
      "get": {
        "operationId": "get_profiles_for_bulk_import_profiles_job",
        "summary": "Get Profiles for Bulk Import Profiles Job",
        "description": "Get profiles for the bulk profile import job with the given ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`profiles:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additional-fields[profile]",
            "in": "query",
            "description": "Request additional fields not included by default in the response. Supported values: 'subscriptions', 'predictive_analytics'",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscriptions",
                  "predictive_analytics"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[profile]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "locale",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "location.ip",
                  "properties",
                  "subscriptions",
                  "subscriptions.email",
                  "subscriptions.email.marketing",
                  "subscriptions.email.marketing.can_receive_email_marketing",
                  "subscriptions.email.marketing.consent",
                  "subscriptions.email.marketing.consent_timestamp",
                  "subscriptions.email.marketing.last_updated",
                  "subscriptions.email.marketing.method",
                  "subscriptions.email.marketing.method_detail",
                  "subscriptions.email.marketing.custom_method_detail",
                  "subscriptions.email.marketing.double_optin",
                  "subscriptions.email.marketing.suppression",
                  "subscriptions.email.marketing.list_suppressions",
                  "subscriptions.sms",
                  "subscriptions.sms.marketing",
                  "subscriptions.sms.marketing.can_receive_sms_marketing",
                  "subscriptions.sms.marketing.consent",
                  "subscriptions.sms.marketing.consent_timestamp",
                  "subscriptions.sms.marketing.method",
                  "subscriptions.sms.marketing.method_detail",
                  "subscriptions.sms.marketing.last_updated",
                  "subscriptions.sms.transactional",
                  "subscriptions.sms.transactional.can_receive_sms_transactional",
                  "subscriptions.sms.transactional.consent",
                  "subscriptions.sms.transactional.consent_timestamp",
                  "subscriptions.sms.transactional.method",
                  "subscriptions.sms.transactional.method_detail",
                  "subscriptions.sms.transactional.last_updated",
                  "subscriptions.mobile_push",
                  "subscriptions.mobile_push.marketing",
                  "subscriptions.mobile_push.marketing.can_receive_push_marketing",
                  "subscriptions.mobile_push.marketing.consent",
                  "subscriptions.mobile_push.marketing.consent_timestamp",
                  "predictive_analytics",
                  "predictive_analytics.historic_clv",
                  "predictive_analytics.predicted_clv",
                  "predictive_analytics.total_clv",
                  "predictive_analytics.historic_number_of_orders",
                  "predictive_analytics.predicted_number_of_orders",
                  "predictive_analytics.average_days_between_orders",
                  "predictive_analytics.average_order_value",
                  "predictive_analytics.churn_probability",
                  "predictive_analytics.expected_date_of_next_order"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 20. Min: 1. Max: 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 100,
              "minimum": 1
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-operation-aliases": [
          "get_bulk_profile_import_job_profiles",
          "get_profile_bulk_import_job_profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "profiles:read"
        ],
        "x-klaviyo-subtag": "Bulk Import Profiles"
      }
    },
    "/api/profile-bulk-import-jobs/{id}/relationships/profiles": {
      "get": {
        "operationId": "get_profile_ids_for_bulk_import_profiles_job",
        "summary": "Get Profile IDs for Bulk Import Profiles Job",
        "description": "Get profile relationships for the bulk profile import job with the given ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`profiles:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 20. Min: 1. Max: 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 100,
              "minimum": 1
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileImportJobProfileRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-operation-aliases": [
          "get_bulk_profile_import_job_relationships_profiles",
          "get_profile_bulk_import_job_relationships_profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "profiles:read"
        ],
        "x-klaviyo-subtag": "Bulk Import Profiles"
      }
    },
    "/api/profile-bulk-import-jobs/{id}/import-errors": {
      "get": {
        "operationId": "get_errors_for_bulk_import_profiles_job",
        "summary": "Get Errors for Bulk Import Profiles Job",
        "description": "Get import errors for the bulk profile import job with the given ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`profiles:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[import-error]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "code",
                  "title",
                  "detail",
                  "source",
                  "source.pointer",
                  "original_payload"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 20. Min: 1. Max: 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 100,
              "minimum": 1
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetImportErrorResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-operation-aliases": [
          "get_bulk_profile_import_job_import_errors",
          "get_profile_bulk_import_job_import_errors"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "profiles:read"
        ],
        "x-klaviyo-subtag": "Bulk Import Profiles"
      }
    },
    "/api/campaign-values-reports": {
      "post": {
        "operationId": "query_campaign_values",
        "summary": "Query Campaign Values",
        "description": "Returns the requested campaign analytics values data<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `2/m`<br>Daily: `225/d`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "page_cursor",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignValuesRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCampaignValuesResponseDTO"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Reporting"
        ],
        "x-klaviyo-operation-aliases": [
          "create_campaign_value_report"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "2/m",
          "daily": "225/d"
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ]
      }
    },
    "/api/flow-values-reports": {
      "post": {
        "operationId": "query_flow_values",
        "summary": "Query Flow Values",
        "description": "Returns the requested flow analytics values data<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `2/m`<br>Daily: `225/d`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "page_cursor",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/FlowValuesRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostFlowValuesResponseDTO"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Reporting"
        ],
        "x-klaviyo-operation-aliases": [
          "create_flow_value_report"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "2/m",
          "daily": "225/d"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ]
      }
    },
    "/api/flow-series-reports": {
      "post": {
        "operationId": "query_flow_series",
        "summary": "Query Flow Series",
        "description": "Returns the requested flow analytics series data<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `2/m`<br>Daily: `225/d`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "page_cursor",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/FlowSeriesRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostFlowSeriesResponseDTO"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Reporting"
        ],
        "x-klaviyo-operation-aliases": [
          "create_flow_sery_report"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "2/m",
          "daily": "225/d"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ]
      }
    },
    "/api/form-values-reports": {
      "post": {
        "operationId": "query_form_values",
        "summary": "Query Form Values",
        "description": "Returns the requested form analytics values data.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `2/m`<br>Daily: `225/d`\n\n**Scopes:**\n`forms:read`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/FormValuesRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostFormValuesResponseDTO"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Reporting"
        ],
        "x-klaviyo-operation-aliases": [
          "create_form_value_report"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "2/m",
          "daily": "225/d"
        },
        "x-klaviyo-scopes": [
          "forms:read"
        ]
      }
    },
    "/api/form-series-reports": {
      "post": {
        "operationId": "query_form_series",
        "summary": "Query Form Series",
        "description": "Returns the requested form analytics series data.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `2/m`<br>Daily: `225/d`\n\n**Scopes:**\n`forms:read`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/FormSeriesRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostFormSeriesResponseDTO"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Reporting"
        ],
        "x-klaviyo-operation-aliases": [
          "create_form_sery_report"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "2/m",
          "daily": "225/d"
        },
        "x-klaviyo-scopes": [
          "forms:read"
        ]
      }
    },
    "/api/segment-values-reports": {
      "post": {
        "operationId": "query_segment_values",
        "summary": "Query Segment Values",
        "description": "Returns the requested segment analytics values data.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `2/m`<br>Daily: `225/d`\n\n**Scopes:**\n`segments:read`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/SegmentValuesRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostSegmentValuesResponseDTO"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Reporting"
        ],
        "x-klaviyo-operation-aliases": [
          "create_segment_value_report"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "2/m",
          "daily": "225/d"
        },
        "x-klaviyo-scopes": [
          "segments:read"
        ]
      }
    },
    "/api/segment-series-reports": {
      "post": {
        "operationId": "query_segment_series",
        "summary": "Query Segment Series",
        "description": "Returns the requested segment analytics series data.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `2/m`<br>Daily: `225/d`\n\n**Scopes:**\n`segments:read`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/SegmentSeriesRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostSegmentSeriesResponseDTO"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Reporting"
        ],
        "x-klaviyo-operation-aliases": [
          "create_segment_sery_report"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "2/m",
          "daily": "225/d"
        },
        "x-klaviyo-scopes": [
          "segments:read"
        ]
      }
    },
    "/api/reviews": {
      "get": {
        "operationId": "get_reviews",
        "summary": "Get Reviews",
        "description": "Get all reviews.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`reviews:read`",
        "parameters": [
          {
            "name": "fields[event]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "timestamp",
                  "event_properties",
                  "datetime",
                  "uuid"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[review]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "status",
                  "verified",
                  "review_type",
                  "created",
                  "updated",
                  "images",
                  "product",
                  "product.url",
                  "product.name",
                  "product.image_url",
                  "rating",
                  "author",
                  "content",
                  "title",
                  "smart_quote",
                  "public_reply",
                  "public_reply.content",
                  "public_reply.author",
                  "public_reply.updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`created`: `greater-or-equal`, `less-or-equal`<br>`rating`: `any`, `equals`, `greater-or-equal`, `less-or-equal`<br>`id`: `any`, `equals`<br>`item.id`: `any`, `equals`<br>`content`: `contains`<br>`status`: `equals`<br>`review_type`: `equals`<br>`verified`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "events"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 20. Min: 1. Max: 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 100,
              "minimum": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created",
                "rating",
                "-rating",
                "updated",
                "-updated"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetReviewResponseDTO20240715CollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Reviews"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "reviews:read"
        ]
      }
    },
    "/api/reviews/{id}": {
      "get": {
        "operationId": "get_review",
        "summary": "Get Review",
        "description": "Get the review with the given ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`reviews:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the review",
            "required": true,
            "schema": {
              "description": "The ID of the review",
              "type": "string",
              "example": "2134228"
            }
          },
          {
            "name": "fields[event]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "timestamp",
                  "event_properties",
                  "datetime",
                  "uuid"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[review]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "status",
                  "verified",
                  "review_type",
                  "created",
                  "updated",
                  "images",
                  "product",
                  "product.url",
                  "product.name",
                  "product.image_url",
                  "rating",
                  "author",
                  "content",
                  "title",
                  "smart_quote",
                  "public_reply",
                  "public_reply.content",
                  "public_reply.author",
                  "public_reply.updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "events"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetReviewResponseDTO20240715CompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Reviews"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "reviews:read"
        ]
      }
    },
    "/api/segments": {
      "get": {
        "operationId": "get_segments",
        "summary": "Get Segments",
        "description": "Get all segments in an account.\n\nFilter to request a subset of all segments. Segments can be filtered by `name`, `created`, and `updated` fields.\n\nReturns a maximum of 10 results per page.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`segments:read`",
        "parameters": [
          {
            "name": "fields[flow]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "created",
                  "updated",
                  "trigger_type"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[segment]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "definition",
                  "definition.condition_groups",
                  "created",
                  "updated",
                  "is_active",
                  "is_processing",
                  "is_starred"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[tag]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `any`, `equals`<br>`id`: `any`, `equals`<br>`created`: `greater-than`<br>`updated`: `greater-than`<br>`is_active`: `any`, `equals`<br>`is_starred`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "flow-triggers",
                  "tags"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created",
                "id",
                "-id",
                "name",
                "-name",
                "updated",
                "-updated"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSegmentListResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Segments"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "segments:read"
        ]
      },
      "post": {
        "operationId": "create_segment",
        "summary": "Create Segment",
        "description": "Create a segment.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`<br>Daily: `100/d`\n\n**Scopes:**\n`segments:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/SegmentCreateQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostSegmentCreateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Segments"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "15/m",
          "daily": "100/d"
        },
        "x-klaviyo-scopes": [
          "segments:write"
        ]
      }
    },
    "/api/segments/{id}": {
      "get": {
        "operationId": "get_segment",
        "summary": "Get Segment",
        "description": "Get a segment with the given segment ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`<br><br>Rate limits when using the `additional-fields[segment]=profile_count` parameter in your API request:<br>Burst: `1/s`<br>Steady: `15/m`<br><br>To learn more about how the `additional-fields` parameter impacts rate limits, check out our [Rate limits, status codes, and errors](https://developers.klaviyo.com/en/v2024-10-15/docs/rate_limits_and_error_handling) guide.\n\n**Scopes:**\n`segments:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additional-fields[segment]",
            "in": "query",
            "description": "Request additional fields not included by default in the response. Supported values: 'profile_count'",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "profile_count"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[flow]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "created",
                  "updated",
                  "trigger_type"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[segment]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "definition",
                  "definition.condition_groups",
                  "created",
                  "updated",
                  "is_active",
                  "is_processing",
                  "is_starred",
                  "profile_count"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[tag]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "flow-triggers",
                  "tags"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSegmentRetrieveResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Segments"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "segments:read"
        ]
      },
      "patch": {
        "operationId": "update_segment",
        "summary": "Update Segment",
        "description": "Update a segment with the given segment ID.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`<br>Daily: `100/d`\n\n**Scopes:**\n`segments:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/SegmentPartialUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchSegmentPartialUpdateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Segments"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "15/m",
          "daily": "100/d"
        },
        "x-klaviyo-scopes": [
          "segments:write"
        ]
      },
      "delete": {
        "operationId": "delete_segment",
        "summary": "Delete Segment",
        "description": "Delete a segment with the given segment ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`segments:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Segments"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "segments:write"
        ]
      }
    },
    "/api/segments/{id}/relationships/tags": {
      "get": {
        "operationId": "get_tag_ids_for_segment",
        "summary": "Get Tag IDs for Segment",
        "description": "If `related_resource` is `tags`, returns the tag IDs of all tags associated with the given segment ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`segments:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSegmentTagRelationshipListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Segments"
        ],
        "x-klaviyo-operation-aliases": [
          "get_segment_relationships_tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "segments:read",
          "tags:read"
        ]
      }
    },
    "/api/segments/{id}/tags": {
      "get": {
        "operationId": "get_tags_for_segment",
        "summary": "Get Tags for Segment",
        "description": "Return all tags associated with the given segment ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`segments:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[tag]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Segments"
        ],
        "x-klaviyo-operation-aliases": [
          "get_segment_tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "segments:read",
          "tags:read"
        ]
      }
    },
    "/api/segments/{id}/relationships/profiles": {
      "get": {
        "operationId": "get_profile_ids_for_segment",
        "summary": "Get Profile IDs for Segment",
        "description": "Get all profile membership [relationships](https://developers.klaviyo.com/en/reference/api_overview#relationships) for the given segment ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`profiles:read`\n`segments:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Primary key that uniquely identifies this segment. Generated by Klaviyo.",
            "required": true,
            "schema": {
              "description": "Primary key that uniquely identifies this segment. Generated by Klaviyo.",
              "type": "string",
              "example": "Y6nRLr"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`email`: `any`, `equals`<br>`phone_number`: `any`, `equals`<br>`push_token`: `any`, `equals`<br>`_kx`: `equals`<br>`joined_group_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 20. Min: 1. Max: 1000.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 1000,
              "minimum": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "joined_group_at",
                "-joined_group_at"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSegmentRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Segments"
        ],
        "x-klaviyo-operation-aliases": [
          "get_segment_relationships_profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "profiles:read",
          "segments:read"
        ]
      }
    },
    "/api/segments/{id}/profiles": {
      "get": {
        "operationId": "get_profiles_for_segment",
        "summary": "Get Profiles for Segment",
        "description": "Get all profiles within a segment with the given segment ID.\n\nFilter to request a subset of all profiles. Profiles can be filtered by `email`, `phone_number`, `push_token`, and `joined_group_at` fields. Profiles can be sorted by the following fields, in ascending and descending order: `joined_group_at`<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`profiles:read`\n`segments:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additional-fields[profile]",
            "in": "query",
            "description": "Request additional fields not included by default in the response. Supported values: 'subscriptions', 'predictive_analytics'",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscriptions",
                  "predictive_analytics"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[profile]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "locale",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "location.ip",
                  "properties",
                  "joined_group_at",
                  "subscriptions",
                  "subscriptions.email",
                  "subscriptions.email.marketing",
                  "subscriptions.email.marketing.can_receive_email_marketing",
                  "subscriptions.email.marketing.consent",
                  "subscriptions.email.marketing.consent_timestamp",
                  "subscriptions.email.marketing.last_updated",
                  "subscriptions.email.marketing.method",
                  "subscriptions.email.marketing.method_detail",
                  "subscriptions.email.marketing.custom_method_detail",
                  "subscriptions.email.marketing.double_optin",
                  "subscriptions.email.marketing.suppression",
                  "subscriptions.email.marketing.list_suppressions",
                  "subscriptions.sms",
                  "subscriptions.sms.marketing",
                  "subscriptions.sms.marketing.can_receive_sms_marketing",
                  "subscriptions.sms.marketing.consent",
                  "subscriptions.sms.marketing.consent_timestamp",
                  "subscriptions.sms.marketing.method",
                  "subscriptions.sms.marketing.method_detail",
                  "subscriptions.sms.marketing.last_updated",
                  "subscriptions.sms.transactional",
                  "subscriptions.sms.transactional.can_receive_sms_transactional",
                  "subscriptions.sms.transactional.consent",
                  "subscriptions.sms.transactional.consent_timestamp",
                  "subscriptions.sms.transactional.method",
                  "subscriptions.sms.transactional.method_detail",
                  "subscriptions.sms.transactional.last_updated",
                  "subscriptions.mobile_push",
                  "subscriptions.mobile_push.marketing",
                  "subscriptions.mobile_push.marketing.can_receive_push_marketing",
                  "subscriptions.mobile_push.marketing.consent",
                  "subscriptions.mobile_push.marketing.consent_timestamp",
                  "predictive_analytics",
                  "predictive_analytics.historic_clv",
                  "predictive_analytics.predicted_clv",
                  "predictive_analytics.total_clv",
                  "predictive_analytics.historic_number_of_orders",
                  "predictive_analytics.predicted_number_of_orders",
                  "predictive_analytics.average_days_between_orders",
                  "predictive_analytics.average_order_value",
                  "predictive_analytics.churn_probability",
                  "predictive_analytics.expected_date_of_next_order"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`email`: `any`, `equals`<br>`phone_number`: `any`, `equals`<br>`push_token`: `any`, `equals`<br>`_kx`: `equals`<br>`joined_group_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 20. Min: 1. Max: 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 100,
              "minimum": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "joined_group_at",
                "-joined_group_at"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSegmentMemberResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Segments"
        ],
        "x-klaviyo-operation-aliases": [
          "get_segment_profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "profiles:read",
          "segments:read"
        ]
      }
    },
    "/api/segments/{id}/relationships/flow-triggers": {
      "get": {
        "operationId": "get_segment_relationships_flow_triggers",
        "summary": "Get Segment Relationships Flow Triggers",
        "description": "Get all flow [relationships](https://developers.klaviyo.com/en/reference/api_overview#relationships) where the given segment is being used as the trigger.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`\n`segments:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Primary key that uniquely identifies this segment. Generated by Klaviyo.",
            "required": true,
            "schema": {
              "description": "Primary key that uniquely identifies this segment. Generated by Klaviyo.",
              "type": "string",
              "example": "Y6nRLr"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSegmentFlowTriggersRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Segments"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read",
          "segments:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/segments/{id}/flow-triggers": {
      "get": {
        "operationId": "get_segment_flow_triggers",
        "summary": "Get Segment Flow Triggers",
        "description": "Get all flows where the given segment ID is being used as the trigger.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`\n`segments:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Primary key that uniquely identifies this segment. Generated by Klaviyo.",
            "required": true,
            "schema": {
              "description": "Primary key that uniquely identifies this segment. Generated by Klaviyo.",
              "type": "string",
              "example": "Y6nRLr"
            }
          },
          {
            "name": "fields[flow]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "created",
                  "updated",
                  "trigger_type"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Segments"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read",
          "segments:read"
        ]
      }
    },
    "/api/tags": {
      "get": {
        "operationId": "get_tags",
        "summary": "Get Tags",
        "description": "List all tags in an account.\n\nTags can be filtered by `name`, and sorted by `name` or `id` in ascending or descending order.\n\nReturns a maximum of 50 tags per request, which can be paginated with\n[cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
        "parameters": [
          {
            "name": "fields[tag-group]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "exclusive",
                  "default"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[tag]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "tag-group"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "-id",
                "name",
                "-name"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "tags:read"
        ],
        "x-klaviyo-subtag": "Tags"
      },
      "post": {
        "operationId": "create_tag",
        "summary": "Create Tag",
        "description": "Create a tag. An account cannot have more than **500** unique tags.\n\nA tag belongs to a single tag group. If the `tag_group_id` is not specified,\nthe tag is added to the account's default tag group.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`\n`tags:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagCreateQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostTagResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "tags:read",
          "tags:write"
        ],
        "x-klaviyo-subtag": "Tags"
      }
    },
    "/api/tags/{id}": {
      "get": {
        "operationId": "get_tag",
        "summary": "Get Tag",
        "description": "Retrieve the tag with the given tag ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Tag ID",
            "required": true,
            "schema": {
              "description": "The Tag ID",
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
            }
          },
          {
            "name": "fields[tag-group]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "exclusive",
                  "default"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[tag]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "tag-group"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "tags:read"
        ],
        "x-klaviyo-subtag": "Tags"
      },
      "patch": {
        "operationId": "update_tag",
        "summary": "Update Tag",
        "description": "Update the tag with the given tag ID.\n\nOnly a tag's `name` can be changed. A tag cannot be moved from one tag group to another.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Tag ID",
            "required": true,
            "schema": {
              "description": "The Tag ID",
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "tags:read",
          "tags:write"
        ],
        "x-klaviyo-subtag": "Tags"
      },
      "delete": {
        "operationId": "delete_tag",
        "summary": "Delete Tag",
        "description": "Delete the tag with the given tag ID. Any associations between the tag and other resources will also be removed.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Tag ID",
            "required": true,
            "schema": {
              "description": "The Tag ID",
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "tags:read",
          "tags:write"
        ],
        "x-klaviyo-subtag": "Tags"
      }
    },
    "/api/tag-groups": {
      "get": {
        "operationId": "get_tag_groups",
        "summary": "Get Tag Groups",
        "description": "List all tag groups in an account. Every account has one default tag group.\n\nTag groups can be filtered by `name`, `exclusive`, and `default`, and sorted by `name` or `id` in ascending or descending order.\n\nReturns a maximum of 25 tag groups per request, which can be paginated with\n[cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
        "parameters": [
          {
            "name": "fields[tag-group]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "exclusive",
                  "default"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`<br>`exclusive`: `equals`<br>`default`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "-id",
                "name",
                "-name"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagGroupResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "tags:read"
        ],
        "x-klaviyo-subtag": "Tag Groups"
      },
      "post": {
        "operationId": "create_tag_group",
        "summary": "Create Tag Group",
        "description": "Create a tag group. An account cannot have more than **50** unique tag groups.\n\nIf `exclusive` is not specified `true` or `false`, the tag group defaults to non-exclusive.\n\nIf a tag group is non-exclusive, any given related resource (campaign, flow, etc.)\ncan be linked to multiple tags from that tag group.\nIf a tag group is exclusive, any given related resource can only be linked to one tag from that tag group.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`\n`tags:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagGroupCreateQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostTagGroupResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "tags:read",
          "tags:write"
        ],
        "x-klaviyo-subtag": "Tag Groups"
      }
    },
    "/api/tag-groups/{id}": {
      "get": {
        "operationId": "get_tag_group",
        "summary": "Get Tag Group",
        "description": "Retrieve the tag group with the given tag group ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Tag Group ID",
            "required": true,
            "schema": {
              "description": "The Tag Group ID",
              "type": "string",
              "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
            }
          },
          {
            "name": "fields[tag-group]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "exclusive",
                  "default"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagGroupResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "tags:read"
        ],
        "x-klaviyo-subtag": "Tag Groups"
      },
      "patch": {
        "operationId": "update_tag_group",
        "summary": "Update Tag Group",
        "description": "Update the tag group with the given tag group ID.\n\nOnly a tag group's `name` can be changed. A tag group's `exclusive` or `default` value cannot be changed.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Tag Group ID",
            "required": true,
            "schema": {
              "description": "The Tag Group ID",
              "type": "string",
              "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagGroupUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchTagGroupResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "tags:read",
          "tags:write"
        ],
        "x-klaviyo-subtag": "Tag Groups"
      },
      "delete": {
        "operationId": "delete_tag_group",
        "summary": "Delete Tag Group",
        "description": "Delete the tag group with the given tag group ID.\n\nAny tags inside that tag group, and any associations between those tags and other resources, will also be removed. The default tag group cannot be deleted.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Tag Group ID",
            "required": true,
            "schema": {
              "description": "The Tag Group ID",
              "type": "string",
              "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTagGroupResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "tags:read",
          "tags:write"
        ],
        "x-klaviyo-subtag": "Tag Groups"
      }
    },
    "/api/tags/{id}/relationships/flows": {
      "get": {
        "operationId": "get_flow_ids_for_tag",
        "summary": "Get Flow IDs for Tag",
        "description": "Returns the IDs of all flows associated with the given tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Tag ID",
            "required": true,
            "schema": {
              "description": "The Tag ID",
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagFlowRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-operation-aliases": [
          "get_tag_relationships_flows"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read",
          "tags:read"
        ]
      },
      "post": {
        "operationId": "tag_flows",
        "summary": "Tag Flows",
        "description": "Associate a tag with one or more flows. Any flow cannot be associated with more than **100** tags.\n\n\nUse the request body to pass in the ID(s) of the flow(s) that will be associated with the tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:write`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Tag ID",
            "required": true,
            "schema": {
              "description": "The Tag ID",
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagFlowOp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-operation-aliases": [
          "create_tag_relationships_flows",
          "create_tag_relationships_flow"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:write",
          "tags:write"
        ]
      },
      "delete": {
        "operationId": "remove_tag_from_flows",
        "summary": "Remove Tag from Flows",
        "description": "Remove a tag's association with one or more flows.\n\n\nUse the request body to pass in the ID(s) of the flows(s) whose association with the tag\nwill be removed.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:write`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Tag ID",
            "required": true,
            "schema": {
              "description": "The Tag ID",
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagFlowOp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-operation-aliases": [
          "delete_tag_relationships_flows"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:write",
          "tags:write"
        ]
      }
    },
    "/api/tags/{id}/relationships/campaigns": {
      "get": {
        "operationId": "get_campaign_ids_for_tag",
        "summary": "Get Campaign IDs for Tag",
        "description": "Returns the IDs of all campaigns associated with the given tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`campaigns:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Tag ID",
            "required": true,
            "schema": {
              "description": "The Tag ID",
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagCampaignRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-operation-aliases": [
          "get_tag_relationships_campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:read",
          "tags:read"
        ]
      },
      "post": {
        "operationId": "tag_campaigns",
        "summary": "Tag Campaigns",
        "description": "Associate a tag with one or more campaigns. Any campaign cannot be associated with more than **100** tags.\n\n\nUse the request body to pass in the ID(s) of the campaign(s) that will be associated with the tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`campaigns:write`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Tag ID",
            "required": true,
            "schema": {
              "description": "The Tag ID",
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagCampaignOp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-operation-aliases": [
          "create_tag_relationships_campaigns",
          "create_tag_relationships_campaign"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:write",
          "tags:write"
        ]
      },
      "delete": {
        "operationId": "remove_tag_from_campaigns",
        "summary": "Remove Tag from Campaigns",
        "description": "Remove a tag's association with one or more campaigns.\n\n\nUse the request body to pass in the ID(s) of the campaign(s) whose association with the tag\nwill be removed.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`campaigns:write`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Tag ID",
            "required": true,
            "schema": {
              "description": "The Tag ID",
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagCampaignOp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-operation-aliases": [
          "delete_tag_relationships_campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:write",
          "tags:write"
        ]
      }
    },
    "/api/tags/{id}/relationships/lists": {
      "get": {
        "operationId": "get_list_ids_for_tag",
        "summary": "Get List IDs for Tag",
        "description": "Returns the IDs of all lists associated with the given tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`lists:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Tag ID",
            "required": true,
            "schema": {
              "description": "The Tag ID",
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagListRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-operation-aliases": [
          "get_tag_relationships_lists"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "lists:read",
          "tags:read"
        ]
      },
      "post": {
        "operationId": "tag_lists",
        "summary": "Tag Lists",
        "description": "Associate a tag with one or more lists. Any list cannot be associated with more than **100** tags.\n\n\nUse the request body to pass in the ID(s) of the lists(s) that will be associated with the tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`lists:write`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Tag ID",
            "required": true,
            "schema": {
              "description": "The Tag ID",
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagListOp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-operation-aliases": [
          "create_tag_relationships_lists",
          "create_tag_relationships_list"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "lists:write",
          "tags:write"
        ]
      },
      "delete": {
        "operationId": "remove_tag_from_lists",
        "summary": "Remove Tag from Lists",
        "description": "Remove a tag's association with one or more lists.\n\n\nUse the request body to pass in the ID(s) of the list(s) whose association with the tag\nwill be removed.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`lists:write`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Tag ID",
            "required": true,
            "schema": {
              "description": "The Tag ID",
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagListOp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-operation-aliases": [
          "delete_tag_relationships_lists"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "lists:write",
          "tags:write"
        ]
      }
    },
    "/api/tags/{id}/relationships/segments": {
      "get": {
        "operationId": "get_segment_ids_for_tag",
        "summary": "Get Segment IDs for Tag",
        "description": "Returns the IDs of all segments associated with the given tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`segments:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Tag ID",
            "required": true,
            "schema": {
              "description": "The Tag ID",
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagSegmentRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-operation-aliases": [
          "get_tag_relationships_segments"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "segments:read",
          "tags:read"
        ]
      },
      "post": {
        "operationId": "tag_segments",
        "summary": "Tag Segments",
        "description": "Associate a tag with one or more segments. Any segment cannot be associated with more than **100** tags.\n\n\nUse the request body to pass in the ID(s) of the segments(s) that will be associated with the tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`segments:write`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Tag ID",
            "required": true,
            "schema": {
              "description": "The Tag ID",
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagSegmentOp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-operation-aliases": [
          "create_tag_relationships_segments",
          "create_tag_relationships_segment"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "segments:write",
          "tags:write"
        ]
      },
      "delete": {
        "operationId": "remove_tag_from_segments",
        "summary": "Remove Tag from Segments",
        "description": "Remove a tag's association with one or more segments.\n\n\nUse the request body to pass in the ID(s) of the segments(s) whose association with the tag\nwill be removed.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`segments:write`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Tag ID",
            "required": true,
            "schema": {
              "description": "The Tag ID",
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagSegmentOp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-operation-aliases": [
          "delete_tag_relationships_segments"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "segments:write",
          "tags:write"
        ]
      }
    },
    "/api/tags/{id}/relationships/tag-group": {
      "get": {
        "operationId": "get_tag_group_id_for_tag",
        "summary": "Get Tag Group ID for Tag",
        "description": "Returns the id of the tag group related to the given tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Tag ID",
            "required": true,
            "schema": {
              "description": "The Tag ID",
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagTagGroupRelationshipsResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-operation-aliases": [
          "get_tag_relationships_tag_group"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "tags:read"
        ]
      }
    },
    "/api/tag-groups/{id}/relationships/tags": {
      "get": {
        "operationId": "get_tag_ids_for_tag_group",
        "summary": "Get Tag IDs for Tag Group",
        "description": "Returns the tag IDs of all tags inside the given tag group.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Tag Group ID",
            "required": true,
            "schema": {
              "description": "The Tag Group ID",
              "type": "string",
              "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagGroupTagRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-operation-aliases": [
          "get_tag_group_relationships_tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "tags:read"
        ],
        "x-klaviyo-subtag": "Tag Groups"
      }
    },
    "/api/tags/{id}/tag-group": {
      "get": {
        "operationId": "get_tag_group_for_tag",
        "summary": "Get Tag Group for Tag",
        "description": "Returns the tag group resource for a given tag ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Tag ID",
            "required": true,
            "schema": {
              "description": "The Tag ID",
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
            }
          },
          {
            "name": "fields[tag-group]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "exclusive",
                  "default"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagGroupResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-operation-aliases": [
          "get_tag_tag_group"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "tags:read"
        ],
        "x-klaviyo-subtag": "Tags"
      }
    },
    "/api/tag-groups/{id}/tags": {
      "get": {
        "operationId": "get_tags_for_tag_group",
        "summary": "Get Tags for Tag Group",
        "description": "Return the tags for a given tag group ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Tag Group ID",
            "required": true,
            "schema": {
              "description": "The Tag Group ID",
              "type": "string",
              "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
            }
          },
          {
            "name": "fields[tag]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-operation-aliases": [
          "get_tag_group_tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "tags:read"
        ],
        "x-klaviyo-subtag": "Tag Groups"
      }
    },
    "/api/templates": {
      "get": {
        "operationId": "get_templates",
        "summary": "Get Templates",
        "description": "Get all templates in an account.\n\nFilter to request a subset of all templates. Templates can be sorted by the following fields, in ascending and descending order: `id`, `name`, `created`, `updated`\n\nReturns a maximum of 10 results per page.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`templates:read`",
        "parameters": [
          {
            "name": "fields[template]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "editor_type",
                  "html",
                  "text",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`, `equals`<br>`name`: `any`, `equals`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created",
                "id",
                "-id",
                "name",
                "-name",
                "updated",
                "-updated"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTemplateResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Templates"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "templates:read"
        ]
      },
      "post": {
        "operationId": "create_template",
        "summary": "Create Template",
        "description": "Create a new custom HTML template.\n\nIf there are 1,000 or more templates in an account, creation will fail as there is a limit of 1,000 templates\nthat can be created via the API.\n\nRequest specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/reference/api_overview#sparse-fieldsets).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`templates:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateCreateQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostTemplateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Templates"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "templates:write"
        ]
      }
    },
    "/api/templates/{id}": {
      "get": {
        "operationId": "get_template",
        "summary": "Get Template",
        "description": "Get a template with the given template ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`templates:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of template",
            "required": true,
            "schema": {
              "description": "The ID of template",
              "type": "string"
            }
          },
          {
            "name": "fields[template]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "editor_type",
                  "html",
                  "text",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTemplateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Templates"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "templates:read"
        ]
      },
      "patch": {
        "operationId": "update_template",
        "summary": "Update Template",
        "description": "Update a template with the given template ID. Does not currently update drag & drop templates.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`templates:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of template",
            "required": true,
            "schema": {
              "description": "The ID of template",
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchTemplateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Templates"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "templates:write"
        ]
      },
      "delete": {
        "operationId": "delete_template",
        "summary": "Delete Template",
        "description": "Delete a template with the given template ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`templates:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of template",
            "required": true,
            "schema": {
              "description": "The ID of template",
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Templates"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "templates:write"
        ]
      }
    },
    "/api/template-universal-content": {
      "get": {
        "operationId": "get_all_universal_content",
        "summary": "Get All Universal Content",
        "description": "Get all universal content in an account.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`templates:read`",
        "parameters": [
          {
            "name": "fields[template-universal-content]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "definition",
                  "definition.content_type",
                  "definition.type",
                  "definition.data",
                  "definition.data.content",
                  "definition.data.display_options",
                  "definition.data.display_options.show_on",
                  "definition.data.display_options.visible_check",
                  "definition.data.display_options.content_repeat",
                  "definition.data.display_options.content_repeat.repeat_for",
                  "definition.data.display_options.content_repeat.item_alias",
                  "definition.data.styles",
                  "definition.data.styles.block_background_color",
                  "definition.data.styles.block_border_color",
                  "definition.data.styles.block_border_style",
                  "definition.data.styles.block_border_width",
                  "definition.data.styles.block_padding_bottom",
                  "definition.data.styles.block_padding_left",
                  "definition.data.styles.block_padding_right",
                  "definition.data.styles.block_padding_top",
                  "definition.data.styles.color",
                  "definition.data.styles.extra_css_class",
                  "definition.data.styles.font_family",
                  "definition.data.styles.font_size",
                  "definition.data.styles.font_style",
                  "definition.data.styles.font_weight",
                  "definition.data.styles.inner_padding_bottom",
                  "definition.data.styles.inner_padding_left",
                  "definition.data.styles.inner_padding_right",
                  "definition.data.styles.inner_padding_top",
                  "definition.data.styles.mobile_stretch_content",
                  "definition.data.styles.background_color",
                  "definition.data.styles.letter_spacing",
                  "definition.data.styles.line_height",
                  "definition.data.styles.text_align",
                  "definition.data.styles.text_decoration",
                  "definition.data.styles.text_table_layout",
                  "created",
                  "updated",
                  "screenshot_status",
                  "screenshot_url"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`, `equals`<br>`name`: `any`, `equals`<br>`created`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`definition.content_type`: `equals`<br>`definition.type`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 20. Min: 1. Max: 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 100,
              "minimum": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created",
                "id",
                "-id",
                "name",
                "-name",
                "updated",
                "-updated"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUniversalContentResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Templates"
        ],
        "x-klaviyo-operation-aliases": [
          "get_template_universal_content"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "templates:read"
        ],
        "x-klaviyo-subtag": "Universal Content"
      },
      "post": {
        "operationId": "create_universal_content",
        "summary": "Create Universal Content",
        "description": "Create universal content. Only text blocks, which can include text or HTML, are supported at this time.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`templates:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "description": "Create a template universal content",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UniversalContentCreateQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostUniversalContentResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Templates"
        ],
        "x-klaviyo-operation-aliases": [
          "create_template_universal_content"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "templates:write"
        ],
        "x-klaviyo-subtag": "Universal Content"
      }
    },
    "/api/template-universal-content/{id}": {
      "get": {
        "operationId": "get_universal_content",
        "summary": "Get Universal Content",
        "description": "Get the universal content with the given ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`templates:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the universal content",
            "required": true,
            "schema": {
              "description": "The ID of the universal content",
              "type": "string",
              "example": "01HWWWKAW4RHXQJCMW4R2KRYR4"
            }
          },
          {
            "name": "fields[template-universal-content]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "definition",
                  "definition.content_type",
                  "definition.type",
                  "definition.data",
                  "definition.data.content",
                  "definition.data.display_options",
                  "definition.data.display_options.show_on",
                  "definition.data.display_options.visible_check",
                  "definition.data.display_options.content_repeat",
                  "definition.data.display_options.content_repeat.repeat_for",
                  "definition.data.display_options.content_repeat.item_alias",
                  "definition.data.styles",
                  "definition.data.styles.block_background_color",
                  "definition.data.styles.block_border_color",
                  "definition.data.styles.block_border_style",
                  "definition.data.styles.block_border_width",
                  "definition.data.styles.block_padding_bottom",
                  "definition.data.styles.block_padding_left",
                  "definition.data.styles.block_padding_right",
                  "definition.data.styles.block_padding_top",
                  "definition.data.styles.color",
                  "definition.data.styles.extra_css_class",
                  "definition.data.styles.font_family",
                  "definition.data.styles.font_size",
                  "definition.data.styles.font_style",
                  "definition.data.styles.font_weight",
                  "definition.data.styles.inner_padding_bottom",
                  "definition.data.styles.inner_padding_left",
                  "definition.data.styles.inner_padding_right",
                  "definition.data.styles.inner_padding_top",
                  "definition.data.styles.mobile_stretch_content",
                  "definition.data.styles.background_color",
                  "definition.data.styles.letter_spacing",
                  "definition.data.styles.line_height",
                  "definition.data.styles.text_align",
                  "definition.data.styles.text_decoration",
                  "definition.data.styles.text_table_layout",
                  "created",
                  "updated",
                  "screenshot_status",
                  "screenshot_url"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUniversalContentResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Templates"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "templates:read"
        ],
        "x-klaviyo-subtag": "Universal Content"
      },
      "patch": {
        "operationId": "update_universal_content",
        "summary": "Update Universal Content",
        "description": "Update universal content. The `definition` field can only be updated for text blocks at this time.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`templates:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the template universal content",
            "required": true,
            "schema": {
              "description": "The ID of the template universal content",
              "type": "string",
              "example": "01HWWWKAW4RHXQJCMW4R2KRYR4"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "description": "Update a universal content by ID",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UniversalContentPartialUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchUniversalContentResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Templates"
        ],
        "x-klaviyo-operation-aliases": [
          "update_template_universal_content"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "templates:write"
        ],
        "x-klaviyo-subtag": "Universal Content"
      },
      "delete": {
        "operationId": "delete_universal_content",
        "summary": "Delete Universal Content",
        "description": "Delete the universal content with the given ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`templates:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the template universal content",
            "required": true,
            "schema": {
              "description": "The ID of the template universal content",
              "type": "string",
              "example": "01HWWWKAW4RHXQJCMW4R2KRYR4"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Templates"
        ],
        "x-klaviyo-operation-aliases": [
          "delete_template_universal_content"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "templates:write"
        ],
        "x-klaviyo-subtag": "Universal Content"
      }
    },
    "/api/template-render": {
      "post": {
        "operationId": "render_template",
        "summary": "Render Template",
        "description": "Render a template with the given template ID and context attribute. Returns the HTML and plain text versions of the email template.\n\n**Request body parameters** (nested under `attributes`):\n\n* `return_fields`: Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/reference/api_overview#sparse-fieldsets).\n\n* `context`: This is the context your email template will be rendered with. You must pass in a `context` object as a JSON object.\n\nEmail templates are rendered with contexts in a similar manner to Django templates. Nested template variables can be referenced via dot notation. Template variables without corresponding `context` values are treated as `FALSE` and output nothing.\n\nEx. `{ \"name\" : \"George Washington\", \"state\" : \"VA\" }`<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`templates:read`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateRenderQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostTemplateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Templates"
        ],
        "x-klaviyo-operation-aliases": [
          "create_template_render"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "templates:read"
        ]
      }
    },
    "/api/template-clone": {
      "post": {
        "operationId": "clone_template",
        "summary": "Clone Template",
        "description": "Create a clone of a template with the given template ID.\n\nIf there are 1,000 or more templates in an account, cloning will fail as there is a limit of 1,000 templates\nthat can be created via the API.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`templates:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateCloneQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostTemplateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Templates"
        ],
        "x-klaviyo-operation-aliases": [
          "create_template_clone"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "templates:write"
        ]
      }
    },
    "/api/tracking-settings": {
      "get": {
        "operationId": "get_tracking_settings",
        "summary": "Get Tracking Settings",
        "description": "Get all tracking settings in an account. Returns an array with a single tracking setting.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`tracking-settings:read`",
        "parameters": [
          {
            "name": "fields[tracking-setting]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "auto_add_parameters",
                  "utm_source",
                  "utm_source.flow",
                  "utm_source.flow.type",
                  "utm_source.flow.value",
                  "utm_source.campaign",
                  "utm_source.campaign.type",
                  "utm_source.campaign.value",
                  "utm_medium",
                  "utm_medium.flow",
                  "utm_medium.flow.type",
                  "utm_medium.flow.value",
                  "utm_medium.campaign",
                  "utm_medium.campaign.type",
                  "utm_medium.campaign.value",
                  "utm_campaign",
                  "utm_campaign.flow",
                  "utm_campaign.flow.type",
                  "utm_campaign.flow.value",
                  "utm_campaign.campaign",
                  "utm_campaign.campaign.type",
                  "utm_campaign.campaign.value",
                  "utm_id",
                  "utm_id.flow",
                  "utm_id.flow.type",
                  "utm_id.flow.value",
                  "utm_id.campaign",
                  "utm_id.campaign.type",
                  "utm_id.campaign.value",
                  "utm_term",
                  "utm_term.flow",
                  "utm_term.flow.type",
                  "utm_term.flow.value",
                  "utm_term.campaign",
                  "utm_term.campaign.type",
                  "utm_term.campaign.value",
                  "custom_parameters"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 1. Min: 1. Max: 1.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "maximum": 1,
              "minimum": 1
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTrackingSettingResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tracking Settings"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "tracking-settings:read"
        ]
      }
    },
    "/api/tracking-settings/{id}": {
      "get": {
        "operationId": "get_tracking_setting",
        "summary": "Get Tracking Setting",
        "description": "Get the tracking setting with the given account ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`tracking-settings:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the tracking setting (account ID).",
            "required": true,
            "schema": {
              "description": "The id of the tracking setting (account ID).",
              "type": "string",
              "example": "abCdEf"
            }
          },
          {
            "name": "fields[tracking-setting]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "auto_add_parameters",
                  "utm_source",
                  "utm_source.flow",
                  "utm_source.flow.type",
                  "utm_source.flow.value",
                  "utm_source.campaign",
                  "utm_source.campaign.type",
                  "utm_source.campaign.value",
                  "utm_medium",
                  "utm_medium.flow",
                  "utm_medium.flow.type",
                  "utm_medium.flow.value",
                  "utm_medium.campaign",
                  "utm_medium.campaign.type",
                  "utm_medium.campaign.value",
                  "utm_campaign",
                  "utm_campaign.flow",
                  "utm_campaign.flow.type",
                  "utm_campaign.flow.value",
                  "utm_campaign.campaign",
                  "utm_campaign.campaign.type",
                  "utm_campaign.campaign.value",
                  "utm_id",
                  "utm_id.flow",
                  "utm_id.flow.type",
                  "utm_id.flow.value",
                  "utm_id.campaign",
                  "utm_id.campaign.type",
                  "utm_id.campaign.value",
                  "utm_term",
                  "utm_term.flow",
                  "utm_term.flow.type",
                  "utm_term.flow.value",
                  "utm_term.campaign",
                  "utm_term.campaign.type",
                  "utm_term.campaign.value",
                  "custom_parameters"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTrackingSettingResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tracking Settings"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "tracking-settings:read"
        ]
      },
      "patch": {
        "operationId": "update_tracking_setting",
        "summary": "Update Tracking Setting",
        "description": "Update the tracking setting with the given account ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`tracking-settings:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the tracking setting (account ID).",
            "required": true,
            "schema": {
              "description": "The id of the tracking setting (account ID).",
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "description": "DTO for updating tracking settings",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TrackingSettingPartialUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchTrackingSettingResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tracking Settings"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "tracking-settings:write"
        ]
      }
    },
    "/api/webhooks": {
      "get": {
        "operationId": "get_webhooks",
        "summary": "Get Webhooks",
        "description": "Get all webhooks in an account.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`\n\n**Scopes:**\n`webhooks:read`",
        "parameters": [
          {
            "name": "fields[webhook]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "description",
                  "endpoint_url",
                  "enabled",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "webhook-topics"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWebhookResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Webhooks"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "15/m"
        },
        "x-klaviyo-scopes": [
          "webhooks:read"
        ]
      },
      "post": {
        "operationId": "create_webhook",
        "summary": "Create Webhook",
        "description": "Create a new Webhook<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`\n\n**Scopes:**\n`webhooks:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookCreateQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostWebhookResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Webhooks"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "15/m"
        },
        "x-klaviyo-scopes": [
          "webhooks:write"
        ]
      }
    },
    "/api/webhooks/{id}": {
      "get": {
        "operationId": "get_webhook",
        "summary": "Get Webhook",
        "description": "Get the webhook with the given ID.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`\n\n**Scopes:**\n`webhooks:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the webhook.",
            "required": true,
            "schema": {
              "description": "The ID of the webhook.",
              "type": "string"
            }
          },
          {
            "name": "fields[webhook]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "description",
                  "endpoint_url",
                  "enabled",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "webhook-topics"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWebhookResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Webhooks"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "15/m"
        },
        "x-klaviyo-scopes": [
          "webhooks:read"
        ]
      },
      "patch": {
        "operationId": "update_webhook",
        "summary": "Update Webhook",
        "description": "Update the webhook with the given ID.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`\n\n**Scopes:**\n`webhooks:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the webhook.",
            "required": true,
            "schema": {
              "description": "The ID of the webhook.",
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookPartialUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchWebhookResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Webhooks"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "15/m"
        },
        "x-klaviyo-scopes": [
          "webhooks:write"
        ]
      },
      "delete": {
        "operationId": "delete_webhook",
        "summary": "Delete Webhook",
        "description": "Delete a webhook with the given ID.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`\n\n**Scopes:**\n`webhooks:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the webhook.",
            "required": true,
            "schema": {
              "description": "The ID of the webhook.",
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Webhooks"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "15/m"
        },
        "x-klaviyo-scopes": [
          "webhooks:write"
        ]
      }
    },
    "/api/webhook-topics": {
      "get": {
        "operationId": "get_webhook_topics",
        "summary": "Get Webhook Topics",
        "description": "Get all webhook topics in a Klaviyo account.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`\n\n**Scopes:**\n`webhooks:read`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWebhookTopicResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Webhooks"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "15/m"
        },
        "x-klaviyo-scopes": [
          "webhooks:read"
        ]
      }
    },
    "/api/webhook-topics/{id}": {
      "get": {
        "operationId": "get_webhook_topic",
        "summary": "Get Webhook Topic",
        "description": "Get the webhook topic with the given ID.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`\n\n**Scopes:**\n`webhooks:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the webhook topic.",
            "required": true,
            "schema": {
              "description": "The ID of the webhook topic.",
              "type": "string",
              "example": "event:klaviyo.sent_sms"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWebhookTopicResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Webhooks"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "15/m"
        },
        "x-klaviyo-scopes": [
          "webhooks:read"
        ]
      }
    },
    "/client/subscriptions": {
      "post": {
        "operationId": "create_client_subscription",
        "summary": "Create Client Subscription",
        "description": "*Rate limits*:<br>Burst: `100/s`<br>Steady: `700/m`\n\n**Scopes:**\n`subscriptions:write`",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
            "required": true,
            "schema": {
              "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
              "type": "string",
              "example": "PUBLIC_API_KEY"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/OnsiteSubscriptionCreateQueryDeprecatedOct24"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success"
          }
        },
        "security": [],
        "tags": [
          "Client"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "100/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "subscriptions:write"
        ]
      }
    },
    "/client/push-tokens": {
      "post": {
        "operationId": "create_client_push_token",
        "summary": "Create or Update Client Push Token",
        "description": "Create or update a push token.\n\nThis endpoint is specifically designed to be called from our mobile SDKs ([iOS](https://github.com/klaviyo/klaviyo-swift-sdk) and [Android](https://github.com/klaviyo/klaviyo-android-sdk)) and requires a [public API key (site ID)](https://www.klaviyo.com/settings/account/api-keys). Never use a private API key with our client-side endpoints.\nYou must have push notifications enabled to use this endpoint.\n\nTo migrate push tokens from another platform to Klaviyo, please use our server-side [POST /api/push-tokens](https://developers.klaviyo.com/en/reference/create_push_token) endpoint instead.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `300/m`",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
            "required": true,
            "schema": {
              "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
              "type": "string",
              "example": "PUBLIC_API_KEY"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/PushTokenCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "security": [],
        "tags": [
          "Client"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "300/m"
        },
        "x-klaviyo-scopes": []
      }
    },
    "/client/push-token-unregister": {
      "post": {
        "operationId": "unregister_client_push_token",
        "summary": "Unregister Client Push Token",
        "description": "Unregister a push token.\n\nThis endpoint is specifically designed to be called from our mobile SDKs ([iOS](https://github.com/klaviyo/klaviyo-swift-sdk) and [Android](https://github.com/klaviyo/klaviyo-android-sdk)) and requires a [public API key (site ID)](https://www.klaviyo.com/settings/account/api-keys). Never use a private API key with our client-side endpoints.\nYou must have push notifications enabled to use this endpoint.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
            "required": true,
            "schema": {
              "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
              "type": "string",
              "example": "PUBLIC_API_KEY"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/PushTokenUnregisterQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "security": [],
        "tags": [
          "Client"
        ],
        "x-klaviyo-operation-aliases": [
          "create_client_push_token_unregister"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": []
      }
    },
    "/client/events": {
      "post": {
        "operationId": "create_client_event",
        "summary": "Create Client Event",
        "description": "Create a new event to track a profile's activity.\n\nThis endpoint is specifically designed to be called from publicly-browseable, client-side environments only and requires a [public API key (site ID)](https://www.klaviyo.com/settings/account/api-keys). Never use a private API key with our client-side endpoints.\n\nTo create events from server-side applications, please use [POST /api/events](https://developers.klaviyo.com/en/reference/create_event).\n\nNote that to update a profile's existing identifiers (e.g., email), you must use a server-side endpoint authenticated by a private API key. Attempts to do so via client-side endpoints will return a 202, however the identifier field(s) will not be updated.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`events:write`",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
            "required": true,
            "schema": {
              "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
              "type": "string",
              "example": "PUBLIC_API_KEY"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/EventCreateQueryV2"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "security": [],
        "tags": [
          "Client"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "events:write"
        ]
      }
    },
    "/client/profiles": {
      "post": {
        "operationId": "create_client_profile",
        "summary": "Create or Update Client Profile",
        "description": "Create or update properties about a profile without tracking an associated event.\n\nThis endpoint is specifically designed to be called from publicly-browseable, client-side environments only and requires a [public API key (site ID)](https://www.klaviyo.com/settings/account/api-keys). Never use a private API key with our client-side endpoints.\n\nTo create or update profiles from server-side applications, please use [POST /api/profile-import](https://developers.klaviyo.com/en/reference/create_or_update_profile).\n\nNote that to update a profile's existing identifiers (e.g., email), you must use a server-side endpoint authenticated by a private API key. Attempts to do so via client-side endpoints will return a 202, however the identifier field(s) will not be updated.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`profiles:write`",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
            "required": true,
            "schema": {
              "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
              "type": "string",
              "example": "PUBLIC_API_KEY"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/OnsiteProfileCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "security": [],
        "tags": [
          "Client"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "profiles:write"
        ]
      }
    },
    "/client/event-bulk-create": {
      "post": {
        "operationId": "bulk_create_client_events",
        "summary": "Bulk Create Client Events",
        "description": "Create new events to track a profile's activity.\n\nThis endpoint is specifically designed to be called from publicly-browseable, client-side environments only and requires a [public API key (site ID)](https://www.klaviyo.com/settings/account/api-keys). Never use a private API key with our client-side endpoints.\n\nTo create events from server-side applications, please use [POST /api/event-bulk-create-jobs](https://developers.klaviyo.com/en/reference/bulk_create_events).\n\nAccepts a maximum of `1000` events per request.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`events:write`",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
            "required": true,
            "schema": {
              "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
              "type": "string",
              "example": "PUBLIC_API_KEY"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/EventsBulkCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "security": [],
        "tags": [
          "Client"
        ],
        "x-klaviyo-operation-aliases": [
          "create_client_event_bulk_create"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "events:write"
        ]
      }
    },
    "/client/back-in-stock-subscriptions": {
      "post": {
        "operationId": "create_client_back_in_stock_subscription",
        "summary": "Create Client Back In Stock Subscription",
        "description": "Subscribe a profile to receive back in stock notifications. Check out [our Back in Stock API guide](https://developers.klaviyo.com/en/docs/how_to_set_up_custom_back_in_stock) for more details.\n\nThis endpoint is specifically designed to be called from publicly-browseable, client-side environments only and requires a [public API key (site ID)](https://www.klaviyo.com/settings/account/api-keys). Never use a private API key with our client-side endpoints.\n\nTo create back in stock subscriptions from server-side applications, please use [POST /api/back-in-stock-subscriptions](https://developers.klaviyo.com/en/reference/create_back_in_stock_subscription).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:write`\n`profiles:write`",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
            "required": true,
            "schema": {
              "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
              "type": "string",
              "example": "PUBLIC_API_KEY"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-10-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ClientBISSubscriptionCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "security": [],
        "tags": [
          "Client"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write",
          "profiles:write"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "CouponEnum": {
        "type": "string",
        "enum": [
          "coupon"
        ]
      },
      "CouponResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponEnum"
          },
          "id": {
            "description": "The internal id of a Coupon is equivalent to its external id stored within an integration.",
            "type": "string",
            "example": "10OFF"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "description": "This is the id that is stored in an integration such as Shopify or Magento.",
                "type": "string",
                "example": "10OFF"
              },
              "description": {
                "description": "A description of the coupon.",
                "type": "string",
                "example": "10% off for purchases over $50",
                "nullable": true
              }
            },
            "required": [
              "external_id"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCouponResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CouponResponseObjectResource"
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCouponResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CouponResponseObjectResource"
          }
        },
        "required": [
          "data"
        ]
      },
      "CouponCodeEnum": {
        "type": "string",
        "enum": [
          "coupon-code"
        ]
      },
      "GetCouponCodeRelationshipCouponResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CouponEnum"
              },
              "id": {
                "description": "The parent coupon ID for the given coupon code.",
                "type": "string",
                "example": "10OFF-ASD325FHK324UJDOI2M3JNES99"
              }
            },
            "required": [
              "type",
              "id"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CouponCodeResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponCodeEnum"
          },
          "id": {
            "description": "The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with.",
            "type": "string",
            "example": "10OFF-ASD325FHK324UJDOI2M3JNES99"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "unique_code": {
                "description": "This is a unique string that will be or is assigned to each customer/profile and is associated with a coupon.",
                "type": "string",
                "example": "ASD325FHK324UJDOI2M3JNES99",
                "nullable": true
              },
              "expires_at": {
                "description": "The datetime when this coupon code will expire. If not specified or set to null, it will be automatically set to 1 year.",
                "type": "string",
                "format": "date-time",
                "example": "2023-01-01T00:00:00Z",
                "nullable": true
              },
              "status": {
                "description": "The current status of the coupon code.",
                "type": "string",
                "example": "UNASSIGNED",
                "enum": [
                  "ASSIGNED_TO_PROFILE",
                  "DELETING",
                  "PROCESSING",
                  "UNASSIGNED",
                  "USED",
                  "VERSION_NOT_ACTIVE"
                ],
                "nullable": true
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCouponCodeResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CouponCodeResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "coupon": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CouponEnum"
                                },
                                "id": {
                                  "type": "string",
                                  "example": "10OFF"
                                }
                              },
                              "required": [
                                "type",
                                "id"
                              ]
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "profile": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CouponResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCouponCodeResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CouponCodeResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "coupon": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/CouponEnum"
                              },
                              "id": {
                                "type": "string",
                                "example": "10OFF"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ]
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "profile": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CouponResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCouponCodeResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CouponCodeResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "coupon": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "profile": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCouponRelationshipCouponCodesListResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CouponCodeEnum"
                },
                "id": {
                  "description": "A list of coupon code IDs that are in the given coupon.",
                  "type": "string",
                  "example": "10OFF-ASD325FHK324UJDOI2M3JNES99"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogItemEnum": {
        "type": "string",
        "enum": [
          "catalog-item"
        ]
      },
      "CatalogItemResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemEnum"
          },
          "id": {
            "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "description": "The ID of the catalog item in an external system.",
                "type": "string",
                "example": "SAMPLE-DATA-ITEM-1",
                "nullable": true
              },
              "title": {
                "description": "The title of the catalog item.",
                "type": "string",
                "example": "Ocean Blue Shirt (Sample)",
                "nullable": true
              },
              "description": {
                "description": "A description of the catalog item.",
                "type": "string",
                "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns.",
                "nullable": true
              },
              "price": {
                "description": "This field can be used to set the price on the catalog item, which is what gets displayed for the item when included in emails. For most price-update use cases, you will also want to update the `price` on any child variants, using the [Update Catalog Variant Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_variant).",
                "type": "number",
                "example": 42,
                "nullable": true
              },
              "url": {
                "description": "URL pointing to the location of the catalog item on your website.",
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "nullable": true
              },
              "image_full_url": {
                "description": "URL pointing to the location of a full image of the catalog item.",
                "type": "string",
                "example": "https://via.placeholder.com/300",
                "nullable": true
              },
              "image_thumbnail_url": {
                "description": "URL pointing to the location of an image thumbnail of the catalog item",
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "nullable": true
              },
              "images": {
                "description": "List of URLs pointing to the locations of images of the catalog item.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "https://via.placeholder.com/150"
                ],
                "nullable": true
              },
              "custom_metadata": {
                "description": "Flat JSON blob to provide custom metadata about the catalog item. May not exceed 100kb.",
                "type": "object",
                "example": {
                  "Top Pick": true
                },
                "nullable": true
              },
              "published": {
                "description": "Boolean value indicating whether the catalog item is published.",
                "type": "boolean",
                "example": true,
                "nullable": true
              },
              "created": {
                "description": "Date and time when the catalog item was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "updated": {
                "description": "Date and time when the catalog item was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCatalogItemResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogItemResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "variants": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CatalogVariantEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogVariantResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCatalogItemResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogItemResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "variants": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CatalogVariantEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogVariantResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogVariantEnum": {
        "type": "string",
        "enum": [
          "catalog-variant"
        ]
      },
      "CatalogVariantResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantEnum"
          },
          "id": {
            "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "description": "The ID of the catalog item variant in an external system.",
                "type": "string",
                "example": "SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM",
                "nullable": true
              },
              "title": {
                "description": "The title of the catalog item variant.",
                "type": "string",
                "example": "Ocean Blue Shirt (Sample) Variant Medium",
                "nullable": true
              },
              "description": {
                "description": "A description of the catalog item variant.",
                "type": "string",
                "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns.",
                "nullable": true
              },
              "sku": {
                "description": "The SKU of the catalog item variant.",
                "type": "string",
                "example": "OBS-MD",
                "nullable": true
              },
              "inventory_policy": {
                "description": "This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values:\n`1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.\n`0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.",
                "type": "integer",
                "example": 2,
                "enum": [
                  0,
                  1,
                  2
                ],
                "nullable": true
              },
              "inventory_quantity": {
                "description": "The quantity of the catalog item variant currently in stock.",
                "type": "number",
                "example": 25,
                "nullable": true
              },
              "price": {
                "description": "This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item).",
                "type": "number",
                "example": 42,
                "nullable": true
              },
              "url": {
                "description": "URL pointing to the location of the catalog item variant on your website.",
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "nullable": true
              },
              "image_full_url": {
                "description": "URL pointing to the location of a full image of the catalog item variant.",
                "type": "string",
                "example": "https://via.placeholder.com/300",
                "nullable": true
              },
              "image_thumbnail_url": {
                "description": "URL pointing to the location of an image thumbnail of the catalog item variant.",
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "nullable": true
              },
              "images": {
                "description": "List of URLs pointing to the locations of images of the catalog item variant.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "https://via.placeholder.com/150"
                ],
                "nullable": true
              },
              "custom_metadata": {
                "description": "Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb.",
                "type": "object",
                "example": {
                  "Top Pick": true
                },
                "nullable": true
              },
              "published": {
                "description": "Boolean value indicating whether the catalog item variant is published.",
                "type": "boolean",
                "example": true,
                "nullable": true
              },
              "created": {
                "description": "Date and time when the catalog item  variant was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "updated": {
                "description": "Date and time when the catalog item variant was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCatalogVariantResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogVariantResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "item": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCatalogVariantResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogVariantResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "item": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogCategoryEnum": {
        "type": "string",
        "enum": [
          "catalog-category"
        ]
      },
      "CatalogCategoryResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryEnum"
          },
          "id": {
            "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "description": "The ID of the catalog category in an external system.",
                "type": "string",
                "example": "SAMPLE-DATA-CATEGORY-APPAREL",
                "nullable": true
              },
              "name": {
                "description": "The name of the catalog category.",
                "type": "string",
                "example": "Sample Data Category Apparel",
                "nullable": true
              },
              "updated": {
                "description": "Date and time when the catalog category was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCatalogCategoryResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogCategoryResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCatalogCategoryResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogCategoryResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CouponCodeBulkCreateJobEnum": {
        "type": "string",
        "enum": [
          "coupon-code-bulk-create-job"
        ]
      },
      "ErrorSource": {
        "type": "object",
        "properties": {
          "pointer": {
            "description": "A pointer to the source of the error in the request payload.",
            "type": "string",
            "example": "/data",
            "default": "/data"
          }
        }
      },
      "APIJobErrorPayload": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier for the error.",
            "type": "string",
            "example": "e4eebb08-b055-4a6f-bb13-c8cb69c9eb94"
          },
          "code": {
            "description": "A code for classifying the error type.",
            "type": "string",
            "example": "invalid"
          },
          "title": {
            "description": "A high-level message about the error.",
            "type": "string",
            "example": "Invalid input"
          },
          "detail": {
            "description": "Specific details about the error.",
            "type": "string",
            "example": "The payload provided in the request is invalid."
          },
          "source": {
            "description": "Additional information on the source of the error.",
            "$ref": "#/components/schemas/ErrorSource"
          }
        },
        "required": [
          "id",
          "code",
          "title",
          "detail",
          "source"
        ]
      },
      "CouponCodeCreateJobResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponCodeBulkCreateJobEnum"
          },
          "id": {
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "Status of the asynchronous job.",
                "type": "string",
                "example": "processing",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ]
              },
              "created_at": {
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00"
              },
              "total_count": {
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                "type": "integer",
                "example": 10
              },
              "completed_count": {
                "description": "The total number of operations that have been completed by the job.",
                "type": "integer",
                "example": 9,
                "default": 0,
                "nullable": true
              },
              "failed_count": {
                "description": "The total number of operations that have failed as part of the job.",
                "type": "integer",
                "example": 1,
                "default": 0,
                "nullable": true
              },
              "completed_at": {
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "errors": {
                "description": "Array of errors encountered during the processing of the job.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                },
                "nullable": true
              },
              "expires_at": {
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCouponCodeCreateJobResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CouponCodeCreateJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "coupon-codes": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CouponCodeEnum"
                                  },
                                  "id": {
                                    "description": "IDs of the created coupon codes.",
                                    "type": "string",
                                    "example": "10OFF-ASD325FHK324UJDOI2M3JNES99"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCouponCodeCreateJobResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CouponCodeCreateJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "coupon-codes": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CouponCodeEnum"
                                },
                                "id": {
                                  "description": "IDs of the created coupon codes.",
                                  "type": "string",
                                  "example": "10OFF-ASD325FHK324UJDOI2M3JNES99"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CouponCodeResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCatalogCategoryItemListResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CatalogItemEnum"
                },
                "id": {
                  "description": "A list of catalog item IDs that are in the given category.",
                  "type": "string",
                  "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCatalogItemCategoryListResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CatalogCategoryEnum"
                },
                "id": {
                  "description": "A list of catalog category IDs representing the categories the item is in",
                  "type": "string",
                  "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "EventEnum": {
        "type": "string",
        "enum": [
          "event"
        ]
      },
      "EventResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EventEnum"
          },
          "id": {
            "description": "The Event ID",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "timestamp": {
                "description": "Event timestamp in seconds",
                "type": "integer",
                "nullable": true
              },
              "event_properties": {
                "description": "Event properties, can include identifiers and extra properties",
                "type": "object",
                "nullable": true
              },
              "datetime": {
                "description": "Event timestamp in ISO8601 format (YYYY-MM-DDTHH:MM:SS+hh:mm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T01:23:45+00:00",
                "nullable": true
              },
              "uuid": {
                "description": "A unique identifier for the event, this can be used as a cursor in pagination",
                "type": "string",
                "nullable": true
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetEventResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/EventResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "profile": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/ProfileEnum"
                                },
                                "id": {
                                  "description": "Profile ID of the associated profile, if available",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type",
                                "id"
                              ]
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "metric": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/MetricEnum"
                                },
                                "id": {
                                  "description": "The Metric ID",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type",
                                "id"
                              ]
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "attributions": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/AttributionEnum"
                                  },
                                  "id": {
                                    "description": "Attributions for this event",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AttributionResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/MetricResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/ProfileResponseObjectResource"
                }
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetEventResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "profile": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/ProfileEnum"
                              },
                              "id": {
                                "description": "Profile ID of the associated profile, if available",
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ]
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "metric": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/MetricEnum"
                              },
                              "id": {
                                "description": "The Metric ID",
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ]
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "attributions": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/AttributionEnum"
                                },
                                "id": {
                                  "description": "Attributions for this event",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AttributionResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/MetricResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/ProfileResponseObjectResource"
                }
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetEventMetricRelationshipResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/MetricEnum"
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "type",
              "id"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "MetricEnum": {
        "type": "string",
        "enum": [
          "metric"
        ]
      },
      "MetricResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/MetricEnum"
          },
          "id": {
            "description": "The Metric ID",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of the metric",
                "type": "string",
                "nullable": true
              },
              "created": {
                "description": "Creation time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "nullable": true
              },
              "updated": {
                "description": "Last updated time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "nullable": true
              },
              "integration": {
                "description": "The integration associated with the event",
                "type": "object",
                "nullable": true
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetMetricResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "flow-triggers": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileLocation": {
        "type": "object",
        "properties": {
          "address1": {
            "description": "First line of street address",
            "type": "string",
            "example": "89 E 42nd St",
            "nullable": true
          },
          "address2": {
            "description": "Second line of street address",
            "type": "string",
            "example": "1st floor",
            "nullable": true
          },
          "city": {
            "description": "City name",
            "type": "string",
            "example": "New York",
            "nullable": true
          },
          "country": {
            "description": "Country name",
            "type": "string",
            "example": "United States",
            "nullable": true
          },
          "latitude": {
            "description": "Latitude coordinate. We recommend providing a precision of four decimal places.",
            "example": "40.7128",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "longitude": {
            "description": "Longitude coordinate. We recommend providing a precision of four decimal places.",
            "example": "74.0060",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "region": {
            "description": "Region within a country, such as state or province",
            "type": "string",
            "example": "NY",
            "nullable": true
          },
          "zip": {
            "description": "Zip code",
            "type": "string",
            "example": "10017",
            "nullable": true
          },
          "timezone": {
            "description": "Time zone name. We recommend using time zones from the IANA Time Zone Database.",
            "type": "string",
            "example": "America/New_York",
            "nullable": true
          },
          "ip": {
            "description": "IP Address",
            "type": "string",
            "example": "127.0.0.1",
            "nullable": true
          }
        }
      },
      "EmailMarketingSuppression": {
        "type": "object",
        "properties": {
          "reason": {
            "description": "The reason the profile was suppressed.",
            "type": "string",
            "example": "HARD_BOUNCE",
            "enum": [
              "HARD_BOUNCE",
              "INVALID_EMAIL",
              "SPAM_COMPLAINT",
              "UNSUBSCRIBE",
              "USER_SUPPRESSED"
            ]
          },
          "timestamp": {
            "description": "The timestamp when the profile was suppressed, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
            "type": "string",
            "format": "date-time",
            "example": "2023-02-21T20:07:38+00:00"
          }
        },
        "required": [
          "reason",
          "timestamp"
        ]
      },
      "EmailMarketingListSuppression": {
        "type": "object",
        "properties": {
          "list_id": {
            "description": "The ID of list to which the suppression applies.",
            "type": "string",
            "example": "Y6nRLr"
          },
          "reason": {
            "description": "The reason the profile was suppressed from the list.",
            "type": "string",
            "example": "USER_SUPPRESSED"
          },
          "timestamp": {
            "description": "The timestamp when the profile was suppressed from the list, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
            "type": "string",
            "format": "date-time",
            "example": "2023-02-21T20:07:38+00:00"
          }
        },
        "required": [
          "list_id",
          "reason",
          "timestamp"
        ]
      },
      "EmailMarketing": {
        "type": "object",
        "properties": {
          "can_receive_email_marketing": {
            "description": "Whether or not this profile has implicit consent to receive email marketing. True if it does profile does not have any global suppressions.",
            "type": "boolean"
          },
          "consent": {
            "description": "The consent status for email marketing.",
            "type": "string",
            "example": "SUBSCRIBED"
          },
          "consent_timestamp": {
            "description": "The timestamp when consent was recorded or updated for email marketing, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
            "type": "string",
            "format": "date-time",
            "example": "2023-02-21T20:07:38+00:00",
            "nullable": true
          },
          "last_updated": {
            "description": "The timestamp when a field on the email marketing object was last modified.",
            "type": "string",
            "format": "date-time",
            "example": "2023-02-21T20:07:38+00:00",
            "nullable": true
          },
          "method": {
            "description": "The method by which the profile was subscribed to email marketing.",
            "type": "string",
            "example": "PREFERENCE_PAGE",
            "nullable": true
          },
          "method_detail": {
            "description": "Additional details about the method by which the profile was subscribed to email marketing. This may be empty if no details were provided.",
            "type": "string",
            "example": "mydomain.com/signup",
            "default": "",
            "nullable": true
          },
          "custom_method_detail": {
            "description": "Additional detail provided by the caller when the profile was subscribed. This may be empty if no details were provided.",
            "type": "string",
            "example": "marketing drive",
            "nullable": true
          },
          "double_optin": {
            "description": "Whether the profile was subscribed to email marketing using a double opt-in.",
            "type": "boolean",
            "example": true,
            "nullable": true
          },
          "suppression": {
            "description": "The global email marketing suppression for this profile.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmailMarketingSuppression"
            },
            "nullable": true
          },
          "list_suppressions": {
            "description": "The list suppressions for this profile.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmailMarketingListSuppression"
            },
            "nullable": true
          }
        },
        "required": [
          "can_receive_email_marketing",
          "consent"
        ]
      },
      "EmailChannel": {
        "type": "object",
        "properties": {
          "marketing": {
            "description": "The email marketing subscription.",
            "$ref": "#/components/schemas/EmailMarketing",
            "nullable": true
          }
        }
      },
      "SMSMarketing": {
        "type": "object",
        "properties": {
          "can_receive_sms_marketing": {
            "description": "Whether or not this profile is subscribed to receive SMS marketing.",
            "type": "boolean"
          },
          "consent": {
            "description": "The consent status for SMS marketing.",
            "type": "string",
            "example": "SUBSCRIBED"
          },
          "consent_timestamp": {
            "description": "The timestamp when consent was recorded or updated for SMS marketing, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
            "type": "string",
            "format": "date-time",
            "example": "2023-02-21T20:07:38+00:00",
            "nullable": true
          },
          "method": {
            "description": "The method by which the profile was subscribed to SMS marketing.",
            "type": "string",
            "example": "TEXT",
            "nullable": true
          },
          "method_detail": {
            "description": "Additional details about the method which the profile was subscribed to SMS marketing. This may be empty if no details were provided.",
            "type": "string",
            "example": "JOIN",
            "default": "",
            "nullable": true
          },
          "last_updated": {
            "description": "The timestamp when the SMS consent record was last modified, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
            "type": "string",
            "format": "date-time",
            "example": "2023-02-21T20:07:38+00:00",
            "nullable": true
          }
        },
        "required": [
          "can_receive_sms_marketing",
          "consent"
        ]
      },
      "SMSChannel": {
        "type": "object",
        "properties": {
          "marketing": {
            "description": "The SMS marketing subscription.",
            "$ref": "#/components/schemas/SMSMarketing",
            "nullable": true
          }
        }
      },
      "SMSTransactional": {
        "type": "object",
        "properties": {
          "can_receive_sms_transactional": {
            "description": "Whether or not this profile is subscribed to receive transactional SMS.",
            "type": "boolean"
          },
          "consent": {
            "description": "The consent status for SMS Transactional.",
            "type": "string",
            "example": "SUBSCRIBED"
          },
          "consent_timestamp": {
            "description": "The timestamp when consent was recorded or updated for Transactional SMS messaging , in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
            "type": "string",
            "format": "date-time",
            "example": "2023-02-21T20:07:38+00:00",
            "nullable": true
          },
          "method": {
            "description": "The method by which the profile was subscribed to Transactional SMS messaging .",
            "type": "string",
            "example": "TEXT",
            "nullable": true
          },
          "method_detail": {
            "description": "Additional details about the method which the profile was subscribed to Transactional SMS messaging. This may be empty if no details were provided.",
            "type": "string",
            "example": "JOIN",
            "default": "",
            "nullable": true
          },
          "last_updated": {
            "description": "The timestamp when the SMS consent record was last modified, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
            "type": "string",
            "format": "date-time",
            "example": "2023-02-21T20:07:38+00:00",
            "nullable": true
          }
        },
        "required": [
          "can_receive_sms_transactional",
          "consent"
        ]
      },
      "SMSChannelWithTransactional": {
        "type": "object",
        "properties": {
          "marketing": {
            "description": "The SMS marketing subscription.",
            "$ref": "#/components/schemas/SMSMarketing",
            "nullable": true
          },
          "transactional": {
            "description": "The SMS marketing subscription.",
            "$ref": "#/components/schemas/SMSTransactional",
            "nullable": true
          }
        }
      },
      "PushMarketing": {
        "type": "object",
        "properties": {
          "can_receive_push_marketing": {
            "description": "Whether or not this profile is subscribed to receive mobile push.",
            "type": "boolean"
          },
          "consent": {
            "description": "The consent status for mobile push marketing.",
            "type": "string",
            "example": "SUBSCRIBED"
          },
          "consent_timestamp": {
            "description": "The timestamp when the consent was last changed, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
            "type": "string",
            "format": "date-time",
            "example": "2023-02-21T20:07:38+00:00",
            "nullable": true
          }
        },
        "required": [
          "can_receive_push_marketing",
          "consent"
        ]
      },
      "PushChannel": {
        "type": "object",
        "properties": {
          "marketing": {
            "description": "The mobile push marketing subscription.",
            "$ref": "#/components/schemas/PushMarketing",
            "nullable": true
          }
        }
      },
      "Subscriptions": {
        "type": "object",
        "properties": {
          "email": {
            "description": "The email channel subscription.",
            "$ref": "#/components/schemas/EmailChannel",
            "nullable": true
          },
          "sms": {
            "description": "The SMS channel subscription.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SMSChannel"
              },
              {
                "$ref": "#/components/schemas/SMSChannelWithTransactional"
              }
            ]
          },
          "mobile_push": {
            "description": "The mobile push channel subscription.",
            "$ref": "#/components/schemas/PushChannel",
            "nullable": true
          }
        }
      },
      "PredictiveAnalytics": {
        "type": "object",
        "properties": {
          "historic_clv": {
            "description": "Total value of all historically placed orders",
            "type": "number",
            "example": 93.87,
            "nullable": true
          },
          "predicted_clv": {
            "description": "Predicted value of all placed orders in the next 365 days",
            "type": "number",
            "example": 27.24,
            "nullable": true
          },
          "total_clv": {
            "description": "Sum of historic and predicted CLV",
            "type": "number",
            "example": 121.11,
            "nullable": true
          },
          "historic_number_of_orders": {
            "description": "Number of already placed orders",
            "type": "integer",
            "example": 2,
            "nullable": true
          },
          "predicted_number_of_orders": {
            "description": "Predicted number of placed orders in the next 365 days",
            "type": "number",
            "example": 0.54,
            "nullable": true
          },
          "average_days_between_orders": {
            "description": "Average number of days between orders (None if only one order has been placed)",
            "type": "number",
            "example": 189,
            "nullable": true
          },
          "average_order_value": {
            "description": "Average value of placed orders",
            "type": "number",
            "example": 46.94,
            "nullable": true
          },
          "churn_probability": {
            "description": "Probability the customer has churned",
            "type": "number",
            "example": 0.89,
            "nullable": true
          },
          "expected_date_of_next_order": {
            "description": "Expected date of next order, as calculated at the time of their most recent order",
            "type": "string",
            "format": "date-time",
            "example": "2022-11-08T00:00:00+00:00",
            "nullable": true
          }
        }
      },
      "GetEventProfileRelationshipResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ProfileEnum"
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "type",
              "id"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileEnum": {
        "type": "string",
        "enum": [
          "profile"
        ]
      },
      "ProfileResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
            "nullable": true
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "description": "Individual's email address",
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com",
                "nullable": true
              },
              "phone_number": {
                "description": "Individual's phone number in E.164 format",
                "type": "string",
                "example": "+15005550006",
                "nullable": true
              },
              "external_id": {
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.",
                "type": "string",
                "nullable": true
              },
              "first_name": {
                "description": "Individual's first name",
                "type": "string",
                "example": "Sarah",
                "nullable": true
              },
              "last_name": {
                "description": "Individual's last name",
                "type": "string",
                "example": "Mason",
                "nullable": true
              },
              "organization": {
                "description": "Name of the company or organization within the company for whom the individual works",
                "type": "string",
                "example": "Example Corporation",
                "nullable": true
              },
              "locale": {
                "description": "The locale of the profile, in the IETF BCP 47 language tag format like (ISO 639-1/2)-(ISO 3166 alpha-2)",
                "type": "string",
                "example": "en-US",
                "nullable": true
              },
              "title": {
                "description": "Individual's job title",
                "type": "string",
                "example": "Regional Manager",
                "nullable": true
              },
              "image": {
                "description": "URL pointing to the location of a profile image",
                "type": "string",
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "nullable": true
              },
              "created": {
                "description": "Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "updated": {
                "description": "Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "last_event_date": {
                "description": "Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation",
                "nullable": true
              },
              "properties": {
                "description": "An object containing key/value pairs for any custom properties assigned to this profile",
                "type": "object",
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "nullable": true
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "attributes",
          "links"
        ]
      },
      "GetProfileResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProfileResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "lists": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "segments": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "properties": {
                  "type": {
                    "$ref": "#/components/schemas/ProfileEnum"
                  },
                  "attributes": {
                    "properties": {
                      "subscriptions": {
                        "$ref": "#/components/schemas/Subscriptions",
                        "nullable": true
                      },
                      "predictive_analytics": {
                        "$ref": "#/components/schemas/PredictiveAnalytics",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GetMetricResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MetricResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "flow-triggers": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/FlowEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlowResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetMetricResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "flow-triggers": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/FlowEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlowResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetMetricFlowTriggersRelationshipsResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/FlowEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "FlowEnum": {
        "type": "string",
        "enum": [
          "flow"
        ]
      },
      "FlowResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FlowEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              },
              "status": {
                "type": "string",
                "nullable": true
              },
              "archived": {
                "type": "boolean",
                "nullable": true
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "trigger_type": {
                "description": "Corresponds to the object which triggered the flow.",
                "type": "string",
                "enum": [
                  "Added to List",
                  "Date Based",
                  "Low Inventory",
                  "Metric",
                  "Price Drop",
                  "Unconfigured"
                ],
                "nullable": true
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetFlowResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FlowResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "flow-actions": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "ListEnum": {
        "type": "string",
        "enum": [
          "list"
        ]
      },
      "ListListResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ListEnum"
          },
          "id": {
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
            "type": "string",
            "example": "Y6nRLr"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "A helpful name to label the list",
                "type": "string",
                "example": "Newsletter",
                "nullable": true
              },
              "created": {
                "description": "Date and time when the list was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "updated": {
                "description": "Date and time when the list was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "opt_in_process": {
                "description": "The opt-in process for this list.  Could be either 'single_opt_in' or 'double_opt_in'.",
                "type": "string",
                "enum": [
                  "double_opt_in",
                  "single_opt_in"
                ],
                "nullable": true
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetListListResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ListListResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "profiles": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/TagEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "flow-triggers": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/FlowEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/FlowResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/TagResponseObjectResource"
                }
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ListRetrieveResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ListEnum"
          },
          "id": {
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
            "type": "string",
            "example": "Y6nRLr"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "A helpful name to label the list",
                "type": "string",
                "example": "Newsletter",
                "nullable": true
              },
              "created": {
                "description": "Date and time when the list was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "updated": {
                "description": "Date and time when the list was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "opt_in_process": {
                "description": "The opt-in process for this list.  Could be either 'single_opt_in' or 'double_opt_in'.",
                "type": "string",
                "enum": [
                  "double_opt_in",
                  "single_opt_in"
                ],
                "nullable": true
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetListRetrieveResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ListRetrieveResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "profiles": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/TagEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "flow-triggers": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/FlowEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "properties": {
                  "type": {
                    "$ref": "#/components/schemas/ListEnum"
                  },
                  "attributes": {
                    "properties": {
                      "profile_count": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/FlowResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/TagResponseObjectResource"
                }
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetListTagRelationshipListResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/TagEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "TagEnum": {
        "type": "string",
        "enum": [
          "tag"
        ]
      },
      "TagResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TagEnum"
          },
          "id": {
            "description": "The Tag ID",
            "type": "string",
            "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The Tag name",
                "type": "string",
                "example": "My Tag"
              }
            },
            "required": [
              "name"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetTagResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TagResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "tag-group": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "lists": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "segments": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "campaigns": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "flows": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetListRelationshipsResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/ProfileEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ListMemberResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
            "nullable": true
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "description": "Individual's email address",
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com",
                "nullable": true
              },
              "phone_number": {
                "description": "Individual's phone number in E.164 format",
                "type": "string",
                "example": "+15005550006",
                "nullable": true
              },
              "external_id": {
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.",
                "type": "string",
                "nullable": true
              },
              "first_name": {
                "description": "Individual's first name",
                "type": "string",
                "example": "Sarah",
                "nullable": true
              },
              "last_name": {
                "description": "Individual's last name",
                "type": "string",
                "example": "Mason",
                "nullable": true
              },
              "organization": {
                "description": "Name of the company or organization within the company for whom the individual works",
                "type": "string",
                "example": "Example Corporation",
                "nullable": true
              },
              "locale": {
                "description": "The locale of the profile, in the IETF BCP 47 language tag format like (ISO 639-1/2)-(ISO 3166 alpha-2)",
                "type": "string",
                "example": "en-US",
                "nullable": true
              },
              "title": {
                "description": "Individual's job title",
                "type": "string",
                "example": "Regional Manager",
                "nullable": true
              },
              "image": {
                "description": "URL pointing to the location of a profile image",
                "type": "string",
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "nullable": true
              },
              "created": {
                "description": "Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "updated": {
                "description": "Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "last_event_date": {
                "description": "Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation",
                "nullable": true
              },
              "properties": {
                "description": "An object containing key/value pairs for any custom properties assigned to this profile",
                "type": "object",
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "nullable": true
              },
              "joined_group_at": {
                "description": "The datetime when this profile most recently joined the list.",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00"
              }
            },
            "required": [
              "joined_group_at"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "attributes",
          "links"
        ]
      },
      "GetListMemberResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ListMemberResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "lists": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "segments": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "properties": {
                    "type": {
                      "$ref": "#/components/schemas/ProfileEnum"
                    },
                    "attributes": {
                      "properties": {
                        "subscriptions": {
                          "$ref": "#/components/schemas/Subscriptions",
                          "nullable": true
                        },
                        "predictive_analytics": {
                          "$ref": "#/components/schemas/PredictiveAnalytics",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetListFlowTriggersRelationshipsResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/FlowEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "SegmentEnum": {
        "type": "string",
        "enum": [
          "segment"
        ]
      },
      "ProfileGroupMembershipEnum": {
        "type": "string",
        "enum": [
          "profile-group-membership"
        ]
      },
      "DateEnum": {
        "type": "string",
        "enum": [
          "date"
        ]
      },
      "StaticDateFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DateEnum"
          },
          "operator": {
            "description": "Operators for static date filters.\n\nE.g. \"before 2023-01-01\"",
            "type": "string",
            "enum": [
              "after",
              "before"
            ]
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "example": "2022-11-08T00:00:00+00:00"
          }
        },
        "required": [
          "type",
          "operator",
          "date"
        ]
      },
      "StaticDateRangeFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DateEnum"
          },
          "operator": {
            "description": "Operators for static date range filters.\n\nE.g. \"between 2023-01-01 and 2023-02-01\"",
            "type": "string",
            "enum": [
              "between-static"
            ]
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "example": "2022-11-08T00:00:00+00:00"
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "example": "2022-11-08T00:00:00+00:00"
          }
        },
        "required": [
          "type",
          "operator",
          "start",
          "end"
        ]
      },
      "RelativeDateOperatorBaseFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DateEnum"
          },
          "operator": {
            "description": "Operators for relative date filters.\n\ne.g. \"in the last 10 days\"",
            "type": "string",
            "enum": [
              "at-least",
              "in-the-last",
              "in-the-next"
            ]
          },
          "unit": {
            "description": "Units for relative date filters.",
            "type": "string",
            "enum": [
              "day",
              "hour",
              "week"
            ]
          },
          "quantity": {
            "type": "integer"
          }
        },
        "required": [
          "type",
          "operator",
          "unit",
          "quantity"
        ]
      },
      "RelativeDateRangeFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DateEnum"
          },
          "operator": {
            "description": "Operators for relative date range filters.\n\ne.g. \"between 10 and 20 days ago\"",
            "type": "string",
            "enum": [
              "between"
            ]
          },
          "start": {
            "type": "integer"
          },
          "end": {
            "type": "integer"
          },
          "unit": {
            "description": "Units for relative date filters.",
            "type": "string",
            "enum": [
              "day",
              "hour",
              "week"
            ]
          }
        },
        "required": [
          "type",
          "operator",
          "start",
          "end",
          "unit"
        ]
      },
      "ProfileHasGroupMembershipCondition": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileGroupMembershipEnum"
          },
          "is_member": {
            "enum": [
              true
            ]
          },
          "group_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "timeframe_filter": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/StaticDateFilter"
              },
              {
                "$ref": "#/components/schemas/StaticDateRangeFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateOperatorBaseFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateRangeFilter"
              }
            ]
          }
        },
        "required": [
          "type",
          "is_member",
          "group_ids"
        ]
      },
      "ProfileNoGroupMembershipCondition": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileGroupMembershipEnum"
          },
          "is_member": {
            "enum": [
              false
            ]
          },
          "group_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "type",
          "is_member",
          "group_ids"
        ]
      },
      "ProfileMetricEnum": {
        "type": "string",
        "enum": [
          "profile-metric"
        ]
      },
      "NumericEnum": {
        "type": "string",
        "enum": [
          "numeric"
        ]
      },
      "NumericOperatorFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/NumericEnum"
          },
          "operator": {
            "description": "Operators for numeric filters.",
            "type": "string",
            "enum": [
              "equals",
              "greater-than",
              "greater-than-or-equal",
              "less-than",
              "less-than-or-equal",
              "not-equals"
            ]
          },
          "value": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "number"
              }
            ]
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "RelativeAnniversaryDateFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DateEnum"
          },
          "operator": {
            "description": "Operators for relative date filters.\n\ne.g. \"anniversary in the last 10 days\"",
            "type": "string",
            "enum": [
              "anniversary-last",
              "anniversary-next"
            ]
          },
          "unit": {
            "description": "Units for relative date filters.",
            "type": "string",
            "enum": [
              "day",
              "hour",
              "week"
            ]
          },
          "quantity": {
            "type": "integer"
          }
        },
        "required": [
          "type",
          "operator",
          "unit",
          "quantity"
        ]
      },
      "AlltimeDateFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DateEnum"
          },
          "operator": {
            "description": "Operators for alltime date filters.",
            "type": "string",
            "enum": [
              "alltime"
            ]
          }
        },
        "required": [
          "type",
          "operator"
        ]
      },
      "StringEnum": {
        "type": "string",
        "enum": [
          "string"
        ]
      },
      "StringOperatorFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/StringEnum"
          },
          "operator": {
            "description": "Operators for string filters.",
            "type": "string",
            "enum": [
              "contains",
              "ends-with",
              "equals",
              "not-contains",
              "not-ends-with",
              "not-equals",
              "not-starts-with",
              "starts-with"
            ]
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "StringArrayOperatorFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/StringEnum"
          },
          "operator": {
            "description": "Operators for string-in-array filters.",
            "type": "string",
            "enum": [
              "in",
              "not-in"
            ]
          },
          "value": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "ExistenceEnum": {
        "type": "string",
        "enum": [
          "existence"
        ]
      },
      "ExistenceOperatorFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ExistenceEnum"
          },
          "operator": {
            "description": "Operators for existence filters.",
            "type": "string",
            "enum": [
              "is-set",
              "not-set"
            ]
          }
        },
        "required": [
          "type",
          "operator"
        ]
      },
      "ListSetFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ListEnum"
          },
          "operator": {
            "description": "Operators for list contains set filters.",
            "type": "string",
            "enum": [
              "contains-all",
              "contains-any",
              "not-contains-all",
              "not-contains-any"
            ]
          },
          "value": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "ListLengthFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ListEnum"
          },
          "operator": {
            "description": "Operators for list length filters.",
            "type": "string",
            "enum": [
              "length-equals",
              "length-greater-than",
              "length-greater-than-or-equal",
              "length-less-than",
              "length-less-than-or-equal"
            ]
          },
          "value": {
            "type": "integer"
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "ListSubstringFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ListEnum"
          },
          "operator": {
            "description": "Operators for list substring filters.",
            "type": "string",
            "enum": [
              "contains-substring",
              "not-contains-substring"
            ]
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "BooleanEnum": {
        "type": "string",
        "enum": [
          "boolean"
        ]
      },
      "BooleanFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/BooleanEnum"
          },
          "operator": {
            "description": "Operators for boolean filters.",
            "type": "string",
            "enum": [
              "equals"
            ]
          },
          "value": {
            "type": "boolean"
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "ProfileMetricPropertyFilter": {
        "type": "object",
        "properties": {
          "property": {
            "type": "string"
          },
          "filter": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringOperatorFilter"
              },
              {
                "$ref": "#/components/schemas/StringArrayOperatorFilter"
              },
              {
                "$ref": "#/components/schemas/ExistenceOperatorFilter"
              },
              {
                "$ref": "#/components/schemas/ListSetFilter"
              },
              {
                "$ref": "#/components/schemas/ListLengthFilter"
              },
              {
                "$ref": "#/components/schemas/ListSubstringFilter"
              },
              {
                "$ref": "#/components/schemas/BooleanFilter"
              },
              {
                "$ref": "#/components/schemas/NumericOperatorFilter"
              }
            ]
          }
        },
        "required": [
          "property"
        ]
      },
      "ProfileMetricCondition": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileMetricEnum"
          },
          "metric_id": {
            "type": "string"
          },
          "measurement": {
            "description": "Measurements for profile metrics.",
            "type": "string",
            "enum": [
              "count",
              "sum"
            ]
          },
          "measurement_filter": {
            "$ref": "#/components/schemas/NumericOperatorFilter"
          },
          "timeframe_filter": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StaticDateFilter"
              },
              {
                "$ref": "#/components/schemas/StaticDateRangeFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateOperatorBaseFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeAnniversaryDateFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateRangeFilter"
              },
              {
                "$ref": "#/components/schemas/AlltimeDateFilter"
              }
            ]
          },
          "metric_filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProfileMetricPropertyFilter"
            },
            "nullable": true
          }
        },
        "required": [
          "type",
          "metric_id",
          "measurement",
          "measurement_filter",
          "timeframe_filter"
        ]
      },
      "ProfileMarketingConsentEnum": {
        "type": "string",
        "enum": [
          "profile-marketing-consent"
        ]
      },
      "EmailEnum": {
        "type": "string",
        "enum": [
          "email"
        ]
      },
      "AnyEnum": {
        "type": "string",
        "enum": [
          "any"
        ]
      },
      "HasEmailMarketing": {
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/AnyEnum"
          }
        },
        "required": [
          "subscription"
        ]
      },
      "SubscribedEnum": {
        "type": "string",
        "enum": [
          "subscribed"
        ]
      },
      "Is_double_opt_inEnum": {
        "type": "string",
        "enum": [
          "is_double_opt_in"
        ]
      },
      "DoubleOptinFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/Is_double_opt_inEnum"
          },
          "filter": {
            "$ref": "#/components/schemas/BooleanFilter"
          }
        },
        "required": [
          "field",
          "filter"
        ]
      },
      "Status_dateEnum": {
        "type": "string",
        "enum": [
          "status_date"
        ]
      },
      "CalendarDateFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DateEnum"
          },
          "operator": {
            "description": "Operators for calendar date filters.",
            "type": "string",
            "enum": [
              "calendar-month"
            ]
          },
          "value": {
            "type": "integer"
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "AnniversaryDateFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DateEnum"
          },
          "operator": {
            "description": "Operators for anniversary date filters.",
            "type": "string",
            "enum": [
              "anniversary",
              "anniversary-month"
            ]
          }
        },
        "required": [
          "type",
          "operator"
        ]
      },
      "StatusDateFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/Status_dateEnum"
          },
          "filter": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StaticDateFilter"
              },
              {
                "$ref": "#/components/schemas/StaticDateRangeFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateOperatorBaseFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeAnniversaryDateFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateRangeFilter"
              },
              {
                "$ref": "#/components/schemas/CalendarDateFilter"
              },
              {
                "$ref": "#/components/schemas/AnniversaryDateFilter"
              }
            ]
          }
        },
        "required": [
          "field",
          "filter"
        ]
      },
      "Custom_sourceEnum": {
        "type": "string",
        "enum": [
          "custom_source"
        ]
      },
      "EqualsEnum": {
        "type": "string",
        "enum": [
          "equals"
        ]
      },
      "EqualsStringFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/StringEnum"
          },
          "operator": {
            "$ref": "#/components/schemas/EqualsEnum"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "CustomSourceFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/Custom_sourceEnum"
          },
          "filter": {
            "$ref": "#/components/schemas/EqualsStringFilter"
          }
        },
        "required": [
          "field",
          "filter"
        ]
      },
      "MethodEnum": {
        "type": "string",
        "enum": [
          "method"
        ]
      },
      "FormEnum": {
        "type": "string",
        "enum": [
          "form"
        ]
      },
      "InEnum": {
        "type": "string",
        "enum": [
          "in"
        ]
      },
      "InStringArrayFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/StringEnum"
          },
          "operator": {
            "$ref": "#/components/schemas/InEnum"
          },
          "value": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "FormMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/FormEnum"
          },
          "filter": {
            "description": "Optional filter on a specific list of form ids",
            "$ref": "#/components/schemas/InStringArrayFilter",
            "nullable": true
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "Preference_pageEnum": {
        "type": "string",
        "enum": [
          "preference_page"
        ]
      },
      "PreferencePageFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/Preference_pageEnum"
          },
          "filter": {
            "description": "Optional filter on a specific subscribe page url",
            "$ref": "#/components/schemas/EqualsStringFilter",
            "nullable": true
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "ApiEnum": {
        "type": "string",
        "enum": [
          "api"
        ]
      },
      "APIMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/ApiEnum"
          },
          "filter": {
            "description": "Optional filter on a specific list of API keys (using last 4 digits of the key)",
            "$ref": "#/components/schemas/InStringArrayFilter",
            "nullable": true
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "Inbound_messageEnum": {
        "type": "string",
        "enum": [
          "inbound_message"
        ]
      },
      "InboundMessageMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/Inbound_messageEnum"
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "Back_in_stockEnum": {
        "type": "string",
        "enum": [
          "back_in_stock"
        ]
      },
      "BackInStockMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/Back_in_stockEnum"
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "SftpEnum": {
        "type": "string",
        "enum": [
          "sftp"
        ]
      },
      "SftpMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/SftpEnum"
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "Manual_importEnum": {
        "type": "string",
        "enum": [
          "manual_import"
        ]
      },
      "ManualImportMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/Manual_importEnum"
          },
          "filter": {
            "description": "Optional filter on a specific list of user email addresses who initiated the manual action",
            "$ref": "#/components/schemas/InStringArrayFilter",
            "nullable": true
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "Manual_addEnum": {
        "type": "string",
        "enum": [
          "manual_add"
        ]
      },
      "ManualAddMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/Manual_addEnum"
          },
          "filter": {
            "description": "Optional filter on a specific list of user email addresses who initiated the manual action",
            "$ref": "#/components/schemas/InStringArrayFilter",
            "nullable": true
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "IntegrationEnum": {
        "type": "string",
        "enum": [
          "integration"
        ]
      },
      "ShopifyEnum": {
        "type": "string",
        "enum": [
          "shopify"
        ]
      },
      "ShopifyIntegrationFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/StringEnum"
          },
          "operator": {
            "$ref": "#/components/schemas/InEnum"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopifyEnum"
            }
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "ShopifyIntegrationMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/IntegrationEnum"
          },
          "filter": {
            "$ref": "#/components/schemas/ShopifyIntegrationFilter"
          }
        },
        "required": [
          "field",
          "method",
          "filter"
        ]
      },
      "HasEmailMarketingSubscribed": {
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/SubscribedEnum"
          },
          "filters": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DoubleOptinFilter"
                },
                {
                  "$ref": "#/components/schemas/StatusDateFilter"
                },
                {
                  "$ref": "#/components/schemas/CustomSourceFilter"
                },
                {
                  "$ref": "#/components/schemas/FormMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/PreferencePageFilter"
                },
                {
                  "$ref": "#/components/schemas/APIMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/InboundMessageMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/BackInStockMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/SftpMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/ManualImportMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/ManualAddMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/ShopifyIntegrationMethodFilter"
                }
              ]
            },
            "nullable": true
          }
        },
        "required": [
          "subscription"
        ]
      },
      "Never_subscribedEnum": {
        "type": "string",
        "enum": [
          "never_subscribed"
        ]
      },
      "HasEmailMarketingNeverSubscribed": {
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/Never_subscribedEnum"
          }
        },
        "required": [
          "subscription"
        ]
      },
      "HasEmailMarketingConsent": {
        "type": "object",
        "properties": {
          "channel": {
            "$ref": "#/components/schemas/EmailEnum"
          },
          "can_receive_marketing": {
            "enum": [
              true
            ]
          },
          "consent_status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/HasEmailMarketing"
              },
              {
                "$ref": "#/components/schemas/HasEmailMarketingSubscribed"
              },
              {
                "$ref": "#/components/schemas/HasEmailMarketingNeverSubscribed"
              }
            ]
          }
        },
        "required": [
          "channel",
          "can_receive_marketing",
          "consent_status"
        ]
      },
      "Bounce_dateEnum": {
        "type": "string",
        "enum": [
          "bounce_date"
        ]
      },
      "IsSetEnum": {
        "type": "string",
        "enum": [
          "is-set"
        ]
      },
      "IsSetExistenceFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ExistenceEnum"
          },
          "operator": {
            "$ref": "#/components/schemas/IsSetEnum"
          }
        },
        "required": [
          "type",
          "operator"
        ]
      },
      "BounceDateFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/Bounce_dateEnum"
          },
          "filter": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StaticDateFilter"
              },
              {
                "$ref": "#/components/schemas/StaticDateRangeFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateOperatorBaseFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeAnniversaryDateFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateRangeFilter"
              },
              {
                "$ref": "#/components/schemas/CalendarDateFilter"
              },
              {
                "$ref": "#/components/schemas/AnniversaryDateFilter"
              },
              {
                "$ref": "#/components/schemas/IsSetExistenceFilter"
              }
            ]
          }
        },
        "required": [
          "field",
          "filter"
        ]
      },
      "Manual_suppression_dateEnum": {
        "type": "string",
        "enum": [
          "manual_suppression_date"
        ]
      },
      "ManualSuppressionDateFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/Manual_suppression_dateEnum"
          },
          "filter": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StaticDateFilter"
              },
              {
                "$ref": "#/components/schemas/StaticDateRangeFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateOperatorBaseFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeAnniversaryDateFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateRangeFilter"
              },
              {
                "$ref": "#/components/schemas/CalendarDateFilter"
              },
              {
                "$ref": "#/components/schemas/AnniversaryDateFilter"
              },
              {
                "$ref": "#/components/schemas/IsSetExistenceFilter"
              }
            ]
          }
        },
        "required": [
          "field",
          "filter"
        ]
      },
      "Invalid_email_dateEnum": {
        "type": "string",
        "enum": [
          "invalid_email_date"
        ]
      },
      "InvalidEmailDateFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/Invalid_email_dateEnum"
          },
          "filter": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StaticDateFilter"
              },
              {
                "$ref": "#/components/schemas/StaticDateRangeFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateOperatorBaseFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeAnniversaryDateFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateRangeFilter"
              },
              {
                "$ref": "#/components/schemas/CalendarDateFilter"
              },
              {
                "$ref": "#/components/schemas/AnniversaryDateFilter"
              },
              {
                "$ref": "#/components/schemas/IsSetExistenceFilter"
              }
            ]
          }
        },
        "required": [
          "field",
          "filter"
        ]
      },
      "NoEmailMarketing": {
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/AnyEnum"
          },
          "filters": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/BounceDateFilter"
                },
                {
                  "$ref": "#/components/schemas/ManualSuppressionDateFilter"
                },
                {
                  "$ref": "#/components/schemas/InvalidEmailDateFilter"
                }
              ]
            },
            "nullable": true
          }
        },
        "required": [
          "subscription"
        ]
      },
      "UnsubscribedEnum": {
        "type": "string",
        "enum": [
          "unsubscribed"
        ]
      },
      "PreferencePageMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/Preference_pageEnum"
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "Manual_removeEnum": {
        "type": "string",
        "enum": [
          "manual_remove"
        ]
      },
      "ManualRemoveMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/Manual_removeEnum"
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "Spam_complaintEnum": {
        "type": "string",
        "enum": [
          "spam_complaint"
        ]
      },
      "SpamComplaintMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/Spam_complaintEnum"
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "Mailbox_providerEnum": {
        "type": "string",
        "enum": [
          "mailbox_provider"
        ]
      },
      "MailboxProviderMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/Mailbox_providerEnum"
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "Constant_contactEnum": {
        "type": "string",
        "enum": [
          "constant_contact"
        ]
      },
      "ConstantContactIntegrationFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/StringEnum"
          },
          "operator": {
            "$ref": "#/components/schemas/InEnum"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Constant_contactEnum"
            }
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "ConstantContactIntegrationMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/IntegrationEnum"
          },
          "filter": {
            "$ref": "#/components/schemas/ConstantContactIntegrationFilter"
          }
        },
        "required": [
          "field",
          "method",
          "filter"
        ]
      },
      "NoEmailMarketingUnsubscribed": {
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/UnsubscribedEnum"
          },
          "filters": {
            "nullable": true,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/StatusDateFilter"
                    },
                    {
                      "$ref": "#/components/schemas/APIMethodFilter"
                    },
                    {
                      "$ref": "#/components/schemas/InboundMessageMethodFilter"
                    },
                    {
                      "$ref": "#/components/schemas/PreferencePageMethodFilter"
                    },
                    {
                      "$ref": "#/components/schemas/ManualRemoveMethodFilter"
                    },
                    {
                      "$ref": "#/components/schemas/SpamComplaintMethodFilter"
                    },
                    {
                      "$ref": "#/components/schemas/MailboxProviderMethodFilter"
                    },
                    {
                      "$ref": "#/components/schemas/ConstantContactIntegrationMethodFilter"
                    }
                  ]
                }
              },
              {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/BounceDateFilter"
                    },
                    {
                      "$ref": "#/components/schemas/ManualSuppressionDateFilter"
                    },
                    {
                      "$ref": "#/components/schemas/InvalidEmailDateFilter"
                    }
                  ]
                }
              }
            ]
          }
        },
        "required": [
          "subscription"
        ]
      },
      "NoEmailMarketingNeverSubscribed": {
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/Never_subscribedEnum"
          },
          "filters": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/BounceDateFilter"
                },
                {
                  "$ref": "#/components/schemas/ManualSuppressionDateFilter"
                },
                {
                  "$ref": "#/components/schemas/InvalidEmailDateFilter"
                }
              ]
            }
          }
        },
        "required": [
          "subscription",
          "filters"
        ]
      },
      "NoEmailMarketingSubscribed": {
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/SubscribedEnum"
          },
          "filters": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/BounceDateFilter"
                },
                {
                  "$ref": "#/components/schemas/ManualSuppressionDateFilter"
                },
                {
                  "$ref": "#/components/schemas/InvalidEmailDateFilter"
                }
              ]
            }
          }
        },
        "required": [
          "subscription",
          "filters"
        ]
      },
      "NoEmailMarketingConsent": {
        "type": "object",
        "properties": {
          "channel": {
            "$ref": "#/components/schemas/EmailEnum"
          },
          "can_receive_marketing": {
            "enum": [
              false
            ]
          },
          "consent_status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NoEmailMarketing"
              },
              {
                "$ref": "#/components/schemas/NoEmailMarketingUnsubscribed"
              },
              {
                "$ref": "#/components/schemas/NoEmailMarketingNeverSubscribed"
              },
              {
                "$ref": "#/components/schemas/NoEmailMarketingSubscribed"
              }
            ]
          }
        },
        "required": [
          "channel",
          "can_receive_marketing",
          "consent_status"
        ]
      },
      "SmsEnum": {
        "type": "string",
        "enum": [
          "sms"
        ]
      },
      "CheckoutEnum": {
        "type": "string",
        "enum": [
          "checkout"
        ]
      },
      "CheckoutMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/CheckoutEnum"
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "HasSMSMarketingSubscribed": {
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/SubscribedEnum"
          },
          "filters": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/StatusDateFilter"
                },
                {
                  "$ref": "#/components/schemas/FormMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/ManualImportMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/ManualAddMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/CheckoutMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/InboundMessageMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/PreferencePageMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/SftpMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/ShopifyIntegrationMethodFilter"
                }
              ]
            },
            "nullable": true
          }
        },
        "required": [
          "subscription"
        ]
      },
      "HasSMSMarketingConsent": {
        "type": "object",
        "properties": {
          "channel": {
            "$ref": "#/components/schemas/SmsEnum"
          },
          "can_receive_marketing": {
            "enum": [
              true
            ]
          },
          "consent_status": {
            "$ref": "#/components/schemas/HasSMSMarketingSubscribed"
          }
        },
        "required": [
          "channel",
          "can_receive_marketing",
          "consent_status"
        ]
      },
      "NoSMSMarketing": {
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/AnyEnum"
          }
        },
        "required": [
          "subscription"
        ]
      },
      "Bulk_removeEnum": {
        "type": "string",
        "enum": [
          "bulk_remove"
        ]
      },
      "BulkRemoveMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/Bulk_removeEnum"
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "Carrier_deactivationEnum": {
        "type": "string",
        "enum": [
          "carrier_deactivation"
        ]
      },
      "CarrierDeactivationMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/Carrier_deactivationEnum"
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "Provided_landlineEnum": {
        "type": "string",
        "enum": [
          "provided_landline"
        ]
      },
      "ProvidedLandlineMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/Provided_landlineEnum"
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "Message_blockedEnum": {
        "type": "string",
        "enum": [
          "message_blocked"
        ]
      },
      "MessageBlockedMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/Message_blockedEnum"
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "Provided_no_ageEnum": {
        "type": "string",
        "enum": [
          "provided_no_age"
        ]
      },
      "ProvidedNoAgeMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/Provided_no_ageEnum"
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "Failed_age_gateEnum": {
        "type": "string",
        "enum": [
          "failed_age_gate"
        ]
      },
      "FailedAgeGateMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/Failed_age_gateEnum"
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "NoSMSMarketingUnsubscribed": {
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/UnsubscribedEnum"
          },
          "filters": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/StatusDateFilter"
                },
                {
                  "$ref": "#/components/schemas/FormMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/ManualImportMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/ManualAddMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/ManualRemoveMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/BulkRemoveMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/CheckoutMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/InboundMessageMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/PreferencePageMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/SftpMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/CarrierDeactivationMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/ProvidedLandlineMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/MessageBlockedMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/ProvidedNoAgeMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/FailedAgeGateMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/ShopifyIntegrationMethodFilter"
                }
              ]
            },
            "nullable": true
          }
        },
        "required": [
          "subscription"
        ]
      },
      "NoSMSMarketingNeverSubscribed": {
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/Never_subscribedEnum"
          }
        },
        "required": [
          "subscription"
        ]
      },
      "NoSMSMarketingConsent": {
        "type": "object",
        "properties": {
          "channel": {
            "$ref": "#/components/schemas/SmsEnum"
          },
          "can_receive_marketing": {
            "enum": [
              false
            ]
          },
          "consent_status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NoSMSMarketing"
              },
              {
                "$ref": "#/components/schemas/NoSMSMarketingUnsubscribed"
              },
              {
                "$ref": "#/components/schemas/NoSMSMarketingNeverSubscribed"
              }
            ]
          }
        },
        "required": [
          "channel",
          "can_receive_marketing",
          "consent_status"
        ]
      },
      "PushEnum": {
        "type": "string",
        "enum": [
          "push"
        ]
      },
      "HasPushMarketing": {
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/AnyEnum"
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatusDateFilter"
            },
            "nullable": true
          }
        },
        "required": [
          "subscription"
        ]
      },
      "HasPushMarketingConsent": {
        "type": "object",
        "properties": {
          "channel": {
            "$ref": "#/components/schemas/PushEnum"
          },
          "can_receive_marketing": {
            "enum": [
              true
            ]
          },
          "consent_status": {
            "$ref": "#/components/schemas/HasPushMarketing"
          }
        },
        "required": [
          "channel",
          "can_receive_marketing",
          "consent_status"
        ]
      },
      "NoPushMarketing": {
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/AnyEnum"
          }
        },
        "required": [
          "subscription"
        ]
      },
      "NoPushMarketingConsent": {
        "type": "object",
        "properties": {
          "channel": {
            "$ref": "#/components/schemas/PushEnum"
          },
          "can_receive_marketing": {
            "enum": [
              false
            ]
          },
          "consent_status": {
            "$ref": "#/components/schemas/NoPushMarketing"
          }
        },
        "required": [
          "channel",
          "can_receive_marketing",
          "consent_status"
        ]
      },
      "ProfileMarketingConsentCondition": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileMarketingConsentEnum"
          },
          "consent": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/HasEmailMarketingConsent"
              },
              {
                "$ref": "#/components/schemas/NoEmailMarketingConsent"
              },
              {
                "$ref": "#/components/schemas/HasSMSMarketingConsent"
              },
              {
                "$ref": "#/components/schemas/NoSMSMarketingConsent"
              },
              {
                "$ref": "#/components/schemas/HasPushMarketingConsent"
              },
              {
                "$ref": "#/components/schemas/NoPushMarketingConsent"
              }
            ]
          }
        },
        "required": [
          "type",
          "consent"
        ]
      },
      "ProfilePostalCodeDistanceEnum": {
        "type": "string",
        "enum": [
          "profile-postal-code-distance"
        ]
      },
      "GreaterThanEnum": {
        "type": "string",
        "enum": [
          "greater-than"
        ]
      },
      "LessThanEnum": {
        "type": "string",
        "enum": [
          "less-than"
        ]
      },
      "UnionPositiveNumericFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/NumericEnum"
          },
          "operator": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/GreaterThanEnum"
              },
              {
                "$ref": "#/components/schemas/LessThanEnum"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "number"
              }
            ]
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "ProfilePostalCodeDistanceCondition": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfilePostalCodeDistanceEnum"
          },
          "country_code": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          },
          "unit": {
            "description": "Units for profile postal code distance conditions.",
            "type": "string",
            "enum": [
              "kilometers",
              "miles"
            ]
          },
          "filter": {
            "$ref": "#/components/schemas/UnionPositiveNumericFilter"
          }
        },
        "required": [
          "type",
          "country_code",
          "postal_code",
          "unit",
          "filter"
        ]
      },
      "ProfilePropertyEnum": {
        "type": "string",
        "enum": [
          "profile-property"
        ]
      },
      "StringPhoneOperatorArrayFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/StringEnum"
          },
          "operator": {
            "description": "Operators for phone string array filters.\n\nExample condition using this filter:\n    {",
            "type": "string",
            "enum": [
              "phone-country-code-in",
              "phone-country-code-not-in"
            ]
          },
          "value": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "ListContainsOperatorFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ListEnum"
          },
          "operator": {
            "description": "Operators for list contains filters.",
            "type": "string",
            "enum": [
              "contains",
              "not-contains"
            ]
          },
          "value": {
            "nullable": true,
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ]
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "ProfilePropertyCondition": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfilePropertyEnum"
          },
          "property": {
            "type": "string"
          },
          "filter": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringOperatorFilter"
              },
              {
                "$ref": "#/components/schemas/StringArrayOperatorFilter"
              },
              {
                "$ref": "#/components/schemas/StringPhoneOperatorArrayFilter"
              },
              {
                "$ref": "#/components/schemas/NumericOperatorFilter"
              },
              {
                "$ref": "#/components/schemas/BooleanFilter"
              },
              {
                "$ref": "#/components/schemas/StaticDateFilter"
              },
              {
                "$ref": "#/components/schemas/StaticDateRangeFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateOperatorBaseFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeAnniversaryDateFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateRangeFilter"
              },
              {
                "$ref": "#/components/schemas/CalendarDateFilter"
              },
              {
                "$ref": "#/components/schemas/AnniversaryDateFilter"
              },
              {
                "$ref": "#/components/schemas/ListContainsOperatorFilter"
              },
              {
                "$ref": "#/components/schemas/ListLengthFilter"
              },
              {
                "$ref": "#/components/schemas/ExistenceOperatorFilter"
              }
            ]
          }
        },
        "required": [
          "type",
          "property",
          "filter"
        ]
      },
      "ProfileRegionEnum": {
        "type": "string",
        "enum": [
          "profile-region"
        ]
      },
      "ProfileRegionCondition": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileRegionEnum"
          },
          "in_region": {
            "type": "boolean"
          },
          "region": {
            "description": "Regions for profile region conditions.",
            "type": "string",
            "enum": [
              "european_union",
              "united_states"
            ]
          }
        },
        "required": [
          "type",
          "in_region",
          "region"
        ]
      },
      "ProfilePredictiveAnalyticsEnum": {
        "type": "string",
        "enum": [
          "profile-predictive-analytics"
        ]
      },
      "ProfilePredictiveAnalyticsNumericCondition": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfilePredictiveAnalyticsEnum"
          },
          "dimension": {
            "description": "Dimensions for numeric profile predictive analytics conditions.",
            "type": "string",
            "enum": [
              "average_days_between_orders",
              "average_order_value",
              "churn_probability",
              "historic_clv",
              "historic_number_of_orders",
              "predicted_clv",
              "predicted_number_of_orders",
              "total_clv"
            ]
          },
          "filter": {
            "$ref": "#/components/schemas/NumericOperatorFilter"
          }
        },
        "required": [
          "type",
          "dimension",
          "filter"
        ]
      },
      "NotEqualsEnum": {
        "type": "string",
        "enum": [
          "not-equals"
        ]
      },
      "ProfilePredictiveAnalyticsStringFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/StringEnum"
          },
          "operator": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EqualsEnum"
              },
              {
                "$ref": "#/components/schemas/NotEqualsEnum"
              }
            ]
          },
          "value": {
            "description": "Values for profile predictive analytics gender conditions.",
            "type": "string",
            "enum": [
              "likely_female",
              "likely_male",
              "uncertain"
            ]
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "ProfilePredictiveAnalyticsStringCondition": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfilePredictiveAnalyticsEnum"
          },
          "dimension": {
            "description": "Dimension for string profile predictive analytics conditions.",
            "type": "string",
            "enum": [
              "predicted_gender"
            ]
          },
          "filter": {
            "$ref": "#/components/schemas/ProfilePredictiveAnalyticsStringFilter"
          }
        },
        "required": [
          "type",
          "dimension",
          "filter"
        ]
      },
      "ConditionGroup": {
        "type": "object",
        "properties": {
          "conditions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ProfileHasGroupMembershipCondition"
                },
                {
                  "$ref": "#/components/schemas/ProfileNoGroupMembershipCondition"
                },
                {
                  "$ref": "#/components/schemas/ProfileMetricCondition"
                },
                {
                  "$ref": "#/components/schemas/ProfileMarketingConsentCondition"
                },
                {
                  "$ref": "#/components/schemas/ProfilePostalCodeDistanceCondition"
                },
                {
                  "$ref": "#/components/schemas/ProfilePropertyCondition"
                },
                {
                  "$ref": "#/components/schemas/ProfileRegionCondition"
                },
                {
                  "$ref": "#/components/schemas/ProfilePredictiveAnalyticsNumericCondition"
                },
                {
                  "$ref": "#/components/schemas/ProfilePredictiveAnalyticsStringCondition"
                }
              ]
            }
          }
        },
        "required": [
          "conditions"
        ]
      },
      "SegmentDefinition": {
        "type": "object",
        "properties": {
          "condition_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConditionGroup"
            }
          }
        },
        "required": [
          "condition_groups"
        ]
      },
      "SegmentListResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SegmentEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "A helpful name to label the segment",
                "type": "string",
                "example": "Repeat Purchasers",
                "nullable": true
              },
              "definition": {
                "$ref": "#/components/schemas/SegmentDefinition",
                "nullable": true
              },
              "created": {
                "description": "Date and time when the segment was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "updated": {
                "description": "Date and time when the segment was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "is_active": {
                "type": "boolean"
              },
              "is_processing": {
                "type": "boolean"
              },
              "is_starred": {
                "type": "boolean"
              }
            },
            "required": [
              "is_active",
              "is_processing",
              "is_starred"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetSegmentListResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SegmentListResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "profiles": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/TagEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "flow-triggers": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/FlowEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/FlowResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/TagResponseObjectResource"
                }
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "SegmentRetrieveResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SegmentEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "A helpful name to label the segment",
                "type": "string",
                "example": "Repeat Purchasers",
                "nullable": true
              },
              "definition": {
                "$ref": "#/components/schemas/SegmentDefinition",
                "nullable": true
              },
              "created": {
                "description": "Date and time when the segment was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "updated": {
                "description": "Date and time when the segment was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "is_active": {
                "type": "boolean"
              },
              "is_processing": {
                "type": "boolean"
              },
              "is_starred": {
                "type": "boolean"
              }
            },
            "required": [
              "is_active",
              "is_processing",
              "is_starred"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetSegmentRetrieveResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SegmentRetrieveResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "profiles": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/TagEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "flow-triggers": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/FlowEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "properties": {
                  "type": {
                    "$ref": "#/components/schemas/SegmentEnum"
                  },
                  "attributes": {
                    "properties": {
                      "profile_count": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/FlowResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/TagResponseObjectResource"
                }
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetSegmentTagRelationshipListResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/TagEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetSegmentRelationshipsResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/ProfileEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "SegmentMemberResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
            "nullable": true
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "description": "Individual's email address",
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com",
                "nullable": true
              },
              "phone_number": {
                "description": "Individual's phone number in E.164 format",
                "type": "string",
                "example": "+15005550006",
                "nullable": true
              },
              "external_id": {
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.",
                "type": "string",
                "nullable": true
              },
              "first_name": {
                "description": "Individual's first name",
                "type": "string",
                "example": "Sarah",
                "nullable": true
              },
              "last_name": {
                "description": "Individual's last name",
                "type": "string",
                "example": "Mason",
                "nullable": true
              },
              "organization": {
                "description": "Name of the company or organization within the company for whom the individual works",
                "type": "string",
                "example": "Example Corporation",
                "nullable": true
              },
              "locale": {
                "description": "The locale of the profile, in the IETF BCP 47 language tag format like (ISO 639-1/2)-(ISO 3166 alpha-2)",
                "type": "string",
                "example": "en-US",
                "nullable": true
              },
              "title": {
                "description": "Individual's job title",
                "type": "string",
                "example": "Regional Manager",
                "nullable": true
              },
              "image": {
                "description": "URL pointing to the location of a profile image",
                "type": "string",
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "nullable": true
              },
              "created": {
                "description": "Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "updated": {
                "description": "Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "last_event_date": {
                "description": "Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation",
                "nullable": true
              },
              "properties": {
                "description": "An object containing key/value pairs for any custom properties assigned to this profile",
                "type": "object",
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "nullable": true
              },
              "joined_group_at": {
                "description": "The datetime when this profile most recently joined the segment.",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00"
              }
            },
            "required": [
              "joined_group_at"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "attributes",
          "links"
        ]
      },
      "GetSegmentMemberResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SegmentMemberResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "lists": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "segments": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "properties": {
                    "type": {
                      "$ref": "#/components/schemas/ProfileEnum"
                    },
                    "attributes": {
                      "properties": {
                        "subscriptions": {
                          "$ref": "#/components/schemas/Subscriptions",
                          "nullable": true
                        },
                        "predictive_analytics": {
                          "$ref": "#/components/schemas/PredictiveAnalytics",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetSegmentFlowTriggersRelationshipsResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/FlowEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetProfileResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ProfileResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "lists": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "segments": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "properties": {
                    "type": {
                      "$ref": "#/components/schemas/ProfileEnum"
                    },
                    "attributes": {
                      "properties": {
                        "subscriptions": {
                          "$ref": "#/components/schemas/Subscriptions",
                          "nullable": true
                        },
                        "predictive_analytics": {
                          "$ref": "#/components/schemas/PredictiveAnalytics",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetProfileResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProfileResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "lists": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/ListEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "segments": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/SegmentEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "properties": {
                  "type": {
                    "$ref": "#/components/schemas/ProfileEnum"
                  },
                  "attributes": {
                    "properties": {
                      "subscriptions": {
                        "$ref": "#/components/schemas/Subscriptions",
                        "nullable": true
                      },
                      "predictive_analytics": {
                        "$ref": "#/components/schemas/PredictiveAnalytics",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ListResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/SegmentResponseObjectResource"
                }
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ListResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ListEnum"
          },
          "id": {
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
            "type": "string",
            "example": "Y6nRLr"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "A helpful name to label the list",
                "type": "string",
                "example": "Newsletter",
                "nullable": true
              },
              "created": {
                "description": "Date and time when the list was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "updated": {
                "description": "Date and time when the list was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "opt_in_process": {
                "description": "The opt-in process for this list.  Could be either 'single_opt_in' or 'double_opt_in'.",
                "type": "string",
                "enum": [
                  "double_opt_in",
                  "single_opt_in"
                ],
                "nullable": true
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetListResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ListResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "profiles": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "flow-triggers": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetProfileListRelationshipsResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/ListEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "SegmentResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SegmentEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "A helpful name to label the segment",
                "type": "string",
                "example": "Repeat Purchasers",
                "nullable": true
              },
              "definition": {
                "$ref": "#/components/schemas/SegmentDefinition",
                "nullable": true
              },
              "created": {
                "description": "Date and time when the segment was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "updated": {
                "description": "Date and time when the segment was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "is_active": {
                "type": "boolean"
              },
              "is_processing": {
                "type": "boolean"
              },
              "is_starred": {
                "type": "boolean"
              }
            },
            "required": [
              "is_active",
              "is_processing",
              "is_starred"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetSegmentResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SegmentResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "profiles": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "flow-triggers": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetProfileSegmentRelationshipsResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/SegmentEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileBulkImportJobEnum": {
        "type": "string",
        "enum": [
          "profile-bulk-import-job"
        ]
      },
      "ProfileImportJobResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileBulkImportJobEnum"
          },
          "id": {
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "Status of the asynchronous job.",
                "type": "string",
                "example": "processing",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ]
              },
              "created_at": {
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00"
              },
              "total_count": {
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                "type": "integer",
                "example": 10
              },
              "completed_count": {
                "description": "The total number of operations that have been completed by the job.",
                "type": "integer",
                "example": 9,
                "default": 0,
                "nullable": true
              },
              "failed_count": {
                "description": "The total number of operations that have failed as part of the job.",
                "type": "integer",
                "example": 1,
                "default": 0,
                "nullable": true
              },
              "completed_at": {
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "expires_at": {
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "started_at": {
                "description": "Date and time the job started processing in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetProfileImportJobResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ProfileImportJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "lists": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/ListEnum"
                                  },
                                  "id": {
                                    "description": "List to add the profiles to",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "profiles": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "import-errors": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/OnlyRelatedLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetProfileImportJobResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProfileImportJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "lists": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/ListEnum"
                                },
                                "id": {
                                  "description": "List to add the profiles to",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "profiles": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "import-errors": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/OnlyRelatedLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetProfileImportJobListRelationshipsResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/ListEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetProfileResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ProfileResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "lists": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "segments": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "properties": {
                    "type": {
                      "$ref": "#/components/schemas/ProfileEnum"
                    },
                    "attributes": {
                      "properties": {
                        "subscriptions": {
                          "$ref": "#/components/schemas/Subscriptions",
                          "nullable": true
                        },
                        "predictive_analytics": {
                          "$ref": "#/components/schemas/PredictiveAnalytics",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetProfileImportJobProfileRelationshipsResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/ProfileEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ImportErrorEnum": {
        "type": "string",
        "enum": [
          "import-error"
        ]
      },
      "ImportErrorResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ImportErrorEnum"
          },
          "id": {
            "description": "Unique identifier for the error.",
            "type": "string",
            "example": "e4eebb08-b055-4a6f-bb13-c8cb69c9eb94"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "code": {
                "description": "A code for classifying the error type.",
                "type": "string",
                "example": "invalid"
              },
              "title": {
                "description": "A high-level message about the error.",
                "type": "string",
                "example": "Invalid input"
              },
              "detail": {
                "description": "Specific details about the error.",
                "type": "string",
                "example": "The payload provided in the request is invalid."
              },
              "source": {
                "description": "Additional information on the source of the error.",
                "$ref": "#/components/schemas/ErrorSource"
              },
              "original_payload": {
                "type": "object",
                "nullable": true
              }
            },
            "required": [
              "code",
              "title",
              "detail",
              "source"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "GetImportErrorResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImportErrorResponseObjectResource"
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetFlowResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FlowResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "flow-actions": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/FlowActionEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/TagEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/FlowActionResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/TagResponseObjectResource"
                }
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetFlowResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FlowResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "flow-actions": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/FlowActionEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/TagEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/FlowActionResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/TagResponseObjectResource"
                }
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "UtmParamInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "value"
        ]
      },
      "EmailTrackingOptions": {
        "type": "object",
        "properties": {
          "add_utm": {
            "type": "boolean"
          },
          "utm_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UtmParamInfo"
            }
          },
          "is_tracking_opens": {
            "type": "boolean"
          },
          "is_tracking_clicks": {
            "type": "boolean"
          }
        },
        "required": [
          "add_utm",
          "utm_params",
          "is_tracking_opens",
          "is_tracking_clicks"
        ]
      },
      "SMSTrackingOptions": {
        "type": "object",
        "properties": {
          "add_utm": {
            "type": "boolean"
          },
          "utm_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UtmParamInfo"
            }
          }
        },
        "required": [
          "add_utm",
          "utm_params"
        ]
      },
      "SendOptions": {
        "type": "object",
        "properties": {
          "use_smart_sending": {
            "type": "boolean"
          },
          "is_transactional": {
            "type": "boolean"
          }
        },
        "required": [
          "use_smart_sending",
          "is_transactional"
        ]
      },
      "SMSRenderOptions": {
        "type": "object",
        "properties": {
          "shorten_links": {
            "type": "boolean"
          },
          "add_org_prefix": {
            "type": "boolean"
          },
          "add_info_link": {
            "type": "boolean"
          },
          "add_opt_out_language": {
            "type": "boolean"
          }
        },
        "required": [
          "shorten_links",
          "add_org_prefix",
          "add_info_link",
          "add_opt_out_language"
        ]
      },
      "FlowActionEnum": {
        "type": "string",
        "enum": [
          "flow-action"
        ]
      },
      "FlowActionResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FlowActionEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "action_type": {
                "type": "string",
                "nullable": true
              },
              "status": {
                "type": "string",
                "nullable": true
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "settings": {
                "type": "object",
                "nullable": true
              },
              "tracking_options": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailTrackingOptions"
                  },
                  {
                    "$ref": "#/components/schemas/SMSTrackingOptions"
                  }
                ]
              },
              "send_options": {
                "$ref": "#/components/schemas/SendOptions",
                "nullable": true
              },
              "render_options": {
                "$ref": "#/components/schemas/SMSRenderOptions",
                "nullable": true
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetFlowActionResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FlowActionResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "flow": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "flow-messages": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetFlowFlowActionRelationshipListResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/FlowActionEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetFlowTagRelationshipListResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/TagEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetFlowActionResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FlowActionResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "flow": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/FlowEnum"
                              },
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ]
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "flow-messages": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/FlowMessageEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/FlowResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/FlowMessageResponseObjectResource"
                }
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetFlowResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FlowResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "flow-actions": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GetFlowActionFlowRelationshipResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/FlowEnum"
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "type",
              "id"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "EmailMessageContent": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string"
          },
          "preview_text": {
            "type": "string"
          },
          "from_email": {
            "type": "string"
          },
          "from_label": {
            "type": "string"
          },
          "reply_to_email": {
            "type": "string",
            "nullable": true
          },
          "cc_email": {
            "type": "string",
            "nullable": true
          },
          "bcc_email": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "subject",
          "preview_text",
          "from_email",
          "from_label"
        ]
      },
      "SMSMessageContent": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          },
          "media_url": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "body"
        ]
      },
      "MobilePushMessageContent": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "sound": {
            "type": "boolean",
            "default": false
          },
          "badge": {
            "type": "boolean",
            "default": false
          },
          "media_url": {
            "type": "string",
            "nullable": true
          },
          "dynamic_image": {
            "type": "string",
            "nullable": true
          },
          "ios_link": {
            "type": "string",
            "nullable": true
          },
          "android_link": {
            "type": "string",
            "nullable": true
          },
          "on_open": {
            "type": "string",
            "example": "home",
            "default": "home"
          }
        },
        "required": [
          "title",
          "body"
        ]
      },
      "FlowMessageEnum": {
        "type": "string",
        "enum": [
          "flow-message"
        ]
      },
      "FlowMessageResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FlowMessageEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "channel": {
                "type": "string"
              },
              "content": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailMessageContent"
                  },
                  {
                    "$ref": "#/components/schemas/SMSMessageContent"
                  },
                  {
                    "$ref": "#/components/schemas/MobilePushMessageContent"
                  }
                ]
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              }
            },
            "required": [
              "name",
              "channel",
              "content"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetFlowMessageResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FlowMessageResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "flow-action": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "template": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetFlowActionFlowMessageRelationshipResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/FlowMessageEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetFlowMessageResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FlowMessageResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "flow-action": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/FlowActionEnum"
                              },
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ]
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "template": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/TemplateEnum"
                              },
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ]
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/FlowActionResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/TemplateResponseObjectResource"
                }
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetFlowActionResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FlowActionResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "flow": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "flow-messages": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GetFlowMessageFlowActionRelationshipResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/FlowActionEnum"
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "type",
              "id"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GetFlowMessageTemplateRelationshipResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TemplateEnum"
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "type",
              "id"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "TemplateEnum": {
        "type": "string",
        "enum": [
          "template"
        ]
      },
      "TemplateResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TemplateEnum"
          },
          "id": {
            "description": "The ID of template",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of the template",
                "type": "string"
              },
              "editor_type": {
                "description": "`editor_type` has a fixed set of values:\n* SYSTEM_DRAGGABLE: indicates a drag-and-drop editor template\n* SIMPLE: A rich text editor template\n* CODE: A custom HTML template\n* USER_DRAGGABLE: A hybrid template, using custom HTML in the drag-and-drop editor",
                "type": "string"
              },
              "html": {
                "description": "The rendered HTML of the template",
                "type": "string"
              },
              "text": {
                "description": "The template plain_text",
                "type": "string",
                "nullable": true
              },
              "created": {
                "description": "The date the template was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "updated": {
                "description": "The date the template was updated in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              }
            },
            "required": [
              "name",
              "editor_type",
              "html"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetTemplateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateResponseObjectResource"
          }
        },
        "required": [
          "data"
        ]
      },
      "CampaignEnum": {
        "type": "string",
        "enum": [
          "campaign"
        ]
      },
      "AudiencesSubObject": {
        "type": "object",
        "properties": {
          "included": {
            "description": "A list of included audiences",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Y6nRLr"
            ],
            "nullable": true
          },
          "excluded": {
            "description": "An optional list of excluded audiences",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "UTd5ui"
            ],
            "nullable": true
          }
        }
      },
      "EmailSendOptionsSubObject": {
        "type": "object",
        "properties": {
          "use_smart_sending": {
            "description": "Use smart sending. Defaults to True",
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "SMSSendOptionsSubObject": {
        "type": "object",
        "properties": {
          "use_smart_sending": {
            "description": "Use smart sending. Defaults to True",
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "DynamicEnum": {
        "type": "string",
        "enum": [
          "dynamic"
        ]
      },
      "DynamicTrackingParam": {
        "type": "object",
        "properties": {
          "type": {
            "description": "The type of the tracking parameter",
            "$ref": "#/components/schemas/DynamicEnum"
          },
          "value": {
            "description": "The value of the tracking parameter",
            "type": "string",
            "enum": [
              "campaign_id",
              "campaign_name",
              "campaign_name_id",
              "campaign_name_send_day",
              "email_subject",
              "group_id",
              "group_name",
              "group_name_id",
              "link_alt_text",
              "message_type",
              "profile_external_id",
              "profile_id"
            ]
          },
          "name": {
            "description": "Name of the tracking param",
            "type": "string",
            "example": "utm_medium"
          }
        },
        "required": [
          "type",
          "value",
          "name"
        ]
      },
      "StaticEnum": {
        "type": "string",
        "enum": [
          "static"
        ]
      },
      "StaticTrackingParam": {
        "type": "object",
        "properties": {
          "type": {
            "description": "The type of the tracking parameter",
            "$ref": "#/components/schemas/StaticEnum"
          },
          "value": {
            "description": "The value of the tracking parameter",
            "type": "string"
          },
          "name": {
            "description": "Name of the tracking param",
            "type": "string",
            "example": "utm_medium"
          }
        },
        "required": [
          "type",
          "value",
          "name"
        ]
      },
      "EmailTrackingOptionsSubObject": {
        "type": "object",
        "properties": {
          "add_tracking_params": {
            "description": "Whether the campaign needs custom tracking parameters. If set to False, tracking params will not be used.",
            "type": "boolean",
            "nullable": true
          },
          "custom_tracking_params": {
            "description": "A list of custom tracking parameters. If an empty list is given and add_tracking_params is True, uses company defaults.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DynamicTrackingParam"
                },
                {
                  "$ref": "#/components/schemas/StaticTrackingParam"
                }
              ]
            },
            "nullable": true
          },
          "is_tracking_clicks": {
            "description": "Whether the campaign is tracking click events. If not specified, uses company defaults.",
            "type": "boolean",
            "nullable": true
          },
          "is_tracking_opens": {
            "description": "Whether the campaign is tracking open events. If not specified, uses company defaults.",
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "SMSTrackingOptionsSubObject": {
        "type": "object",
        "properties": {
          "add_tracking_params": {
            "description": "Whether the campaign needs custom tracking parameters. If set to False, tracking params will not be used.",
            "type": "boolean",
            "nullable": true
          },
          "custom_tracking_params": {
            "description": "A list of custom tracking parameters. If an empty list is given and add_tracking_params is True, uses company defaults.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DynamicTrackingParam"
                },
                {
                  "$ref": "#/components/schemas/StaticTrackingParam"
                }
              ]
            },
            "nullable": true
          }
        }
      },
      "StaticScheduleOptions": {
        "type": "object",
        "properties": {
          "datetime": {
            "description": "The time to send at",
            "type": "string",
            "format": "date-time",
            "example": "2022-11-08T00:00:00+00:00"
          },
          "is_local": {
            "description": "If the campaign should be sent with local recipient timezone send (requires UTC time) or statically sent at the given time. Defaults to False.",
            "type": "boolean",
            "nullable": true
          },
          "send_past_recipients_immediately": {
            "description": "Determines if we should send to local recipient timezone if the given time has passed. Only applicable to local sends. Defaults to False.",
            "type": "boolean",
            "nullable": true
          }
        },
        "required": [
          "datetime"
        ]
      },
      "ThrottledScheduleOptions": {
        "type": "object",
        "properties": {
          "datetime": {
            "description": "The time to send at",
            "type": "string",
            "format": "date-time"
          },
          "throttle_percentage": {
            "description": "The percentage of recipients per hour to send to. Allowed values: [10, 11, 13, 14, 17, 20, 25, 33, 50]",
            "type": "integer"
          }
        },
        "required": [
          "datetime",
          "throttle_percentage"
        ]
      },
      "STOScheduleOptions": {
        "type": "object",
        "properties": {
          "date": {
            "description": "The day to send on",
            "type": "string",
            "format": "date"
          }
        },
        "required": [
          "date"
        ]
      },
      "SendStrategySubObject": {
        "type": "object",
        "properties": {
          "method": {
            "description": "Describes the shape of the options object. Allowed values: ['static', 'throttled', 'immediate', 'smart_send_time']",
            "type": "string",
            "example": "static"
          },
          "options_static": {
            "description": "The send configuration options the campaign will send with. These define variables that alter the send strategy and must match the given method. Intended to be used with the 'static' method.",
            "$ref": "#/components/schemas/StaticScheduleOptions",
            "nullable": true
          },
          "options_throttled": {
            "description": "The send configuration options the campaign will send with. These define variables that alter the send strategy and must match the given method. Intended to be used with the 'throttled' method.",
            "$ref": "#/components/schemas/ThrottledScheduleOptions",
            "nullable": true
          },
          "options_sto": {
            "description": "The send configuration options the campaign will send with. These define variables that alter the send strategy and must match the given method. Intended to be used with the 'smart_send_time' method.",
            "$ref": "#/components/schemas/STOScheduleOptions",
            "nullable": true
          }
        },
        "required": [
          "method"
        ]
      },
      "CampaignResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignEnum"
          },
          "id": {
            "description": "The campaign ID",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The campaign name",
                "type": "string"
              },
              "status": {
                "description": "The current status of the campaign",
                "type": "string"
              },
              "archived": {
                "description": "Whether the campaign has been archived or not",
                "type": "boolean"
              },
              "audiences": {
                "description": "The audiences to be included and/or excluded from the campaign",
                "$ref": "#/components/schemas/AudiencesSubObject"
              },
              "send_options": {
                "description": "Options to use when sending a campaign",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailSendOptionsSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSSendOptionsSubObject"
                  }
                ]
              },
              "tracking_options": {
                "description": "The tracking options associated with the campaign",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailTrackingOptionsSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSTrackingOptionsSubObject"
                  }
                ]
              },
              "send_strategy": {
                "description": "The send strategy the campaign will send with",
                "$ref": "#/components/schemas/SendStrategySubObject"
              },
              "created_at": {
                "description": "The datetime when the campaign was created",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00"
              },
              "scheduled_at": {
                "description": "The datetime when the campaign was scheduled for future sending",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "updated_at": {
                "description": "The datetime when the campaign was last updated by a user or the system",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00"
              },
              "send_time": {
                "description": "The datetime when the campaign will be / was sent or None if not yet scheduled by a send_job.",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              }
            },
            "required": [
              "name",
              "status",
              "archived",
              "audiences",
              "send_options",
              "tracking_options",
              "send_strategy",
              "created_at",
              "updated_at"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCampaignResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CampaignResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "campaign-messages": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CampaignMessageEnum"
                                  },
                                  "id": {
                                    "description": "The message(s) associated with the campaign",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/TagEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CampaignMessageResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/TagResponseObjectResource"
                }
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCampaignResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "campaign-messages": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CampaignMessageEnum"
                                },
                                "id": {
                                  "description": "The message(s) associated with the campaign",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/TagEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CampaignMessageResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/TagResponseObjectResource"
                }
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CampaignMessageEnum": {
        "type": "string",
        "enum": [
          "campaign-message"
        ]
      },
      "EmailContentSubObject": {
        "type": "object",
        "properties": {
          "subject": {
            "description": "The subject of the message",
            "type": "string",
            "example": "Buy our product!",
            "nullable": true
          },
          "preview_text": {
            "description": "Preview text associated with the message",
            "type": "string",
            "example": "My preview text",
            "nullable": true
          },
          "from_email": {
            "description": "The email the message should be sent from",
            "type": "string",
            "example": "store@my-company.com",
            "nullable": true
          },
          "from_label": {
            "description": "The label associated with the from_email",
            "type": "string",
            "example": "My Company",
            "nullable": true
          },
          "reply_to_email": {
            "description": "Optional Reply-To email address",
            "type": "string",
            "example": "reply-to@my-company.com",
            "nullable": true
          },
          "cc_email": {
            "description": "Optional CC email address",
            "type": "string",
            "example": "cc@my-company.com",
            "nullable": true
          },
          "bcc_email": {
            "description": "Optional BCC email address",
            "type": "string",
            "example": "bcc@my-company.com",
            "nullable": true
          }
        }
      },
      "SMSContentSubObject": {
        "type": "object",
        "properties": {
          "body": {
            "description": "The message body",
            "type": "string",
            "example": "My preview sms",
            "nullable": true
          },
          "media_url": {
            "description": "URL for included media",
            "type": "string",
            "nullable": true
          }
        }
      },
      "SendTimeSubObject": {
        "type": "object",
        "properties": {
          "datetime": {
            "description": "The datetime that the message is to be sent",
            "type": "string",
            "format": "date-time",
            "example": "2022-11-08T00:00:00+00:00"
          },
          "is_local": {
            "description": "Whether that datetime is to be a local datetime for the recipient",
            "type": "boolean"
          }
        },
        "required": [
          "datetime",
          "is_local"
        ]
      },
      "RenderOptionsSubObject": {
        "type": "object",
        "properties": {
          "shorten_links": {
            "type": "boolean",
            "example": true,
            "default": true,
            "nullable": true
          },
          "add_org_prefix": {
            "type": "boolean",
            "example": true,
            "default": true,
            "nullable": true
          },
          "add_info_link": {
            "type": "boolean",
            "example": true,
            "default": true,
            "nullable": true
          },
          "add_opt_out_language": {
            "type": "boolean",
            "default": false,
            "nullable": true
          }
        }
      },
      "CampaignMessageResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignMessageEnum"
          },
          "id": {
            "description": "The message ID",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "label": {
                "description": "The label or name on the message",
                "type": "string"
              },
              "channel": {
                "description": "The channel the message is to be sent on",
                "type": "string"
              },
              "content": {
                "description": "Additional attributes relating to the content of the message",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailContentSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSContentSubObject"
                  }
                ]
              },
              "send_times": {
                "description": "The list of appropriate Send Time Sub-objects associated with the message",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SendTimeSubObject"
                },
                "nullable": true
              },
              "render_options": {
                "description": "Additional options for rendering the message",
                "$ref": "#/components/schemas/RenderOptionsSubObject",
                "nullable": true
              },
              "created_at": {
                "description": "The datetime when the message was created",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "updated_at": {
                "description": "The datetime when the message was last updated",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              }
            },
            "required": [
              "label",
              "channel",
              "content"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCampaignMessageResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignMessageResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "campaign": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/CampaignEnum"
                              },
                              "id": {
                                "description": "The parent campaign id",
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ]
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "template": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/TemplateEnum"
                              },
                              "id": {
                                "description": "The associated template id",
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ]
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CampaignResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/TemplateResponseObjectResource"
                }
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCampaignMessageCampaignRelationshipResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CampaignEnum"
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "type",
              "id"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCampaignResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "campaign-messages": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCampaignMessageTemplateRelationshipListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TemplateEnum"
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "type",
              "id"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCampaignTagRelationshipListResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/TagEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCampaignMessagesRelationshipListResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CampaignMessageEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCampaignMessageResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CampaignMessageResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "campaign": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CampaignEnum"
                                },
                                "id": {
                                  "description": "The parent campaign id",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type",
                                "id"
                              ]
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "template": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/TemplateEnum"
                                },
                                "id": {
                                  "description": "The associated template id",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type",
                                "id"
                              ]
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CampaignResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/TemplateResponseObjectResource"
                }
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CampaignSendJobEnum": {
        "type": "string",
        "enum": [
          "campaign-send-job"
        ]
      },
      "CampaignSendJobResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignSendJobEnum"
          },
          "id": {
            "description": "The ID of the campaign to send",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "The status of the send job",
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ]
              }
            },
            "required": [
              "status"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCampaignSendJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignSendJobResponseObjectResource"
          }
        },
        "required": [
          "data"
        ]
      },
      "CampaignRecipientEstimationJobEnum": {
        "type": "string",
        "enum": [
          "campaign-recipient-estimation-job"
        ]
      },
      "CampaignRecipientEstimationJobResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignRecipientEstimationJobEnum"
          },
          "id": {
            "description": "The ID of the campaign used for estimating recipients",
            "type": "string",
            "example": "01GMRWDSA0ARTAKE1SFX8JGXAY"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "The status of the recipient estimation job",
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ]
              }
            },
            "required": [
              "status"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCampaignRecipientEstimationJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignRecipientEstimationJobResponseObjectResource"
          }
        },
        "required": [
          "data"
        ]
      },
      "CampaignRecipientEstimationEnum": {
        "type": "string",
        "enum": [
          "campaign-recipient-estimation"
        ]
      },
      "CampaignRecipientEstimationResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignRecipientEstimationEnum"
          },
          "id": {
            "description": "The ID of the campaign for which to get the estimated number of recipients",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "estimated_recipient_count": {
                "description": "The estimated number of unique recipients the campaign will send to",
                "type": "integer"
              }
            },
            "required": [
              "estimated_recipient_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCampaignRecipientEstimationResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignRecipientEstimationResponseObjectResource"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetTemplateResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateResponseObjectResource"
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogItemBulkCreateJobEnum": {
        "type": "string",
        "enum": [
          "catalog-item-bulk-create-job"
        ]
      },
      "CatalogItemCreateJobResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemBulkCreateJobEnum"
          },
          "id": {
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "Status of the asynchronous job.",
                "type": "string",
                "example": "processing",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ]
              },
              "created_at": {
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00"
              },
              "total_count": {
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                "type": "integer",
                "example": 10
              },
              "completed_count": {
                "description": "The total number of operations that have been completed by the job.",
                "type": "integer",
                "example": 9,
                "default": 0,
                "nullable": true
              },
              "failed_count": {
                "description": "The total number of operations that have failed as part of the job.",
                "type": "integer",
                "example": 1,
                "default": 0,
                "nullable": true
              },
              "completed_at": {
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "errors": {
                "description": "Array of errors encountered during the processing of the job.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                },
                "nullable": true
              },
              "expires_at": {
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCatalogItemCreateJobResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogItemCreateJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CatalogItemEnum"
                                  },
                                  "id": {
                                    "description": "IDs of the created catalog items.",
                                    "type": "string",
                                    "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCatalogItemCreateJobResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogItemCreateJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CatalogItemEnum"
                                },
                                "id": {
                                  "description": "IDs of the created catalog items.",
                                  "type": "string",
                                  "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogItemResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogItemBulkUpdateJobEnum": {
        "type": "string",
        "enum": [
          "catalog-item-bulk-update-job"
        ]
      },
      "CatalogItemUpdateJobResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemBulkUpdateJobEnum"
          },
          "id": {
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "Status of the asynchronous job.",
                "type": "string",
                "example": "processing",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ]
              },
              "created_at": {
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00"
              },
              "total_count": {
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                "type": "integer",
                "example": 10
              },
              "completed_count": {
                "description": "The total number of operations that have been completed by the job.",
                "type": "integer",
                "example": 9,
                "default": 0,
                "nullable": true
              },
              "failed_count": {
                "description": "The total number of operations that have failed as part of the job.",
                "type": "integer",
                "example": 1,
                "default": 0,
                "nullable": true
              },
              "completed_at": {
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "errors": {
                "description": "Array of errors encountered during the processing of the job.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                },
                "nullable": true
              },
              "expires_at": {
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCatalogItemUpdateJobResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogItemUpdateJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CatalogItemEnum"
                                  },
                                  "id": {
                                    "description": "IDs of the updated catalog items.",
                                    "type": "string",
                                    "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCatalogItemUpdateJobResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogItemUpdateJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CatalogItemEnum"
                                },
                                "id": {
                                  "description": "IDs of the updated catalog items.",
                                  "type": "string",
                                  "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogItemResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogItemBulkDeleteJobEnum": {
        "type": "string",
        "enum": [
          "catalog-item-bulk-delete-job"
        ]
      },
      "CatalogItemDeleteJobResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemBulkDeleteJobEnum"
          },
          "id": {
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "Status of the asynchronous job.",
                "type": "string",
                "example": "processing",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ]
              },
              "created_at": {
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00"
              },
              "total_count": {
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                "type": "integer",
                "example": 10
              },
              "completed_count": {
                "description": "The total number of operations that have been completed by the job.",
                "type": "integer",
                "example": 9,
                "default": 0,
                "nullable": true
              },
              "failed_count": {
                "description": "The total number of operations that have failed as part of the job.",
                "type": "integer",
                "example": 1,
                "default": 0,
                "nullable": true
              },
              "completed_at": {
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "errors": {
                "description": "Array of errors encountered during the processing of the job.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                },
                "nullable": true
              },
              "expires_at": {
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCatalogItemDeleteJobResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogItemDeleteJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCatalogItemDeleteJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogItemDeleteJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogVariantBulkCreateJobEnum": {
        "type": "string",
        "enum": [
          "catalog-variant-bulk-create-job"
        ]
      },
      "CatalogVariantCreateJobResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantBulkCreateJobEnum"
          },
          "id": {
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "Status of the asynchronous job.",
                "type": "string",
                "example": "processing",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ]
              },
              "created_at": {
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00"
              },
              "total_count": {
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                "type": "integer",
                "example": 10
              },
              "completed_count": {
                "description": "The total number of operations that have been completed by the job.",
                "type": "integer",
                "example": 9,
                "default": 0,
                "nullable": true
              },
              "failed_count": {
                "description": "The total number of operations that have failed as part of the job.",
                "type": "integer",
                "example": 1,
                "default": 0,
                "nullable": true
              },
              "completed_at": {
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "errors": {
                "description": "Array of errors encountered during the processing of the job.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                },
                "nullable": true
              },
              "expires_at": {
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCatalogVariantCreateJobResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogVariantCreateJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "variants": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CatalogVariantEnum"
                                  },
                                  "id": {
                                    "description": "IDs of the created catalog variants.",
                                    "type": "string",
                                    "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCatalogVariantCreateJobResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogVariantCreateJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "variants": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CatalogVariantEnum"
                                },
                                "id": {
                                  "description": "IDs of the created catalog variants.",
                                  "type": "string",
                                  "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogVariantResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogVariantBulkUpdateJobEnum": {
        "type": "string",
        "enum": [
          "catalog-variant-bulk-update-job"
        ]
      },
      "CatalogVariantUpdateJobResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantBulkUpdateJobEnum"
          },
          "id": {
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "Status of the asynchronous job.",
                "type": "string",
                "example": "processing",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ]
              },
              "created_at": {
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00"
              },
              "total_count": {
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                "type": "integer",
                "example": 10
              },
              "completed_count": {
                "description": "The total number of operations that have been completed by the job.",
                "type": "integer",
                "example": 9,
                "default": 0,
                "nullable": true
              },
              "failed_count": {
                "description": "The total number of operations that have failed as part of the job.",
                "type": "integer",
                "example": 1,
                "default": 0,
                "nullable": true
              },
              "completed_at": {
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "errors": {
                "description": "Array of errors encountered during the processing of the job.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                },
                "nullable": true
              },
              "expires_at": {
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCatalogVariantUpdateJobResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogVariantUpdateJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "variants": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CatalogVariantEnum"
                                  },
                                  "id": {
                                    "description": "IDs of the updated catalog variants.",
                                    "type": "string",
                                    "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCatalogVariantUpdateJobResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogVariantUpdateJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "variants": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CatalogVariantEnum"
                                },
                                "id": {
                                  "description": "IDs of the updated catalog variants.",
                                  "type": "string",
                                  "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogVariantResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogVariantBulkDeleteJobEnum": {
        "type": "string",
        "enum": [
          "catalog-variant-bulk-delete-job"
        ]
      },
      "CatalogVariantDeleteJobResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantBulkDeleteJobEnum"
          },
          "id": {
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "Status of the asynchronous job.",
                "type": "string",
                "example": "processing",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ]
              },
              "created_at": {
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00"
              },
              "total_count": {
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                "type": "integer",
                "example": 10
              },
              "completed_count": {
                "description": "The total number of operations that have been completed by the job.",
                "type": "integer",
                "example": 9,
                "default": 0,
                "nullable": true
              },
              "failed_count": {
                "description": "The total number of operations that have failed as part of the job.",
                "type": "integer",
                "example": 1,
                "default": 0,
                "nullable": true
              },
              "completed_at": {
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "errors": {
                "description": "Array of errors encountered during the processing of the job.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                },
                "nullable": true
              },
              "expires_at": {
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCatalogVariantDeleteJobResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogVariantDeleteJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "variants": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCatalogVariantDeleteJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogVariantDeleteJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "variants": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogCategoryBulkCreateJobEnum": {
        "type": "string",
        "enum": [
          "catalog-category-bulk-create-job"
        ]
      },
      "CatalogCategoryCreateJobResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryBulkCreateJobEnum"
          },
          "id": {
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "Status of the asynchronous job.",
                "type": "string",
                "example": "processing",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ]
              },
              "created_at": {
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00"
              },
              "total_count": {
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                "type": "integer",
                "example": 10
              },
              "completed_count": {
                "description": "The total number of operations that have been completed by the job.",
                "type": "integer",
                "example": 9,
                "default": 0,
                "nullable": true
              },
              "failed_count": {
                "description": "The total number of operations that have failed as part of the job.",
                "type": "integer",
                "example": 1,
                "default": 0,
                "nullable": true
              },
              "completed_at": {
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "errors": {
                "description": "Array of errors encountered during the processing of the job.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                },
                "nullable": true
              },
              "expires_at": {
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCatalogCategoryCreateJobResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogCategoryCreateJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "categories": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CatalogCategoryEnum"
                                  },
                                  "id": {
                                    "description": "IDs of the created catalog categories.",
                                    "type": "string",
                                    "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCatalogCategoryCreateJobResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogCategoryCreateJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "categories": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CatalogCategoryEnum"
                                },
                                "id": {
                                  "description": "IDs of the created catalog categories.",
                                  "type": "string",
                                  "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogCategoryResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogCategoryBulkUpdateJobEnum": {
        "type": "string",
        "enum": [
          "catalog-category-bulk-update-job"
        ]
      },
      "CatalogCategoryUpdateJobResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryBulkUpdateJobEnum"
          },
          "id": {
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "Status of the asynchronous job.",
                "type": "string",
                "example": "processing",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ]
              },
              "created_at": {
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00"
              },
              "total_count": {
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                "type": "integer",
                "example": 10
              },
              "completed_count": {
                "description": "The total number of operations that have been completed by the job.",
                "type": "integer",
                "example": 9,
                "default": 0,
                "nullable": true
              },
              "failed_count": {
                "description": "The total number of operations that have failed as part of the job.",
                "type": "integer",
                "example": 1,
                "default": 0,
                "nullable": true
              },
              "completed_at": {
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "errors": {
                "description": "Array of errors encountered during the processing of the job.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                },
                "nullable": true
              },
              "expires_at": {
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCatalogCategoryUpdateJobResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogCategoryUpdateJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "categories": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CatalogCategoryEnum"
                                  },
                                  "id": {
                                    "description": "IDs of the updated catalog categories.",
                                    "type": "string",
                                    "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCatalogCategoryUpdateJobResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogCategoryUpdateJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "categories": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CatalogCategoryEnum"
                                },
                                "id": {
                                  "description": "IDs of the updated catalog categories.",
                                  "type": "string",
                                  "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogCategoryResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogCategoryBulkDeleteJobEnum": {
        "type": "string",
        "enum": [
          "catalog-category-bulk-delete-job"
        ]
      },
      "CatalogCategoryDeleteJobResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryBulkDeleteJobEnum"
          },
          "id": {
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "Status of the asynchronous job.",
                "type": "string",
                "example": "processing",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ]
              },
              "created_at": {
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00"
              },
              "total_count": {
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                "type": "integer",
                "example": 10
              },
              "completed_count": {
                "description": "The total number of operations that have been completed by the job.",
                "type": "integer",
                "example": 9,
                "default": 0,
                "nullable": true
              },
              "failed_count": {
                "description": "The total number of operations that have failed as part of the job.",
                "type": "integer",
                "example": 1,
                "default": 0,
                "nullable": true
              },
              "completed_at": {
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "errors": {
                "description": "Array of errors encountered during the processing of the job.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                },
                "nullable": true
              },
              "expires_at": {
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCatalogCategoryDeleteJobResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogCategoryDeleteJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "categories": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCatalogCategoryDeleteJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogCategoryDeleteJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "categories": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GetTagResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TagResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "tag-group": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/TagGroupEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type",
                                "id"
                              ]
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "lists": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "segments": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "campaigns": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "flows": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagGroupResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetTagResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TagResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "tag-group": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/TagGroupEnum"
                              },
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ]
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "lists": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "segments": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "campaigns": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "flows": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagGroupResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "TagGroupEnum": {
        "type": "string",
        "enum": [
          "tag-group"
        ]
      },
      "TagGroupResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TagGroupEnum"
          },
          "id": {
            "description": "The Tag Group ID",
            "type": "string",
            "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The Tag Group name",
                "type": "string",
                "example": "My Tag Group"
              },
              "exclusive": {
                "description": "If a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group.",
                "type": "boolean"
              },
              "default": {
                "description": "Every company automatically has one Default Tag Group. The Default Tag Group cannot be deleted, and no other Default Tag Groups can be created. This value is true for the Default Tag Group and false for all other Tag Groups.",
                "type": "boolean"
              }
            },
            "required": [
              "name",
              "exclusive",
              "default"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetTagGroupResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TagGroupResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "tags": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetTagGroupResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TagGroupResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "tags": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GetTagFlowRelationshipsResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/FlowEnum"
                },
                "id": {
                  "description": "The IDs of all flows that are associated with the Tag",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetTagCampaignRelationshipsResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CampaignEnum"
                },
                "id": {
                  "description": "The IDs of all campaigns that are associated with the Tag",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetTagListRelationshipsResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/ListEnum"
                },
                "id": {
                  "description": "The IDs of all lists that are associated with the Tag",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetTagSegmentRelationshipsResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/SegmentEnum"
                },
                "id": {
                  "description": "The IDs of all segments that are associated with the Tag",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetTagTagGroupRelationshipsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TagGroupEnum"
              },
              "id": {
                "description": "The ID of the Tag Group the Tag is associated with",
                "type": "string",
                "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
              }
            },
            "required": [
              "type",
              "id"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GetTagGroupTagRelationshipsResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/TagEnum"
                },
                "id": {
                  "description": "The IDs of the Tags that are associated with the Tag Group",
                  "type": "string",
                  "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "WebhookEnum": {
        "type": "string",
        "enum": [
          "webhook"
        ]
      },
      "WebhookResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/WebhookEnum"
          },
          "id": {
            "description": "The ID of the webhook.",
            "type": "string",
            "example": "01HF7AYTK76RHR4F17G6DGTRGF"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "A name for the webhook.",
                "type": "string",
                "example": "My Webhook"
              },
              "description": {
                "description": "A description for the webhook.",
                "type": "string",
                "example": "A webhook for sms events",
                "nullable": true
              },
              "endpoint_url": {
                "description": "The url to send webhook requests to, truncated for security.",
                "type": "string",
                "example": "https://www.example.com"
              },
              "enabled": {
                "description": "Is the webhook enabled.",
                "type": "boolean"
              },
              "created_at": {
                "description": "Date and time when the webhook was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T01:23:45+00:00"
              },
              "updated_at": {
                "description": "Date and time when the webhook was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T01:23:45+00:00"
              }
            },
            "required": [
              "name",
              "endpoint_url",
              "enabled",
              "created_at",
              "updated_at"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetWebhookResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WebhookResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "webhook-topics": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/WebhookTopicEnum"
                                  },
                                  "id": {
                                    "description": "A topic the webhook is subscribed to.",
                                    "type": "string",
                                    "example": "event:klaviyo.sent_sms"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhookTopicResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetWebhookResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WebhookResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "webhook-topics": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/WebhookTopicEnum"
                                },
                                "id": {
                                  "description": "A topic the webhook is subscribed to.",
                                  "type": "string",
                                  "example": "event:klaviyo.sent_sms"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhookTopicResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "WebhookTopicEnum": {
        "type": "string",
        "enum": [
          "webhook-topic"
        ]
      },
      "WebhookTopicResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/WebhookTopicEnum"
          },
          "id": {
            "description": "The ID of the webhook topic.",
            "type": "string",
            "example": "event:klaviyo.sent_sms"
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "links"
        ]
      },
      "GetWebhookTopicResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhookTopicResponseObjectResource"
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetWebhookTopicResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/WebhookTopicResponseObjectResource"
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileSuppressionBulkCreateJobEnum": {
        "type": "string",
        "enum": [
          "profile-suppression-bulk-create-job"
        ]
      },
      "BulkProfileSuppressionsCreateJobResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileSuppressionBulkCreateJobEnum"
          },
          "id": {
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "Status of the asynchronous job.",
                "type": "string",
                "example": "processing",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ]
              },
              "created_at": {
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00"
              },
              "total_count": {
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                "type": "integer",
                "example": 10
              },
              "completed_count": {
                "description": "The total number of operations that have been completed by the job.",
                "type": "integer",
                "example": 9,
                "default": 0,
                "nullable": true
              },
              "completed_at": {
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "skipped_count": {
                "description": "The total number of profiles that have been skipped as part of the job.",
                "type": "integer",
                "example": 1,
                "default": 0,
                "nullable": true
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetBulkProfileSuppressionsCreateJobResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/BulkProfileSuppressionsCreateJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "lists": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "segments": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetBulkProfileSuppressionsCreateJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BulkProfileSuppressionsCreateJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "lists": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "segments": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileSuppressionBulkDeleteJobEnum": {
        "type": "string",
        "enum": [
          "profile-suppression-bulk-delete-job"
        ]
      },
      "BulkProfileSuppressionsRemoveJobResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileSuppressionBulkDeleteJobEnum"
          },
          "id": {
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "Status of the asynchronous job.",
                "type": "string",
                "example": "processing",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ]
              },
              "created_at": {
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00"
              },
              "total_count": {
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                "type": "integer",
                "example": 10
              },
              "completed_count": {
                "description": "The total number of operations that have been completed by the job.",
                "type": "integer",
                "example": 9,
                "default": 0,
                "nullable": true
              },
              "completed_at": {
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "skipped_count": {
                "description": "The total number of profiles that have been skipped as part of the job.",
                "type": "integer",
                "example": 1,
                "default": 0,
                "nullable": true
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetBulkProfileSuppressionsRemoveJobResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/BulkProfileSuppressionsRemoveJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "lists": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "segments": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetBulkProfileSuppressionsRemoveJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BulkProfileSuppressionsRemoveJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "lists": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "segments": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountEnum": {
        "type": "string",
        "enum": [
          "account"
        ]
      },
      "StreetAddress": {
        "type": "object",
        "properties": {
          "address1": {
            "type": "string",
            "example": "125 Summer Street",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "example": "5th Floor",
            "nullable": true
          },
          "city": {
            "type": "string",
            "example": "Boston"
          },
          "region": {
            "description": "State, province, or region.",
            "type": "string",
            "example": "MA",
            "nullable": true
          },
          "country": {
            "description": "Two-letter [ISO country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes)",
            "type": "string",
            "example": "US",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "example": "04323",
            "nullable": true
          }
        },
        "required": [
          "city"
        ]
      },
      "ContactInformation": {
        "type": "object",
        "properties": {
          "default_sender_name": {
            "description": "This field is used to auto-populate the default sender name on flow and campaign emails.",
            "type": "string",
            "example": "Klaviyo Demo"
          },
          "default_sender_email": {
            "description": "This field is used to auto-populate the default sender email address on flow and campaign emails.",
            "type": "string",
            "example": "contact@klaviyo-demo.com"
          },
          "website_url": {
            "type": "string",
            "example": "https://www.klaviyo.com",
            "nullable": true
          },
          "organization_name": {
            "type": "string",
            "example": "Klaviyo Demo"
          },
          "street_address": {
            "description": "Street address for your organization.",
            "$ref": "#/components/schemas/StreetAddress"
          }
        },
        "required": [
          "default_sender_name",
          "default_sender_email",
          "organization_name",
          "street_address"
        ]
      },
      "AccountResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/AccountEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "test_account": {
                "description": "Indicates if the account is a test account. Test accounts are not a separate testing engineering environment. Test accounts use the same production environment as normal Klaviyo accounts. This feature is primarily UI based to reduce human errors",
                "type": "boolean"
              },
              "contact_information": {
                "description": "Contact information for the account. This is used in email footers by default to comply with the CAN-SPAM act.",
                "$ref": "#/components/schemas/ContactInformation"
              },
              "industry": {
                "description": "The kind of business and/or types of goods that the business sells. This is leveraged in Klaviyo analytics and guidance.",
                "type": "string",
                "example": "Software / SaaS",
                "nullable": true
              },
              "timezone": {
                "description": "The account's timezone is used when displaying dates and times. This is an IANA timezone. See [the full list here ](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).",
                "type": "string",
                "example": "US/Eastern"
              },
              "preferred_currency": {
                "description": "The preferred currency for the account. This is the currency used for currency-based metrics in dashboards, analytics, coupons, and templates.",
                "type": "string",
                "example": "USD"
              },
              "public_api_key": {
                "description": "The Public API Key can be used for client-side API calls. [More info here](https://developers.klaviyo.com/en/docs/retrieve_api_credentials).",
                "type": "string",
                "example": "AbC123"
              },
              "locale": {
                "description": "The account's locale is used to determine the region and language for the account.",
                "type": "string",
                "example": "en-US"
              }
            },
            "required": [
              "test_account",
              "contact_information",
              "timezone",
              "preferred_currency",
              "public_api_key",
              "locale"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetAccountResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountResponseObjectResource"
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetAccountResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountResponseObjectResource"
          }
        },
        "required": [
          "data"
        ]
      },
      "ImageEnum": {
        "type": "string",
        "enum": [
          "image"
        ]
      },
      "ImageResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ImageEnum"
          },
          "id": {
            "description": "The ID of the image",
            "type": "string",
            "example": "7"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "image_url": {
                "type": "string"
              },
              "format": {
                "type": "string"
              },
              "size": {
                "type": "integer"
              },
              "hidden": {
                "type": "boolean"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00"
              }
            },
            "required": [
              "name",
              "image_url",
              "format",
              "size",
              "hidden",
              "updated_at"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetImageResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageResponseObjectResource"
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetImageResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ImageResponseObjectResource"
          }
        },
        "required": [
          "data"
        ]
      },
      "TemplateUniversalContentEnum": {
        "type": "string",
        "enum": [
          "template-universal-content"
        ]
      },
      "BlockEnum": {
        "type": "string",
        "enum": [
          "block"
        ]
      },
      "ButtonEnum": {
        "type": "string",
        "enum": [
          "button"
        ]
      },
      "ButtonBlock": {
        "type": "object",
        "properties": {
          "content_type": {
            "$ref": "#/components/schemas/BlockEnum"
          },
          "type": {
            "$ref": "#/components/schemas/ButtonEnum"
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "type",
          "data"
        ]
      },
      "Drop_shadowEnum": {
        "type": "string",
        "enum": [
          "drop_shadow"
        ]
      },
      "DropShadowBlock": {
        "type": "object",
        "properties": {
          "content_type": {
            "$ref": "#/components/schemas/BlockEnum"
          },
          "type": {
            "$ref": "#/components/schemas/Drop_shadowEnum"
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "type",
          "data"
        ]
      },
      "HeaderEnum": {
        "type": "string",
        "enum": [
          "header"
        ]
      },
      "HeaderBlock": {
        "type": "object",
        "properties": {
          "content_type": {
            "$ref": "#/components/schemas/BlockEnum"
          },
          "type": {
            "$ref": "#/components/schemas/HeaderEnum"
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "type",
          "data"
        ]
      },
      "Horizontal_ruleEnum": {
        "type": "string",
        "enum": [
          "horizontal_rule"
        ]
      },
      "HorizontalRuleBlock": {
        "type": "object",
        "properties": {
          "content_type": {
            "$ref": "#/components/schemas/BlockEnum"
          },
          "type": {
            "$ref": "#/components/schemas/Horizontal_ruleEnum"
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "type",
          "data"
        ]
      },
      "HtmlEnum": {
        "type": "string",
        "enum": [
          "html"
        ]
      },
      "ContentRepeat": {
        "type": "object",
        "properties": {
          "repeat_for": {
            "type": "string"
          },
          "item_alias": {
            "type": "string"
          }
        },
        "required": [
          "repeat_for",
          "item_alias"
        ]
      },
      "BlockDisplayOptions": {
        "type": "object",
        "properties": {
          "show_on": {
            "description": "Show on.",
            "type": "string",
            "enum": [
              "all",
              "desktop",
              "mobile"
            ],
            "nullable": true
          },
          "visible_check": {
            "type": "string",
            "nullable": true
          },
          "content_repeat": {
            "$ref": "#/components/schemas/ContentRepeat",
            "nullable": true
          }
        }
      },
      "HTMLBlockData": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "display_options": {
            "$ref": "#/components/schemas/BlockDisplayOptions"
          }
        },
        "required": [
          "content",
          "display_options"
        ]
      },
      "HTMLBlock": {
        "type": "object",
        "properties": {
          "content_type": {
            "$ref": "#/components/schemas/BlockEnum"
          },
          "type": {
            "$ref": "#/components/schemas/HtmlEnum"
          },
          "data": {
            "$ref": "#/components/schemas/HTMLBlockData"
          }
        },
        "required": [
          "content_type",
          "type",
          "data"
        ]
      },
      "ImageBlock": {
        "type": "object",
        "properties": {
          "content_type": {
            "$ref": "#/components/schemas/BlockEnum"
          },
          "type": {
            "$ref": "#/components/schemas/ImageEnum"
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "type",
          "data"
        ]
      },
      "ProductEnum": {
        "type": "string",
        "enum": [
          "product"
        ]
      },
      "ProductBlock": {
        "type": "object",
        "properties": {
          "content_type": {
            "$ref": "#/components/schemas/BlockEnum"
          },
          "type": {
            "$ref": "#/components/schemas/ProductEnum"
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "type",
          "data"
        ]
      },
      "ReviewEnum": {
        "type": "string",
        "enum": [
          "review"
        ]
      },
      "ReviewBlock": {
        "type": "object",
        "properties": {
          "content_type": {
            "$ref": "#/components/schemas/BlockEnum"
          },
          "type": {
            "$ref": "#/components/schemas/ReviewEnum"
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "type",
          "data"
        ]
      },
      "SocialEnum": {
        "type": "string",
        "enum": [
          "social"
        ]
      },
      "SocialBlock": {
        "type": "object",
        "properties": {
          "content_type": {
            "$ref": "#/components/schemas/BlockEnum"
          },
          "type": {
            "$ref": "#/components/schemas/SocialEnum"
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "type",
          "data"
        ]
      },
      "SpacerEnum": {
        "type": "string",
        "enum": [
          "spacer"
        ]
      },
      "SpacerBlock": {
        "type": "object",
        "properties": {
          "content_type": {
            "$ref": "#/components/schemas/BlockEnum"
          },
          "type": {
            "$ref": "#/components/schemas/SpacerEnum"
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "type",
          "data"
        ]
      },
      "SplitEnum": {
        "type": "string",
        "enum": [
          "split"
        ]
      },
      "SplitBlock": {
        "type": "object",
        "properties": {
          "content_type": {
            "$ref": "#/components/schemas/BlockEnum"
          },
          "type": {
            "$ref": "#/components/schemas/SplitEnum"
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "type",
          "data"
        ]
      },
      "TableEnum": {
        "type": "string",
        "enum": [
          "table"
        ]
      },
      "TableBlock": {
        "type": "object",
        "properties": {
          "content_type": {
            "$ref": "#/components/schemas/BlockEnum"
          },
          "type": {
            "$ref": "#/components/schemas/TableEnum"
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "type",
          "data"
        ]
      },
      "TextEnum": {
        "type": "string",
        "enum": [
          "text"
        ]
      },
      "TextBlockStyles": {
        "type": "object",
        "properties": {
          "block_background_color": {
            "type": "string",
            "nullable": true
          },
          "block_border_color": {
            "type": "string",
            "nullable": true
          },
          "block_border_style": {
            "description": "Border style.",
            "type": "string",
            "enum": [
              "dashed",
              "dotted",
              "groove",
              "inset",
              "none",
              "outset",
              "ridge",
              "solid"
            ],
            "nullable": true
          },
          "block_border_width": {
            "type": "integer",
            "nullable": true
          },
          "block_padding_bottom": {
            "type": "integer",
            "nullable": true
          },
          "block_padding_left": {
            "type": "integer",
            "nullable": true
          },
          "block_padding_right": {
            "type": "integer",
            "nullable": true
          },
          "block_padding_top": {
            "type": "integer",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "extra_css_class": {
            "type": "string",
            "nullable": true
          },
          "font_family": {
            "type": "string",
            "nullable": true
          },
          "font_size": {
            "type": "integer",
            "nullable": true
          },
          "font_style": {
            "description": "Font style.",
            "type": "string",
            "enum": [
              "italic",
              "normal"
            ],
            "nullable": true
          },
          "font_weight": {
            "type": "string",
            "nullable": true
          },
          "inner_padding_bottom": {
            "type": "integer",
            "nullable": true
          },
          "inner_padding_left": {
            "type": "integer",
            "nullable": true
          },
          "inner_padding_right": {
            "type": "integer",
            "nullable": true
          },
          "inner_padding_top": {
            "type": "integer",
            "nullable": true
          },
          "mobile_stretch_content": {
            "type": "boolean",
            "nullable": true
          },
          "background_color": {
            "type": "string",
            "nullable": true
          },
          "letter_spacing": {
            "type": "integer",
            "nullable": true
          },
          "line_height": {
            "type": "number",
            "nullable": true
          },
          "text_align": {
            "description": "Text Alignment.",
            "type": "string",
            "enum": [
              "center",
              "left",
              "right"
            ],
            "nullable": true
          },
          "text_decoration": {
            "type": "string",
            "nullable": true
          },
          "text_table_layout": {
            "description": "Text table layout.",
            "type": "string",
            "enum": [
              "auto",
              "fixed",
              "inherit",
              "initial"
            ],
            "nullable": true
          }
        }
      },
      "TextBlockData": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "display_options": {
            "$ref": "#/components/schemas/BlockDisplayOptions"
          },
          "styles": {
            "$ref": "#/components/schemas/TextBlockStyles"
          }
        },
        "required": [
          "content",
          "display_options",
          "styles"
        ]
      },
      "TextBlock": {
        "type": "object",
        "properties": {
          "content_type": {
            "$ref": "#/components/schemas/BlockEnum"
          },
          "type": {
            "$ref": "#/components/schemas/TextEnum"
          },
          "data": {
            "$ref": "#/components/schemas/TextBlockData"
          }
        },
        "required": [
          "content_type",
          "type",
          "data"
        ]
      },
      "UnsupportedEnum": {
        "type": "string",
        "enum": [
          "unsupported"
        ]
      },
      "UnsupportedBlock": {
        "type": "object",
        "properties": {
          "content_type": {
            "$ref": "#/components/schemas/BlockEnum"
          },
          "type": {
            "$ref": "#/components/schemas/UnsupportedEnum"
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "type",
          "data"
        ]
      },
      "VideoEnum": {
        "type": "string",
        "enum": [
          "video"
        ]
      },
      "VideoBlock": {
        "type": "object",
        "properties": {
          "content_type": {
            "$ref": "#/components/schemas/BlockEnum"
          },
          "type": {
            "$ref": "#/components/schemas/VideoEnum"
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "type",
          "data"
        ]
      },
      "SectionEnum": {
        "type": "string",
        "enum": [
          "section"
        ]
      },
      "Section": {
        "type": "object",
        "properties": {
          "content_type": {
            "$ref": "#/components/schemas/SectionEnum"
          },
          "type": {
            "$ref": "#/components/schemas/SectionEnum"
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "type",
          "data"
        ]
      },
      "UniversalContentResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TemplateUniversalContentEnum"
          },
          "id": {
            "description": "The ID of the universal content",
            "type": "string",
            "example": "01HWWWKAW4RHXQJCMW4R2KRYR4"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The name for this universal content",
                "type": "string"
              },
              "definition": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ButtonBlock"
                  },
                  {
                    "$ref": "#/components/schemas/DropShadowBlock"
                  },
                  {
                    "$ref": "#/components/schemas/HeaderBlock"
                  },
                  {
                    "$ref": "#/components/schemas/HorizontalRuleBlock"
                  },
                  {
                    "$ref": "#/components/schemas/HTMLBlock"
                  },
                  {
                    "$ref": "#/components/schemas/ImageBlock"
                  },
                  {
                    "$ref": "#/components/schemas/ProductBlock"
                  },
                  {
                    "$ref": "#/components/schemas/ReviewBlock"
                  },
                  {
                    "$ref": "#/components/schemas/SocialBlock"
                  },
                  {
                    "$ref": "#/components/schemas/SpacerBlock"
                  },
                  {
                    "$ref": "#/components/schemas/SplitBlock"
                  },
                  {
                    "$ref": "#/components/schemas/TableBlock"
                  },
                  {
                    "$ref": "#/components/schemas/TextBlock"
                  },
                  {
                    "$ref": "#/components/schemas/UnsupportedBlock"
                  },
                  {
                    "$ref": "#/components/schemas/VideoBlock"
                  },
                  {
                    "$ref": "#/components/schemas/Section"
                  }
                ]
              },
              "created": {
                "description": "The datetime when this universal content was created",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00"
              },
              "updated": {
                "description": "The datetime when this universal content was updated",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00"
              },
              "screenshot_status": {
                "description": "The status of a universal content screenshot.",
                "type": "string",
                "enum": [
                  "completed",
                  "failed",
                  "generating",
                  "never_generated",
                  "not_renderable"
                ]
              },
              "screenshot_url": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "definition",
              "created",
              "updated",
              "screenshot_status",
              "screenshot_url"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetUniversalContentResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UniversalContentResponseObjectResource"
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetUniversalContentResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UniversalContentResponseObjectResource"
          }
        },
        "required": [
          "data"
        ]
      },
      "ReviewProductDTO": {
        "type": "object",
        "properties": {
          "url": {
            "description": "The URL of the product",
            "type": "string",
            "example": "https://example.com/product/123"
          },
          "name": {
            "description": "The name of the product",
            "type": "string"
          },
          "image_url": {
            "description": "The URL of the product image",
            "type": "string",
            "example": "https://example.com/image.jpg",
            "nullable": true
          }
        },
        "required": [
          "url",
          "name",
          "image_url"
        ]
      },
      "ReviewPublicReply": {
        "type": "object",
        "properties": {
          "content": {
            "description": "The content of the public reply",
            "example": "Thanks for the review!",
            "type": "string"
          },
          "author": {
            "description": "The author of the public reply",
            "type": "string",
            "example": "Company X"
          },
          "updated": {
            "description": "The datetime when this public reply was updated",
            "type": "string",
            "format": "date-time",
            "example": "2022-11-08T00:00:00+00:00"
          }
        },
        "required": [
          "content",
          "author",
          "updated"
        ]
      },
      "ReviewResponseDTO20240715ObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ReviewEnum"
          },
          "id": {
            "description": "The ID of the review",
            "type": "string",
            "example": "925e385b52fb405715f3616c337cc65c"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "description": "The email of the author of this review",
                "type": "string",
                "example": "john@doe.com"
              },
              "status": {
                "description": "The status of this review",
                "type": "string",
                "enum": [
                  "featured",
                  "pending",
                  "published",
                  "rejected",
                  "unpublished"
                ],
                "nullable": true
              },
              "verified": {
                "description": "The verification status of this review (aka whether or not we have confirmation that the customer bought the product)",
                "type": "boolean",
                "example": true
              },
              "review_type": {
                "description": "The type of this review — either a review, question, or rating",
                "type": "string",
                "example": "review",
                "enum": [
                  "question",
                  "rating",
                  "review"
                ]
              },
              "created": {
                "description": "The datetime when this review was created",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00"
              },
              "updated": {
                "description": "The datetime when this review was updated",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00"
              },
              "images": {
                "description": "The list of images submitted with this review (represented as a list of urls). If there are no images, this field will be an empty list.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "https://example.com/image1.jpg",
                  "https://example.com/image2.jpg"
                ]
              },
              "product": {
                "description": "The product associated with this review",
                "$ref": "#/components/schemas/ReviewProductDTO",
                "nullable": true
              },
              "rating": {
                "description": "The rating of this review on a scale from 1-5. If the review type is \"question\", this field will be null.",
                "type": "integer",
                "example": 2,
                "nullable": true
              },
              "author": {
                "description": "The author of this review",
                "type": "string",
                "example": "John D",
                "nullable": true
              },
              "content": {
                "description": "The content of this review",
                "example": "Great product! I love the smell. I will be buying again.",
                "nullable": true,
                "type": "string"
              },
              "title": {
                "description": "The title of this review",
                "type": "string",
                "example": "Smells great, would recommend",
                "nullable": true
              },
              "smart_quote": {
                "description": "A quote from this review that summarizes the content",
                "type": "string",
                "example": "I love the smell",
                "nullable": true
              },
              "public_reply": {
                "description": "The public reply to this review (if one exists)",
                "$ref": "#/components/schemas/ReviewPublicReply",
                "nullable": true
              }
            },
            "required": [
              "email",
              "verified",
              "review_type",
              "created",
              "updated",
              "images"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetReviewResponseDTO20240715CollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ReviewResponseDTO20240715ObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "events": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/EventEnum"
                                  },
                                  "id": {
                                    "description": "Related Events",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "item": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetReviewResponseDTO20240715CompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReviewResponseDTO20240715ObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "events": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/EventEnum"
                                },
                                "id": {
                                  "description": "Related Events",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "item": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "FormResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FormEnum"
          },
          "id": {
            "description": "ID of the form. Generated by Klaviyo.",
            "type": "string",
            "example": "Y6nRLr"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the form.",
                "type": "string",
                "example": "Cyber Monday Deals"
              },
              "status": {
                "description": "Status of the form. A live form with an in-progress draft is considered \"live\".",
                "type": "string",
                "enum": [
                  "draft",
                  "live"
                ]
              },
              "ab_test": {
                "description": "Whether the form has an A/B test configured, regardless of its status.",
                "type": "boolean"
              },
              "created_at": {
                "description": "ISO8601 timestamp when the form was created.",
                "type": "string",
                "format": "date-time",
                "example": "2024-03-04T00:00:00Z"
              },
              "updated_at": {
                "description": "ISO8601 timestamp when the form was last updated.",
                "type": "string",
                "format": "date-time",
                "example": "2024-03-04T00:00:00Z"
              }
            },
            "required": [
              "name",
              "status",
              "ab_test",
              "created_at",
              "updated_at"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetFormResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FormResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "form-versions": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetFormResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FormResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "form-versions": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/FormVersionEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormVersionResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "MetricPropertyEnum": {
        "type": "string",
        "enum": [
          "metric-property"
        ]
      },
      "MetricPropertyResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/MetricPropertyEnum"
          },
          "id": {
            "description": "The ID of the metric property",
            "type": "string",
            "example": "925e385b52fb405715f3616c337cc65c"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "label": {
                "description": "The label for this metric property",
                "type": "string",
                "example": "Categories"
              },
              "property": {
                "description": "The property for this metric property",
                "type": "string",
                "example": "Categories"
              },
              "inferred_type": {
                "description": "Inferred type for this metric property",
                "type": "string",
                "example": "List"
              }
            },
            "required": [
              "label",
              "property",
              "inferred_type"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetMetricPropertyResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricPropertyResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "metric": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/MetricEnum"
                              },
                              "id": {
                                "description": "Related Metric",
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ]
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "properties": {
                  "type": {
                    "$ref": "#/components/schemas/MetricPropertyEnum"
                  },
                  "attributes": {
                    "properties": {
                      "sample_values": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetMetricPropertyRelationshipMetricResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/MetricEnum"
              },
              "id": {
                "description": "Related Metric ID",
                "type": "string"
              }
            },
            "required": [
              "type",
              "id"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GetMetricPropertyResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MetricPropertyResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "metric": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "properties": {
                    "type": {
                      "$ref": "#/components/schemas/MetricPropertyEnum"
                    },
                    "attributes": {
                      "properties": {
                        "sample_values": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetMetricRelationshipMetricPropertyResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/MetricPropertyEnum"
                },
                "id": {
                  "description": "Related Metric Property ID",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "FormVersionEnum": {
        "type": "string",
        "enum": [
          "form-version"
        ]
      },
      "FormVersionABTest": {
        "type": "object",
        "properties": {
          "variation_name": {
            "description": "This is the name of the AB test variation.",
            "type": "string"
          }
        },
        "required": [
          "variation_name"
        ]
      },
      "FormVersionResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FormVersionEnum"
          },
          "id": {
            "description": "ID of the form version. Generated by Klaviyo.",
            "type": "string",
            "example": "1234567"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "form_type": {
                "description": "The type of form.",
                "type": "string",
                "enum": [
                  "banner",
                  "embed",
                  "flyout",
                  "full_page",
                  "popup"
                ]
              },
              "ab_test": {
                "$ref": "#/components/schemas/FormVersionABTest",
                "nullable": true
              },
              "status": {
                "description": "Status of the form version. \"live\" means it's live on site.",
                "type": "string",
                "enum": [
                  "draft",
                  "live"
                ]
              },
              "created_at": {
                "description": "ISO8601 timestamp when the form version was created.",
                "type": "string",
                "format": "date-time",
                "example": "2024-03-04T00:00:00Z"
              },
              "updated_at": {
                "description": "ISO8601 timestamp when the form version was last updated.",
                "type": "string",
                "format": "date-time",
                "example": "2024-03-04T00:00:00Z"
              }
            },
            "required": [
              "form_type",
              "status",
              "created_at",
              "updated_at"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetFormVersionResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormVersionResponseObjectResource"
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetFormFormVersionRelationshipsResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/FormVersionEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetFormVersionFormRelationshipResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/FormEnum"
              },
              "id": {
                "description": "The ID of the form",
                "type": "string",
                "example": "Y6nRLr"
              }
            },
            "required": [
              "type",
              "id"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GetFormResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FormResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "form-versions": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GetFormVersionResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FormVersionResponseObjectResource"
          }
        },
        "required": [
          "data"
        ]
      },
      "TrackingSettingEnum": {
        "type": "string",
        "enum": [
          "tracking-setting"
        ]
      },
      "FlowTrackingSettingDynamicParam": {
        "type": "object",
        "properties": {
          "type": {
            "description": "The type of the tracking parameter",
            "$ref": "#/components/schemas/DynamicEnum"
          },
          "value": {
            "description": "The value of the tracking parameter",
            "type": "string",
            "enum": [
              "email_subject",
              "flow_id",
              "flow_name",
              "link_alt_text",
              "message_name",
              "message_name_id",
              "message_type",
              "profile_external_id",
              "profile_id"
            ]
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "FlowTrackingSettingStaticParam": {
        "type": "object",
        "properties": {
          "type": {
            "description": "The type of the tracking parameter",
            "$ref": "#/components/schemas/StaticEnum"
          },
          "value": {
            "description": "The value of the tracking parameter",
            "type": "string"
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "CampaignTrackingSettingDynamicParam": {
        "type": "object",
        "properties": {
          "type": {
            "description": "The type of the tracking parameter",
            "$ref": "#/components/schemas/DynamicEnum"
          },
          "value": {
            "description": "The value of the tracking parameter",
            "type": "string",
            "enum": [
              "campaign_id",
              "campaign_name",
              "campaign_name_id",
              "campaign_name_send_day",
              "email_subject",
              "group_id",
              "group_name",
              "group_name_id",
              "link_alt_text",
              "message_type",
              "profile_external_id",
              "profile_id"
            ]
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "CampaignTrackingSettingStaticParam": {
        "type": "object",
        "properties": {
          "type": {
            "description": "The type of the tracking parameter",
            "$ref": "#/components/schemas/StaticEnum"
          },
          "value": {
            "description": "The value of the tracking parameter",
            "type": "string"
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "TrackingParamDTO": {
        "type": "object",
        "properties": {
          "flow": {
            "description": "The value of the tracking parameter when applied to a flow.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FlowTrackingSettingDynamicParam"
              },
              {
                "$ref": "#/components/schemas/FlowTrackingSettingStaticParam"
              }
            ]
          },
          "campaign": {
            "description": "The value of the tracking parameter when applied to a campaign.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CampaignTrackingSettingDynamicParam"
              },
              {
                "$ref": "#/components/schemas/CampaignTrackingSettingStaticParam"
              }
            ]
          }
        }
      },
      "CustomTrackingParamDTO": {
        "type": "object",
        "properties": {
          "flow": {
            "description": "The value of the tracking parameter when applied to a flow.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FlowTrackingSettingDynamicParam"
              },
              {
                "$ref": "#/components/schemas/FlowTrackingSettingStaticParam"
              }
            ]
          },
          "campaign": {
            "description": "The value of the tracking parameter when applied to a campaign.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CampaignTrackingSettingDynamicParam"
              },
              {
                "$ref": "#/components/schemas/CampaignTrackingSettingStaticParam"
              }
            ]
          },
          "name": {
            "description": "The name of the custom tracking parameter",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "TrackingSettingResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TrackingSettingEnum"
          },
          "id": {
            "description": "The id of the tracking setting (account ID).",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "auto_add_parameters": {
                "description": "Whether tracking parameters are automatically added to campaigns and flows.",
                "type": "boolean"
              },
              "utm_source": {
                "description": "The utm_source tracking parameter.",
                "$ref": "#/components/schemas/TrackingParamDTO"
              },
              "utm_medium": {
                "description": "The utm_medium tracking parameter.",
                "$ref": "#/components/schemas/TrackingParamDTO"
              },
              "utm_campaign": {
                "description": "The utm_campaign tracking parameter.",
                "$ref": "#/components/schemas/TrackingParamDTO",
                "nullable": true
              },
              "utm_id": {
                "description": "The utm_id tracking parameter.",
                "$ref": "#/components/schemas/TrackingParamDTO",
                "nullable": true
              },
              "utm_term": {
                "description": "The utm_term tracking parameter.",
                "$ref": "#/components/schemas/TrackingParamDTO",
                "nullable": true
              },
              "custom_parameters": {
                "description": "Additional custom tracking parameters.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomTrackingParamDTO"
                },
                "nullable": true
              }
            },
            "required": [
              "auto_add_parameters",
              "utm_source",
              "utm_medium"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetTrackingSettingResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackingSettingResponseObjectResource"
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetTrackingSettingResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TrackingSettingResponseObjectResource"
          }
        },
        "required": [
          "data"
        ]
      },
      "CouponCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "description": "This is the id that is stored in an integration such as Shopify or Magento.",
                "type": "string",
                "example": "10OFF"
              },
              "description": {
                "description": "A description of the coupon.",
                "type": "string",
                "example": "10% off for purchases over $50",
                "nullable": true
              }
            },
            "required": [
              "external_id"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CouponCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CouponCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCouponResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CouponEnum"
              },
              "id": {
                "description": "The internal id of a Coupon is equivalent to its external id stored within an integration.",
                "type": "string",
                "example": "10OFF"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "description": "This is the id that is stored in an integration such as Shopify or Magento.",
                    "type": "string",
                    "example": "10OFF"
                  },
                  "description": {
                    "description": "A description of the coupon.",
                    "type": "string",
                    "example": "10% off for purchases over $50",
                    "nullable": true
                  }
                },
                "required": [
                  "external_id"
                ]
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CouponCodeCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponCodeEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "unique_code": {
                "description": "This is a unique string that will be or is assigned to each customer/profile and is associated with a coupon.",
                "type": "string",
                "example": "ASD325FHK324UJDOI2M3JNES99"
              },
              "expires_at": {
                "description": "The datetime when this coupon code will expire. If not specified or set to null, it will be automatically set to 1 year.",
                "type": "string",
                "format": "date-time",
                "example": "2023-01-01T00:00:00Z",
                "nullable": true
              }
            },
            "required": [
              "unique_code"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "coupon": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/CouponEnum"
                      },
                      "id": {
                        "type": "string",
                        "example": "10OFF"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CouponCodeCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CouponCodeCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCouponCodeResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CouponCodeEnum"
              },
              "id": {
                "description": "The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with.",
                "type": "string",
                "example": "10OFF-ASD325FHK324UJDOI2M3JNES99"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "unique_code": {
                    "description": "This is a unique string that will be or is assigned to each customer/profile and is associated with a coupon.",
                    "type": "string",
                    "example": "ASD325FHK324UJDOI2M3JNES99",
                    "nullable": true
                  },
                  "expires_at": {
                    "description": "The datetime when this coupon code will expire. If not specified or set to null, it will be automatically set to 1 year.",
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-01-01T00:00:00Z",
                    "nullable": true
                  },
                  "status": {
                    "description": "The current status of the coupon code.",
                    "type": "string",
                    "example": "UNASSIGNED",
                    "enum": [
                      "ASSIGNED_TO_PROFILE",
                      "DELETING",
                      "PROCESSING",
                      "UNASSIGNED",
                      "USED",
                      "VERSION_NOT_ACTIVE"
                    ],
                    "nullable": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "coupon": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/CouponEnum"
                          },
                          "id": {
                            "type": "string",
                            "example": "10OFF"
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ]
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "profile": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/ProfileEnum"
                          },
                          "id": {
                            "type": "string",
                            "example": "01GDDKASAP8TKDDA2GRZDSVP4H"
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ]
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogItemCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "description": "The ID of the catalog item in an external system.",
                "type": "string",
                "example": "SAMPLE-DATA-ITEM-1"
              },
              "integration_type": {
                "description": "The integration type. Currently only \"$custom\" is supported.",
                "type": "string",
                "example": "$custom",
                "default": "$custom",
                "enum": [
                  "$custom"
                ],
                "nullable": true
              },
              "title": {
                "description": "The title of the catalog item.",
                "type": "string",
                "example": "Ocean Blue Shirt (Sample)"
              },
              "price": {
                "description": "This field can be used to set the price on the catalog item, which is what gets displayed for the item when included in emails. For most price-update use cases, you will also want to update the `price` on any child variants, using the [Update Catalog Variant Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_variant).",
                "type": "number",
                "example": 42,
                "nullable": true
              },
              "catalog_type": {
                "description": "The type of catalog. Currently only \"$default\" is supported.",
                "type": "string",
                "example": "$default",
                "default": "$default",
                "nullable": true
              },
              "description": {
                "description": "A description of the catalog item.",
                "type": "string",
                "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns."
              },
              "url": {
                "description": "URL pointing to the location of the catalog item on your website.",
                "type": "string",
                "example": "https://via.placeholder.com/150"
              },
              "image_full_url": {
                "description": "URL pointing to the location of a full image of the catalog item.",
                "type": "string",
                "example": "https://via.placeholder.com/300",
                "nullable": true
              },
              "image_thumbnail_url": {
                "description": "URL pointing to the location of an image thumbnail of the catalog item",
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "nullable": true
              },
              "images": {
                "description": "List of URLs pointing to the locations of images of the catalog item.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "https://via.placeholder.com/150"
                ],
                "nullable": true
              },
              "custom_metadata": {
                "description": "Flat JSON blob to provide custom metadata about the catalog item. May not exceed 100kb.",
                "type": "object",
                "example": {
                  "Top Pick": true
                },
                "nullable": true
              },
              "published": {
                "description": "Boolean value indicating whether the catalog item is published.",
                "type": "boolean",
                "example": true,
                "default": true,
                "nullable": true
              }
            },
            "required": [
              "external_id",
              "title",
              "description",
              "url"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "$ref": "#/components/schemas/CatalogCategoryEnum"
                        },
                        "id": {
                          "description": "A list of catalog category IDs representing the categories the item is in",
                          "type": "string",
                          "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CatalogItemCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCatalogItemResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogItemEnum"
              },
              "id": {
                "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
                "type": "string",
                "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "description": "The ID of the catalog item in an external system.",
                    "type": "string",
                    "example": "SAMPLE-DATA-ITEM-1",
                    "nullable": true
                  },
                  "title": {
                    "description": "The title of the catalog item.",
                    "type": "string",
                    "example": "Ocean Blue Shirt (Sample)",
                    "nullable": true
                  },
                  "description": {
                    "description": "A description of the catalog item.",
                    "type": "string",
                    "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns.",
                    "nullable": true
                  },
                  "price": {
                    "description": "This field can be used to set the price on the catalog item, which is what gets displayed for the item when included in emails. For most price-update use cases, you will also want to update the `price` on any child variants, using the [Update Catalog Variant Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_variant).",
                    "type": "number",
                    "example": 42,
                    "nullable": true
                  },
                  "url": {
                    "description": "URL pointing to the location of the catalog item on your website.",
                    "type": "string",
                    "example": "https://via.placeholder.com/150",
                    "nullable": true
                  },
                  "image_full_url": {
                    "description": "URL pointing to the location of a full image of the catalog item.",
                    "type": "string",
                    "example": "https://via.placeholder.com/300",
                    "nullable": true
                  },
                  "image_thumbnail_url": {
                    "description": "URL pointing to the location of an image thumbnail of the catalog item",
                    "type": "string",
                    "example": "https://via.placeholder.com/150",
                    "nullable": true
                  },
                  "images": {
                    "description": "List of URLs pointing to the locations of images of the catalog item.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "https://via.placeholder.com/150"
                    ],
                    "nullable": true
                  },
                  "custom_metadata": {
                    "description": "Flat JSON blob to provide custom metadata about the catalog item. May not exceed 100kb.",
                    "type": "object",
                    "example": {
                      "Top Pick": true
                    },
                    "nullable": true
                  },
                  "published": {
                    "description": "Boolean value indicating whether the catalog item is published.",
                    "type": "boolean",
                    "example": true,
                    "nullable": true
                  },
                  "created": {
                    "description": "Date and time when the catalog item was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "updated": {
                    "description": "Date and time when the catalog item was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "variants": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogVariantEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogVariantCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "description": "The ID of the catalog item variant in an external system.",
                "type": "string",
                "example": "SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
              },
              "catalog_type": {
                "description": "The type of catalog. Currently only \"$default\" is supported.",
                "type": "string",
                "example": "$default",
                "default": "$default",
                "nullable": true
              },
              "integration_type": {
                "description": "The integration type. Currently only \"$custom\" is supported.",
                "type": "string",
                "example": "$custom",
                "default": "$custom",
                "enum": [
                  "$custom"
                ],
                "nullable": true
              },
              "title": {
                "description": "The title of the catalog item variant.",
                "type": "string",
                "example": "Ocean Blue Shirt (Sample) Variant Medium"
              },
              "description": {
                "description": "A description of the catalog item variant.",
                "type": "string",
                "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns."
              },
              "sku": {
                "description": "The SKU of the catalog item variant.",
                "type": "string",
                "example": "OBS-MD"
              },
              "inventory_policy": {
                "description": "This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values:\n`1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.\n`0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.",
                "type": "integer",
                "example": 2,
                "default": 0,
                "enum": [
                  0,
                  1,
                  2
                ],
                "nullable": true
              },
              "inventory_quantity": {
                "description": "The quantity of the catalog item variant currently in stock.",
                "type": "number",
                "example": 25
              },
              "price": {
                "description": "This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item).",
                "type": "number",
                "example": 42
              },
              "url": {
                "description": "URL pointing to the location of the catalog item variant on your website.",
                "type": "string",
                "example": "https://via.placeholder.com/150"
              },
              "image_full_url": {
                "description": "URL pointing to the location of a full image of the catalog item variant.",
                "type": "string",
                "example": "https://via.placeholder.com/300",
                "nullable": true
              },
              "image_thumbnail_url": {
                "description": "URL pointing to the location of an image thumbnail of the catalog item variant.",
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "nullable": true
              },
              "images": {
                "description": "List of URLs pointing to the locations of images of the catalog item variant.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "https://via.placeholder.com/150"
                ],
                "nullable": true
              },
              "custom_metadata": {
                "description": "Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb.",
                "type": "object",
                "example": {
                  "Top Pick": true
                },
                "nullable": true
              },
              "published": {
                "description": "Boolean value indicating whether the catalog item variant is published.",
                "type": "boolean",
                "example": true,
                "default": true,
                "nullable": true
              }
            },
            "required": [
              "external_id",
              "title",
              "description",
              "sku",
              "inventory_quantity",
              "price",
              "url"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "item": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/CatalogItemEnum"
                      },
                      "id": {
                        "description": "The original catalog item ID for which this is a variant.",
                        "type": "string",
                        "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CatalogVariantCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCatalogVariantResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogVariantEnum"
              },
              "id": {
                "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
                "type": "string",
                "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "description": "The ID of the catalog item variant in an external system.",
                    "type": "string",
                    "example": "SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM",
                    "nullable": true
                  },
                  "title": {
                    "description": "The title of the catalog item variant.",
                    "type": "string",
                    "example": "Ocean Blue Shirt (Sample) Variant Medium",
                    "nullable": true
                  },
                  "description": {
                    "description": "A description of the catalog item variant.",
                    "type": "string",
                    "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns.",
                    "nullable": true
                  },
                  "sku": {
                    "description": "The SKU of the catalog item variant.",
                    "type": "string",
                    "example": "OBS-MD",
                    "nullable": true
                  },
                  "inventory_policy": {
                    "description": "This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values:\n`1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.\n`0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.",
                    "type": "integer",
                    "example": 2,
                    "enum": [
                      0,
                      1,
                      2
                    ],
                    "nullable": true
                  },
                  "inventory_quantity": {
                    "description": "The quantity of the catalog item variant currently in stock.",
                    "type": "number",
                    "example": 25,
                    "nullable": true
                  },
                  "price": {
                    "description": "This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item).",
                    "type": "number",
                    "example": 42,
                    "nullable": true
                  },
                  "url": {
                    "description": "URL pointing to the location of the catalog item variant on your website.",
                    "type": "string",
                    "example": "https://via.placeholder.com/150",
                    "nullable": true
                  },
                  "image_full_url": {
                    "description": "URL pointing to the location of a full image of the catalog item variant.",
                    "type": "string",
                    "example": "https://via.placeholder.com/300",
                    "nullable": true
                  },
                  "image_thumbnail_url": {
                    "description": "URL pointing to the location of an image thumbnail of the catalog item variant.",
                    "type": "string",
                    "example": "https://via.placeholder.com/150",
                    "nullable": true
                  },
                  "images": {
                    "description": "List of URLs pointing to the locations of images of the catalog item variant.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "https://via.placeholder.com/150"
                    ],
                    "nullable": true
                  },
                  "custom_metadata": {
                    "description": "Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb.",
                    "type": "object",
                    "example": {
                      "Top Pick": true
                    },
                    "nullable": true
                  },
                  "published": {
                    "description": "Boolean value indicating whether the catalog item variant is published.",
                    "type": "boolean",
                    "example": true,
                    "nullable": true
                  },
                  "created": {
                    "description": "Date and time when the catalog item  variant was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "updated": {
                    "description": "Date and time when the catalog item variant was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "item": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/CatalogItemEnum"
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ]
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogCategoryCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "description": "The ID of the catalog category in an external system.",
                "type": "string",
                "example": "SAMPLE-DATA-CATEGORY-APPAREL"
              },
              "name": {
                "description": "The name of the catalog category.",
                "type": "string",
                "example": "Sample Data Category Apparel"
              },
              "integration_type": {
                "description": "The integration type. Currently only \"$custom\" is supported.",
                "type": "string",
                "example": "$custom",
                "default": "$custom",
                "enum": [
                  "$custom"
                ],
                "nullable": true
              },
              "catalog_type": {
                "description": "The type of catalog. Currently only \"$default\" is supported.",
                "type": "string",
                "example": "$default",
                "default": "$default",
                "nullable": true
              }
            },
            "required": [
              "external_id",
              "name"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "items": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "$ref": "#/components/schemas/CatalogItemEnum"
                        },
                        "id": {
                          "description": "A list of catalog item IDs that are in the given category.",
                          "type": "string",
                          "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CatalogCategoryCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCatalogCategoryResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogCategoryEnum"
              },
              "id": {
                "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
                "type": "string",
                "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "description": "The ID of the catalog category in an external system.",
                    "type": "string",
                    "example": "SAMPLE-DATA-CATEGORY-APPAREL",
                    "nullable": true
                  },
                  "name": {
                    "description": "The name of the catalog category.",
                    "type": "string",
                    "example": "Sample Data Category Apparel",
                    "nullable": true
                  },
                  "updated": {
                    "description": "Date and time when the catalog category was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogItemEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CouponCodeCreateJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponCodeBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "coupon-codes": {
                "description": "Array of coupon codes to create.",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CouponCodeCreateQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "coupon-codes"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CouponCodeCreateJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CouponCodeCreateJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCouponCodeCreateJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CouponCodeBulkCreateJobEnum"
              },
              "id": {
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "description": "Status of the asynchronous job.",
                    "type": "string",
                    "example": "processing",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ]
                  },
                  "created_at": {
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00"
                  },
                  "total_count": {
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                    "type": "integer",
                    "example": 10
                  },
                  "completed_count": {
                    "description": "The total number of operations that have been completed by the job.",
                    "type": "integer",
                    "example": 9,
                    "default": 0,
                    "nullable": true
                  },
                  "failed_count": {
                    "description": "The total number of operations that have failed as part of the job.",
                    "type": "integer",
                    "example": 1,
                    "default": 0,
                    "nullable": true
                  },
                  "completed_at": {
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "errors": {
                    "description": "Array of errors encountered during the processing of the job.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/APIJobErrorPayload"
                    },
                    "nullable": true
                  },
                  "expires_at": {
                    "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  }
                },
                "required": [
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "coupon-codes": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CouponCodeEnum"
                            },
                            "id": {
                              "description": "IDs of the created coupon codes.",
                              "type": "string",
                              "example": "10OFF-ASD325FHK324UJDOI2M3JNES99"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogCategoryItemOp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CatalogItemEnum"
                },
                "id": {
                  "description": "A list of catalog item IDs that are in the given category.",
                  "type": "string",
                  "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogItemCategoryOp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CatalogCategoryEnum"
                },
                "id": {
                  "description": "A list of catalog category IDs representing the categories the item is in",
                  "type": "string",
                  "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileIdentifierDTOResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
            "nullable": true
          },
          "attributes": {
            "properties": {
              "email": {
                "description": "Individual's email address",
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com",
                "nullable": true
              },
              "phone_number": {
                "description": "Individual's phone number in E.164 format",
                "type": "string",
                "example": "+15005550006",
                "nullable": true
              },
              "external_id": {
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.",
                "type": "string",
                "nullable": true
              },
              "anonymous_id": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "BackInStockSubscriptionEnum": {
        "type": "string",
        "enum": [
          "back-in-stock-subscription"
        ]
      },
      "ServerBISSubscriptionCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/BackInStockSubscriptionEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "channels": {
                "description": "The channel(s) through which the profile would like to receive the back in stock notification. This can be leveraged within a back in stock flow to notify the subscriber through their preferred channel(s).",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "EMAIL",
                    "PUSH",
                    "SMS"
                  ],
                  "description": "The different channel types that a profile could subscribe to BIS notifications for"
                },
                "example": [
                  "EMAIL",
                  "SMS"
                ]
              },
              "profile": {
                "type": "object",
                "example": {
                  "data": {
                    "type": "profile",
                    "attributes": {
                      "id": "01GDDKASAP8TKDDA2GRZDSVP4H",
                      "email": "sarah.mason@klaviyo-demo.com",
                      "phone_number": "+15005550006",
                      "external_id": "63f64a2b-c6bf-40c7-b81f-bed08162edbe"
                    }
                  }
                },
                "nullable": true,
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProfileIdentifierDTOResourceObject"
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "channels"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "variant": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/CatalogVariantEnum"
                      },
                      "id": {
                        "description": "The catalog variant ID for which the profile is subscribing to back in stock notifications. This ID is made up of the integration type, catalog ID, and and the external ID of the variant like so: `integrationType:::catalogId:::externalId`. If the integration you are using is not set up for multi-catalog storage, the 'catalogId' will be `$default`. For Shopify `$shopify:::$default:::33001893429341`",
                        "type": "string",
                        "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "ServerBISSubscriptionCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ServerBISSubscriptionCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "MetricCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/MetricEnum"
          },
          "attributes": {
            "properties": {
              "name": {
                "description": "Name of the event. Must be less than 128 characters.",
                "type": "string",
                "example": "Viewed Product"
              },
              "service": {
                "description": "This is for advanced usage. For api requests, this should use the default, which is set to api.",
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "ProfileMetaPatchProperties": {
        "type": "object",
        "properties": {
          "append": {
            "description": "Append a simple value or values to this property array",
            "type": "object",
            "example": {
              "skus": "92538"
            },
            "nullable": true
          },
          "unappend": {
            "description": "Remove a simple value or values from this property array",
            "type": "object",
            "example": {
              "skus": "40571"
            },
            "nullable": true
          },
          "unset": {
            "description": "Remove a key or keys (and their values) completely from properties",
            "example": "skus",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          }
        }
      },
      "OnsiteProfileMeta": {
        "type": "object",
        "properties": {
          "patch_properties": {
            "description": "Specify one or more patch operations to apply to existing property data",
            "example": {
              "append": {
                "skus": "92538"
              }
            },
            "$ref": "#/components/schemas/ProfileMetaPatchProperties",
            "nullable": true
          }
        }
      },
      "EventProfileCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "properties": {
              "email": {
                "description": "Individual's email address",
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com",
                "nullable": true
              },
              "phone_number": {
                "description": "Individual's phone number in E.164 format",
                "type": "string",
                "example": "+15005550006",
                "nullable": true
              },
              "external_id": {
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.",
                "type": "string",
                "nullable": true
              },
              "anonymous_id": {
                "type": "string",
                "nullable": true
              },
              "_kx": {
                "description": "Also known as the `exchange_id`, this is an encrypted identifier used for identifying a\nprofile by Klaviyo's web tracking.\n\nYou can use this field as a filter when retrieving profiles via the Get Profiles endpoint.",
                "type": "string",
                "nullable": true
              },
              "first_name": {
                "description": "Individual's first name",
                "type": "string",
                "example": "Sarah",
                "nullable": true
              },
              "last_name": {
                "description": "Individual's last name",
                "type": "string",
                "example": "Mason",
                "nullable": true
              },
              "organization": {
                "description": "Name of the company or organization within the company for whom the individual works",
                "type": "string",
                "example": "Example Corporation",
                "nullable": true
              },
              "locale": {
                "description": "The locale of the profile, in the IETF BCP 47 language tag format like (ISO 639-1/2)-(ISO 3166 alpha-2)",
                "type": "string",
                "example": "en-US",
                "nullable": true
              },
              "title": {
                "description": "Individual's job title",
                "type": "string",
                "example": "Regional Manager",
                "nullable": true
              },
              "image": {
                "description": "URL pointing to the location of a profile image",
                "type": "string",
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "nullable": true
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation",
                "nullable": true
              },
              "properties": {
                "description": "An object containing key/value pairs for any custom properties assigned to this profile",
                "type": "object",
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "nullable": true
              },
              "meta": {
                "$ref": "#/components/schemas/OnsiteProfileMeta",
                "nullable": true
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "EventCreateQueryV2ResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EventEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "properties": {
                "description": "Properties of this event. Any top level property (that are not objects) can be\nused to create segments. The $extra property is a special property. This records any\nnon-segmentable values that can be referenced later. For example, HTML templates are\nuseful on a segment but are not used to create a segment. There are limits\nplaced onto the size of the data present. This must not exceed 5 MB. This must not\nexceed 300 event properties. A single string cannot be larger than 100 KB. Each array\nmust not exceed 4000 elements. The properties cannot contain more than 10 nested levels.",
                "type": "object",
                "example": {
                  "Brand": "Kids Book",
                  "Categories": [
                    "Fiction",
                    "Children"
                  ],
                  "ProductID": 1111,
                  "ProductName": "Winnie the Pooh",
                  "$extra": {
                    "URL": "http://www.example.com/path/to/product",
                    "ImageURL": "http://www.example.com/path/to/product/image.png"
                  }
                }
              },
              "time": {
                "description": "When this event occurred. By default, the time the request was received will be used.\nThe time is truncated to the second. The time must be after the year 2000 and can only\nbe up to 1 year in the future.",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "value": {
                "description": "A numeric, monetary value to associate with this event. For example, the dollar amount of a purchase.",
                "type": "number",
                "example": 9.99,
                "nullable": true
              },
              "value_currency": {
                "description": "The ISO 4217 currency code of the value associated with the event.",
                "type": "string",
                "example": "USD",
                "nullable": true
              },
              "unique_id": {
                "description": "A unique identifier for an event. If the unique_id is repeated for the same\nprofile and metric, only the first processed event will be recorded. If this is not\npresent, this will use the time to the second. Using the default, this limits only one\nevent per profile per second.",
                "type": "string",
                "nullable": true
              },
              "metric": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MetricCreateQueryResourceObject"
                  }
                },
                "required": [
                  "data"
                ]
              },
              "profile": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/EventProfileCreateQueryResourceObject"
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "properties",
              "metric",
              "profile"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "EventCreateQueryV2": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EventCreateQueryV2ResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "EventBulkCreateEnum": {
        "type": "string",
        "enum": [
          "event-bulk-create"
        ]
      },
      "OnsiteProfileCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "description": "Individual's email address",
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com",
                "nullable": true
              },
              "phone_number": {
                "description": "Individual's phone number in E.164 format",
                "type": "string",
                "example": "+15005550006",
                "nullable": true
              },
              "external_id": {
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.",
                "type": "string",
                "nullable": true
              },
              "anonymous_id": {
                "type": "string",
                "nullable": true
              },
              "_kx": {
                "description": "Also known as the `exchange_id`, this is an encrypted identifier used for identifying a\nprofile by Klaviyo's web tracking.\n\nYou can use this field as a filter when retrieving profiles via the Get Profiles endpoint.",
                "type": "string",
                "nullable": true
              },
              "first_name": {
                "description": "Individual's first name",
                "type": "string",
                "example": "Sarah",
                "nullable": true
              },
              "last_name": {
                "description": "Individual's last name",
                "type": "string",
                "example": "Mason",
                "nullable": true
              },
              "organization": {
                "description": "Name of the company or organization within the company for whom the individual works",
                "type": "string",
                "example": "Example Corporation",
                "nullable": true
              },
              "locale": {
                "description": "The locale of the profile, in the IETF BCP 47 language tag format like (ISO 639-1/2)-(ISO 3166 alpha-2)",
                "type": "string",
                "example": "en-US",
                "nullable": true
              },
              "title": {
                "description": "Individual's job title",
                "type": "string",
                "example": "Regional Manager",
                "nullable": true
              },
              "image": {
                "description": "URL pointing to the location of a profile image",
                "type": "string",
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "nullable": true
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation",
                "nullable": true
              },
              "properties": {
                "description": "An object containing key/value pairs for any custom properties assigned to this profile",
                "type": "object",
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "nullable": true
              }
            }
          },
          "meta": {
            "$ref": "#/components/schemas/OnsiteProfileMeta",
            "nullable": true
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "BaseEventCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EventEnum"
          },
          "attributes": {
            "properties": {
              "properties": {
                "description": "Properties of this event. Any top level property (that are not objects) can be\nused to create segments. The $extra property is a special property. This records any\nnon-segmentable values that can be referenced later. For example, HTML templates are\nuseful on a segment but are not used to create a segment. There are limits\nplaced onto the size of the data present. This must not exceed 5 MB. This must not\nexceed 300 event properties. A single string cannot be larger than 100 KB. Each array\nmust not exceed 4000 elements. The properties cannot contain more than 10 nested levels.",
                "type": "object",
                "example": {
                  "Brand": "Kids Book",
                  "Categories": [
                    "Fiction",
                    "Children"
                  ],
                  "ProductID": 1111,
                  "ProductName": "Winnie the Pooh",
                  "$extra": {
                    "URL": "http://www.example.com/path/to/product",
                    "ImageURL": "http://www.example.com/path/to/product/image.png"
                  }
                }
              },
              "time": {
                "description": "When this event occurred. By default, the time the request was received will be used.\nThe time is truncated to the second. The time must be after the year 2000 and can only\nbe up to 1 year in the future.",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "value": {
                "description": "A numeric, monetary value to associate with this event. For example, the dollar amount of a purchase.",
                "type": "number",
                "example": 9.99,
                "nullable": true
              },
              "value_currency": {
                "description": "The ISO 4217 currency code of the value associated with the event.",
                "type": "string",
                "example": "USD",
                "nullable": true
              },
              "unique_id": {
                "description": "A unique identifier for an event. If the unique_id is repeated for the same\nprofile and metric, only the first processed event will be recorded. If this is not\npresent, this will use the time to the second. Using the default, this limits only one\nevent per profile per second.",
                "type": "string",
                "nullable": true
              },
              "metric": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MetricCreateQueryResourceObject"
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "properties",
              "metric"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "EventsBulkCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EventBulkCreateEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "profile": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OnsiteProfileCreateQueryResourceObject"
                  }
                },
                "required": [
                  "data"
                ]
              },
              "events": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/BaseEventCreateQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "profile",
              "events"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "EventBulkCreateJobEnum": {
        "type": "string",
        "enum": [
          "event-bulk-create-job"
        ]
      },
      "EventsBulkCreateJobResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EventBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "events-bulk-create": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/EventsBulkCreateQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "events-bulk-create"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "EventsBulkCreateJob": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EventsBulkCreateJobResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "MetricAggregateEnum": {
        "type": "string",
        "enum": [
          "metric-aggregate"
        ]
      },
      "MetricAggregateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/MetricAggregateEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "metric_id": {
                "description": "The metric ID used in the aggregation.",
                "type": "string",
                "example": "0rG4eQ"
              },
              "page_cursor": {
                "description": "Optional pagination cursor to iterate over large result sets",
                "type": "string"
              },
              "measurements": {
                "description": "Measurement key, e.g. `unique`, `sum_value`, `count`",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "count",
                    "sum_value",
                    "unique"
                  ],
                  "description": "Supported measurements for aggregation"
                },
                "example": [
                  "count"
                ]
              },
              "interval": {
                "description": "Aggregation interval, e.g. \"hour\", \"day\", \"week\", \"month\"",
                "type": "string",
                "example": "day",
                "default": "day",
                "enum": [
                  "day",
                  "hour",
                  "month",
                  "week"
                ],
                "nullable": true
              },
              "page_size": {
                "description": "Alter the maximum number of returned rows in a single page of aggregation results",
                "type": "integer",
                "example": 500,
                "default": 500,
                "nullable": true
              },
              "by": {
                "description": "Optional attribute(s) used for partitioning by the aggregation function",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "$attributed_channel",
                    "$attributed_flow",
                    "$attributed_message",
                    "$attributed_variation",
                    "$campaign_channel",
                    "$flow",
                    "$flow_channel",
                    "$message",
                    "$message_send_cohort",
                    "$variation",
                    "$variation_send_cohort",
                    "Bot Click",
                    "Bounce Type",
                    "Campaign Name",
                    "Client Canonical",
                    "Client Name",
                    "Client Type",
                    "Email Domain",
                    "Failure Source",
                    "Failure Type",
                    "From Number",
                    "From Phone Region",
                    "Inbox Provider",
                    "List",
                    "Message Name",
                    "Message Type",
                    "Method",
                    "Subject",
                    "To Number",
                    "To Phone Region",
                    "URL",
                    "form_id"
                  ],
                  "description": "Supported dimensions for grouping and filtering"
                },
                "example": [
                  "$message"
                ],
                "nullable": true
              },
              "return_fields": {
                "description": "Provide fields to limit the returned data",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              },
              "filter": {
                "description": "List of filters, must include time range using ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).\n            These filters follow a similar format to those in `GET` requests, the primary difference is that this endpoint asks for a list.\n            The time range can be filtered by providing a `greater-or-equal` and a `less-than` filter on the `datetime` field.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "greater-or-equal(datetime,2022-12-01T00:00:00)",
                  "less-than(datetime,2022-12-08T00:00:00"
                ]
              },
              "timezone": {
                "description": "The timezone used for processing the query, e.g. `'America/New_York'`.\n            This field is validated against a list of common timezones from the [IANA Time Zone Database](https://www.iana.org/time-zones).\n            While most are supported, a few notable exceptions are `Factory`, `Europe/Kyiv` and `Pacific/Kanton`. This field is case-sensitive.",
                "type": "string",
                "example": "America/New_York",
                "default": "UTC",
                "nullable": true
              },
              "sort": {
                "description": "Provide a sort key (e.g. -$message)",
                "type": "string",
                "enum": [
                  "$attributed_channel",
                  "-$attributed_channel",
                  "$attributed_flow",
                  "-$attributed_flow",
                  "$attributed_message",
                  "-$attributed_message",
                  "$attributed_variation",
                  "-$attributed_variation",
                  "$campaign_channel",
                  "-$campaign_channel",
                  "$flow",
                  "-$flow",
                  "$flow_channel",
                  "-$flow_channel",
                  "$message",
                  "-$message",
                  "$message_send_cohort",
                  "-$message_send_cohort",
                  "$variation",
                  "-$variation",
                  "$variation_send_cohort",
                  "-$variation_send_cohort",
                  "Bot Click",
                  "-Bot Click",
                  "Bounce Type",
                  "-Bounce Type",
                  "Campaign Name",
                  "-Campaign Name",
                  "Client Canonical",
                  "-Client Canonical",
                  "Client Name",
                  "-Client Name",
                  "Client Type",
                  "-Client Type",
                  "Email Domain",
                  "-Email Domain",
                  "Failure Source",
                  "-Failure Source",
                  "Failure Type",
                  "-Failure Type",
                  "From Number",
                  "-From Number",
                  "From Phone Region",
                  "-From Phone Region",
                  "Inbox Provider",
                  "-Inbox Provider",
                  "List",
                  "-List",
                  "Message Name",
                  "-Message Name",
                  "Message Type",
                  "-Message Type",
                  "Method",
                  "-Method",
                  "Subject",
                  "-Subject",
                  "To Number",
                  "-To Number",
                  "To Phone Region",
                  "-To Phone Region",
                  "URL",
                  "-URL",
                  "count",
                  "-count",
                  "form_id",
                  "-form_id",
                  "sum_value",
                  "-sum_value",
                  "unique",
                  "-unique"
                ]
              }
            },
            "required": [
              "metric_id",
              "measurements",
              "filter"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "MetricAggregateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MetricAggregateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "MetricAggregateRowDTO": {
        "type": "object",
        "properties": {
          "dimensions": {
            "description": "List of dimensions associated with this set of measurements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "measurements": {
            "description": "Dictionary of measurement_key, values",
            "type": "object"
          }
        },
        "required": [
          "dimensions",
          "measurements"
        ]
      },
      "PostMetricAggregateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/MetricAggregateEnum"
              },
              "id": {
                "description": "Ephemeral ID associated with the aggregation query",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "dates": {
                    "description": "The dates of the query range",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "data": {
                    "description": "Aggregation result data",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/MetricAggregateRowDTO"
                    }
                  }
                },
                "required": [
                  "dates",
                  "data"
                ]
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ListCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ListEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "A helpful name to label the list",
                "type": "string",
                "example": "Newsletter"
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "ListCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostListCreateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ListEnum"
              },
              "id": {
                "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
                "type": "string",
                "example": "Y6nRLr"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "A helpful name to label the list",
                    "type": "string",
                    "example": "Newsletter",
                    "nullable": true
                  },
                  "created": {
                    "description": "Date and time when the list was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "updated": {
                    "description": "Date and time when the list was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "opt_in_process": {
                    "description": "The opt-in process for this list.  Could be either 'single_opt_in' or 'double_opt_in'.",
                    "type": "string",
                    "enum": [
                      "double_opt_in",
                      "single_opt_in"
                    ],
                    "nullable": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "profiles": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/ProfileEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "tags": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/TagEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "flow-triggers": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/FlowEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ListMembersAddQuery": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/ProfileEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "SegmentCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SegmentEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "definition": {
                "$ref": "#/components/schemas/SegmentDefinition"
              },
              "is_starred": {
                "type": "boolean",
                "default": false,
                "nullable": true
              }
            },
            "required": [
              "name",
              "definition"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "SegmentCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SegmentCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostSegmentCreateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/SegmentEnum"
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "A helpful name to label the segment",
                    "type": "string",
                    "example": "Repeat Purchasers",
                    "nullable": true
                  },
                  "definition": {
                    "$ref": "#/components/schemas/SegmentDefinition",
                    "nullable": true
                  },
                  "created": {
                    "description": "Date and time when the segment was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "updated": {
                    "description": "Date and time when the segment was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "is_active": {
                    "type": "boolean"
                  },
                  "is_processing": {
                    "type": "boolean"
                  },
                  "is_starred": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "is_active",
                  "is_processing",
                  "is_starred"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "profiles": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/ProfileEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "tags": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/TagEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "flow-triggers": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/FlowEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "description": "Individual's email address",
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com",
                "nullable": true
              },
              "phone_number": {
                "description": "Individual's phone number in E.164 format",
                "type": "string",
                "example": "+15005550006",
                "nullable": true
              },
              "external_id": {
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.",
                "type": "string",
                "nullable": true
              },
              "first_name": {
                "description": "Individual's first name",
                "type": "string",
                "example": "Sarah",
                "nullable": true
              },
              "last_name": {
                "description": "Individual's last name",
                "type": "string",
                "example": "Mason",
                "nullable": true
              },
              "organization": {
                "description": "Name of the company or organization within the company for whom the individual works",
                "type": "string",
                "example": "Example Corporation",
                "nullable": true
              },
              "locale": {
                "description": "The locale of the profile, in the IETF BCP 47 language tag format like (ISO 639-1/2)-(ISO 3166 alpha-2)",
                "type": "string",
                "example": "en-US",
                "nullable": true
              },
              "title": {
                "description": "Individual's job title",
                "type": "string",
                "example": "Regional Manager",
                "nullable": true
              },
              "image": {
                "description": "URL pointing to the location of a profile image",
                "type": "string",
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "nullable": true
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation",
                "nullable": true
              },
              "properties": {
                "description": "An object containing key/value pairs for any custom properties assigned to this profile",
                "type": "object",
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "nullable": true
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "ProfileCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProfileCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostProfileResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ProfileEnum"
              },
              "id": {
                "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
                "type": "string",
                "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
                "nullable": true
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "Individual's email address",
                    "type": "string",
                    "example": "sarah.mason@klaviyo-demo.com",
                    "nullable": true
                  },
                  "phone_number": {
                    "description": "Individual's phone number in E.164 format",
                    "type": "string",
                    "example": "+15005550006",
                    "nullable": true
                  },
                  "external_id": {
                    "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.",
                    "type": "string",
                    "nullable": true
                  },
                  "first_name": {
                    "description": "Individual's first name",
                    "type": "string",
                    "example": "Sarah",
                    "nullable": true
                  },
                  "last_name": {
                    "description": "Individual's last name",
                    "type": "string",
                    "example": "Mason",
                    "nullable": true
                  },
                  "organization": {
                    "description": "Name of the company or organization within the company for whom the individual works",
                    "type": "string",
                    "example": "Example Corporation",
                    "nullable": true
                  },
                  "locale": {
                    "description": "The locale of the profile, in the IETF BCP 47 language tag format like (ISO 639-1/2)-(ISO 3166 alpha-2)",
                    "type": "string",
                    "example": "en-US",
                    "nullable": true
                  },
                  "title": {
                    "description": "Individual's job title",
                    "type": "string",
                    "example": "Regional Manager",
                    "nullable": true
                  },
                  "image": {
                    "description": "URL pointing to the location of a profile image",
                    "type": "string",
                    "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                    "nullable": true
                  },
                  "created": {
                    "description": "Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "updated": {
                    "description": "Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "last_event_date": {
                    "description": "Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "location": {
                    "$ref": "#/components/schemas/ProfileLocation",
                    "nullable": true
                  },
                  "properties": {
                    "description": "An object containing key/value pairs for any custom properties assigned to this profile",
                    "type": "object",
                    "example": {
                      "pseudonym": "Dr. Octopus"
                    },
                    "nullable": true
                  },
                  "subscriptions": {
                    "$ref": "#/components/schemas/Subscriptions",
                    "nullable": true
                  },
                  "predictive_analytics": {
                    "$ref": "#/components/schemas/PredictiveAnalytics",
                    "nullable": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "lists": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/ListEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "segments": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/SegmentEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileMeta": {
        "type": "object",
        "properties": {
          "patch_properties": {
            "description": "Specify one or more patch operations to apply to existing property data",
            "example": {
              "append": {
                "skus": "92538"
              }
            },
            "$ref": "#/components/schemas/ProfileMetaPatchProperties",
            "nullable": true
          }
        }
      },
      "ProfileUpsertQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "description": "Individual's email address",
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com",
                "nullable": true
              },
              "phone_number": {
                "description": "Individual's phone number in E.164 format",
                "type": "string",
                "example": "+15005550006",
                "nullable": true
              },
              "external_id": {
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.",
                "type": "string",
                "nullable": true
              },
              "anonymous_id": {
                "description": "Id that can be used to identify a profile when other identifiers are not available",
                "type": "string",
                "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
                "nullable": true
              },
              "_kx": {
                "description": "Also known as the `exchange_id`, this is an encrypted identifier used for identifying a\nprofile by Klaviyo's web tracking.\n\nYou can use this field as a filter when retrieving profiles via the Get Profiles endpoint.",
                "type": "string",
                "nullable": true
              },
              "first_name": {
                "description": "Individual's first name",
                "type": "string",
                "example": "Sarah",
                "nullable": true
              },
              "last_name": {
                "description": "Individual's last name",
                "type": "string",
                "example": "Mason",
                "nullable": true
              },
              "organization": {
                "description": "Name of the company or organization within the company for whom the individual works",
                "type": "string",
                "example": "Example Corporation",
                "nullable": true
              },
              "locale": {
                "description": "The locale of the profile, in the IETF BCP 47 language tag format like (ISO 639-1/2)-(ISO 3166 alpha-2)",
                "type": "string",
                "example": "en-US",
                "nullable": true
              },
              "title": {
                "description": "Individual's job title",
                "type": "string",
                "example": "Regional Manager",
                "nullable": true
              },
              "image": {
                "description": "URL pointing to the location of a profile image",
                "type": "string",
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "nullable": true
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation",
                "nullable": true
              },
              "properties": {
                "description": "An object containing key/value pairs for any custom properties assigned to this profile",
                "type": "object",
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "nullable": true
              }
            }
          },
          "meta": {
            "$ref": "#/components/schemas/ProfileMeta",
            "nullable": true
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "ProfileImportJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileBulkImportJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "profiles": {
                "description": "Array of profiles to create or update",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ProfileUpsertQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "profiles"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "lists": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "$ref": "#/components/schemas/ListEnum"
                        },
                        "id": {
                          "description": "Optional list to add the profiles to",
                          "type": "string",
                          "example": "VRgFBd"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "ProfileImportJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProfileImportJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostProfileImportJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ProfileBulkImportJobEnum"
              },
              "id": {
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "description": "Status of the asynchronous job.",
                    "type": "string",
                    "example": "processing",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ]
                  },
                  "created_at": {
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00"
                  },
                  "total_count": {
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                    "type": "integer",
                    "example": 10
                  },
                  "completed_count": {
                    "description": "The total number of operations that have been completed by the job.",
                    "type": "integer",
                    "example": 9,
                    "default": 0,
                    "nullable": true
                  },
                  "failed_count": {
                    "description": "The total number of operations that have failed as part of the job.",
                    "type": "integer",
                    "example": 1,
                    "default": 0,
                    "nullable": true
                  },
                  "completed_at": {
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "expires_at": {
                    "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "started_at": {
                    "description": "Date and time the job started processing in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  }
                },
                "required": [
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "lists": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/ListEnum"
                            },
                            "id": {
                              "description": "List to add the profiles to",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "profiles": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/ProfileEnum"
                            },
                            "id": {
                              "description": "IDs of the created/updated profiles",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "import-errors": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/ImportErrorEnum"
                            },
                            "id": {
                              "description": "Errors encountering during import",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/OnlyRelatedLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileUpsertQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProfileUpsertQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileMergeEnum": {
        "type": "string",
        "enum": [
          "profile-merge"
        ]
      },
      "ProfileMergeQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileMergeEnum"
          },
          "id": {
            "description": "The ID of the destination profile to merge into",
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H"
          },
          "relationships": {
            "type": "object",
            "properties": {
              "profiles": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "$ref": "#/components/schemas/ProfileEnum"
                        },
                        "id": {
                          "description": "The ID of a source profile to merge into the destination profile",
                          "type": "string",
                          "example": "01GDDKASAP8TKDDA2GRZDSVP4I"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "id"
        ]
      },
      "ProfileMergeQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProfileMergeQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostProfileMergeResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ProfileEnum"
              },
              "id": {
                "description": "The ID of the destination profile that was merged into",
                "type": "string",
                "example": "01GDDKASAP8TKDDA2GRZDSVP4H"
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SMSContentSubObjectCreate": {
        "type": "object",
        "properties": {
          "body": {
            "description": "The message body",
            "type": "string",
            "example": "My preview sms",
            "nullable": true
          }
        }
      },
      "CampaignMessageCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignMessageEnum"
          },
          "attributes": {
            "properties": {
              "channel": {
                "description": "The channel the message is to be sent on (email or sms, for example)",
                "type": "string",
                "example": "email"
              },
              "label": {
                "description": "The label or name on the message",
                "type": "string",
                "example": "My message name",
                "nullable": true
              },
              "content": {
                "description": "Additional attributes relating to the content of the message",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailContentSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSContentSubObjectCreate"
                  }
                ]
              },
              "render_options": {
                "description": "Additional options for rendering the message",
                "$ref": "#/components/schemas/RenderOptionsSubObject",
                "nullable": true
              }
            },
            "required": [
              "channel"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CampaignCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The campaign name",
                "type": "string",
                "example": "My new campaign"
              },
              "audiences": {
                "description": "The audiences to be included and/or excluded from the campaign",
                "$ref": "#/components/schemas/AudiencesSubObject"
              },
              "send_strategy": {
                "description": "The send strategy the campaign will send with. Defaults to 'Immediate' send strategy.",
                "$ref": "#/components/schemas/SendStrategySubObject",
                "nullable": true
              },
              "send_options": {
                "description": "Options to use when sending a campaign",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailSendOptionsSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSSendOptionsSubObject"
                  }
                ]
              },
              "tracking_options": {
                "description": "The tracking options associated with the campaign",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailTrackingOptionsSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSTrackingOptionsSubObject"
                  }
                ]
              },
              "campaign-messages": {
                "description": "The message(s) associated with the campaign",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CampaignMessageCreateQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "name",
              "audiences",
              "campaign-messages"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CampaignCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCampaignResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CampaignEnum"
              },
              "id": {
                "description": "The campaign ID",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The campaign name",
                    "type": "string"
                  },
                  "status": {
                    "description": "The current status of the campaign",
                    "type": "string"
                  },
                  "archived": {
                    "description": "Whether the campaign has been archived or not",
                    "type": "boolean"
                  },
                  "audiences": {
                    "description": "The audiences to be included and/or excluded from the campaign",
                    "$ref": "#/components/schemas/AudiencesSubObject"
                  },
                  "send_options": {
                    "description": "Options to use when sending a campaign",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/EmailSendOptionsSubObject"
                      },
                      {
                        "$ref": "#/components/schemas/SMSSendOptionsSubObject"
                      }
                    ]
                  },
                  "tracking_options": {
                    "description": "The tracking options associated with the campaign",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/EmailTrackingOptionsSubObject"
                      },
                      {
                        "$ref": "#/components/schemas/SMSTrackingOptionsSubObject"
                      }
                    ]
                  },
                  "send_strategy": {
                    "description": "The send strategy the campaign will send with",
                    "$ref": "#/components/schemas/SendStrategySubObject"
                  },
                  "created_at": {
                    "description": "The datetime when the campaign was created",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00"
                  },
                  "scheduled_at": {
                    "description": "The datetime when the campaign was scheduled for future sending",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "updated_at": {
                    "description": "The datetime when the campaign was last updated by a user or the system",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00"
                  },
                  "send_time": {
                    "description": "The datetime when the campaign will be / was sent or None if not yet scheduled by a send_job.",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  }
                },
                "required": [
                  "name",
                  "status",
                  "archived",
                  "audiences",
                  "send_options",
                  "tracking_options",
                  "send_strategy",
                  "created_at",
                  "updated_at"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "campaign-messages": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CampaignMessageEnum"
                            },
                            "id": {
                              "description": "The message(s) associated with the campaign",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "tags": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/TagEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CampaignCloneQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignEnum"
          },
          "id": {
            "description": "The campaign ID to be cloned",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "new_name": {
                "description": "The name for the new cloned campaign",
                "type": "string",
                "example": "My cloned campaign's new name",
                "nullable": true
              }
            }
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "CampaignCloneQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignCloneQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "CampaignMessageAssignTemplateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignMessageEnum"
          },
          "id": {
            "description": "The message ID to be assigned to",
            "type": "string"
          },
          "relationships": {
            "type": "object",
            "properties": {
              "template": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/TemplateEnum"
                      },
                      "id": {
                        "description": "The template ID to assign",
                        "type": "string",
                        "example": "RipRmi"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "id"
        ]
      },
      "CampaignMessageAssignTemplateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignMessageAssignTemplateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCampaignMessageResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CampaignMessageEnum"
              },
              "id": {
                "description": "The message ID",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "label": {
                    "description": "The label or name on the message",
                    "type": "string"
                  },
                  "channel": {
                    "description": "The channel the message is to be sent on",
                    "type": "string"
                  },
                  "content": {
                    "description": "Additional attributes relating to the content of the message",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/EmailContentSubObject"
                      },
                      {
                        "$ref": "#/components/schemas/SMSContentSubObject"
                      }
                    ]
                  },
                  "send_times": {
                    "description": "The list of appropriate Send Time Sub-objects associated with the message",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SendTimeSubObject"
                    },
                    "nullable": true
                  },
                  "render_options": {
                    "description": "Additional options for rendering the message",
                    "$ref": "#/components/schemas/RenderOptionsSubObject",
                    "nullable": true
                  },
                  "created_at": {
                    "description": "The datetime when the message was created",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "updated_at": {
                    "description": "The datetime when the message was last updated",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  }
                },
                "required": [
                  "label",
                  "channel",
                  "content"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "campaign": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/CampaignEnum"
                          },
                          "id": {
                            "description": "The parent campaign id",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ]
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "template": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/TemplateEnum"
                          },
                          "id": {
                            "description": "The associated template id",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ]
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CampaignSendJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignSendJobEnum"
          },
          "id": {
            "description": "The ID of the campaign to send",
            "type": "string"
          }
        },
        "required": [
          "type",
          "id"
        ]
      },
      "CampaignSendJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignSendJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCampaignSendJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CampaignSendJobEnum"
              },
              "id": {
                "description": "The ID of the campaign to send",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "description": "The status of the send job",
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ]
                  }
                },
                "required": [
                  "status"
                ]
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CampaignRecipientEstimationJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignRecipientEstimationJobEnum"
          },
          "id": {
            "description": "The ID of the campaign to perform recipient estimation",
            "type": "string"
          }
        },
        "required": [
          "type",
          "id"
        ]
      },
      "CampaignRecipientEstimationJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignRecipientEstimationJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCampaignRecipientEstimationJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CampaignRecipientEstimationJobEnum"
              },
              "id": {
                "description": "The ID of the campaign used for estimating recipients",
                "type": "string",
                "example": "01GMRWDSA0ARTAKE1SFX8JGXAY"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "description": "The status of the recipient estimation job",
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ]
                  }
                },
                "required": [
                  "status"
                ]
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "TemplateCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TemplateEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of the template",
                "type": "string",
                "example": "Monthly Newsletter Template"
              },
              "editor_type": {
                "description": "Restricted to CODE",
                "type": "string"
              },
              "html": {
                "description": "The HTML contents of the template",
                "type": "string",
                "example": "\n            <html>\n                <body>\n                    hello world\n                </body>\n            </html>\n        ",
                "nullable": true
              },
              "text": {
                "description": "The plaintext version of the template",
                "type": "string",
                "example": "hello world",
                "nullable": true
              }
            },
            "required": [
              "name",
              "editor_type"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "TemplateCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostTemplateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TemplateEnum"
              },
              "id": {
                "description": "The ID of template",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The name of the template",
                    "type": "string"
                  },
                  "editor_type": {
                    "description": "`editor_type` has a fixed set of values:\n* SYSTEM_DRAGGABLE: indicates a drag-and-drop editor template\n* SIMPLE: A rich text editor template\n* CODE: A custom HTML template\n* USER_DRAGGABLE: A hybrid template, using custom HTML in the drag-and-drop editor",
                    "type": "string"
                  },
                  "html": {
                    "description": "The rendered HTML of the template",
                    "type": "string"
                  },
                  "text": {
                    "description": "The template plain_text",
                    "type": "string",
                    "nullable": true
                  },
                  "created": {
                    "description": "The date the template was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "updated": {
                    "description": "The date the template was updated in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  }
                },
                "required": [
                  "name",
                  "editor_type",
                  "html"
                ]
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "TemplateRenderQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TemplateEnum"
          },
          "id": {
            "description": "The ID of template",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "context": {
                "description": "The context for the template render. This must be a JSON object which has values for any tags used in the template. See [this doc](https://help.klaviyo.com/hc/en-us/articles/4408802648731) for more details.",
                "type": "object",
                "example": {
                  "first_name": "Jane",
                  "last_name": "Smith"
                }
              }
            },
            "required": [
              "context"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "TemplateRenderQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateRenderQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "TemplateCloneQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TemplateEnum"
          },
          "id": {
            "description": "The ID of template to be cloned",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of the template",
                "type": "string",
                "example": "Clone of Monthly Newsletter Template",
                "nullable": true
              }
            }
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "TemplateCloneQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateCloneQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogItemCreateJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "items": {
                "description": "Array of catalog items to create.",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogItemCreateQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "items"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CatalogItemCreateJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemCreateJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCatalogItemCreateJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogItemBulkCreateJobEnum"
              },
              "id": {
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "description": "Status of the asynchronous job.",
                    "type": "string",
                    "example": "processing",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ]
                  },
                  "created_at": {
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00"
                  },
                  "total_count": {
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                    "type": "integer",
                    "example": 10
                  },
                  "completed_count": {
                    "description": "The total number of operations that have been completed by the job.",
                    "type": "integer",
                    "example": 9,
                    "default": 0,
                    "nullable": true
                  },
                  "failed_count": {
                    "description": "The total number of operations that have failed as part of the job.",
                    "type": "integer",
                    "example": 1,
                    "default": 0,
                    "nullable": true
                  },
                  "completed_at": {
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "errors": {
                    "description": "Array of errors encountered during the processing of the job.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/APIJobErrorPayload"
                    },
                    "nullable": true
                  },
                  "expires_at": {
                    "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  }
                },
                "required": [
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogItemEnum"
                            },
                            "id": {
                              "description": "IDs of the created catalog items.",
                              "type": "string",
                              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogItemUpdateJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemBulkUpdateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "items": {
                "description": "Array of catalog items to update.",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogItemUpdateQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "items"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CatalogItemUpdateJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemUpdateJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCatalogItemUpdateJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogItemBulkUpdateJobEnum"
              },
              "id": {
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "description": "Status of the asynchronous job.",
                    "type": "string",
                    "example": "processing",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ]
                  },
                  "created_at": {
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00"
                  },
                  "total_count": {
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                    "type": "integer",
                    "example": 10
                  },
                  "completed_count": {
                    "description": "The total number of operations that have been completed by the job.",
                    "type": "integer",
                    "example": 9,
                    "default": 0,
                    "nullable": true
                  },
                  "failed_count": {
                    "description": "The total number of operations that have failed as part of the job.",
                    "type": "integer",
                    "example": 1,
                    "default": 0,
                    "nullable": true
                  },
                  "completed_at": {
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "errors": {
                    "description": "Array of errors encountered during the processing of the job.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/APIJobErrorPayload"
                    },
                    "nullable": true
                  },
                  "expires_at": {
                    "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  }
                },
                "required": [
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogItemEnum"
                            },
                            "id": {
                              "description": "IDs of the updated catalog items.",
                              "type": "string",
                              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogItemDeleteQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemEnum"
          },
          "id": {
            "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
          }
        },
        "required": [
          "type",
          "id"
        ]
      },
      "CatalogItemDeleteJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemBulkDeleteJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "items": {
                "description": "Array of catalog items to delete.",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogItemDeleteQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "items"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CatalogItemDeleteJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemDeleteJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCatalogItemDeleteJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogItemBulkDeleteJobEnum"
              },
              "id": {
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "description": "Status of the asynchronous job.",
                    "type": "string",
                    "example": "processing",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ]
                  },
                  "created_at": {
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00"
                  },
                  "total_count": {
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                    "type": "integer",
                    "example": 10
                  },
                  "completed_count": {
                    "description": "The total number of operations that have been completed by the job.",
                    "type": "integer",
                    "example": 9,
                    "default": 0,
                    "nullable": true
                  },
                  "failed_count": {
                    "description": "The total number of operations that have failed as part of the job.",
                    "type": "integer",
                    "example": 1,
                    "default": 0,
                    "nullable": true
                  },
                  "completed_at": {
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "errors": {
                    "description": "Array of errors encountered during the processing of the job.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/APIJobErrorPayload"
                    },
                    "nullable": true
                  },
                  "expires_at": {
                    "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  }
                },
                "required": [
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogItemEnum"
                            },
                            "id": {
                              "description": "IDs of the deleted catalog items.",
                              "type": "string",
                              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogVariantCreateJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "variants": {
                "description": "Array of catalog variants to create.",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogVariantCreateQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "variants"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CatalogVariantCreateJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantCreateJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCatalogVariantCreateJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogVariantBulkCreateJobEnum"
              },
              "id": {
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "description": "Status of the asynchronous job.",
                    "type": "string",
                    "example": "processing",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ]
                  },
                  "created_at": {
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00"
                  },
                  "total_count": {
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                    "type": "integer",
                    "example": 10
                  },
                  "completed_count": {
                    "description": "The total number of operations that have been completed by the job.",
                    "type": "integer",
                    "example": 9,
                    "default": 0,
                    "nullable": true
                  },
                  "failed_count": {
                    "description": "The total number of operations that have failed as part of the job.",
                    "type": "integer",
                    "example": 1,
                    "default": 0,
                    "nullable": true
                  },
                  "completed_at": {
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "errors": {
                    "description": "Array of errors encountered during the processing of the job.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/APIJobErrorPayload"
                    },
                    "nullable": true
                  },
                  "expires_at": {
                    "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  }
                },
                "required": [
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "variants": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogVariantEnum"
                            },
                            "id": {
                              "description": "IDs of the created catalog variants.",
                              "type": "string",
                              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogVariantUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantEnum"
          },
          "id": {
            "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "title": {
                "description": "The title of the catalog item variant.",
                "type": "string",
                "example": "Ocean Blue Shirt (Sample) Variant Medium",
                "nullable": true
              },
              "description": {
                "description": "A description of the catalog item variant.",
                "type": "string",
                "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns.",
                "nullable": true
              },
              "sku": {
                "description": "The SKU of the catalog item variant.",
                "type": "string",
                "example": "OBS-MD",
                "nullable": true
              },
              "inventory_policy": {
                "description": "This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values:\n`1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.\n`0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.",
                "type": "integer",
                "example": 2,
                "enum": [
                  0,
                  1,
                  2
                ],
                "nullable": true
              },
              "inventory_quantity": {
                "description": "The quantity of the catalog item variant currently in stock.",
                "type": "number",
                "example": 25,
                "nullable": true
              },
              "price": {
                "description": "This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item).",
                "type": "number",
                "example": 42,
                "nullable": true
              },
              "url": {
                "description": "URL pointing to the location of the catalog item variant on your website.",
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "nullable": true
              },
              "image_full_url": {
                "description": "URL pointing to the location of a full image of the catalog item variant.",
                "type": "string",
                "example": "https://via.placeholder.com/300",
                "nullable": true
              },
              "image_thumbnail_url": {
                "description": "URL pointing to the location of an image thumbnail of the catalog item variant.",
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "nullable": true
              },
              "images": {
                "description": "List of URLs pointing to the locations of images of the catalog item variant.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "https://via.placeholder.com/150"
                ],
                "nullable": true
              },
              "custom_metadata": {
                "description": "Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb.",
                "type": "object",
                "example": {
                  "Top Pick": true
                },
                "nullable": true
              },
              "published": {
                "description": "Boolean value indicating whether the catalog item variant is published.",
                "type": "boolean",
                "example": true,
                "nullable": true
              }
            }
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "CatalogVariantUpdateJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantBulkUpdateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "variants": {
                "description": "Array of catalog variants to update.",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogVariantUpdateQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "variants"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CatalogVariantUpdateJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantUpdateJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCatalogVariantUpdateJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogVariantBulkUpdateJobEnum"
              },
              "id": {
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "description": "Status of the asynchronous job.",
                    "type": "string",
                    "example": "processing",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ]
                  },
                  "created_at": {
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00"
                  },
                  "total_count": {
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                    "type": "integer",
                    "example": 10
                  },
                  "completed_count": {
                    "description": "The total number of operations that have been completed by the job.",
                    "type": "integer",
                    "example": 9,
                    "default": 0,
                    "nullable": true
                  },
                  "failed_count": {
                    "description": "The total number of operations that have failed as part of the job.",
                    "type": "integer",
                    "example": 1,
                    "default": 0,
                    "nullable": true
                  },
                  "completed_at": {
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "errors": {
                    "description": "Array of errors encountered during the processing of the job.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/APIJobErrorPayload"
                    },
                    "nullable": true
                  },
                  "expires_at": {
                    "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  }
                },
                "required": [
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "variants": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogVariantEnum"
                            },
                            "id": {
                              "description": "IDs of the updated catalog variants.",
                              "type": "string",
                              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogVariantDeleteQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantEnum"
          },
          "id": {
            "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
          }
        },
        "required": [
          "type",
          "id"
        ]
      },
      "CatalogVariantDeleteJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantBulkDeleteJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "variants": {
                "description": "Array of catalog variants to delete.",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogVariantDeleteQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "variants"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CatalogVariantDeleteJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantDeleteJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCatalogVariantDeleteJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogVariantBulkDeleteJobEnum"
              },
              "id": {
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "description": "Status of the asynchronous job.",
                    "type": "string",
                    "example": "processing",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ]
                  },
                  "created_at": {
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00"
                  },
                  "total_count": {
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                    "type": "integer",
                    "example": 10
                  },
                  "completed_count": {
                    "description": "The total number of operations that have been completed by the job.",
                    "type": "integer",
                    "example": 9,
                    "default": 0,
                    "nullable": true
                  },
                  "failed_count": {
                    "description": "The total number of operations that have failed as part of the job.",
                    "type": "integer",
                    "example": 1,
                    "default": 0,
                    "nullable": true
                  },
                  "completed_at": {
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "errors": {
                    "description": "Array of errors encountered during the processing of the job.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/APIJobErrorPayload"
                    },
                    "nullable": true
                  },
                  "expires_at": {
                    "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  }
                },
                "required": [
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "variants": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogVariantEnum"
                            },
                            "id": {
                              "description": "IDs of the deleted catalog variants.",
                              "type": "string",
                              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogCategoryCreateJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "categories": {
                "description": "Array of catalog categories to create.",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogCategoryCreateQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "categories"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CatalogCategoryCreateJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryCreateJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCatalogCategoryCreateJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogCategoryBulkCreateJobEnum"
              },
              "id": {
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "description": "Status of the asynchronous job.",
                    "type": "string",
                    "example": "processing",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ]
                  },
                  "created_at": {
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00"
                  },
                  "total_count": {
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                    "type": "integer",
                    "example": 10
                  },
                  "completed_count": {
                    "description": "The total number of operations that have been completed by the job.",
                    "type": "integer",
                    "example": 9,
                    "default": 0,
                    "nullable": true
                  },
                  "failed_count": {
                    "description": "The total number of operations that have failed as part of the job.",
                    "type": "integer",
                    "example": 1,
                    "default": 0,
                    "nullable": true
                  },
                  "completed_at": {
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "errors": {
                    "description": "Array of errors encountered during the processing of the job.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/APIJobErrorPayload"
                    },
                    "nullable": true
                  },
                  "expires_at": {
                    "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  }
                },
                "required": [
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "categories": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogCategoryEnum"
                            },
                            "id": {
                              "description": "IDs of the created catalog categories.",
                              "type": "string",
                              "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogCategoryUpdateJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryBulkUpdateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "categories": {
                "description": "Array of catalog categories to update.",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogCategoryUpdateQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "categories"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CatalogCategoryUpdateJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryUpdateJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCatalogCategoryUpdateJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogCategoryBulkUpdateJobEnum"
              },
              "id": {
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "description": "Status of the asynchronous job.",
                    "type": "string",
                    "example": "processing",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ]
                  },
                  "created_at": {
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00"
                  },
                  "total_count": {
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                    "type": "integer",
                    "example": 10
                  },
                  "completed_count": {
                    "description": "The total number of operations that have been completed by the job.",
                    "type": "integer",
                    "example": 9,
                    "default": 0,
                    "nullable": true
                  },
                  "failed_count": {
                    "description": "The total number of operations that have failed as part of the job.",
                    "type": "integer",
                    "example": 1,
                    "default": 0,
                    "nullable": true
                  },
                  "completed_at": {
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "errors": {
                    "description": "Array of errors encountered during the processing of the job.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/APIJobErrorPayload"
                    },
                    "nullable": true
                  },
                  "expires_at": {
                    "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  }
                },
                "required": [
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "categories": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogCategoryEnum"
                            },
                            "id": {
                              "description": "IDs of the updated catalog categories.",
                              "type": "string",
                              "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogCategoryDeleteQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryEnum"
          },
          "id": {
            "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
          }
        },
        "required": [
          "type",
          "id"
        ]
      },
      "CatalogCategoryDeleteJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryBulkDeleteJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "categories": {
                "description": "Array of catalog categories to delete.",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogCategoryDeleteQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "categories"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CatalogCategoryDeleteJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryDeleteJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCatalogCategoryDeleteJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogCategoryBulkDeleteJobEnum"
              },
              "id": {
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "description": "Status of the asynchronous job.",
                    "type": "string",
                    "example": "processing",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ]
                  },
                  "created_at": {
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00"
                  },
                  "total_count": {
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                    "type": "integer",
                    "example": 10
                  },
                  "completed_count": {
                    "description": "The total number of operations that have been completed by the job.",
                    "type": "integer",
                    "example": 9,
                    "default": 0,
                    "nullable": true
                  },
                  "failed_count": {
                    "description": "The total number of operations that have failed as part of the job.",
                    "type": "integer",
                    "example": 1,
                    "default": 0,
                    "nullable": true
                  },
                  "completed_at": {
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "errors": {
                    "description": "Array of errors encountered during the processing of the job.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/APIJobErrorPayload"
                    },
                    "nullable": true
                  },
                  "expires_at": {
                    "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  }
                },
                "required": [
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "categories": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogCategoryEnum"
                            },
                            "id": {
                              "description": "IDs of the deleted catalog categories.",
                              "type": "string",
                              "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "TagCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TagEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The Tag name",
                "type": "string",
                "example": "My Tag"
              }
            },
            "required": [
              "name"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "tag-group": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/TagGroupEnum"
                      },
                      "id": {
                        "description": "The ID of the Tag Group to associate the Tag with. If this field is not specified, the Tag will be associated with the company's Default Tag Group.",
                        "type": "string",
                        "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "TagCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TagCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostTagResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TagEnum"
              },
              "id": {
                "description": "The Tag ID",
                "type": "string",
                "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The Tag name",
                    "type": "string",
                    "example": "My Tag"
                  }
                },
                "required": [
                  "name"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "tag-group": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/TagGroupEnum"
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ]
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "lists": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/ListEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "segments": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/SegmentEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "campaigns": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CampaignEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "flows": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/FlowEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "TagGroupCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TagGroupEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The Tag Group name",
                "type": "string",
                "example": "My Tag Group"
              },
              "exclusive": {
                "type": "boolean",
                "default": false,
                "nullable": true
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "TagGroupCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TagGroupCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostTagGroupResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TagGroupEnum"
              },
              "id": {
                "description": "The Tag Group ID",
                "type": "string",
                "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The Tag Group name",
                    "type": "string",
                    "example": "My Tag Group"
                  },
                  "exclusive": {
                    "description": "If a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group.",
                    "type": "boolean"
                  },
                  "default": {
                    "description": "Every company automatically has one Default Tag Group. The Default Tag Group cannot be deleted, and no other Default Tag Groups can be created. This value is true for the Default Tag Group and false for all other Tag Groups.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "name",
                  "exclusive",
                  "default"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "tags": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/TagEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "TagFlowOp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/FlowEnum"
                },
                "id": {
                  "description": "The IDs of the flows to link or unlink with the given Tag ID",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "TagCampaignOp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CampaignEnum"
                },
                "id": {
                  "description": "The IDs of the campaigns to link or unlink with the given Tag ID",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "TagListOp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/ListEnum"
                },
                "id": {
                  "description": "The IDs of the lists to link or unlink with the given Tag ID",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "TagSegmentOp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/SegmentEnum"
                },
                "id": {
                  "description": "The IDs of the segments to link or unlink with the given Tag ID",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "WebhookCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/WebhookEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "A name for the webhook.",
                "type": "string",
                "example": "My Webhook"
              },
              "description": {
                "description": "A description for the webhook.",
                "type": "string",
                "example": "A webhook for sms events",
                "nullable": true
              },
              "endpoint_url": {
                "description": "A url to send webhook calls to. Must be https.",
                "type": "string",
                "example": "https://www.example.com/example/path"
              },
              "secret_key": {
                "description": "A secret key, that will be used for webhook request signing.",
                "type": "string",
                "example": "INSERT_SECRET_KEY"
              }
            },
            "required": [
              "name",
              "endpoint_url",
              "secret_key"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "webhook-topics": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "$ref": "#/components/schemas/WebhookTopicEnum"
                        },
                        "id": {
                          "description": "A list of topics to subscribe to.",
                          "type": "string",
                          "example": "event:klaviyo.sent_sms"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "WebhookCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/WebhookCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostWebhookResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/WebhookEnum"
              },
              "id": {
                "description": "The ID of the webhook.",
                "type": "string",
                "example": "01HF7AYTK76RHR4F17G6DGTRGF"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "A name for the webhook.",
                    "type": "string",
                    "example": "My Webhook"
                  },
                  "description": {
                    "description": "A description for the webhook.",
                    "type": "string",
                    "example": "A webhook for sms events",
                    "nullable": true
                  },
                  "endpoint_url": {
                    "description": "The url to send webhook requests to, truncated for security.",
                    "type": "string",
                    "example": "https://www.example.com"
                  },
                  "enabled": {
                    "description": "Is the webhook enabled.",
                    "type": "boolean"
                  },
                  "created_at": {
                    "description": "Date and time when the webhook was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T01:23:45+00:00"
                  },
                  "updated_at": {
                    "description": "Date and time when the webhook was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T01:23:45+00:00"
                  }
                },
                "required": [
                  "name",
                  "endpoint_url",
                  "enabled",
                  "created_at",
                  "updated_at"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "webhook-topics": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/WebhookTopicEnum"
                            },
                            "id": {
                              "description": "A topic the webhook is subscribed to.",
                              "type": "string",
                              "example": "event:klaviyo.sent_sms"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileSuppressionCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "attributes": {
            "properties": {
              "email": {
                "description": "The email of the profile to suppress.",
                "type": "string",
                "example": "matt-kemp@klaviyo-demo.com"
              }
            },
            "required": [
              "email"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "SuppressionCreateJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileSuppressionBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "profiles": {
                "description": "The profile(s) to create suppressions for.",
                "type": "object",
                "nullable": true,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ProfileSuppressionCreateQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "list": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/ListEnum"
                      },
                      "id": {
                        "description": "Suppress all profiles in this list",
                        "type": "string",
                        "example": "Y6nRLr"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                }
              },
              "segment": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/SegmentEnum"
                      },
                      "id": {
                        "description": "Suppress all profiles in this segment",
                        "type": "string",
                        "example": "Y6nRLr"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "SuppressionCreateJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SuppressionCreateJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostBulkProfileSuppressionsCreateJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ProfileSuppressionBulkCreateJobEnum"
              },
              "id": {
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "description": "Status of the asynchronous job.",
                    "type": "string",
                    "example": "processing",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ]
                  },
                  "created_at": {
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00"
                  },
                  "total_count": {
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                    "type": "integer",
                    "example": 10
                  },
                  "completed_count": {
                    "description": "The total number of operations that have been completed by the job.",
                    "type": "integer",
                    "example": 9,
                    "default": 0,
                    "nullable": true
                  },
                  "completed_at": {
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "skipped_count": {
                    "description": "The total number of profiles that have been skipped as part of the job.",
                    "type": "integer",
                    "example": 1,
                    "default": 0,
                    "nullable": true
                  }
                },
                "required": [
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "lists": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/ListEnum"
                            },
                            "id": {
                              "description": "Suppress/Unsuppress all profiles in this list",
                              "type": "string",
                              "example": "Y6nRLr"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "segments": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/SegmentEnum"
                            },
                            "id": {
                              "description": "Suppress/Unsuppress all profiles in this segment",
                              "type": "string",
                              "example": "Y6nRLr"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileSuppressionDeleteQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "attributes": {
            "properties": {
              "email": {
                "description": "The email of the profile to unsuppress.",
                "type": "string",
                "example": "matt-kemp@klaviyo-demo.com"
              }
            },
            "required": [
              "email"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "SuppressionDeleteJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileSuppressionBulkDeleteJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "profiles": {
                "description": "The profile(s) to remove suppressions for.",
                "type": "object",
                "nullable": true,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ProfileSuppressionDeleteQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "list": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/ListEnum"
                      },
                      "id": {
                        "description": "The list to pull the profiles to remove suppressions from",
                        "type": "string",
                        "example": "Y6nRLr"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                }
              },
              "segment": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/SegmentEnum"
                      },
                      "id": {
                        "description": "The segment to pull the profiles to remove suppressions from",
                        "type": "string",
                        "example": "Y6nRLr"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "SuppressionDeleteJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SuppressionDeleteJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostBulkProfileSuppressionsRemoveJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ProfileSuppressionBulkDeleteJobEnum"
              },
              "id": {
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "description": "Status of the asynchronous job.",
                    "type": "string",
                    "example": "processing",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ]
                  },
                  "created_at": {
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00"
                  },
                  "total_count": {
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                    "type": "integer",
                    "example": 10
                  },
                  "completed_count": {
                    "description": "The total number of operations that have been completed by the job.",
                    "type": "integer",
                    "example": 9,
                    "default": 0,
                    "nullable": true
                  },
                  "completed_at": {
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "skipped_count": {
                    "description": "The total number of profiles that have been skipped as part of the job.",
                    "type": "integer",
                    "example": 1,
                    "default": 0,
                    "nullable": true
                  }
                },
                "required": [
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "lists": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/ListEnum"
                            },
                            "id": {
                              "description": "Suppress/Unsuppress all profiles in this list",
                              "type": "string",
                              "example": "Y6nRLr"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "segments": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/SegmentEnum"
                            },
                            "id": {
                              "description": "Suppress/Unsuppress all profiles in this segment",
                              "type": "string",
                              "example": "Y6nRLr"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionParameters": {
        "type": "object",
        "properties": {
          "consent": {
            "description": "The Consent status to be set as part of the subscribe call. Currently supports \"SUBSCRIBED\".",
            "type": "string",
            "example": "SUBSCRIBED",
            "enum": [
              "SUBSCRIBED"
            ]
          },
          "consented_at": {
            "description": "The timestamp of when the profile's consent was gathered. This should only be used when syncing over historical consent info to Klaviyo; if the `historical_import` flag is not included, providing any value for this field will raise an error.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "consent"
        ]
      },
      "EmailSubscriptionParameters": {
        "type": "object",
        "properties": {
          "marketing": {
            "description": "The parameters to subscribe to on the \"EMAIL\" Channel. Currently supports \"MARKETING\".",
            "$ref": "#/components/schemas/SubscriptionParameters"
          }
        },
        "required": [
          "marketing"
        ]
      },
      "SMSSubscriptionParameters": {
        "type": "object",
        "properties": {
          "marketing": {
            "description": "The parameters to subscribe to marketing on the \"SMS\" Channel.",
            "$ref": "#/components/schemas/SubscriptionParameters",
            "nullable": true
          },
          "transactional": {
            "description": "The parameters to subscribe to transactional messaging on the \"SMS\" Channel.",
            "$ref": "#/components/schemas/SubscriptionParameters",
            "nullable": true
          }
        }
      },
      "SubscriptionChannels": {
        "type": "object",
        "properties": {
          "email": {
            "description": "The subscription parameters to subscribe to on the \"EMAIL\" Channel.",
            "$ref": "#/components/schemas/EmailSubscriptionParameters",
            "nullable": true
          },
          "sms": {
            "description": "The subscription parameters to subscribe to on the \"SMS\" Channel.",
            "$ref": "#/components/schemas/SMSSubscriptionParameters",
            "nullable": true
          }
        }
      },
      "ProfileSubscriptionCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "description": "The ID of the profile to subscribe. If provided, this will be used to perform the lookup.",
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
            "nullable": true
          },
          "attributes": {
            "properties": {
              "email": {
                "description": "The email address to subscribe or to set on the profile if `channels` is specified and the email channel is omitted.",
                "type": "string",
                "example": "matt-kemp@klaviyo-demo.com",
                "nullable": true
              },
              "phone_number": {
                "description": "The phone number to subscribe or to set on the profile if `channels` is specified and the SMS channel is omitted. This must be in E.164 format.",
                "type": "string",
                "example": "+15005550006",
                "nullable": true
              },
              "subscriptions": {
                "description": "When provided, this will provide consent for the indicated message types on the specified channels. If omitted, we will subscribe the profile to all message types on the channels corresponding to the provided identifiers.",
                "$ref": "#/components/schemas/SubscriptionChannels",
                "nullable": true
              },
              "age_gated_date_of_birth": {
                "description": "The profile's date of birth. This field is required to update SMS consent for accounts using age-gating: https://help.klaviyo.com/hc/en-us/articles/17252552814875",
                "type": "string",
                "format": "date",
                "nullable": true
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "ProfileSubscriptionBulkCreateJobEnum": {
        "type": "string",
        "enum": [
          "profile-subscription-bulk-create-job"
        ]
      },
      "SubscriptionCreateJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileSubscriptionBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "custom_source": {
                "description": "A custom method detail or source to store on the consent records.",
                "type": "string",
                "example": "Marketing Event",
                "nullable": true
              },
              "profiles": {
                "description": "The profile(s) to subscribe",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ProfileSubscriptionCreateQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              },
              "historical_import": {
                "description": "Whether this subscription is part of a historical import. If true, the consented_at field must be provided for each profile.",
                "type": "boolean",
                "default": false,
                "nullable": true
              }
            },
            "required": [
              "profiles"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "list": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/ListEnum"
                      },
                      "id": {
                        "description": "The list to add the newly subscribed profiles to",
                        "type": "string",
                        "example": "Y6nRLr"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "SubscriptionCreateJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SubscriptionCreateJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileSubscriptionDeleteQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "attributes": {
            "properties": {
              "email": {
                "description": "The email address to unsubscribe.",
                "type": "string",
                "example": "matt-kemp@klaviyo-demo.com",
                "nullable": true
              },
              "phone_number": {
                "description": "The phone number to unsubscribe. This must be in E.164 format.",
                "type": "string",
                "example": "+15005550006",
                "nullable": true
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "ProfileSubscriptionBulkDeleteJobEnum": {
        "type": "string",
        "enum": [
          "profile-subscription-bulk-delete-job"
        ]
      },
      "SubscriptionDeleteJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileSubscriptionBulkDeleteJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "profiles": {
                "description": "The profile(s) to unsubscribe",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ProfileSubscriptionDeleteQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "profiles"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "list": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/ListEnum"
                      },
                      "id": {
                        "description": "The list to remove the profiles from",
                        "type": "string",
                        "example": "Y6nRLr"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "SubscriptionDeleteJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SubscriptionDeleteJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "DataPrivacyProfileQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
            "nullable": true
          },
          "attributes": {
            "properties": {
              "email": {
                "description": "Individual's email address",
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com",
                "nullable": true
              },
              "phone_number": {
                "description": "Individual's phone number in E.164 format",
                "type": "string",
                "example": "+15005550006",
                "nullable": true
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "DataPrivacyDeletionJobEnum": {
        "type": "string",
        "enum": [
          "data-privacy-deletion-job"
        ]
      },
      "DataPrivacyCreateDeletionJobQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DataPrivacyDeletionJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "profile": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/DataPrivacyProfileQueryResourceObject"
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "profile"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "DataPrivacyCreateDeletionJobQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DataPrivacyCreateDeletionJobQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "DeviceMetadata": {
        "type": "object",
        "properties": {
          "device_id": {
            "description": "Relatively stable ID for the device. Will update on app uninstall and reinstall",
            "type": "string",
            "example": "1234567890",
            "nullable": true
          },
          "klaviyo_sdk": {
            "description": "The name of the SDK used to create the push token.",
            "type": "string",
            "example": "swift",
            "enum": [
              "android",
              "react_native",
              "swift"
            ],
            "nullable": true
          },
          "sdk_version": {
            "description": "The version of the SDK used to create the push token",
            "type": "string",
            "example": "1.0.0",
            "nullable": true
          },
          "device_model": {
            "description": "The model of the device",
            "type": "string",
            "example": "iPhone12,1",
            "nullable": true
          },
          "os_name": {
            "description": "The name of the operating system on the device.",
            "type": "string",
            "example": "ios",
            "enum": [
              "android",
              "ios",
              "ipados",
              "macos",
              "tvos"
            ],
            "nullable": true
          },
          "os_version": {
            "description": "The version of the operating system on the device",
            "type": "string",
            "example": "14.0",
            "nullable": true
          },
          "manufacturer": {
            "description": "The manufacturer of the device",
            "type": "string",
            "example": "Apple",
            "nullable": true
          },
          "app_name": {
            "description": "The name of the app that created the push token",
            "type": "string",
            "example": "Klaviyo",
            "nullable": true
          },
          "app_version": {
            "description": "The version of the app that created the push token",
            "type": "string",
            "example": "1.0.0",
            "nullable": true
          },
          "app_build": {
            "description": "The build of the app that created the push token",
            "type": "string",
            "example": "1",
            "nullable": true
          },
          "app_id": {
            "description": "The ID of the app that created the push token",
            "type": "string",
            "example": "com.klaviyo.app",
            "nullable": true
          },
          "environment": {
            "description": "The environment in which the push token was created",
            "type": "string",
            "example": "release",
            "enum": [
              "debug",
              "release"
            ],
            "nullable": true
          }
        }
      },
      "PushProfileUpsertQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "properties": {
              "phone_number": {
                "description": "Individual's phone number in E.164 format",
                "type": "string",
                "example": "+15005550006",
                "nullable": true
              },
              "external_id": {
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.",
                "type": "string",
                "nullable": true
              },
              "anonymous_id": {
                "description": "Id that can be used to identify a profile when other identifiers are not available",
                "type": "string",
                "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
                "nullable": true
              },
              "_kx": {
                "description": "Also known as the `exchange_id`, this is an encrypted identifier used for identifying a\nprofile by Klaviyo's web tracking.\n\nYou can use this field as a filter when retrieving profiles via the Get Profiles endpoint.",
                "type": "string",
                "nullable": true
              },
              "first_name": {
                "description": "Individual's first name",
                "type": "string",
                "example": "Sarah",
                "nullable": true
              },
              "last_name": {
                "description": "Individual's last name",
                "type": "string",
                "example": "Mason",
                "nullable": true
              },
              "organization": {
                "description": "Name of the company or organization within the company for whom the individual works",
                "type": "string",
                "example": "Example Corporation",
                "nullable": true
              },
              "locale": {
                "description": "The locale of the profile, in the IETF BCP 47 language tag format like (ISO 639-1/2)-(ISO 3166 alpha-2)",
                "type": "string",
                "example": "en-US",
                "nullable": true
              },
              "title": {
                "description": "Individual's job title",
                "type": "string",
                "example": "Regional Manager",
                "nullable": true
              },
              "image": {
                "description": "URL pointing to the location of a profile image",
                "type": "string",
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "nullable": true
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation",
                "nullable": true
              },
              "properties": {
                "description": "An object containing key/value pairs for any custom properties assigned to this profile",
                "type": "object",
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "nullable": true
              },
              "meta": {
                "$ref": "#/components/schemas/ProfileMeta",
                "nullable": true
              },
              "email": {
                "description": "Individual's email address",
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com",
                "nullable": true
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "PushTokenEnum": {
        "type": "string",
        "enum": [
          "push-token"
        ]
      },
      "PushTokenCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/PushTokenEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "token": {
                "description": "A push token from APNS or FCM.",
                "type": "string",
                "example": "1234567890"
              },
              "platform": {
                "description": "The platform on which the push token was created.",
                "type": "string",
                "enum": [
                  "android",
                  "ios"
                ]
              },
              "enablement_status": {
                "description": "This is the enablement status for the individual push token.",
                "type": "string",
                "example": "AUTHORIZED",
                "default": "AUTHORIZED",
                "enum": [
                  "AUTHORIZED",
                  "DENIED",
                  "NOT_DETERMINED",
                  "PROVISIONAL",
                  "UNAUTHORIZED"
                ],
                "nullable": true
              },
              "vendor": {
                "description": "The vendor of the push token.",
                "type": "string",
                "example": "apns",
                "enum": [
                  "apns",
                  "fcm"
                ]
              },
              "background": {
                "description": "The background state of the push token.",
                "type": "string",
                "example": "AVAILABLE",
                "default": "AVAILABLE",
                "enum": [
                  "AVAILABLE",
                  "DENIED",
                  "RESTRICTED"
                ],
                "nullable": true
              },
              "device_metadata": {
                "description": "Metadata about the device that created the push token",
                "$ref": "#/components/schemas/DeviceMetadata",
                "nullable": true
              },
              "profile": {
                "description": "The profile associated with the push token to create/update",
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PushProfileUpsertQueryResourceObject"
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "token",
              "platform",
              "vendor",
              "profile"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "PushTokenCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PushTokenCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "ImageCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ImageEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "A name for the image.  Defaults to the filename if not provided.  If the name matches an existing image, a suffix will be added.",
                "type": "string",
                "nullable": true
              },
              "import_from_url": {
                "description": "An existing image url to import the image from. Alternatively, you may specify a base-64 encoded data-uri (`data:image/...`). Supported image formats: jpeg,png,gif. Maximum image size: 5MB.",
                "type": "string",
                "example": "https://www.example.com/example.jpg"
              },
              "hidden": {
                "description": "If true, this image is not shown in the asset library.",
                "type": "boolean",
                "default": false,
                "nullable": true
              }
            },
            "required": [
              "import_from_url"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "ImageCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ImageCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostImageResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ImageEnum"
              },
              "id": {
                "description": "The ID of the image",
                "type": "string",
                "example": "7"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "image_url": {
                    "type": "string"
                  },
                  "format": {
                    "type": "string"
                  },
                  "size": {
                    "type": "integer"
                  },
                  "hidden": {
                    "type": "boolean"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00"
                  }
                },
                "required": [
                  "name",
                  "image_url",
                  "format",
                  "size",
                  "hidden",
                  "updated_at"
                ]
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "Timeframe": {
        "type": "object",
        "properties": {
          "key": {
            "description": "Pre-defined key that represents a set timeframe",
            "type": "string",
            "enum": [
              "last_12_months",
              "last_30_days",
              "last_365_days",
              "last_3_months",
              "last_7_days",
              "last_90_days",
              "last_month",
              "last_week",
              "last_year",
              "this_month",
              "this_week",
              "this_year",
              "today",
              "yesterday"
            ]
          }
        },
        "required": [
          "key"
        ]
      },
      "CustomTimeframe": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time",
            "example": "2022-11-08T00:00:00+00:00"
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "example": "2022-11-08T00:00:00+00:00"
          }
        },
        "required": [
          "start",
          "end"
        ]
      },
      "CampaignValuesReportEnum": {
        "type": "string",
        "enum": [
          "campaign-values-report"
        ]
      },
      "CampaignValuesRequestDTOResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignValuesReportEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "statistics": {
                "description": "List of statistics to query for. All rate statistics will be returned in fractional form [0.0, 1.0]",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "average_order_value",
                    "bounce_rate",
                    "bounced",
                    "bounced_or_failed",
                    "bounced_or_failed_rate",
                    "click_rate",
                    "click_to_open_rate",
                    "clicks",
                    "clicks_unique",
                    "conversion_rate",
                    "conversion_uniques",
                    "conversion_value",
                    "conversions",
                    "delivered",
                    "delivery_rate",
                    "failed",
                    "failed_rate",
                    "open_rate",
                    "opens",
                    "opens_unique",
                    "recipients",
                    "revenue_per_recipient",
                    "spam_complaint_rate",
                    "spam_complaints",
                    "unsubscribe_rate",
                    "unsubscribe_uniques",
                    "unsubscribes"
                  ],
                  "description": "Defined reporting metric"
                },
                "example": [
                  "opens",
                  "open_rate"
                ]
              },
              "timeframe": {
                "description": "The timeframe to query for data within. The max length a timeframe can be is 1 year",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Timeframe"
                  },
                  {
                    "$ref": "#/components/schemas/CustomTimeframe"
                  }
                ]
              },
              "conversion_metric_id": {
                "description": "ID of the metric to be used for conversion statistics",
                "type": "string",
                "example": "RESQ6t"
              },
              "filter": {
                "description": "API filter string used to filter the query.\nAllowed filters are send_channel, campaign_id.\nAllowed operators are equals, contains-any.\nOnly one filter can be used per attribute, only AND can be used as a combination operator.\nMax of 100 messages per ANY filter.\nWhen filtering on send_channel, allowed values are email, push-notification, sms.",
                "type": "string",
                "example": "and(equals(campaign_id,\"abc123\"),contains-any(send_channel,[\"email\",\"sms\"]))",
                "nullable": true
              }
            },
            "required": [
              "statistics",
              "timeframe",
              "conversion_metric_id"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CampaignValuesRequestDTO": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignValuesRequestDTOResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "ValuesData": {
        "type": "object",
        "properties": {
          "groupings": {
            "description": "Applied groupings and the values for this object",
            "type": "object"
          },
          "statistics": {
            "description": "Requested statistics and their values results",
            "type": "object"
          }
        },
        "required": [
          "groupings",
          "statistics"
        ]
      },
      "PostCampaignValuesResponseDTO": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CampaignValuesReportEnum"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "results": {
                    "description": "An array of all the returned values data.\nEach object in the array represents one unique grouping and the results for that grouping.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ValuesData"
                    },
                    "example": [
                      {
                        "groupings": {
                          "send_channel": "email",
                          "campaign_id": "01GMRWDSA0ARTAKE1SFX8JGXAY"
                        },
                        "statistics": {
                          "opens": 123,
                          "open_rate": 0.8253
                        }
                      },
                      {
                        "groupings": {
                          "send_channel": "email",
                          "campaign_id": "01GJTHNWVG93F3KNX71SJ4FDBB"
                        },
                        "statistics": {
                          "opens": 97,
                          "open_rate": 0.7562
                        }
                      }
                    ]
                  }
                },
                "required": [
                  "results"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "campaigns": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CampaignEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "FlowValuesReportEnum": {
        "type": "string",
        "enum": [
          "flow-values-report"
        ]
      },
      "FlowValuesRequestDTOResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FlowValuesReportEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "statistics": {
                "description": "List of statistics to query for. All rate statistics will be returned in fractional form [0.0, 1.0]",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "average_order_value",
                    "bounce_rate",
                    "bounced",
                    "bounced_or_failed",
                    "bounced_or_failed_rate",
                    "click_rate",
                    "click_to_open_rate",
                    "clicks",
                    "clicks_unique",
                    "conversion_rate",
                    "conversion_uniques",
                    "conversion_value",
                    "conversions",
                    "delivered",
                    "delivery_rate",
                    "failed",
                    "failed_rate",
                    "open_rate",
                    "opens",
                    "opens_unique",
                    "recipients",
                    "revenue_per_recipient",
                    "spam_complaint_rate",
                    "spam_complaints",
                    "unsubscribe_rate",
                    "unsubscribe_uniques",
                    "unsubscribes"
                  ],
                  "description": "Defined reporting metric"
                },
                "example": [
                  "opens",
                  "open_rate"
                ]
              },
              "timeframe": {
                "description": "The timeframe to query for data within. The max length a timeframe can be is 1 year",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Timeframe"
                  },
                  {
                    "$ref": "#/components/schemas/CustomTimeframe"
                  }
                ]
              },
              "conversion_metric_id": {
                "description": "ID of the metric to be used for conversion statistics",
                "type": "string",
                "example": "RESQ6t"
              },
              "filter": {
                "description": "API filter string used to filter the query.\nAllowed filters are flow_id, send_channel, flow_message_id.\nAllowed operators are equals, contains-any.\nOnly one filter can be used per attribute, only AND can be used as a combination operator.\nMax of 100 messages per ANY filter.\nWhen filtering on send_channel, allowed values are email, push-notification, sms.",
                "type": "string",
                "example": "and(equals(flow_id,\"abc123\"),contains-any(send_channel,[\"email\",\"sms\"]))",
                "nullable": true
              }
            },
            "required": [
              "statistics",
              "timeframe",
              "conversion_metric_id"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "FlowValuesRequestDTO": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FlowValuesRequestDTOResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostFlowValuesResponseDTO": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/FlowValuesReportEnum"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "results": {
                    "description": "An array of all the returned values data.\nEach object in the array represents one unique grouping and the results for that grouping.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ValuesData"
                    },
                    "example": [
                      {
                        "groupings": {
                          "flow_id": "XVTP5Q",
                          "send_channel": "email",
                          "flow_message_id": "01GMRWDSA0ARTAKE1SFX8JGXAY"
                        },
                        "statistics": {
                          "opens": 123,
                          "open_rate": 0.8253
                        }
                      },
                      {
                        "groupings": {
                          "flow_id": "XVTP5Q",
                          "send_channel": "email",
                          "flow_message_id": "01GJTHNWVG93F3KNX71SJ4FDBB"
                        },
                        "statistics": {
                          "opens": 97,
                          "open_rate": 0.7562
                        }
                      }
                    ]
                  }
                },
                "required": [
                  "results"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "flows": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/FlowEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "flow-messages": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/FlowMessageEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "FlowSeriesReportEnum": {
        "type": "string",
        "enum": [
          "flow-series-report"
        ]
      },
      "FlowSeriesRequestDTOResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FlowSeriesReportEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "statistics": {
                "description": "List of statistics to query for. All rate statistics will be returned in fractional form [0.0, 1.0]",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "average_order_value",
                    "bounce_rate",
                    "bounced",
                    "bounced_or_failed",
                    "bounced_or_failed_rate",
                    "click_rate",
                    "click_to_open_rate",
                    "clicks",
                    "clicks_unique",
                    "conversion_rate",
                    "conversion_uniques",
                    "conversion_value",
                    "conversions",
                    "delivered",
                    "delivery_rate",
                    "failed",
                    "failed_rate",
                    "open_rate",
                    "opens",
                    "opens_unique",
                    "recipients",
                    "revenue_per_recipient",
                    "spam_complaint_rate",
                    "spam_complaints",
                    "unsubscribe_rate",
                    "unsubscribe_uniques",
                    "unsubscribes"
                  ],
                  "description": "Defined reporting metric"
                },
                "example": [
                  "opens",
                  "open_rate"
                ]
              },
              "timeframe": {
                "description": "The timeframe to query for data within. The max length a timeframe can be is 1 year",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Timeframe"
                  },
                  {
                    "$ref": "#/components/schemas/CustomTimeframe"
                  }
                ]
              },
              "interval": {
                "description": "The interval used to aggregate data within the series request.\nIf hourly is used, the timeframe cannot be longer than 7 days.\nIf daily is used, the timeframe cannot be longer than 60 days.\nIf monthly is used, the timeframe cannot be longer than 52 weeks.",
                "type": "string",
                "example": "weekly",
                "enum": [
                  "daily",
                  "hourly",
                  "monthly",
                  "weekly"
                ]
              },
              "conversion_metric_id": {
                "description": "ID of the metric to be used for conversion statistics",
                "type": "string",
                "example": "RESQ6t"
              },
              "filter": {
                "description": "API filter string used to filter the query.\nAllowed filters are flow_id, send_channel, flow_message_id.\nAllowed operators are equals, contains-any.\nOnly one filter can be used per attribute, only AND can be used as a combination operator.\nMax of 100 messages per ANY filter.\nWhen filtering on send_channel, allowed values are email, push-notification, sms.",
                "type": "string",
                "example": "and(equals(flow_id,\"abc123\"),contains-any(send_channel,[\"email\",\"sms\"]))",
                "nullable": true
              }
            },
            "required": [
              "statistics",
              "timeframe",
              "interval",
              "conversion_metric_id"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "FlowSeriesRequestDTO": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FlowSeriesRequestDTOResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "SeriesData": {
        "type": "object",
        "properties": {
          "groupings": {
            "description": "Applied groupings and the values for this object",
            "type": "object"
          },
          "statistics": {
            "description": "Requested statistics and their series result",
            "type": "object"
          }
        },
        "required": [
          "groupings",
          "statistics"
        ]
      },
      "PostFlowSeriesResponseDTO": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/FlowSeriesReportEnum"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "results": {
                    "description": "An array of all the returned values data.\nEach object in the array represents one unique grouping and the results for that grouping.\nEach value in the results array corresponds to the date time at the same index.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SeriesData"
                    },
                    "example": [
                      {
                        "groupings": {
                          "flow_id": "XVTP5Q",
                          "send_channel": "email",
                          "flow_message_id": "01GMRWDSA0ARTAKE1SFX8JGXAY"
                        },
                        "statistics": {
                          "opens": [
                            123,
                            156,
                            144
                          ],
                          "open_rate": [
                            0.8253,
                            0.8722,
                            0.8398
                          ]
                        }
                      },
                      {
                        "groupings": {
                          "flow_id": "XVTP5Q",
                          "send_channel": "email",
                          "flow_message_id": "01GJTHNWVG93F3KNX71SJ4FDBB"
                        },
                        "statistics": {
                          "opens": [
                            97,
                            98,
                            65
                          ],
                          "open_rate": [
                            0.7562,
                            0.761,
                            0.688
                          ]
                        }
                      }
                    ]
                  },
                  "date_times": {
                    "description": "An array of date times which correspond to the equivalent index in the results data.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "example": [
                      "2024-01-05T00:00:00+00:00",
                      "2024-01-06T00:00:00+00:00",
                      "2024-01-07T00:00:00+00:00"
                    ]
                  }
                },
                "required": [
                  "results",
                  "date_times"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "flows": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/FlowEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "flow-messages": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/FlowMessageEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "FormValuesReportEnum": {
        "type": "string",
        "enum": [
          "form-values-report"
        ]
      },
      "FormValuesRequestDTOResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FormValuesReportEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "statistics": {
                "description": "List of statistics to query for. All rate statistics will be returned in fractional form [0.0, 1.0]",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "closed_form",
                    "closed_form_uniques",
                    "qualified_form",
                    "qualified_form_uniques",
                    "submit_rate",
                    "submits",
                    "submitted_form_step",
                    "submitted_form_step_uniques",
                    "viewed_form",
                    "viewed_form_step",
                    "viewed_form_step_uniques",
                    "viewed_form_uniques"
                  ],
                  "description": "Defined form reporting metric"
                },
                "example": [
                  "viewed_form",
                  "submit_rate"
                ]
              },
              "timeframe": {
                "description": "The timeframe to query for data within. The max length a timeframe can be is 1 year",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Timeframe"
                  },
                  {
                    "$ref": "#/components/schemas/CustomTimeframe"
                  }
                ]
              },
              "group_by": {
                "description": "List of attributes to group the data by.\nAllowed group-bys are form_version_id, form_id.\nIf not passed in, the data will be grouped by form_id.\nIf a group by has prerequisites, they must be passed in together. The prerequisites for form_version_id is form_id",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "form_id",
                    "form_version_id"
                  ],
                  "description": "Attributes to represent what is being grouped by for Forms"
                },
                "nullable": true
              },
              "filter": {
                "description": "API filter string used to filter the query.\nAllowed filters are form_version_id, form_id.\nAllowed operators are equals, any.\nOnly one filter can be used per attribute, only AND can be used as a combination operator.\nMax of 100 messages per ANY filter.",
                "type": "string",
                "example": "and(equals(form_id,\"abc123\"),any(form_version_id,[\"xyz123\",\"ghi456\"]))",
                "nullable": true
              }
            },
            "required": [
              "statistics",
              "timeframe"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "FormValuesRequestDTO": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FormValuesRequestDTOResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostFormValuesResponseDTO": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/FormValuesReportEnum"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "results": {
                    "description": "An array of all the returned values data.\nEach object in the array represents one unique grouping and the results for that grouping.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ValuesData"
                    },
                    "example": [
                      {
                        "groupings": {
                          "form_id": "abc123",
                          "form_version_id": "012tuy"
                        },
                        "statistics": {
                          "viewed_form": 90,
                          "submits": 9,
                          "submit_rate": 0.1
                        }
                      },
                      {
                        "groupings": {
                          "form_id": "abc123",
                          "form_version_id": "756ghi"
                        },
                        "statistics": {
                          "viewed_form": 10,
                          "submits": 1,
                          "submit_rate": 0.1
                        }
                      }
                    ]
                  }
                },
                "required": [
                  "results"
                ]
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "FormSeriesReportEnum": {
        "type": "string",
        "enum": [
          "form-series-report"
        ]
      },
      "FormSeriesRequestDTOResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FormSeriesReportEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "statistics": {
                "description": "List of statistics to query for. All rate statistics will be returned in fractional form [0.0, 1.0]",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "closed_form",
                    "closed_form_uniques",
                    "qualified_form",
                    "qualified_form_uniques",
                    "submit_rate",
                    "submits",
                    "submitted_form_step",
                    "submitted_form_step_uniques",
                    "viewed_form",
                    "viewed_form_step",
                    "viewed_form_step_uniques",
                    "viewed_form_uniques"
                  ],
                  "description": "Defined form reporting metric"
                },
                "example": [
                  "viewed_form",
                  "submit_rate"
                ]
              },
              "timeframe": {
                "description": "The timeframe to query for data within. The max length a timeframe can be is 1 year",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Timeframe"
                  },
                  {
                    "$ref": "#/components/schemas/CustomTimeframe"
                  }
                ]
              },
              "interval": {
                "description": "The interval used to aggregate data within the series request.\nIf hourly is used, the timeframe cannot be longer than 7 days.\nIf daily is used, the timeframe cannot be longer than 60 days.\nIf monthly is used, the timeframe cannot be longer than 52 weeks.",
                "type": "string",
                "example": "weekly",
                "enum": [
                  "daily",
                  "hourly",
                  "monthly",
                  "weekly"
                ]
              },
              "group_by": {
                "description": "List of attributes to group the data by.\nAllowed group-bys are form_version_id, form_id.\nIf not passed in, the data will be grouped by form_id.\nIf a group by has prerequisites, they must be passed in together. The prerequisites for form_version_id is form_id",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "form_id",
                    "form_version_id"
                  ],
                  "description": "Attributes to represent what is being grouped by for Forms"
                },
                "nullable": true
              },
              "filter": {
                "description": "API filter string used to filter the query.\nAllowed filters are form_version_id, form_id.\nAllowed operators are equals, any.\nOnly one filter can be used per attribute, only AND can be used as a combination operator.\nMax of 100 messages per ANY filter.",
                "type": "string",
                "example": "and(equals(form_id,\"abc123\"),any(form_version_id,[\"xyz123\",\"ghi456\"]))",
                "nullable": true
              }
            },
            "required": [
              "statistics",
              "timeframe",
              "interval"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "FormSeriesRequestDTO": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FormSeriesRequestDTOResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostFormSeriesResponseDTO": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/FormSeriesReportEnum"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "results": {
                    "description": "An array of all the returned values data.\nEach object in the array represents one unique grouping and the results for that grouping.\nEach value in the results array corresponds to the date time at the same index.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SeriesData"
                    },
                    "example": [
                      {
                        "groupings": {
                          "form_id": "abc123"
                        },
                        "statistics": {
                          "viewed_form": [
                            100,
                            120,
                            140
                          ],
                          "submits": [
                            20,
                            22,
                            28
                          ]
                        }
                      },
                      {
                        "groupings": {
                          "form_id": "def456"
                        },
                        "statistics": {
                          "viewed_form": [
                            200,
                            300,
                            400
                          ],
                          "submits": [
                            20,
                            25,
                            30
                          ]
                        }
                      }
                    ]
                  },
                  "date_times": {
                    "description": "An array of date times which correspond to the equivalent index in the results data.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "example": [
                      "2024-01-05T00:00:00+00:00",
                      "2024-01-06T00:00:00+00:00",
                      "2024-01-07T00:00:00+00:00"
                    ]
                  }
                },
                "required": [
                  "results",
                  "date_times"
                ]
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SegmentValuesReportEnum": {
        "type": "string",
        "enum": [
          "segment-values-report"
        ]
      },
      "SegmentValuesRequestDTOResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SegmentValuesReportEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "statistics": {
                "description": "List of statistics to query for.",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "members_added",
                    "members_removed",
                    "net_members_changed",
                    "total_members"
                  ],
                  "description": "Defined segment reporting metric"
                },
                "example": [
                  "total_members",
                  "net_members_changed"
                ]
              },
              "timeframe": {
                "description": "The timeframe to query for data within. Data is unavailable before June 1st, 2023. Please use a timeframe after this date. The max length a timeframe can be is 1 year",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Timeframe"
                  },
                  {
                    "$ref": "#/components/schemas/CustomTimeframe"
                  }
                ]
              },
              "filter": {
                "description": "API filter string used to filter the query.\nAllowed filters are segment_id.\nAllowed operators are equals, any.\nOnly one filter can be used per attribute.\nMax of 100 messages per ANY filter.",
                "type": "string",
                "example": "any(segment_id,[\"xyz123\",\"ghi456\"])",
                "nullable": true
              }
            },
            "required": [
              "statistics",
              "timeframe"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "SegmentValuesRequestDTO": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SegmentValuesRequestDTOResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostSegmentValuesResponseDTO": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/SegmentValuesReportEnum"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "results": {
                    "description": "An array of all the returned values data.\nEach object in the array represents one unique grouping and the results for that grouping.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ValuesData"
                    },
                    "example": [
                      {
                        "groupings": {
                          "segment_id": "abc123"
                        },
                        "statistics": {
                          "total_members": 120,
                          "net_members_changed": 53
                        }
                      },
                      {
                        "groupings": {
                          "segment_id": "def123"
                        },
                        "statistics": {
                          "total_members": 250,
                          "net_members_changed": 113
                        }
                      }
                    ]
                  }
                },
                "required": [
                  "results"
                ]
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SegmentSeriesReportEnum": {
        "type": "string",
        "enum": [
          "segment-series-report"
        ]
      },
      "SegmentSeriesRequestDTOResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SegmentSeriesReportEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "statistics": {
                "description": "List of statistics to query for.",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "members_added",
                    "members_removed",
                    "net_members_changed",
                    "total_members"
                  ],
                  "description": "Defined segment reporting metric"
                },
                "example": [
                  "total_members",
                  "net_members_changed"
                ]
              },
              "timeframe": {
                "description": "The timeframe to query for data within. Data is unavailable before June 1st, 2023. Please use a timeframe after this date. The max length a timeframe can be is 1 year",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Timeframe"
                  },
                  {
                    "$ref": "#/components/schemas/CustomTimeframe"
                  }
                ]
              },
              "interval": {
                "description": "The interval used to aggregate data within the series request.\nIf hourly is used, the timeframe cannot be longer than 7 days.\nIf daily is used, the timeframe cannot be longer than 60 days.\nIf monthly is used, the timeframe cannot be longer than 52 weeks.",
                "type": "string",
                "example": "weekly",
                "enum": [
                  "daily",
                  "hourly",
                  "monthly",
                  "weekly"
                ]
              },
              "filter": {
                "description": "API filter string used to filter the query.\nAllowed filters are segment_id.\nAllowed operators are equals, any.\nOnly one filter can be used per attribute.\nMax of 100 messages per ANY filter.",
                "type": "string",
                "example": "any(segment_id,[\"xyz123\",\"ghi456\"])",
                "nullable": true
              }
            },
            "required": [
              "statistics",
              "timeframe",
              "interval"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "SegmentSeriesRequestDTO": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SegmentSeriesRequestDTOResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostSegmentSeriesResponseDTO": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/SegmentSeriesReportEnum"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "results": {
                    "description": "An array of all the returned values data.\nEach object in the array represents one unique grouping and the results for that grouping.\nEach value in the results array corresponds to the date time at the same index.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SeriesData"
                    },
                    "example": [
                      {
                        "groupings": {
                          "segment_id": "abc123"
                        },
                        "statistics": {
                          "total_members": [
                            120,
                            185,
                            240
                          ],
                          "net_members_changed": [
                            40,
                            62,
                            88
                          ]
                        }
                      },
                      {
                        "groupings": {
                          "segment_id": "def456"
                        },
                        "statistics": {
                          "total_members": [
                            103,
                            163,
                            213
                          ],
                          "net_members_changed": [
                            36,
                            66,
                            86
                          ]
                        }
                      }
                    ]
                  },
                  "date_times": {
                    "description": "An array of date times which correspond to the equivalent index in the results data.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "example": [
                      "2024-01-05T00:00:00+00:00",
                      "2024-01-06T00:00:00+00:00",
                      "2024-01-07T00:00:00+00:00"
                    ]
                  }
                },
                "required": [
                  "results",
                  "date_times"
                ]
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "UniversalContentCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TemplateUniversalContentEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The name for this universal content",
                "type": "string"
              },
              "definition": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/HTMLBlock"
                  },
                  {
                    "$ref": "#/components/schemas/TextBlock"
                  }
                ]
              }
            },
            "required": [
              "name",
              "definition"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "UniversalContentCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UniversalContentCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostUniversalContentResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TemplateUniversalContentEnum"
              },
              "id": {
                "description": "The ID of the universal content",
                "type": "string",
                "example": "01HWWWKAW4RHXQJCMW4R2KRYR4"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The name for this universal content",
                    "type": "string"
                  },
                  "definition": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ButtonBlock"
                      },
                      {
                        "$ref": "#/components/schemas/DropShadowBlock"
                      },
                      {
                        "$ref": "#/components/schemas/HeaderBlock"
                      },
                      {
                        "$ref": "#/components/schemas/HorizontalRuleBlock"
                      },
                      {
                        "$ref": "#/components/schemas/HTMLBlock"
                      },
                      {
                        "$ref": "#/components/schemas/ImageBlock"
                      },
                      {
                        "$ref": "#/components/schemas/ProductBlock"
                      },
                      {
                        "$ref": "#/components/schemas/ReviewBlock"
                      },
                      {
                        "$ref": "#/components/schemas/SocialBlock"
                      },
                      {
                        "$ref": "#/components/schemas/SpacerBlock"
                      },
                      {
                        "$ref": "#/components/schemas/SplitBlock"
                      },
                      {
                        "$ref": "#/components/schemas/TableBlock"
                      },
                      {
                        "$ref": "#/components/schemas/TextBlock"
                      },
                      {
                        "$ref": "#/components/schemas/UnsupportedBlock"
                      },
                      {
                        "$ref": "#/components/schemas/VideoBlock"
                      },
                      {
                        "$ref": "#/components/schemas/Section"
                      }
                    ]
                  },
                  "created": {
                    "description": "The datetime when this universal content was created",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00"
                  },
                  "updated": {
                    "description": "The datetime when this universal content was updated",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00"
                  },
                  "screenshot_status": {
                    "description": "The status of a universal content screenshot.",
                    "type": "string",
                    "enum": [
                      "completed",
                      "failed",
                      "generating",
                      "never_generated",
                      "not_renderable"
                    ]
                  },
                  "screenshot_url": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "definition",
                  "created",
                  "updated",
                  "screenshot_status",
                  "screenshot_url"
                ]
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionEnum": {
        "type": "string",
        "enum": [
          "subscription"
        ]
      },
      "OnsiteSubscriptionCreateQueryDeprecatedOct24ResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SubscriptionEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "custom_source": {
                "description": "A custom method detail or source to store on the consent records for this subscription.",
                "type": "string",
                "example": "Homepage footer signup form",
                "nullable": true
              },
              "profile": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProfileUpsertQueryResourceObject"
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "profile"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "list": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/ListEnum"
                      },
                      "id": {
                        "description": "The list ID to add the newly subscribed profile to.",
                        "type": "string",
                        "example": "Y6nRLr"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "OnsiteSubscriptionCreateQueryDeprecatedOct24": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/OnsiteSubscriptionCreateQueryDeprecatedOct24ResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PushTokenUnregisterEnum": {
        "type": "string",
        "enum": [
          "push-token-unregister"
        ]
      },
      "PushTokenUnregisterQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/PushTokenUnregisterEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "token": {
                "description": "A push token from APNS or FCM.",
                "type": "string",
                "example": "1234567890"
              },
              "platform": {
                "description": "The platform on which the push token was created.",
                "type": "string",
                "enum": [
                  "android",
                  "ios"
                ]
              },
              "vendor": {
                "description": "The vendor of the push token.",
                "type": "string",
                "example": "apns",
                "enum": [
                  "apns",
                  "fcm"
                ],
                "nullable": true
              },
              "profile": {
                "description": "The profile associated with the push token to create/update",
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProfileUpsertQueryResourceObject"
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "token",
              "platform",
              "profile"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "PushTokenUnregisterQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PushTokenUnregisterQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "OnsiteProfileCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/OnsiteProfileCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "EventsBulkCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EventsBulkCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "ClientBISSubscriptionCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/BackInStockSubscriptionEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "channels": {
                "description": "The channel(s) through which the profile would like to receive the back in stock notification. This can be leveraged within a back in stock flow to notify the subscriber through their preferred channel(s).",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "EMAIL",
                    "PUSH",
                    "SMS"
                  ],
                  "description": "The different channel types that a profile could subscribe to BIS notifications for"
                },
                "example": [
                  "EMAIL",
                  "SMS"
                ]
              },
              "profile": {
                "type": "object",
                "example": {
                  "data": {
                    "type": "profile",
                    "attributes": {
                      "id": "01GDDKASAP8TKDDA2GRZDSVP4H",
                      "email": "sarah.mason@klaviyo-demo.com",
                      "phone_number": "+15005550006",
                      "external_id": "63f64a2b-c6bf-40c7-b81f-bed08162edbe"
                    }
                  }
                },
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProfileIdentifierDTOResourceObject"
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "channels",
              "profile"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "variant": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/CatalogVariantEnum"
                      },
                      "id": {
                        "description": "The catalog variant ID for which the profile is subscribing to back in stock notifications. This ID is made up of the integration type, catalog ID, and and the external ID of the variant like so: `integrationType:::catalogId:::externalId`. If the integration you are using is not set up for multi-catalog storage, the 'catalogId' will be `$default`. For Shopify `$shopify:::$default:::33001893429341`",
                        "type": "string",
                        "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "ClientBISSubscriptionCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ClientBISSubscriptionCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "CouponUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponEnum"
          },
          "id": {
            "description": "The internal id of a Coupon is equivalent to its external id stored within an integration.",
            "type": "string",
            "example": "10OFF"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "description": {
                "description": "A description of the coupon.",
                "type": "string",
                "example": "10% off for purchases over $50",
                "nullable": true
              }
            }
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "CouponUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CouponUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchCouponResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CouponEnum"
              },
              "id": {
                "description": "The internal id of a Coupon is equivalent to its external id stored within an integration.",
                "type": "string",
                "example": "10OFF"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "description": "This is the id that is stored in an integration such as Shopify or Magento.",
                    "type": "string",
                    "example": "10OFF"
                  },
                  "description": {
                    "description": "A description of the coupon.",
                    "type": "string",
                    "example": "10% off for purchases over $50",
                    "nullable": true
                  }
                },
                "required": [
                  "external_id"
                ]
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CouponCodeUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponCodeEnum"
          },
          "id": {
            "description": "The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with.",
            "type": "string",
            "example": "10OFF-ASD325FHK324UJDOI2M3JNES99"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "The API status of our coupon codes.",
                "type": "string",
                "enum": [
                  "ASSIGNED_TO_PROFILE",
                  "DELETING",
                  "PROCESSING",
                  "UNASSIGNED",
                  "USED",
                  "VERSION_NOT_ACTIVE"
                ],
                "nullable": true
              },
              "expires_at": {
                "description": "The datetime when this coupon code will expire. If not specified or set to null, it will be automatically set to 1 year.",
                "type": "string",
                "format": "date-time",
                "example": "2023-01-01T00:00:00Z",
                "nullable": true
              }
            }
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "CouponCodeUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CouponCodeUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchCouponCodeResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CouponCodeEnum"
              },
              "id": {
                "description": "The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with.",
                "type": "string",
                "example": "10OFF-ASD325FHK324UJDOI2M3JNES99"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "unique_code": {
                    "description": "This is a unique string that will be or is assigned to each customer/profile and is associated with a coupon.",
                    "type": "string",
                    "example": "ASD325FHK324UJDOI2M3JNES99",
                    "nullable": true
                  },
                  "expires_at": {
                    "description": "The datetime when this coupon code will expire. If not specified or set to null, it will be automatically set to 1 year.",
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-01-01T00:00:00Z",
                    "nullable": true
                  },
                  "status": {
                    "description": "The current status of the coupon code.",
                    "type": "string",
                    "example": "UNASSIGNED",
                    "enum": [
                      "ASSIGNED_TO_PROFILE",
                      "DELETING",
                      "PROCESSING",
                      "UNASSIGNED",
                      "USED",
                      "VERSION_NOT_ACTIVE"
                    ],
                    "nullable": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "coupon": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/CouponEnum"
                          },
                          "id": {
                            "type": "string",
                            "example": "10OFF"
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ]
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "profile": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/ProfileEnum"
                          },
                          "id": {
                            "type": "string",
                            "example": "01GDDKASAP8TKDDA2GRZDSVP4H"
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ]
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogItemUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemEnum"
          },
          "id": {
            "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "title": {
                "description": "The title of the catalog item.",
                "type": "string",
                "example": "Ocean Blue Shirt (Sample)",
                "nullable": true
              },
              "price": {
                "description": "This field can be used to set the price on the catalog item, which is what gets displayed for the item when included in emails. For most price-update use cases, you will also want to update the `price` on any child variants, using the [Update Catalog Variant Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_variant).",
                "type": "number",
                "example": 42,
                "nullable": true
              },
              "description": {
                "description": "A description of the catalog item.",
                "type": "string",
                "example": "A description of the catalog item.",
                "nullable": true
              },
              "url": {
                "description": "URL pointing to the location of the catalog item on your website.",
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "nullable": true
              },
              "image_full_url": {
                "description": "URL pointing to the location of a full image of the catalog item.",
                "type": "string",
                "example": "https://via.placeholder.com/300",
                "nullable": true
              },
              "image_thumbnail_url": {
                "description": "URL pointing to the location of an image thumbnail of the catalog item",
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "nullable": true
              },
              "images": {
                "description": "List of URLs pointing to the locations of images of the catalog item.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "https://via.placeholder.com/150"
                ],
                "nullable": true
              },
              "custom_metadata": {
                "description": "Flat JSON blob to provide custom metadata about the catalog item. May not exceed 100kb.",
                "type": "object",
                "example": {
                  "Top Pick": true
                },
                "nullable": true
              },
              "published": {
                "description": "Boolean value indicating whether the catalog item is published.",
                "type": "boolean",
                "example": true,
                "nullable": true
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "$ref": "#/components/schemas/CatalogCategoryEnum"
                        },
                        "id": {
                          "description": "A list of catalog category IDs representing the categories the item is in",
                          "type": "string",
                          "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "CatalogItemUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchCatalogItemResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogItemEnum"
              },
              "id": {
                "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
                "type": "string",
                "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "description": "The ID of the catalog item in an external system.",
                    "type": "string",
                    "example": "SAMPLE-DATA-ITEM-1",
                    "nullable": true
                  },
                  "title": {
                    "description": "The title of the catalog item.",
                    "type": "string",
                    "example": "Ocean Blue Shirt (Sample)",
                    "nullable": true
                  },
                  "description": {
                    "description": "A description of the catalog item.",
                    "type": "string",
                    "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns.",
                    "nullable": true
                  },
                  "price": {
                    "description": "This field can be used to set the price on the catalog item, which is what gets displayed for the item when included in emails. For most price-update use cases, you will also want to update the `price` on any child variants, using the [Update Catalog Variant Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_variant).",
                    "type": "number",
                    "example": 42,
                    "nullable": true
                  },
                  "url": {
                    "description": "URL pointing to the location of the catalog item on your website.",
                    "type": "string",
                    "example": "https://via.placeholder.com/150",
                    "nullable": true
                  },
                  "image_full_url": {
                    "description": "URL pointing to the location of a full image of the catalog item.",
                    "type": "string",
                    "example": "https://via.placeholder.com/300",
                    "nullable": true
                  },
                  "image_thumbnail_url": {
                    "description": "URL pointing to the location of an image thumbnail of the catalog item",
                    "type": "string",
                    "example": "https://via.placeholder.com/150",
                    "nullable": true
                  },
                  "images": {
                    "description": "List of URLs pointing to the locations of images of the catalog item.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "https://via.placeholder.com/150"
                    ],
                    "nullable": true
                  },
                  "custom_metadata": {
                    "description": "Flat JSON blob to provide custom metadata about the catalog item. May not exceed 100kb.",
                    "type": "object",
                    "example": {
                      "Top Pick": true
                    },
                    "nullable": true
                  },
                  "published": {
                    "description": "Boolean value indicating whether the catalog item is published.",
                    "type": "boolean",
                    "example": true,
                    "nullable": true
                  },
                  "created": {
                    "description": "Date and time when the catalog item was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "updated": {
                    "description": "Date and time when the catalog item was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "variants": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogVariantEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogVariantUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchCatalogVariantResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogVariantEnum"
              },
              "id": {
                "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
                "type": "string",
                "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "description": "The ID of the catalog item variant in an external system.",
                    "type": "string",
                    "example": "SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM",
                    "nullable": true
                  },
                  "title": {
                    "description": "The title of the catalog item variant.",
                    "type": "string",
                    "example": "Ocean Blue Shirt (Sample) Variant Medium",
                    "nullable": true
                  },
                  "description": {
                    "description": "A description of the catalog item variant.",
                    "type": "string",
                    "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns.",
                    "nullable": true
                  },
                  "sku": {
                    "description": "The SKU of the catalog item variant.",
                    "type": "string",
                    "example": "OBS-MD",
                    "nullable": true
                  },
                  "inventory_policy": {
                    "description": "This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values:\n`1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.\n`0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.",
                    "type": "integer",
                    "example": 2,
                    "enum": [
                      0,
                      1,
                      2
                    ],
                    "nullable": true
                  },
                  "inventory_quantity": {
                    "description": "The quantity of the catalog item variant currently in stock.",
                    "type": "number",
                    "example": 25,
                    "nullable": true
                  },
                  "price": {
                    "description": "This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item).",
                    "type": "number",
                    "example": 42,
                    "nullable": true
                  },
                  "url": {
                    "description": "URL pointing to the location of the catalog item variant on your website.",
                    "type": "string",
                    "example": "https://via.placeholder.com/150",
                    "nullable": true
                  },
                  "image_full_url": {
                    "description": "URL pointing to the location of a full image of the catalog item variant.",
                    "type": "string",
                    "example": "https://via.placeholder.com/300",
                    "nullable": true
                  },
                  "image_thumbnail_url": {
                    "description": "URL pointing to the location of an image thumbnail of the catalog item variant.",
                    "type": "string",
                    "example": "https://via.placeholder.com/150",
                    "nullable": true
                  },
                  "images": {
                    "description": "List of URLs pointing to the locations of images of the catalog item variant.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "https://via.placeholder.com/150"
                    ],
                    "nullable": true
                  },
                  "custom_metadata": {
                    "description": "Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb.",
                    "type": "object",
                    "example": {
                      "Top Pick": true
                    },
                    "nullable": true
                  },
                  "published": {
                    "description": "Boolean value indicating whether the catalog item variant is published.",
                    "type": "boolean",
                    "example": true,
                    "nullable": true
                  },
                  "created": {
                    "description": "Date and time when the catalog item  variant was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "updated": {
                    "description": "Date and time when the catalog item variant was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "item": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/CatalogItemEnum"
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ]
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogCategoryUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryEnum"
          },
          "id": {
            "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of the catalog category.",
                "type": "string",
                "example": "Sample Data Category Apparel",
                "nullable": true
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "items": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "$ref": "#/components/schemas/CatalogItemEnum"
                        },
                        "id": {
                          "description": "A list of catalog item IDs that are in the given category.",
                          "type": "string",
                          "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "CatalogCategoryUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchCatalogCategoryResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogCategoryEnum"
              },
              "id": {
                "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
                "type": "string",
                "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "description": "The ID of the catalog category in an external system.",
                    "type": "string",
                    "example": "SAMPLE-DATA-CATEGORY-APPAREL",
                    "nullable": true
                  },
                  "name": {
                    "description": "The name of the catalog category.",
                    "type": "string",
                    "example": "Sample Data Category Apparel",
                    "nullable": true
                  },
                  "updated": {
                    "description": "Date and time when the catalog category was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogItemEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ListPartialUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ListEnum"
          },
          "id": {
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
            "type": "string",
            "example": "Y6nRLr"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "A helpful name to label the list",
                "type": "string",
                "example": "Newsletter"
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "ListPartialUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListPartialUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchListPartialUpdateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ListEnum"
              },
              "id": {
                "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
                "type": "string",
                "example": "Y6nRLr"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "A helpful name to label the list",
                    "type": "string",
                    "example": "Newsletter",
                    "nullable": true
                  },
                  "created": {
                    "description": "Date and time when the list was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "updated": {
                    "description": "Date and time when the list was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "opt_in_process": {
                    "description": "The opt-in process for this list.  Could be either 'single_opt_in' or 'double_opt_in'.",
                    "type": "string",
                    "enum": [
                      "double_opt_in",
                      "single_opt_in"
                    ],
                    "nullable": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "profiles": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/ProfileEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "tags": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/TagEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "flow-triggers": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/FlowEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SegmentPartialUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SegmentEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "definition": {
                "$ref": "#/components/schemas/SegmentDefinition",
                "nullable": true
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "is_starred": {
                "type": "boolean",
                "nullable": true
              }
            }
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "SegmentPartialUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SegmentPartialUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchSegmentPartialUpdateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/SegmentEnum"
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "A helpful name to label the segment",
                    "type": "string",
                    "example": "Repeat Purchasers",
                    "nullable": true
                  },
                  "definition": {
                    "$ref": "#/components/schemas/SegmentDefinition",
                    "nullable": true
                  },
                  "created": {
                    "description": "Date and time when the segment was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "updated": {
                    "description": "Date and time when the segment was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "is_active": {
                    "type": "boolean"
                  },
                  "is_processing": {
                    "type": "boolean"
                  },
                  "is_starred": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "is_active",
                  "is_processing",
                  "is_starred"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "profiles": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/ProfileEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "tags": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/TagEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "flow-triggers": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/FlowEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfilePartialUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "description": "Individual's email address",
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com",
                "nullable": true
              },
              "phone_number": {
                "description": "Individual's phone number in E.164 format",
                "type": "string",
                "example": "+15005550006",
                "nullable": true
              },
              "external_id": {
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.",
                "type": "string",
                "nullable": true
              },
              "anonymous_id": {
                "type": "string",
                "nullable": true
              },
              "first_name": {
                "description": "Individual's first name",
                "type": "string",
                "example": "Sarah",
                "nullable": true
              },
              "last_name": {
                "description": "Individual's last name",
                "type": "string",
                "example": "Mason",
                "nullable": true
              },
              "organization": {
                "description": "Name of the company or organization within the company for whom the individual works",
                "type": "string",
                "example": "Example Corporation",
                "nullable": true
              },
              "locale": {
                "description": "The locale of the profile, in the IETF BCP 47 language tag format like (ISO 639-1/2)-(ISO 3166 alpha-2)",
                "type": "string",
                "example": "en-US",
                "nullable": true
              },
              "title": {
                "description": "Individual's job title",
                "type": "string",
                "example": "Regional Manager",
                "nullable": true
              },
              "image": {
                "description": "URL pointing to the location of a profile image",
                "type": "string",
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "nullable": true
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation",
                "nullable": true
              },
              "properties": {
                "description": "An object containing key/value pairs for any custom properties assigned to this profile",
                "type": "object",
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "nullable": true
              }
            }
          },
          "meta": {
            "$ref": "#/components/schemas/ProfileMeta",
            "nullable": true
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "ProfilePartialUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProfilePartialUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchProfileResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ProfileEnum"
              },
              "id": {
                "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
                "type": "string",
                "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
                "nullable": true
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "Individual's email address",
                    "type": "string",
                    "example": "sarah.mason@klaviyo-demo.com",
                    "nullable": true
                  },
                  "phone_number": {
                    "description": "Individual's phone number in E.164 format",
                    "type": "string",
                    "example": "+15005550006",
                    "nullable": true
                  },
                  "external_id": {
                    "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.",
                    "type": "string",
                    "nullable": true
                  },
                  "first_name": {
                    "description": "Individual's first name",
                    "type": "string",
                    "example": "Sarah",
                    "nullable": true
                  },
                  "last_name": {
                    "description": "Individual's last name",
                    "type": "string",
                    "example": "Mason",
                    "nullable": true
                  },
                  "organization": {
                    "description": "Name of the company or organization within the company for whom the individual works",
                    "type": "string",
                    "example": "Example Corporation",
                    "nullable": true
                  },
                  "locale": {
                    "description": "The locale of the profile, in the IETF BCP 47 language tag format like (ISO 639-1/2)-(ISO 3166 alpha-2)",
                    "type": "string",
                    "example": "en-US",
                    "nullable": true
                  },
                  "title": {
                    "description": "Individual's job title",
                    "type": "string",
                    "example": "Regional Manager",
                    "nullable": true
                  },
                  "image": {
                    "description": "URL pointing to the location of a profile image",
                    "type": "string",
                    "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                    "nullable": true
                  },
                  "created": {
                    "description": "Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "updated": {
                    "description": "Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "last_event_date": {
                    "description": "Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "location": {
                    "$ref": "#/components/schemas/ProfileLocation",
                    "nullable": true
                  },
                  "properties": {
                    "description": "An object containing key/value pairs for any custom properties assigned to this profile",
                    "type": "object",
                    "example": {
                      "pseudonym": "Dr. Octopus"
                    },
                    "nullable": true
                  },
                  "subscriptions": {
                    "$ref": "#/components/schemas/Subscriptions",
                    "nullable": true
                  },
                  "predictive_analytics": {
                    "$ref": "#/components/schemas/PredictiveAnalytics",
                    "nullable": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "lists": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/ListEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "segments": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/SegmentEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "FlowUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FlowEnum"
          },
          "id": {
            "description": "ID of the Flow to update. Ex: XVTP5Q",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "Status you want to update the flow to. ['draft', 'manual', or 'live']",
                "type": "string"
              }
            },
            "required": [
              "status"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "FlowUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FlowUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchFlowResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/FlowEnum"
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "nullable": true
                  },
                  "status": {
                    "type": "string",
                    "nullable": true
                  },
                  "archived": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "trigger_type": {
                    "description": "Corresponds to the object which triggered the flow.",
                    "type": "string",
                    "enum": [
                      "Added to List",
                      "Date Based",
                      "Low Inventory",
                      "Metric",
                      "Price Drop",
                      "Unconfigured"
                    ],
                    "nullable": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "flow-actions": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/FlowActionEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "tags": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/TagEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CampaignPartialUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignEnum"
          },
          "id": {
            "description": "The campaign ID to be retrieved",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The campaign name",
                "type": "string",
                "example": "My new campaign",
                "nullable": true
              },
              "audiences": {
                "description": "The audiences to be included and/or excluded from the campaign",
                "$ref": "#/components/schemas/AudiencesSubObject",
                "nullable": true
              },
              "send_options": {
                "description": "Options to use when sending a campaign",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailSendOptionsSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSSendOptionsSubObject"
                  }
                ]
              },
              "tracking_options": {
                "description": "The tracking options associated with the campaign",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailTrackingOptionsSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSTrackingOptionsSubObject"
                  }
                ]
              },
              "send_strategy": {
                "description": "The send strategy the campaign will send with",
                "$ref": "#/components/schemas/SendStrategySubObject",
                "nullable": true
              }
            }
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "CampaignPartialUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignPartialUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchCampaignResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CampaignEnum"
              },
              "id": {
                "description": "The campaign ID",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The campaign name",
                    "type": "string"
                  },
                  "status": {
                    "description": "The current status of the campaign",
                    "type": "string"
                  },
                  "archived": {
                    "description": "Whether the campaign has been archived or not",
                    "type": "boolean"
                  },
                  "audiences": {
                    "description": "The audiences to be included and/or excluded from the campaign",
                    "$ref": "#/components/schemas/AudiencesSubObject"
                  },
                  "send_options": {
                    "description": "Options to use when sending a campaign",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/EmailSendOptionsSubObject"
                      },
                      {
                        "$ref": "#/components/schemas/SMSSendOptionsSubObject"
                      }
                    ]
                  },
                  "tracking_options": {
                    "description": "The tracking options associated with the campaign",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/EmailTrackingOptionsSubObject"
                      },
                      {
                        "$ref": "#/components/schemas/SMSTrackingOptionsSubObject"
                      }
                    ]
                  },
                  "send_strategy": {
                    "description": "The send strategy the campaign will send with",
                    "$ref": "#/components/schemas/SendStrategySubObject"
                  },
                  "created_at": {
                    "description": "The datetime when the campaign was created",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00"
                  },
                  "scheduled_at": {
                    "description": "The datetime when the campaign was scheduled for future sending",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "updated_at": {
                    "description": "The datetime when the campaign was last updated by a user or the system",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00"
                  },
                  "send_time": {
                    "description": "The datetime when the campaign will be / was sent or None if not yet scheduled by a send_job.",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  }
                },
                "required": [
                  "name",
                  "status",
                  "archived",
                  "audiences",
                  "send_options",
                  "tracking_options",
                  "send_strategy",
                  "created_at",
                  "updated_at"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "campaign-messages": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CampaignMessageEnum"
                            },
                            "id": {
                              "description": "The message(s) associated with the campaign",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "tags": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/TagEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CampaignMessagePartialUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignMessageEnum"
          },
          "id": {
            "description": "The message ID to be retrieved",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "label": {
                "description": "The label or name on the message",
                "type": "string",
                "example": "My message name",
                "nullable": true
              },
              "content": {
                "description": "Additional attributes relating to the content of the message",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailContentSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSContentSubObjectCreate"
                  }
                ]
              },
              "render_options": {
                "description": "Additional options for rendering the message",
                "$ref": "#/components/schemas/RenderOptionsSubObject",
                "nullable": true
              }
            }
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "CampaignMessagePartialUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignMessagePartialUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchCampaignMessageResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CampaignMessageEnum"
              },
              "id": {
                "description": "The message ID",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "label": {
                    "description": "The label or name on the message",
                    "type": "string"
                  },
                  "channel": {
                    "description": "The channel the message is to be sent on",
                    "type": "string"
                  },
                  "content": {
                    "description": "Additional attributes relating to the content of the message",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/EmailContentSubObject"
                      },
                      {
                        "$ref": "#/components/schemas/SMSContentSubObject"
                      }
                    ]
                  },
                  "send_times": {
                    "description": "The list of appropriate Send Time Sub-objects associated with the message",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SendTimeSubObject"
                    },
                    "nullable": true
                  },
                  "render_options": {
                    "description": "Additional options for rendering the message",
                    "$ref": "#/components/schemas/RenderOptionsSubObject",
                    "nullable": true
                  },
                  "created_at": {
                    "description": "The datetime when the message was created",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "updated_at": {
                    "description": "The datetime when the message was last updated",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  }
                },
                "required": [
                  "label",
                  "channel",
                  "content"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "campaign": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/CampaignEnum"
                          },
                          "id": {
                            "description": "The parent campaign id",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ]
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "template": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/TemplateEnum"
                          },
                          "id": {
                            "description": "The associated template id",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ]
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CampaignSendJobPartialUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignSendJobEnum"
          },
          "id": {
            "description": "The ID of the currently sending campaign to cancel or revert",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "action": {
                "description": "The action you would like to take with this send job from among 'cancel' and 'revert'",
                "type": "string",
                "example": "cancel"
              }
            },
            "required": [
              "action"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "CampaignSendJobPartialUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignSendJobPartialUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "TemplateUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TemplateEnum"
          },
          "id": {
            "description": "The ID of template",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of the template",
                "type": "string",
                "example": "Monthly Newsletter Template",
                "nullable": true
              },
              "html": {
                "description": "The HTML of the template",
                "type": "string",
                "example": "\n              <html>\n                  <body>\n                      hello world\n                  </body>\n              </html>\n          ",
                "nullable": true
              },
              "text": {
                "description": "The plaintext of the template",
                "type": "string",
                "example": "hello world",
                "nullable": true
              }
            }
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "TemplateUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchTemplateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TemplateEnum"
              },
              "id": {
                "description": "The ID of template",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The name of the template",
                    "type": "string"
                  },
                  "editor_type": {
                    "description": "`editor_type` has a fixed set of values:\n* SYSTEM_DRAGGABLE: indicates a drag-and-drop editor template\n* SIMPLE: A rich text editor template\n* CODE: A custom HTML template\n* USER_DRAGGABLE: A hybrid template, using custom HTML in the drag-and-drop editor",
                    "type": "string"
                  },
                  "html": {
                    "description": "The rendered HTML of the template",
                    "type": "string"
                  },
                  "text": {
                    "description": "The template plain_text",
                    "type": "string",
                    "nullable": true
                  },
                  "created": {
                    "description": "The date the template was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "updated": {
                    "description": "The date the template was updated in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  }
                },
                "required": [
                  "name",
                  "editor_type",
                  "html"
                ]
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "TagUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TagEnum"
          },
          "id": {
            "description": "The Tag ID",
            "type": "string",
            "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The Tag name",
                "type": "string",
                "example": "My Tag"
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "TagUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TagUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "TagGroupUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TagGroupEnum"
          },
          "id": {
            "description": "The Tag Group ID",
            "type": "string",
            "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The Tag Group name",
                "type": "string",
                "example": "My Tag Group"
              },
              "return_fields": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "TagGroupUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TagGroupUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchTagGroupResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TagGroupEnum"
              },
              "id": {
                "description": "The Tag Group ID",
                "type": "string",
                "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The Tag Group name",
                    "type": "string",
                    "example": "My Tag Group"
                  },
                  "exclusive": {
                    "description": "If a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group.",
                    "type": "boolean"
                  },
                  "default": {
                    "description": "Every company automatically has one Default Tag Group. The Default Tag Group cannot be deleted, and no other Default Tag Groups can be created. This value is true for the Default Tag Group and false for all other Tag Groups.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "name",
                  "exclusive",
                  "default"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "tags": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/TagEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "WebhookPartialUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/WebhookEnum"
          },
          "id": {
            "description": "The ID of the webhook.",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "A name for the webhook.",
                "type": "string",
                "nullable": true
              },
              "description": {
                "description": "A description for the webhook.",
                "type": "string",
                "nullable": true
              },
              "endpoint_url": {
                "description": "A url to send webhook calls to. Must be https.",
                "type": "string",
                "example": "https://www.example.com/example/path",
                "nullable": true
              },
              "secret_key": {
                "description": "A secret key, that will be used for webhook request signing.",
                "type": "string",
                "nullable": true
              },
              "enabled": {
                "description": "Is the webhook enabled.",
                "type": "boolean",
                "nullable": true
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "webhook-topics": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "$ref": "#/components/schemas/WebhookTopicEnum"
                        },
                        "id": {
                          "description": "A list of topics to subscribe to.",
                          "type": "string",
                          "example": "event:klaviyo.sent_sms"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "WebhookPartialUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/WebhookPartialUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchWebhookResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/WebhookEnum"
              },
              "id": {
                "description": "The ID of the webhook.",
                "type": "string",
                "example": "01HF7AYTK76RHR4F17G6DGTRGF"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "A name for the webhook.",
                    "type": "string",
                    "example": "My Webhook"
                  },
                  "description": {
                    "description": "A description for the webhook.",
                    "type": "string",
                    "example": "A webhook for sms events",
                    "nullable": true
                  },
                  "endpoint_url": {
                    "description": "The url to send webhook requests to, truncated for security.",
                    "type": "string",
                    "example": "https://www.example.com"
                  },
                  "enabled": {
                    "description": "Is the webhook enabled.",
                    "type": "boolean"
                  },
                  "created_at": {
                    "description": "Date and time when the webhook was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T01:23:45+00:00"
                  },
                  "updated_at": {
                    "description": "Date and time when the webhook was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T01:23:45+00:00"
                  }
                },
                "required": [
                  "name",
                  "endpoint_url",
                  "enabled",
                  "created_at",
                  "updated_at"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "webhook-topics": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/WebhookTopicEnum"
                            },
                            "id": {
                              "description": "A topic the webhook is subscribed to.",
                              "type": "string",
                              "example": "event:klaviyo.sent_sms"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ImagePartialUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ImageEnum"
          },
          "id": {
            "description": "The ID of the image",
            "type": "string",
            "example": "7"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "A name for the image.",
                "type": "string",
                "nullable": true
              },
              "hidden": {
                "description": "If true, this image is not shown in the asset library.",
                "type": "boolean",
                "nullable": true
              }
            }
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "ImagePartialUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ImagePartialUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchImageResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ImageEnum"
              },
              "id": {
                "description": "The ID of the image",
                "type": "string",
                "example": "7"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "image_url": {
                    "type": "string"
                  },
                  "format": {
                    "type": "string"
                  },
                  "size": {
                    "type": "integer"
                  },
                  "hidden": {
                    "type": "boolean"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00"
                  }
                },
                "required": [
                  "name",
                  "image_url",
                  "format",
                  "size",
                  "hidden",
                  "updated_at"
                ]
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "UniversalContentPartialUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TemplateUniversalContentEnum"
          },
          "id": {
            "description": "The ID of the template universal content",
            "type": "string",
            "example": "01HWWWKAW4RHXQJCMW4R2KRYR4"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The name for this template universal content",
                "type": "string",
                "nullable": true
              },
              "definition": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/HTMLBlock"
                  },
                  {
                    "$ref": "#/components/schemas/TextBlock"
                  }
                ]
              }
            }
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "UniversalContentPartialUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UniversalContentPartialUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchUniversalContentResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TemplateUniversalContentEnum"
              },
              "id": {
                "description": "The ID of the universal content",
                "type": "string",
                "example": "01HWWWKAW4RHXQJCMW4R2KRYR4"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The name for this universal content",
                    "type": "string"
                  },
                  "definition": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ButtonBlock"
                      },
                      {
                        "$ref": "#/components/schemas/DropShadowBlock"
                      },
                      {
                        "$ref": "#/components/schemas/HeaderBlock"
                      },
                      {
                        "$ref": "#/components/schemas/HorizontalRuleBlock"
                      },
                      {
                        "$ref": "#/components/schemas/HTMLBlock"
                      },
                      {
                        "$ref": "#/components/schemas/ImageBlock"
                      },
                      {
                        "$ref": "#/components/schemas/ProductBlock"
                      },
                      {
                        "$ref": "#/components/schemas/ReviewBlock"
                      },
                      {
                        "$ref": "#/components/schemas/SocialBlock"
                      },
                      {
                        "$ref": "#/components/schemas/SpacerBlock"
                      },
                      {
                        "$ref": "#/components/schemas/SplitBlock"
                      },
                      {
                        "$ref": "#/components/schemas/TableBlock"
                      },
                      {
                        "$ref": "#/components/schemas/TextBlock"
                      },
                      {
                        "$ref": "#/components/schemas/UnsupportedBlock"
                      },
                      {
                        "$ref": "#/components/schemas/VideoBlock"
                      },
                      {
                        "$ref": "#/components/schemas/Section"
                      }
                    ]
                  },
                  "created": {
                    "description": "The datetime when this universal content was created",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00"
                  },
                  "updated": {
                    "description": "The datetime when this universal content was updated",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00"
                  },
                  "screenshot_status": {
                    "description": "The status of a universal content screenshot.",
                    "type": "string",
                    "enum": [
                      "completed",
                      "failed",
                      "generating",
                      "never_generated",
                      "not_renderable"
                    ]
                  },
                  "screenshot_url": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "definition",
                  "created",
                  "updated",
                  "screenshot_status",
                  "screenshot_url"
                ]
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "TrackingSettingPartialUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TrackingSettingEnum"
          },
          "id": {
            "description": "The id of the tracking setting (account ID).",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "auto_add_parameters": {
                "description": "Whether tracking parameters are automatically added to campaigns and flows.",
                "type": "boolean",
                "nullable": true
              },
              "utm_source": {
                "description": "The utm_source tracking parameter.",
                "$ref": "#/components/schemas/TrackingParamDTO",
                "nullable": true
              },
              "utm_medium": {
                "description": "The utm_medium tracking parameter.",
                "$ref": "#/components/schemas/TrackingParamDTO",
                "nullable": true
              },
              "utm_campaign": {
                "description": "The utm_campaign tracking parameter.",
                "$ref": "#/components/schemas/TrackingParamDTO",
                "nullable": true
              },
              "utm_id": {
                "description": "The utm_id tracking parameter.",
                "$ref": "#/components/schemas/TrackingParamDTO",
                "nullable": true
              },
              "utm_term": {
                "description": "The utm_term tracking parameter.",
                "$ref": "#/components/schemas/TrackingParamDTO",
                "nullable": true
              },
              "custom_parameters": {
                "description": "List of custom tracking parameters.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomTrackingParamDTO"
                },
                "nullable": true
              }
            }
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "TrackingSettingPartialUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TrackingSettingPartialUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchTrackingSettingResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TrackingSettingEnum"
              },
              "id": {
                "description": "The id of the tracking setting (account ID).",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "auto_add_parameters": {
                    "description": "Whether tracking parameters are automatically added to campaigns and flows.",
                    "type": "boolean"
                  },
                  "utm_source": {
                    "description": "The utm_source tracking parameter.",
                    "$ref": "#/components/schemas/TrackingParamDTO"
                  },
                  "utm_medium": {
                    "description": "The utm_medium tracking parameter.",
                    "$ref": "#/components/schemas/TrackingParamDTO"
                  },
                  "utm_campaign": {
                    "description": "The utm_campaign tracking parameter.",
                    "$ref": "#/components/schemas/TrackingParamDTO",
                    "nullable": true
                  },
                  "utm_id": {
                    "description": "The utm_id tracking parameter.",
                    "$ref": "#/components/schemas/TrackingParamDTO",
                    "nullable": true
                  },
                  "utm_term": {
                    "description": "The utm_term tracking parameter.",
                    "$ref": "#/components/schemas/TrackingParamDTO",
                    "nullable": true
                  },
                  "custom_parameters": {
                    "description": "Additional custom tracking parameters.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CustomTrackingParamDTO"
                    },
                    "nullable": true
                  }
                },
                "required": [
                  "auto_add_parameters",
                  "utm_source",
                  "utm_medium"
                ]
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ListMembersDeleteQuery": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/ProfileEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "DeleteTagGroupResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TagGroupEnum"
              },
              "id": {
                "description": "The Tag Group ID",
                "type": "string",
                "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The Tag Group name",
                    "type": "string",
                    "example": "My Tag Group"
                  },
                  "exclusive": {
                    "description": "If a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group.",
                    "type": "boolean"
                  },
                  "default": {
                    "description": "Every company automatically has one Default Tag Group. The Default Tag Group cannot be deleted, and no other Default Tag Groups can be created. This value is true for the Default Tag Group and false for all other Tag Groups.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "name",
                  "exclusive",
                  "default"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "tags": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/TagEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "RelationshipLinks": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "format": "uri"
          },
          "related": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "self",
          "related"
        ]
      },
      "OnlyRelatedLinks": {
        "type": "object",
        "properties": {
          "related": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "related"
        ]
      },
      "CollectionLinks": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "format": "uri"
          },
          "first": {
            "type": "string",
            "format": "uri"
          },
          "last": {
            "type": "string",
            "format": "uri"
          },
          "prev": {
            "type": "string",
            "format": "uri"
          },
          "next": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "self"
        ]
      },
      "ObjectLinks": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "self"
        ]
      },
      "AttributionResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/AttributionEnum"
          },
          "id": {
            "description": "The ID of the attribution",
            "type": "string",
            "example": "925e385b52fb405715f3616c337cc65c"
          },
          "relationships": {
            "type": "object",
            "properties": {
              "event": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/EventEnum"
                      },
                      "id": {
                        "description": "Event",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                }
              },
              "attributed-event": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/EventEnum"
                      },
                      "id": {
                        "description": "Attributed Event",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                }
              },
              "campaign": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/CampaignEnum"
                      },
                      "id": {
                        "description": "Attributed Campaign",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                }
              },
              "campaign-message": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/CampaignMessageEnum"
                      },
                      "id": {
                        "description": "Attributed Campaign Message",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                }
              },
              "flow": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/FlowEnum"
                      },
                      "id": {
                        "description": "Attributed Flow",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                }
              },
              "flow-message": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/FlowMessageEnum"
                      },
                      "id": {
                        "description": "Attributed Flow Message",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                }
              },
              "flow-message-variation": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/FlowMessageEnum"
                      },
                      "id": {
                        "description": "Attributed Flow Message Variation",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "links"
        ]
      },
      "AttributionEnum": {
        "type": "string",
        "enum": [
          "attribution"
        ]
      },
      "ImageUploadQuery": {
        "type": "object",
        "properties": {
          "file": {
            "description": "The image file to upload. Supported image formats: jpeg,png,gif. Maximum image size: 5MB.",
            "type": "string",
            "format": "binary"
          },
          "name": {
            "description": "A name for the image.  Defaults to the filename if not provided.  If the name matches an existing image, a suffix will be added.",
            "type": "string"
          },
          "hidden": {
            "description": "If true, this image is not shown in the asset library.",
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "file"
        ]
      }
    },
    "responses": {
      "ClientError": {
        "description": "Client Error",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "code",
                      "title",
                      "detail"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "detail": {
                        "type": "string"
                      },
                      "source": {
                        "type": "object",
                        "properties": {
                          "pointer": {
                            "type": "string"
                          },
                          "parameter": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "errors"
              ]
            }
          }
        }
      },
      "ServerError": {
        "description": "Server Error",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "code",
                      "title",
                      "detail"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "detail": {
                        "type": "string"
                      },
                      "source": {
                        "type": "object",
                        "properties": {
                          "pointer": {
                            "type": "string"
                          },
                          "parameter": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "errors"
              ]
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Klaviyo-API-Key": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Private key authentication for /api/ endpoints is performed by setting the `Authorization` header to `Klaviyo-API-Key your-private-api-key`<br>For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#authentication",
        "x-default": "Klaviyo-API-Key your-private-api-key"
      }
    }
  },
  "tags": [
    {
      "name": "Accounts",
      "description": "accounts"
    },
    {
      "name": "Campaigns",
      "description": "campaigns"
    },
    {
      "name": "Catalogs",
      "description": "catalogs"
    },
    {
      "name": "Coupons",
      "description": "coupons"
    },
    {
      "name": "Data Privacy",
      "description": "data privacy"
    },
    {
      "name": "Events",
      "description": "events"
    },
    {
      "name": "Flows",
      "description": "flows"
    },
    {
      "name": "Forms",
      "description": "forms"
    },
    {
      "name": "Images",
      "description": "images"
    },
    {
      "name": "Lists",
      "description": "lists"
    },
    {
      "name": "Metrics",
      "description": "metrics"
    },
    {
      "name": "Profiles",
      "description": "profiles"
    },
    {
      "name": "Reporting",
      "description": "reporting"
    },
    {
      "name": "Reviews",
      "description": "reviews"
    },
    {
      "name": "Segments",
      "description": "segments"
    },
    {
      "name": "Tags",
      "description": "tags"
    },
    {
      "name": "Templates",
      "description": "templates"
    },
    {
      "name": "Tracking Settings",
      "description": "tracking settings"
    },
    {
      "name": "Webhooks",
      "description": "webhooks"
    },
    {
      "name": "Client",
      "description": "client"
    }
  ],
  "security": [
    {
      "Klaviyo-API-Key": []
    }
  ],
  "x-readme": {
    "explorer-enabled": false,
    "proxy-enabled": true,
    "samples-enabled": true
  }
}