openapi: 3.0.2
info:
  contact:
    email: api@aweber.com
    name: API Team
    url: https://labs.aweber.com
  description: REST API for access the AWeber service.
  title: Subscribers
  version: "1.0"
servers:
- url: /
tags:
- name: Subscribers
paths:
  /accounts/{accountId}/lists/{listId}/subscribers:
    delete:
      description: "This endpoint is used to delete a subscriber and related information\
        \ by the subscriber's email.\n\nIf you just want to unsubscribe the subscriber,\
        \ then make a\n[PATCH request](#tag/Subscribers/paths/~1accounts~1{accountId}~1lists~1{listId}~1subscribers~1{subscriberId}/patch)\n\
        to set the status to \"unsubscribed\" instead.  When a subscriber is *DELETED*,\n\
        the subscriber is unsubscribed from the list and all related analytics activity\n\
        is removed from the customer account for the subscriber.  Any references to\n\
        clicks or opens are shown as \"Deleted Subscriber\" afterwards.\n\n\nCheck\
        \ out related examples:\n\n  * Find Subscribers Across Lists ( \n    <a href=\"\
        https://github.com/aweber/public-api-examples/blob/master/python/find-subscribers-across-lists\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/find-subscribers-across-lists\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Find%20Subscribers%20Across%20Lists.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.FindSubscribersAcrossLists\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/find_subscribers_across_lists.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/find-subscribers-across-lists.js\"\
        \ target=\"_blank\">Node.js</a> )\n  * Manage Subscriber ( \n    <a href=\"\
        https://github.com/aweber/public-api-examples/blob/master/python/manage-subscriber\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/manage-subscriber\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Manage%20Subscriber.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.ManageSubscriber\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/manage_subscriber.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/manage-subscriber.js\"\
        \ target=\"_blank\">Node.js</a> )\n  * Move Subscriber ( \n    <a href=\"\
        https://github.com/aweber/public-api-examples/blob/master/python/move-subscriber\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/move-subscriber\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Move%20Subscriber.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.MoveSubscriber\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/move_subscriber.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/move-subscriber.js\"\
        \ target=\"_blank\">Node.js</a> )\n"
      parameters:
      - description: The account ID
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      - description: The list ID
        in: path
        name: listId
        required: true
        schema:
          format: int32
          type: integer
      - description: The subscriber's email address
        in: query
        name: subscriber_email
        required: true
        schema:
          format: email
          maxLength: 50
          minLength: 1
          type: string
      responses:
        "200":
          description: The subscriber was deleted successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_delete_400_response'
          description: The server cannot or will not process the request due to a
            client error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_401_response'
          description: The request could not be completed due to an authentication
            error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_403_response'
          description: The request could not be completed due to a rate limit error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_delete_404_response'
          description: The requested subscriber resource could not be found
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_410_response'
          description: The request has been blocked
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_500_response'
          description: The request failed due to an internal error in the code or
            because of an external dependency failure
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_503_response'
          description: The server is currently unavailable
      security:
      - OAuth 2.0:
        - subscriber.write
      summary: Delete subscriber by email
      tags:
      - Subscribers
      x-code-samples:
        $ref: _code_samples.yaml#/code_samples/DeleteSubscriberByEmail
    get:
      description: "This endpoint is used to get a paginated collection of subscribers\
        \ under the specified account and list.  The subscribers are returned in the\
        \ order that they were added to the list starting with the oldest subscriber.\
        \ The order can be changed using the `sort_order` query parameter.\nCheck\
        \ out related examples:\n\n  * Find Subscribers Across Lists ( \n    <a href=\"\
        https://github.com/aweber/public-api-examples/blob/master/python/find-subscribers-across-lists\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/find-subscribers-across-lists\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Find%20Subscribers%20Across%20Lists.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.FindSubscribersAcrossLists\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/find_subscribers_across_lists.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/find-subscribers-across-lists.js\"\
        \ target=\"_blank\">Node.js</a> )\n  * Manage Subscriber ( \n    <a href=\"\
        https://github.com/aweber/public-api-examples/blob/master/python/manage-subscriber\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/manage-subscriber\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Manage%20Subscriber.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.ManageSubscriber\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/manage_subscriber.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/manage-subscriber.js\"\
        \ target=\"_blank\">Node.js</a> )\n  * Move Subscriber ( \n    <a href=\"\
        https://github.com/aweber/public-api-examples/blob/master/python/move-subscriber\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/move-subscriber\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Move%20Subscriber.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.MoveSubscriber\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/move_subscriber.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/move-subscriber.js\"\
        \ target=\"_blank\">Node.js</a> )"
      parameters:
      - description: The account ID
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      - description: The list ID
        in: path
        name: listId
        required: true
        schema:
          format: int32
          type: integer
      - description: The pagination starting offset
        in: query
        name: ws.start
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: The pagination total entries to retrieve
        in: query
        name: ws.size
        schema:
          default: 100
          format: int32
          maximum: 100
          minimum: 1
          type: integer
      - description: "The collection will be sorted by the order in which the subscribers\
          \ were added to the list. To specify the order, use the value `asc` for\
          \ ascending or `desc` for descending."
        in: query
        name: sort_order
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscribers'
          description: The request completed successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_400_response'
          description: The server cannot or will not process the request due to a
            client error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_401_response'
          description: The request could not be completed due to an authentication
            error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_403_response'
          description: The request could not be completed due to a rate limit error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_404_response'
          description: The requested resource could not be found
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_410_response'
          description: The request has been blocked
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_500_response'
          description: The request failed due to an internal error in the code or
            because of an external dependency failure
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_503_response'
          description: The server is currently unavailable
      security:
      - OAuth 2.0:
        - subscriber.read
      summary: Get subscribers
      tags:
      - Subscribers
      x-code-samples:
        $ref: _code_samples.yaml#/code_samples/GetSubscribers
    patch:
      description: "This endpoint is used to update the information for the specified\
        \ subscriber by email.\n\nCheck out related examples:\n\n  * Find Subscribers\
        \ Across Lists ( \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/python/find-subscribers-across-lists\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/find-subscribers-across-lists\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Find%20Subscribers%20Across%20Lists.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.FindSubscribersAcrossLists\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/find_subscribers_across_lists.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/find-subscribers-across-lists.js\"\
        \ target=\"_blank\">Node.js</a> )\n  * Manage Subscriber ( \n    <a href=\"\
        https://github.com/aweber/public-api-examples/blob/master/python/manage-subscriber\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/manage-subscriber\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Manage%20Subscriber.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.ManageSubscriber\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/manage_subscriber.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/manage-subscriber.js\"\
        \ target=\"_blank\">Node.js</a> )\n  * Move Subscriber ( \n    <a href=\"\
        https://github.com/aweber/public-api-examples/blob/master/python/move-subscriber\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/move-subscriber\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Move%20Subscriber.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.MoveSubscriber\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/move_subscriber.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/move-subscriber.js\"\
        \ target=\"_blank\">Node.js</a> )"
      parameters:
      - description: The account ID
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      - description: The list ID
        in: path
        name: listId
        required: true
        schema:
          format: int32
          type: integer
      - description: The subscriber's email address
        in: query
        name: subscriber_email
        required: true
        schema:
          format: email
          maxLength: 50
          minLength: 1
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriberRequestBody'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateSubscriberRequestBody'
        description: Request body to update a subscriber
        required: true
      responses:
        "209":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: The subscriber was updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_patch_400_response'
          description: The server cannot or will not process the request due to a
            client error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_401_response'
          description: The request could not be completed due to an authentication
            error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_403_response'
          description: The request could not be completed due to a rate limit error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_404_response'
          description: The requested resource could not be found
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_410_response'
          description: The request has been blocked
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_post_415_response'
          description: |
            The request entity has a media type that is not application/x-www-form-urlencoded or
            application/json
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_500_response'
          description: The request failed due to an internal error in the code or
            because of an external dependency failure
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_503_response'
          description: The server is currently unavailable
      security:
      - OAuth 2.0:
        - subscriber.write
      summary: Update subscriber by email
      tags:
      - Subscribers
      x-code-samples:
        $ref: _code_samples.yaml#/code_samples/UpdateSubscriberByEmail
    post:
      description: "This endpoint is used to add subscribers to the specified account\
        \ and list. Before adding a subscriber to a list, read <a href=\"https://help.aweber.com/entries/21729456-can-i-use-this-list\"\
        \ target=\"_blank\">Can I use this list?</a> to understand the ramifications.\
        \ If you have a large list of subscribers, please use our <a href=\"https://help.aweber.com/hc/en-us/articles/204028626-How-do-I-import-a-list-of-subscribers-\"\
        \ target=\"_blank\">list importer</a>. Attempting to use the endpoint to bulk\
        \ add subscribers is considered abuse which violates our Terms of Service.\n\
        \nCheck out related examples:\n\n  * Find Subscribers Across Lists ( \n  \
        \  <a href=\"https://github.com/aweber/public-api-examples/blob/master/python/find-subscribers-across-lists\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/find-subscribers-across-lists\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Find%20Subscribers%20Across%20Lists.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.FindSubscribersAcrossLists\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/find_subscribers_across_lists.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/find-subscribers-across-lists.js\"\
        \ target=\"_blank\">Node.js</a> )\n  * Manage Subscriber ( \n    <a href=\"\
        https://github.com/aweber/public-api-examples/blob/master/python/manage-subscriber\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/manage-subscriber\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Manage%20Subscriber.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.ManageSubscriber\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/manage_subscriber.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/manage-subscriber.js\"\
        \ target=\"_blank\">Node.js</a> )\n  * Move Subscriber ( \n    <a href=\"\
        https://github.com/aweber/public-api-examples/blob/master/python/move-subscriber\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/move-subscriber\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Move%20Subscriber.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.MoveSubscriber\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/move_subscriber.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/move-subscriber.js\"\
        \ target=\"_blank\">Node.js</a> )"
      parameters:
      - description: The account ID
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      - description: The list ID
        in: path
        name: listId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddSubscriberRequestBody'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddSubscriberRequestBody'
        description: Request body to add a subscriber
        required: true
      responses:
        "201":
          description: The subscriber was created successfully
          headers:
            Location:
              description: URI of the new subscriber
              example: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers/789
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_post_400_response'
          description: The server cannot or will not process the request due to a
            client error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_401_response'
          description: The request could not be completed due to an authentication
            error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_post_403_response'
          description: "The request could not be completed due to a rate limit error,\
            \ due to account being on hold, or because the subscriber limit has been\
            \ reached."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_post_404_response'
          description: The requested list could not be found
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_410_response'
          description: The request has been blocked
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_post_415_response'
          description: |
            The request entity has a media type that is not application/x-www-form-urlencoded or
            application/json
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_500_response'
          description: The request failed due to an internal error in the code or
            because of an external dependency failure
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_503_response'
          description: The server is currently unavailable
      security:
      - OAuth 2.0:
        - subscriber.write
      summary: Add subscriber
      tags:
      - Subscribers
      x-code-samples:
        $ref: _code_samples.yaml#/code_samples/AddSubscriber
  /accounts/{accountId}/lists/{listId}/subscribers/{subscriberId}:
    delete:
      description: "This endpoint is used to delete a subscriber and related information\
        \ by the subscriber's ID.\n\nIf you just want to unsubscribe the subscriber,\
        \ then make a\n[PATCH request](#tag/Subscribers/paths/~1accounts~1{accountId}~1lists~1{listId}~1subscribers~1{subscriberId}/patch)\n\
        to set the status to \"unsubscribed\" instead.  When a subscriber is *DELETED*,\n\
        the subscriber is unsubscribed from the list and all related analytics activity\n\
        is removed from the customer account for the subscriber.  Any references to\n\
        clicks or opens are shown as \"Deleted Subscriber\" afterwards.\n\n\nCheck\
        \ out related examples:\n\n  * Find Subscribers Across Lists ( \n    <a href=\"\
        https://github.com/aweber/public-api-examples/blob/master/python/find-subscribers-across-lists\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/find-subscribers-across-lists\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Find%20Subscribers%20Across%20Lists.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.FindSubscribersAcrossLists\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/find_subscribers_across_lists.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/find-subscribers-across-lists.js\"\
        \ target=\"_blank\">Node.js</a> )\n  * Manage Subscriber ( \n    <a href=\"\
        https://github.com/aweber/public-api-examples/blob/master/python/manage-subscriber\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/manage-subscriber\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Manage%20Subscriber.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.ManageSubscriber\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/manage_subscriber.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/manage-subscriber.js\"\
        \ target=\"_blank\">Node.js</a> )\n  * Move Subscriber ( \n    <a href=\"\
        https://github.com/aweber/public-api-examples/blob/master/python/move-subscriber\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/move-subscriber\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Move%20Subscriber.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.MoveSubscriber\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/move_subscriber.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/move-subscriber.js\"\
        \ target=\"_blank\">Node.js</a> )\n"
      parameters:
      - description: The account ID
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      - description: The list ID
        in: path
        name: listId
        required: true
        schema:
          format: int32
          type: integer
      - description: The subscriber ID
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: The subscriber was deleted successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_delete_400_response'
          description: The server cannot or will not process the request due to a
            client error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_401_response'
          description: The request could not be completed due to an authentication
            error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_403_response'
          description: The request could not be completed due to a rate limit error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_delete_404_response'
          description: The requested subscriber resource could not be found
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_410_response'
          description: The request has been blocked
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_500_response'
          description: The request failed due to an internal error in the code or
            because of an external dependency failure
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_503_response'
          description: The server is currently unavailable
      security:
      - OAuth 2.0:
        - subscriber.write
      summary: Delete subscriber by ID
      tags:
      - Subscribers
      x-code-samples:
        $ref: _code_samples.yaml#/code_samples/DeleteSubscriber
    get:
      description: "This endpoint is used to retrieve the information for the specified\
        \ subscriber.\nCheck out related examples:\n\n  * Find Subscribers Across\
        \ Lists ( \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/python/find-subscribers-across-lists\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/find-subscribers-across-lists\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Find%20Subscribers%20Across%20Lists.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.FindSubscribersAcrossLists\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/find_subscribers_across_lists.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/find-subscribers-across-lists.js\"\
        \ target=\"_blank\">Node.js</a> )\n  * Manage Subscriber ( \n    <a href=\"\
        https://github.com/aweber/public-api-examples/blob/master/python/manage-subscriber\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/manage-subscriber\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Manage%20Subscriber.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.ManageSubscriber\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/manage_subscriber.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/manage-subscriber.js\"\
        \ target=\"_blank\">Node.js</a> )\n  * Move Subscriber ( \n    <a href=\"\
        https://github.com/aweber/public-api-examples/blob/master/python/move-subscriber\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/move-subscriber\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Move%20Subscriber.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.MoveSubscriber\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/move_subscriber.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/move-subscriber.js\"\
        \ target=\"_blank\">Node.js</a> )"
      parameters:
      - description: The account ID
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      - description: The list ID
        in: path
        name: listId
        required: true
        schema:
          format: int32
          type: integer
      - description: The subscriber ID
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers__subscriberId__get_200_response'
          description: The request completed successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers__subscriberId__get_400_response'
          description: The server cannot or will not process the request due to a
            client error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_401_response'
          description: The request could not be completed due to an authentication
            error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_403_response'
          description: The request could not be completed due to a rate limit error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_404_response'
          description: The requested resource could not be found
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_410_response'
          description: The request has been blocked
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_500_response'
          description: The request failed due to an internal error in the code or
            because of an external dependency failure
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_503_response'
          description: The server is currently unavailable
      security:
      - OAuth 2.0:
        - subscriber.read
      summary: Get subscriber
      tags:
      - Subscribers
      x-code-samples:
        $ref: _code_samples.yaml#/code_samples/GetSubscriber
    patch:
      description: "This endpoint is used to update the information for the specified\
        \ subscriber by ID\n\nCheck out related examples:\n\n  * Find Subscribers\
        \ Across Lists ( \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/python/find-subscribers-across-lists\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/find-subscribers-across-lists\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Find%20Subscribers%20Across%20Lists.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.FindSubscribersAcrossLists\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/find_subscribers_across_lists.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/find-subscribers-across-lists.js\"\
        \ target=\"_blank\">Node.js</a> )\n  * Manage Subscriber ( \n    <a href=\"\
        https://github.com/aweber/public-api-examples/blob/master/python/manage-subscriber\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/manage-subscriber\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Manage%20Subscriber.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.ManageSubscriber\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/manage_subscriber.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/manage-subscriber.js\"\
        \ target=\"_blank\">Node.js</a> )\n  * Move Subscriber ( \n    <a href=\"\
        https://github.com/aweber/public-api-examples/blob/master/python/move-subscriber\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/move-subscriber\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Move%20Subscriber.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.MoveSubscriber\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/move_subscriber.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/move-subscriber.js\"\
        \ target=\"_blank\">Node.js</a> )"
      parameters:
      - description: The account ID
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      - description: The list ID
        in: path
        name: listId
        required: true
        schema:
          format: int32
          type: integer
      - description: The subscriber ID
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriberRequestBody'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateSubscriberRequestBody'
        description: Request body to update a subscriber
        required: true
      responses:
        "209":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: The subscriber was updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_patch_400_response'
          description: The server cannot or will not process the request due to a
            client error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_401_response'
          description: The request could not be completed due to an authentication
            error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_403_response'
          description: The request could not be completed due to a rate limit error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_404_response'
          description: The requested resource could not be found
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_410_response'
          description: The request has been blocked
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_post_415_response'
          description: |
            The request entity has a media type that is not application/x-www-form-urlencoded or
            application/json
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_500_response'
          description: The request failed due to an internal error in the code or
            because of an external dependency failure
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_503_response'
          description: The server is currently unavailable
      security:
      - OAuth 2.0:
        - subscriber.write
      summary: Update subscriber by ID
      tags:
      - Subscribers
      x-code-samples:
        $ref: _code_samples.yaml#/code_samples/UpdateSubscriber
    post:
      description: "This endpoint is used to move a subscriber from one list to another\
        \ on\nthe specified account.  The subscriber will be unsubscribed from the\
        \ original\nlist and subscribed to the destination list without sending a\
        \ verification\nmessage.  By default, the subscriber will be set to the beginning\
        \ of the\nfollowup sequence on the destination list.  You can explicitly set\
        \ the\nposition in the followup list by specifying the `last_followup_message_number_sent`\n\
        body parameter.\n\nIf either the source or destination list has custom fields\
        \ defined, read our\n<a href=\"https://help.aweber.com/hc/en-us/articles/360009520774\"\
        \ target=\"_blank\">Knowledge Base</a>\narticle.\n\n**Requirements**\n - the\
        \ subscriber MUST have a status of \"subscribed\"\n - the destination list\
        \ MUST be owned by the same account as the source list\n\n\nCheck out related\
        \ examples:\n\n  * Find Subscribers Across Lists ( \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/python/find-subscribers-across-lists\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/find-subscribers-across-lists\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Find%20Subscribers%20Across%20Lists.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.FindSubscribersAcrossLists\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/find_subscribers_across_lists.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/find-subscribers-across-lists.js\"\
        \ target=\"_blank\">Node.js</a> )\n  * Manage Subscriber ( \n    <a href=\"\
        https://github.com/aweber/public-api-examples/blob/master/python/manage-subscriber\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/manage-subscriber\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Manage%20Subscriber.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.ManageSubscriber\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/manage_subscriber.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/manage-subscriber.js\"\
        \ target=\"_blank\">Node.js</a> )\n  * Move Subscriber ( \n    <a href=\"\
        https://github.com/aweber/public-api-examples/blob/master/python/move-subscriber\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/move-subscriber\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Move%20Subscriber.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.MoveSubscriber\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/move_subscriber.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/move-subscriber.js\"\
        \ target=\"_blank\">Node.js</a> )\n"
      parameters:
      - description: The account ID
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      - description: The list ID
        in: path
        name: listId
        required: true
        schema:
          format: int32
          type: integer
      - description: The subscriber ID
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MoveSubscriberRequestBody'
        description: Request body to move subscriber
        required: true
      responses:
        "201":
          description: The subscriber was moved successfully
          headers:
            Location:
              description: URI of the moved subscriber
              example: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers/789
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers__subscriberId__post_400_response'
          description: The server cannot or will not process the request due to a
            client error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_401_response'
          description: The request could not be completed due to an authentication
            error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_403_response'
          description: The request could not be completed due to a rate limit error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_404_response'
          description: The requested resource could not be found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers__subscriberId__post_405_response'
          description: A request method is not supported for the requested resource
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_410_response'
          description: The request has been blocked
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_post_415_response'
          description: |
            The request entity has a media type that is not application/x-www-form-urlencoded or
            application/json
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_500_response'
          description: The request failed due to an internal error in the code or
            because of an external dependency failure
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_503_response'
          description: The server is currently unavailable
      security:
      - OAuth 2.0:
        - subscriber.write
      summary: Move subscriber
      tags:
      - Subscribers
      x-code-samples:
        $ref: _code_samples.yaml#/code_samples/MoveSubscriber
  /accounts/{accountId}/lists/{listId}/subscribers?ws.op=find:
    get:
      description: "This endpoint is used to find the collection of subscribers that\
        \ match a search criteria for the specified account and list.\n* All parameters\
        \ match on the full value and are case sensitive. (Partial\n  matches are\
        \ NOT supported)\n\n* For Date parameters, include the date as 'YYYY-MM-DD'\
        \ or 'MM-DD-YYYY'\n  and any subscriber matching the query will be returned.\n\
        \n* Date parameters are entered as single days, but may search multiple days\n\
        \  depending on the parameter. For example: `subscribed_at=2017-07-16` or\n\
        \  `subscribed_before=2018-12-25`\n\n* Values that are empty (or empty string)\
        \ are treated the same as if\n  they were omitted entirely.\n\nThe subscribers\
        \ are returned in the order that they were added to the list starting with\
        \ the oldest subscriber first.  This order can be changed using the `sort_order`\
        \ query parameter.\n\nCheck out related examples:\n\n  * Find Subscribers\
        \ Across Lists ( \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/python/find-subscribers-across-lists\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/find-subscribers-across-lists\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Find%20Subscribers%20Across%20Lists.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.FindSubscribersAcrossLists\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/find_subscribers_across_lists.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/find-subscribers-across-lists.js\"\
        \ target=\"_blank\">Node.js</a> )\n  * Manage Subscriber ( \n    <a href=\"\
        https://github.com/aweber/public-api-examples/blob/master/python/manage-subscriber\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/manage-subscriber\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Manage%20Subscriber.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.ManageSubscriber\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/manage_subscriber.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/manage-subscriber.js\"\
        \ target=\"_blank\">Node.js</a> )\n  * Move Subscriber ( \n    <a href=\"\
        https://github.com/aweber/public-api-examples/blob/master/python/move-subscriber\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/move-subscriber\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Move%20Subscriber.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.MoveSubscriber\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/move_subscriber.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/move-subscriber.js\"\
        \ target=\"_blank\">Node.js</a> )"
      parameters:
      - description: The account ID
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      - description: The list ID
        in: path
        name: listId
        required: true
        schema:
          format: int32
          type: integer
      - description: The method name - expecting "find"
        explode: true
        in: query
        name: ws.op
        required: true
        schema:
          enum:
          - find
          type: string
        style: form
      - description: The pagination starting offset
        in: query
        name: ws.start
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: The pagination total entries to retrieve
        in: query
        name: ws.size
        schema:
          default: 100
          format: int32
          maximum: 100
          minimum: 1
          type: integer
      - description: "A flag to show the total size only - expecting \\\"total_size\\\
          \", when added the response will be an integer"
        in: query
        name: ws.show
        schema:
          enum:
          - total_size
          type: string
      - description: The collection will be sorted by the field key specified. If
          no key is spcified the search will default to the order in which the subscribers
          were added to the list.
        in: query
        name: sort_key
        schema:
          enum:
          - subscribed_at
          - unsubscribed_at
          type: string
      - description: "The collection will be sorted in the order specified by the\
          \ key entered for `sort_key`. To specify the order, use the value `asc`\
          \ for ascending or `desc` for descending."
        in: query
        name: sort_order
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: The customer ad tracking field
        in: query
        name: ad_tracking
        schema:
          example: ebook
          maxLength: 20
          minLength: 1
          type: string
      - description: The subscriber's area code
        in: query
        name: area_code
        schema:
          example: 555
          format: int32
          maximum: 999
          minimum: 0
          type: integer
      - description: The subscriber's city
        in: query
        name: city
        schema:
          example: Chalfont
          maxLength: 100
          minLength: 1
          type: string
      - description: The subscriber's country
        in: query
        name: country
        schema:
          example: United States
          maxLength: 100
          minLength: 1
          type: string
      - description: The JSON encoded custom field key value pairs
        in: query
        name: custom_fields
        schema:
          example: "{\"apple\": \"fuji\", \"pear\": \"bosc\"}"
          type: string
      - description: The subscriber's designated market area code (usa and canada
          only)
        in: query
        name: dma_code
        schema:
          example: 504
          format: int32
          maximum: 881
          type: integer
      - description: The subscriber's email address
        in: query
        name: email
        schema:
          format: email
          maxLength: 50
          minLength: 1
          type: string
      - description: The sequence number of the last followup message sent to the
          subscriber
        in: query
        name: last_followup_message_number_sent
        schema:
          format: int32
          maximum: 1001
          type: integer
      - description: The day when the last followup message was sent to the subscriber
        in: query
        name: last_followup_message_sent_at
        schema:
          example: 2017-11-28
          format: date
          maxLength: 10
          minLength: 1
          type: string
      - description: The subscriber's geographical latitude
        in: query
        name: latitude
        schema:
          example: 37.751
          format: double
          maximum: 90.0
          minimum: -90.0
          type: number
      - description: The subscriber's geographical longitude
        in: query
        name: longitude
        schema:
          example: -97.822
          format: double
          maximum: 180.0
          minimum: -180.0
          type: number
      - description: Miscellaneous notes
        in: query
        name: misc_notes
        schema:
          example: ebook
          maxLength: 60
          type: string
      - description: The subscriber's name
        in: query
        name: name
        schema:
          example: John Doe
          maxLength: 60
          minLength: 1
          type: string
      - description: The subscriber's postal or zip code
        in: query
        name: postal_code
        schema:
          example: 99999-9999
          maxLength: 100
          minLength: 1
          type: string
      - description: The subscriber's state or region abbreviation
        in: query
        name: region
        schema:
          example: PA
          maxLength: 100
          minLength: 1
          type: string
      - description: The subscriber's status
        in: query
        name: status
        schema:
          enum:
          - subscribed
          - unsubscribed
          - unconfirmed
          type: string
      - description: The day on or before the subscriber subscribed
        in: query
        name: subscribed_before
        schema:
          example: 2017-07-16
          format: date
          type: string
      - description: The day on or after the subscriber subscribed
        in: query
        name: subscribed_after
        schema:
          example: 2017-07-16
          format: date
          type: string
      - description: The day in which the subscriber subscribed
        in: query
        name: subscribed_at
        schema:
          example: 2017-07-16
          format: date
          type: string
      - description: How the subscriber was subscribed
        in: query
        name: subscription_method
        schema:
          enum:
          - api
          - email
          - import
          - webform
          type: string
      - description: A string containing a JSON-formatted array of tags. All tags
          must match for the subscriber to match.
        in: query
        name: tags
        schema:
          example: "[\"tag1\", \"tag2\"]"
          type: string
      - description: A string containing a JSON-formatted array of tags. Checks that
          all tags are not matched to a subscriber.
        in: query
        name: tags_not_in
        schema:
          example: "[\"tag1\", \"tag2\"]"
          type: string
      - description: How the subscriber unsubscribed
        in: query
        name: unsubscribe_method
        schema:
          enum:
          - unsubscribe link
          - customer cp
          - undeliverable
          - "api: unsubscribe"
          - "api: move"
          type: string
      - description: The day on or before the subscriber unsubscribed
        in: query
        name: unsubscribed_before
        schema:
          example: 2017-10-13
          format: date
          type: string
      - description: The day on or after the subscriber unsubscribed
        in: query
        name: unsubscribed_after
        schema:
          example: 2017-10-13
          format: date
          type: string
      - description: The day in which the subscriber unsubscribed
        in: query
        name: unsubscribed_at
        schema:
          example: 2017-10-13
          format: date
          type: string
      - description: The day in which the subscriber confirmed their email address
        in: query
        name: verified_at
        schema:
          example: 2017-07-18
          format: date
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindSubscribers'
          description: The request completed successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_ws_op_find_get_400_response'
          description: The server cannot or will not process the request due to a
            client error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_401_response'
          description: The request could not be completed due to an authentication
            error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_ws_op_find_get_403_response'
          description: Forbidden due to rate limit or missing Request Subscriber Data
            permission
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_410_response'
          description: The request has been blocked
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_500_response'
          description: The request failed due to an internal error in the code or
            because of an external dependency failure
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_503_response'
          description: The server is currently unavailable
      security:
      - OAuth 2.0:
        - subscriber.read
      summary: Find subscribers for list
      tags:
      - Subscribers
      x-code-samples:
        $ref: _code_samples.yaml#/code_samples/FindSubscribersForList
  /accounts/{accountId}?ws.op=findSubscribers:
    get:
      description: "This endpoint is used to find the collection of subscribers that\n\
        match a search criteria for the specified account across all lists.\n\n* All\
        \ parameters match on the full value and are case sensitive.\n(No partial\
        \ matches are accepted)\n\n* For Date parameters, include the date as 'YYYY-MM-DD'\
        \ or 'MM-DD-YYYY'\nand any subscriber matching the query will be returned.\n\
        \n* Date parameters are entered as single days, but may search multiple days\n\
        depending on the parameter. For example: `subscribed_at=2017-07-16` or\n`subscribed_before=2018-12-25`\n\
        \n* Values that are empty (or empty string) are treated the same as\nif they\
        \ were omitted entirely.\n\n* If no search parameters are included, **all\
        \ subscribers from all\nlists** will be returned.\n\nThe subscribers are returned\
        \ in the order that they were added to the list\nstarting with the oldest\
        \ subscriber first.\n\nCheck out related examples:\n\n  * Find Subscribers\
        \ Across Lists ( \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/python/find-subscribers-across-lists\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/find-subscribers-across-lists\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Find%20Subscribers%20Across%20Lists.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.FindSubscribersAcrossLists\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/find_subscribers_across_lists.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/find-subscribers-across-lists.js\"\
        \ target=\"_blank\">Node.js</a> )\n  * Manage Subscriber ( \n    <a href=\"\
        https://github.com/aweber/public-api-examples/blob/master/python/manage-subscriber\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/manage-subscriber\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Manage%20Subscriber.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.ManageSubscriber\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/manage_subscriber.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/manage-subscriber.js\"\
        \ target=\"_blank\">Node.js</a> )\n  * Move Subscriber ( \n    <a href=\"\
        https://github.com/aweber/public-api-examples/blob/master/python/move-subscriber\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/move-subscriber\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Move%20Subscriber.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.MoveSubscriber\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/move_subscriber.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/move-subscriber.js\"\
        \ target=\"_blank\">Node.js</a> )\n"
      parameters:
      - description: The account ID
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      - description: The method name - expecting "findSubscribers"
        explode: true
        in: query
        name: ws.op
        required: true
        schema:
          enum:
          - findSubscribers
          type: string
        style: form
      - description: The customer ad tracking field
        in: query
        name: ad_tracking
        schema:
          example: ebook
          maxLength: 20
          minLength: 1
          type: string
      - description: The subscriber's area code
        in: query
        name: area_code
        schema:
          example: 555
          format: int32
          maximum: 999
          minimum: 0
          type: integer
      - description: The subscriber's city
        in: query
        name: city
        schema:
          example: Chalfont
          maxLength: 100
          minLength: 1
          type: string
      - description: The subscriber's country
        in: query
        name: country
        schema:
          example: United States
          maxLength: 100
          minLength: 1
          type: string
      - description: The JSON encoded custom field key value pairs
        in: query
        name: custom_fields
        schema:
          example: "{\"apple\": \"fuji\", \"pear\": \"bosc\"}"
          type: string
      - description: The subscriber's designated market area code (usa and canada
          only)
        in: query
        name: dma_code
        schema:
          example: 504
          format: int32
          maximum: 881
          type: integer
      - description: The subscriber's email address
        in: query
        name: email
        schema:
          format: email
          maxLength: 50
          minLength: 1
          type: string
      - description: The sequence number of the last followup message sent to the
          subscriber
        in: query
        name: last_followup_message_number_sent
        schema:
          format: int32
          maximum: 1001
          type: integer
      - description: The day when the last followup message was sent to the subscriber
        in: query
        name: last_followup_message_sent_at
        schema:
          example: 2017-11-28
          format: date
          maxLength: 10
          minLength: 1
          type: string
      - description: The subscriber's geographical latitude
        in: query
        name: latitude
        schema:
          example: 37.751
          format: double
          maximum: 90.0
          minimum: -90.0
          type: number
      - description: The subscriber's geographical longitude
        in: query
        name: longitude
        schema:
          example: -97.822
          format: double
          maximum: 180.0
          minimum: -180.0
          type: number
      - description: Miscellaneous notes
        in: query
        name: misc_notes
        schema:
          example: ebook
          maxLength: 60
          type: string
      - description: The subscriber's name
        in: query
        name: name
        schema:
          example: John Doe
          maxLength: 60
          minLength: 1
          type: string
      - description: The subscriber's postal or zip code
        in: query
        name: postal_code
        schema:
          example: 99999-9999
          maxLength: 100
          minLength: 1
          type: string
      - description: The subscriber's state or region abbreviation
        in: query
        name: region
        schema:
          example: PA
          maxLength: 100
          minLength: 1
          type: string
      - description: The subscriber's status
        in: query
        name: status
        schema:
          enum:
          - subscribed
          - unsubscribed
          - unconfirmed
          type: string
      - description: The day on or before the subscriber subscribed
        in: query
        name: subscribed_before
        schema:
          example: 2017-07-16
          format: date
          type: string
      - description: The day on or after the subscriber subscribed
        in: query
        name: subscribed_after
        schema:
          example: 2017-07-16
          format: date
          type: string
      - description: The day in which the subscriber subscribed
        in: query
        name: subscribed_at
        schema:
          example: 2017-07-16
          format: date
          type: string
      - description: How the subscriber was subscribed
        in: query
        name: subscription_method
        schema:
          enum:
          - api
          - email
          - import
          - webform
          type: string
      - description: A string containing a JSON-formatted array of tags. All tags
          must match for the subscriber to match.
        in: query
        name: tags
        schema:
          example: "[\"tag1\", \"tag2\"]"
          type: string
      - description: A string containing a JSON-formatted array of tags. Checks that
          all tags are not matched to a subscriber.
        in: query
        name: tags_not_in
        schema:
          example: "[\"tag1\", \"tag2\"]"
          type: string
      - description: How the subscriber unsubscribed
        in: query
        name: unsubscribe_method
        schema:
          enum:
          - unsubscribe link
          - customer cp
          - undeliverable
          - "api: unsubscribe"
          - "api: move"
          type: string
      - description: The day on or before the subscriber unsubscribed
        in: query
        name: unsubscribed_before
        schema:
          example: 2017-10-13
          format: date
          type: string
      - description: The day on or after the subscriber unsubscribed
        in: query
        name: unsubscribed_after
        schema:
          example: 2017-10-13
          format: date
          type: string
      - description: The day in which the subscriber unsubscribed
        in: query
        name: unsubscribed_at
        schema:
          example: 2017-10-13
          format: date
          type: string
      - description: The day in which the subscriber confirmed their email address
        in: query
        name: verified_at
        schema:
          example: 2017-07-18
          format: date
          type: string
      - description: The pagination starting offset
        in: query
        name: ws.start
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: The pagination total entries to retrieve
        in: query
        name: ws.size
        schema:
          default: 100
          format: int32
          maximum: 100
          minimum: 1
          type: integer
      - description: "A flag to show the total size only - expecting \\\"total_size\\\
          \", when added the response will be an integer"
        in: query
        name: ws.show
        schema:
          enum:
          - total_size
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindSubscribersAccount'
          description: The request completed successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__ws_op_findSubscribers_get_400_response'
          description: The server cannot or will not process the request due to a
            client error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_401_response'
          description: The request could not be completed due to an authentication
            error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_ws_op_find_get_403_response'
          description: Forbidden due to rate limit or missing Request Subscriber Data
            permission
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_404_response'
          description: The requested resource could not be found
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_410_response'
          description: The request has been blocked
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_500_response'
          description: The request failed due to an internal error in the code or
            because of an external dependency failure
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_503_response'
          description: The server is currently unavailable
      security:
      - OAuth 2.0:
        - subscriber.read
      summary: Find subscribers for account
      tags:
      - Subscribers
      x-code-samples:
        $ref: _code_samples.yaml#/code_samples/FindSubscribersForAccount
  /accounts/{accountId}/lists/{listId}/subscribers/{subscriberId}?ws.op=getActivity:
    get:
      description: "This endpoint is used to retrieve the analytics activity for a\
        \ subscriber. The activity is returned as a chronological list of events and\
        \ includes:\nWhen they subscribed to the list. When they verified their subscription.\
        \ What messages were sent to them. When sent messages were opened. When links\
        \ were clicked (if click tracking was enabled). When a subscriber made a sale\
        \ or other TrackedEvent.\nCheck out related examples:\n\n  * Find Subscribers\
        \ Across Lists ( \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/python/find-subscribers-across-lists\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/find-subscribers-across-lists\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Find%20Subscribers%20Across%20Lists.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.FindSubscribersAcrossLists\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/find_subscribers_across_lists.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/find-subscribers-across-lists.js\"\
        \ target=\"_blank\">Node.js</a> )\n  * Manage Subscriber ( \n    <a href=\"\
        https://github.com/aweber/public-api-examples/blob/master/python/manage-subscriber\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/manage-subscriber\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Manage%20Subscriber.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.ManageSubscriber\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/manage_subscriber.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/manage-subscriber.js\"\
        \ target=\"_blank\">Node.js</a> )\n  * Move Subscriber ( \n    <a href=\"\
        https://github.com/aweber/public-api-examples/blob/master/python/move-subscriber\"\
        \ target=\"_blank\">Python</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/php/move-subscriber\"\
        \ target=\"_blank\">PHP</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/postman/Move%20Subscriber.postman_collection.json\"\
        \ target=\"_blank\">Postman</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.MoveSubscriber\"\
        \ target=\"_blank\">C#.NET</a> |\n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/ruby/move_subscriber.rb\"\
        \ target=\"_blank\">Ruby</a> | \n    <a href=\"https://github.com/aweber/public-api-examples/blob/master/node/move-subscriber.js\"\
        \ target=\"_blank\">Node.js</a> )"
      parameters:
      - description: The account ID
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      - description: The list ID
        in: path
        name: listId
        required: true
        schema:
          format: int32
          type: integer
      - description: The subscriber ID
        in: path
        name: subscriberId
        required: true
        schema:
          format: int32
          type: integer
      - description: The method name - expecting "getActivity"
        explode: true
        in: query
        name: ws.op
        required: true
        schema:
          enum:
          - getActivity
          type: string
        style: form
      - description: The pagination starting offset
        in: query
        name: ws.start
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: The pagination total entries to retrieve
        in: query
        name: ws.size
        schema:
          default: 100
          format: int32
          maximum: 100
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberGetActivity'
          description: The request completed successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_delete_400_response'
          description: The server cannot or will not process the request due to a
            client error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_401_response'
          description: The request could not be completed due to an authentication
            error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_403_response'
          description: The request could not be completed due to a rate limit error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_404_response'
          description: The requested resource could not be found
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_410_response'
          description: The request has been blocked
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_500_response'
          description: The request failed due to an internal error in the code or
            because of an external dependency failure
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_503_response'
          description: The server is currently unavailable
      security:
      - OAuth 2.0:
        - subscriber.read
      summary: Get subscriber activity
      tags:
      - Subscribers
      x-code-samples:
        $ref: _code_samples.yaml#/code_samples/GetSubscriberActivity
  /accounts/{accountId}/lists/{listId}/purchases:
    post:
      description: |
        This endpoint creates a purchase (a pageview tracked event) for a
        subscriber. If the subscriber does not exist, it is created. If the
        subscriber exists, then it will be updated. This endpoint combines 3
        api calls into one, which will account toward the rate limit.


        Check out related examples:

          * Create a Purchase (
            <a href="https://github.com/aweber/public-api-examples/tree/master/php/create-purchase" target="_blank">PHP</a> |
            <a href="https://github.com/aweber/public-api-examples/tree/master/python/create-purchase" target="_blank">Python</a> |
            <a href="https://github.com/aweber/public-api-examples/blob/master/postman/Create%20Purchase.postman_collection.json" target="_blank">Postman</a> |
            <a href="https://github.com/aweber/public-api-examples/tree/master/csharp/AWeber.Examples.CreatePurchase" target="_blank">C#.NET</a> |
            <a href="https://github.com/aweber/public-api-examples/tree/master/ruby/create_purchase.rb" target="_blank">Ruby</a> |
            <a href="https://github.com/aweber/public-api-examples/blob/master/node/create-purchase.js" target="_blank">Node.js</a> )
          * Find Subscribers Across Lists (
            <a href="https://github.com/aweber/public-api-examples/blob/master/python/find-subscribers-across-lists" target="_blank">Python</a> |
            <a href="https://github.com/aweber/public-api-examples/blob/master/php/find-subscribers-across-lists" target="_blank">PHP</a> |
            <a href="https://github.com/aweber/public-api-examples/blob/master/postman/Find%20Subscribers%20Across%20Lists.postman_collection.json" target="_blank">Postman</a> |
            <a href="https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.FindSubscribersAcrossLists" target="_blank">C#.NET</a> |
            <a href="https://github.com/aweber/public-api-examples/blob/master/ruby/find_subscribers_across_lists.rb" target="_blank">Ruby</a> |
            <a href="https://github.com/aweber/public-api-examples/blob/master/node/find-subscribers-across-lists.js" target="_blank">Node.js</a> )
          * Manage Subscriber (
            <a href="https://github.com/aweber/public-api-examples/blob/master/python/manage-subscriber" target="_blank">Python</a> |
            <a href="https://github.com/aweber/public-api-examples/blob/master/php/manage-subscriber" target="_blank">PHP</a> |
            <a href="https://github.com/aweber/public-api-examples/blob/master/postman/Manage%20Subscriber.postman_collection.json" target="_blank">Postman</a> |
            <a href="https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.ManageSubscriber" target="_blank">C#.NET</a> |
            <a href="https://github.com/aweber/public-api-examples/blob/master/ruby/manage_subscriber.rb" target="_blank">Ruby</a> |
            <a href="https://github.com/aweber/public-api-examples/blob/master/node/manage-subscriber.js" target="_blank">Node.js</a> )
          * Move Subscriber (
            <a href="https://github.com/aweber/public-api-examples/blob/master/python/move-subscriber" target="_blank">Python</a> |
            <a href="https://github.com/aweber/public-api-examples/blob/master/php/move-subscriber" target="_blank">PHP</a> |
            <a href="https://github.com/aweber/public-api-examples/blob/master/postman/Move%20Subscriber.postman_collection.json" target="_blank">Postman</a> |
            <a href="https://github.com/aweber/public-api-examples/blob/master/csharp/AWeber.Examples.MoveSubscriber" target="_blank">C#.NET</a> |
            <a href="https://github.com/aweber/public-api-examples/blob/master/ruby/move_subscriber.rb" target="_blank">Ruby</a> |
            <a href="https://github.com/aweber/public-api-examples/blob/master/node/move-subscriber.js" target="_blank">Node.js</a> )
      parameters:
      - description: The account ID
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      - description: The list ID
        explode: false
        in: path
        name: listId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Purchase'
        required: true
      responses:
        "202":
          description: The event was accepted and is being processed.
          headers:
            Location:
              description: URI of the subscriber's activity
              example: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers/789?ws.op=getActivity
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers__subscriberId__post_400_response'
          description: The server cannot or will not process the request due to a
            client error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_401_response'
          description: The request could not be completed due to an authentication
            error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_403_response'
          description: The request could not be completed due to a rate limit error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_404_response'
          description: The requested resource could not be found
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_410_response'
          description: The request has been blocked
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_post_415_response'
          description: |
            The request entity has a media type that is not application/x-www-form-urlencoded or
            application/json
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_500_response'
          description: The request failed due to an internal error in the code or
            because of an external dependency failure
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_503_response'
          description: The server is currently unavailable
      security:
      - OAuth 2.0:
        - subscriber.read
        - subscriber.write
      summary: Create a purchase
      tags:
      - Subscribers
      x-code-samples:
        $ref: _code_samples.yaml#/code_samples/CreatePurchase
components:
  parameters:
    accountId:
      description: The account ID
      in: path
      name: accountId
      required: true
      schema:
        format: int32
        type: integer
    listId:
      description: The list ID
      in: path
      name: listId
      required: true
      schema:
        format: int32
        type: integer
    wsStart:
      description: The pagination starting offset
      in: query
      name: ws.start
      schema:
        default: 0
        format: int32
        minimum: 0
        type: integer
    wsSize:
      description: The pagination total entries to retrieve
      in: query
      name: ws.size
      schema:
        default: 100
        format: int32
        maximum: 100
        minimum: 1
        type: integer
    sortOrder:
      description: "The collection will be sorted by the order in which the subscribers\
        \ were added to the list. To specify the order, use the value `asc` for ascending\
        \ or `desc` for descending."
      in: query
      name: sort_order
      schema:
        default: asc
        enum:
        - asc
        - desc
        type: string
    subCollectionEmail:
      description: The subscriber's email address
      in: query
      name: subscriber_email
      required: true
      schema:
        format: email
        maxLength: 50
        minLength: 1
        type: string
    subscriberId:
      description: The subscriber ID
      in: path
      name: subscriberId
      required: true
      schema:
        format: int32
        type: integer
    wsShow:
      description: "A flag to show the total size only - expecting \\\"total_size\\\
        \", when added the response will be an integer"
      in: query
      name: ws.show
      schema:
        enum:
        - total_size
        type: string
    sortKey:
      description: The collection will be sorted by the field key specified. If no
        key is spcified the search will default to the order in which the subscribers
        were added to the list.
      in: query
      name: sort_key
      schema:
        enum:
        - subscribed_at
        - unsubscribed_at
        type: string
    sortOrderList:
      description: "The collection will be sorted in the order specified by the key\
        \ entered for `sort_key`. To specify the order, use the value `asc` for ascending\
        \ or `desc` for descending."
      in: query
      name: sort_order
      schema:
        default: asc
        enum:
        - asc
        - desc
        type: string
    findSubAdTracking:
      description: The customer ad tracking field
      in: query
      name: ad_tracking
      schema:
        example: ebook
        maxLength: 20
        minLength: 1
        type: string
    findSubAreaCode:
      description: The subscriber's area code
      in: query
      name: area_code
      schema:
        example: 555
        format: int32
        maximum: 999
        minimum: 0
        type: integer
    findSubCity:
      description: The subscriber's city
      in: query
      name: city
      schema:
        example: Chalfont
        maxLength: 100
        minLength: 1
        type: string
    findSubCountry:
      description: The subscriber's country
      in: query
      name: country
      schema:
        example: United States
        maxLength: 100
        minLength: 1
        type: string
    findSubCustomFields:
      description: The JSON encoded custom field key value pairs
      in: query
      name: custom_fields
      schema:
        example: "{\"apple\": \"fuji\", \"pear\": \"bosc\"}"
        type: string
    findSubDmaCode:
      description: The subscriber's designated market area code (usa and canada only)
      in: query
      name: dma_code
      schema:
        example: 504
        format: int32
        maximum: 881
        type: integer
    findSubEmail:
      description: The subscriber's email address
      in: query
      name: email
      schema:
        format: email
        maxLength: 50
        minLength: 1
        type: string
    findSubLastMessage:
      description: The sequence number of the last followup message sent to the subscriber
      in: query
      name: last_followup_message_number_sent
      schema:
        format: int32
        maximum: 1001
        type: integer
    findSubLastMessageSentAt:
      description: The day when the last followup message was sent to the subscriber
      in: query
      name: last_followup_message_sent_at
      schema:
        example: 2017-11-28
        format: date
        maxLength: 10
        minLength: 1
        type: string
    findSubLatitude:
      description: The subscriber's geographical latitude
      in: query
      name: latitude
      schema:
        example: 37.751
        format: double
        maximum: 90.0
        minimum: -90.0
        type: number
    findSubLongitude:
      description: The subscriber's geographical longitude
      in: query
      name: longitude
      schema:
        example: -97.822
        format: double
        maximum: 180.0
        minimum: -180.0
        type: number
    findSubMiscNotes:
      description: Miscellaneous notes
      in: query
      name: misc_notes
      schema:
        example: ebook
        maxLength: 60
        type: string
    findSubName:
      description: The subscriber's name
      in: query
      name: name
      schema:
        example: John Doe
        maxLength: 60
        minLength: 1
        type: string
    findSubPostalCode:
      description: The subscriber's postal or zip code
      in: query
      name: postal_code
      schema:
        example: 99999-9999
        maxLength: 100
        minLength: 1
        type: string
    findSubRegion:
      description: The subscriber's state or region abbreviation
      in: query
      name: region
      schema:
        example: PA
        maxLength: 100
        minLength: 1
        type: string
    findSubStatus:
      description: The subscriber's status
      in: query
      name: status
      schema:
        enum:
        - subscribed
        - unsubscribed
        - unconfirmed
        type: string
    findSubSubscribedBefore:
      description: The day on or before the subscriber subscribed
      in: query
      name: subscribed_before
      schema:
        example: 2017-07-16
        format: date
        type: string
    findSubSubscribedAfter:
      description: The day on or after the subscriber subscribed
      in: query
      name: subscribed_after
      schema:
        example: 2017-07-16
        format: date
        type: string
    findSubSubscribedAt:
      description: The day in which the subscriber subscribed
      in: query
      name: subscribed_at
      schema:
        example: 2017-07-16
        format: date
        type: string
    findSubSubscriptionMethod:
      description: How the subscriber was subscribed
      in: query
      name: subscription_method
      schema:
        enum:
        - api
        - email
        - import
        - webform
        type: string
    findSubTags:
      description: A string containing a JSON-formatted array of tags. All tags must
        match for the subscriber to match.
      in: query
      name: tags
      schema:
        example: "[\"tag1\", \"tag2\"]"
        type: string
    findSubNotTag:
      description: A string containing a JSON-formatted array of tags. Checks that
        all tags are not matched to a subscriber.
      in: query
      name: tags_not_in
      schema:
        example: "[\"tag1\", \"tag2\"]"
        type: string
    findSubUnsubscribeMethod:
      description: How the subscriber unsubscribed
      in: query
      name: unsubscribe_method
      schema:
        enum:
        - unsubscribe link
        - customer cp
        - undeliverable
        - "api: unsubscribe"
        - "api: move"
        type: string
    findSubUnsubscribedBefore:
      description: The day on or before the subscriber unsubscribed
      in: query
      name: unsubscribed_before
      schema:
        example: 2017-10-13
        format: date
        type: string
    findSubUnsubscribedAfter:
      description: The day on or after the subscriber unsubscribed
      in: query
      name: unsubscribed_after
      schema:
        example: 2017-10-13
        format: date
        type: string
    findSubUnsubscribedAt:
      description: The day in which the subscriber unsubscribed
      in: query
      name: unsubscribed_at
      schema:
        example: 2017-10-13
        format: date
        type: string
    findSubVerifiedAt:
      description: The day in which the subscriber confirmed their email address
      in: query
      name: verified_at
      schema:
        example: 2017-07-18
        format: date
        type: string
  responses:
    UnauthorizedError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_401_response'
      description: The request could not be completed due to an authentication error
    ForbiddenError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_403_response'
      description: The request could not be completed due to a rate limit error
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_404_response'
      description: The requested resource could not be found
    BlockedError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_410_response'
      description: The request has been blocked
    InternalServerError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_500_response'
      description: The request failed due to an internal error in the code or because
        of an external dependency failure
    ServiceUnavailable:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_503_response'
      description: The server is currently unavailable
    SubListNotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_post_404_response'
      description: The requested list could not be found
    NotFormURLEncodedOrJSON:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_post_415_response'
      description: |
        The request entity has a media type that is not application/x-www-form-urlencoded or
        application/json
    BadOAuth1LessTypes:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_delete_400_response'
      description: The server cannot or will not process the request due to a client
        error
    SubscriberNotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_delete_404_response'
      description: The requested subscriber resource could not be found
    BadOAuth1:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers__subscriberId__get_400_response'
      description: The server cannot or will not process the request due to a client
        error
    SearchListBadRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_ws_op_find_get_400_response'
      description: The server cannot or will not process the request due to a client
        error
    RateLimitOrSubscriberPermission:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_ws_op_find_get_403_response'
      description: Forbidden due to rate limit or missing Request Subscriber Data
        permission
    SearchBadRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_accounts__accountId__ws_op_findSubscribers_get_400_response'
      description: The server cannot or will not process the request due to a client
        error
  schemas:
    Subscribers:
      example:
        entries:
        - country: United States
          last_followup_sent_at: 2015-12-17T14:06:26.861089-05:00
          subscribed_at: 2015-10-13T16:19:20-04:00
          city: Chalfont
          latitude: 37.751
          subscription_url: https://forms.aweber.com/form/16/123456789.htm
          misc_notes: ebook
          resource_type_link: https://openapi-generator.tech
          verified_at: 2000-01-23T04:56:07.000+00:00
          last_followup_message_number_sent: 80
          id: 789
          email: email
          longitude: -97.822
          ad_tracking: ebook
          last_followup_sent_link: https://api.aweber.com/1.0/accounts/123/lists/456/campaigns/f12345678
          custom_fields:
            apple: fuji
            pear: bosc
          area_code: 555
          ip_address: 204.194.222.28
          unsubscribe_method: unsubscribe link
          is_verified: true
          tags:
          - slow
          - fast
          - lightspeed
          unsubscribed_at: 2017-10-13T10:41:43.300889-04:00
          dma_code: 504
          name: John Doe
          subscription_method: api
          postal_code: 99999-9999
          region: PA
          self_link: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers/789
          status: subscribed
        - country: United States
          last_followup_sent_at: 2015-12-17T14:06:26.861089-05:00
          subscribed_at: 2015-10-13T16:19:20-04:00
          city: Chalfont
          latitude: 37.751
          subscription_url: https://forms.aweber.com/form/16/123456789.htm
          misc_notes: ebook
          resource_type_link: https://openapi-generator.tech
          verified_at: 2000-01-23T04:56:07.000+00:00
          last_followup_message_number_sent: 80
          id: 789
          email: email
          longitude: -97.822
          ad_tracking: ebook
          last_followup_sent_link: https://api.aweber.com/1.0/accounts/123/lists/456/campaigns/f12345678
          custom_fields:
            apple: fuji
            pear: bosc
          area_code: 555
          ip_address: 204.194.222.28
          unsubscribe_method: unsubscribe link
          is_verified: true
          tags:
          - slow
          - fast
          - lightspeed
          unsubscribed_at: 2017-10-13T10:41:43.300889-04:00
          dma_code: 504
          name: John Doe
          subscription_method: api
          postal_code: 99999-9999
          region: PA
          self_link: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers/789
          status: subscribed
        prev_collection_link: https://api.aweber.com/1.0/accounts/123/lists/456/campaigns/b789/messages?ws.start=1&ws.size=100
        resource_type_link: https://api.aweber.com/1.0/#subscribers-page-resource
        start: 0
        total_size: 100
        self_link: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers?ws.start=0&ws.size=100&account_id=123&list_id=456
        next_collection_link: https://api.aweber.com/1.0/accounts/123/lists/456/campaigns/b789/messages?ws.start=1&ws.size=100
      properties:
        entries:
          description: The list of subscriber entries
          items:
            $ref: '#/components/schemas/Subscriber'
          type: array
        next_collection_link:
          description: A link to the next page of entries if more entries exist. This
            attribute is omitted from the collection if there are no more entries.
          example: https://api.aweber.com/1.0/accounts/123/lists/456/campaigns/b789/messages?ws.start=1&ws.size=100
          format: uri
          type: string
        prev_collection_link:
          description: A link to the previous page of entries if previous entries
            exist. This attribute is omitted if this is the first page.
          example: https://api.aweber.com/1.0/accounts/123/lists/456/campaigns/b789/messages?ws.start=1&ws.size=100
          format: uri
          type: string
        resource_type_link:
          description: A link that identifies the type of resource that this collection
            represents
          example: https://api.aweber.com/1.0/#subscribers-page-resource
          format: uri
          type: string
        self_link:
          description: A link to the current page of entries.
          example: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers?ws.start=0&ws.size=100&account_id=123&list_id=456
          format: uri
          type: string
        start:
          description: The starting offset for the page of entries to retrieve
          minimum: 0
          type: integer
        total_size:
          description: The total number of entries
          example: 100
          minimum: 0
          type: integer
      type: object
    Subscriber:
      example:
        country: United States
        last_followup_sent_at: 2015-12-17T14:06:26.861089-05:00
        subscribed_at: 2015-10-13T16:19:20-04:00
        city: Chalfont
        latitude: 37.751
        subscription_url: https://forms.aweber.com/form/16/123456789.htm
        misc_notes: ebook
        resource_type_link: https://openapi-generator.tech
        verified_at: 2000-01-23T04:56:07.000+00:00
        last_followup_message_number_sent: 80
        id: 789
        email: email
        longitude: -97.822
        ad_tracking: ebook
        last_followup_sent_link: https://api.aweber.com/1.0/accounts/123/lists/456/campaigns/f12345678
        custom_fields:
          apple: fuji
          pear: bosc
        area_code: 555
        ip_address: 204.194.222.28
        unsubscribe_method: unsubscribe link
        is_verified: true
        tags:
        - slow
        - fast
        - lightspeed
        unsubscribed_at: 2017-10-13T10:41:43.300889-04:00
        dma_code: 504
        name: John Doe
        subscription_method: api
        postal_code: 99999-9999
        region: PA
        self_link: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers/789
        status: subscribed
      properties:
        ad_tracking:
          description: The customer ad tracking field
          example: ebook
          maxLength: 20
          minLength: 1
          type: string
        area_code:
          description: The subscriber's area code
          example: 555
          maximum: 999
          minimum: 0
          type: integer
        city:
          description: The subscriber's address city
          example: Chalfont
          maxLength: 100
          minLength: 1
          type: string
        country:
          description: The subscriber's address country
          example: United States
          maxLength: 100
          minLength: 1
          type: string
        custom_fields:
          additionalProperties:
            minimum: 1
            type: string
          description: The custom fields specified on the subscriber
          example:
            apple: fuji
            pear: bosc
          type: object
        dma_code:
          description: The subscriber's designated market area code (USA and canada
            only)
          example: 504
          maximum: 881
          minimum: 0
          type: integer
        email:
          description: The subscriber's email address.
          format: email
          maxLength: 50
          minLength: 1
          type: string
        id:
          description: The lead ID
          example: 789
          minimum: 0
          type: integer
        ip_address:
          description: The subscriber's IP address.
          example: 204.194.222.28
          format: ipv4
          maxLength: 60
          minLength: 1
          type: string
        is_verified:
          description: A value indication if the subscriber's email address confirmed
          type: boolean
        last_followup_message_number_sent:
          description: "The sequence number of the last followup message sent to the\
            \ subscriber.  If this value is set to 1001, then the subscriber will\
            \ not receive followup messages."
          maximum: 1001
          minimum: 0
          type: integer
        last_followup_sent_at:
          description: The last followup message sent to the subscriber
          example: 2015-12-17T14:06:26.861089-05:00
          format: date-time
          type: string
        last_followup_sent_link:
          description: "A link to the [Last Follow Up Message](#tag/Campaigns/paths/~1accounts~1{accountId}~1lists~1{listId}~1campaigns~1{campaignType}{campaignId}/get)\
            \ the subscriber was sent"
          example: https://api.aweber.com/1.0/accounts/123/lists/456/campaigns/f12345678
          format: uri
          type: string
        latitude:
          description: The subscriber's geographical latitude
          example: 37.751
          format: double
          maximum: 90.0
          minimum: -90.0
          type: number
        longitude:
          description: The subscriber's geographical longitude
          example: -97.822
          format: double
          maximum: 180.0
          minimum: -180.0
          type: number
        misc_notes:
          description: Miscellaneous notes.
          example: ebook
          maxLength: 60
          type: string
        name:
          description: The subscriber's name.
          example: John Doe
          maxLength: 60
          minLength: 1
          type: string
        postal_code:
          description: The subscriber's address postal code
          example: 99999-9999
          maxLength: 100
          minLength: 1
          type: string
        region:
          description: The subscriber's address stage or region abbreviation
          example: PA
          maxLength: 100
          minLength: 1
          type: string
        resource_type_link:
          description: A link that identifies the type of resource that this collection
            represents
          enum:
          - https://api.aweber.com/1.0/#subscriber
          format: uri
          type: string
        self_link:
          description: The link to this resource
          example: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers/789
          format: uri
          type: string
        status:
          description: The subscriber's status
          enum:
          - subscribed
          - unsubscribed
          - unconfirmed
          type: string
        subscribed_at:
          description: The timestamp for when the subscriber subscribed
          example: 2015-10-13T16:19:20-04:00
          format: date-time
          type: string
        subscription_method:
          description: |
            The method by which the subscriber was subscribed.

            | Method    | Description                              |
            | ------    | -----------                              |
            | api       | subscribed via an API integration        |
            | email     | subscriber emailed to list to opt-in     |
            | import    | subscriber was imported by the customer  |
            | webform   | subscriber subscribed via a web form     |
          enum:
          - api
          - email
          - import
          - webform
          type: string
        subscription_url:
          description: The webform url from which the subscriber subscribed from
          example: https://forms.aweber.com/form/16/123456789.htm
          format: uri
          maximum: 100
          type: string
        tags:
          description: A list of tags added to the subscriber
          example:
          - slow
          - fast
          - lightspeed
          items:
            minLength: 1
            type: string
          type: array
        unsubscribe_method:
          description: The method that describes how the subscriber unsubscribed
          enum:
          - unsubscribe link
          - customer cp
          - undeliverable
          - "api: unsubscribe"
          - "api: move"
          type: string
        unsubscribed_at:
          description: The timestamp for when the subscriber unsubscribed
          example: 2017-10-13T10:41:43.300889-04:00
          format: date-time
          type: string
        verified_at:
          description: The timestamp for when the subscriber confirmed their email
            address
          format: date-time
          type: string
      title: Subscriber
      type: object
    Endpoint Error:
      example:
        error:
          documentation_url: https://api.aweber.com#unauthorized
          message: Consumer key is invalid.
          type: UnauthorizedError
          status: 1
      properties:
        error:
          $ref: '#/components/schemas/Endpoint_Error_error'
      title: Endpoint Error
      type: object
    Auth Error:
      properties:
        error:
          description: |
            The type of authentication error returned.
            The following error may be received:

            | Error Type       | Explanation                              |
            |------------------|------------------------------------------|
            | invalid_token    | The access token is invalid or has expired |
          example: invalid_token
          type: string
        error_description:
          description: |
            A human friendly description of the error
          example: The access token is invalid or has expired
          type: string
      title: Auth Error
      type: object
    AddSubscriberRequestBody:
      example:
        ad_tracking: ebook
        custom_fields:
          apple: fuji
          pear: bosc
        last_followup_message_number_sent: 80
        name: John Doe
        update_existing: "true"
        ip_address: ip_address
        misc_notes: misc_notes
        email: email
        strict_custom_fields: "true"
        tags:
        - slow
        - fast
        - lightspeed
      properties:
        ad_tracking:
          description: The customer ad tracking field
          example: ebook
          maxLength: 20
          minLength: 1
          type: string
        custom_fields:
          additionalProperties:
            minLength: 1
            type: string
          description: "The custom fields specified on the subscriber.  Note that\
            \ the custom fields are required to already exist for the list. See [Custom\
            \ Fields](#tag/Custom-Fields) for details."
          example:
            apple: fuji
            pear: bosc
          type: object
        email:
          description: The subscriber's email address
          format: email
          maxLength: 50
          minLength: 1
          type: string
        ip_address:
          description: "The subscriber's IP address. This field is used to determine\
            \ the following Geo Location fields:  area_code, city, country, dma_code,\
            \ latitude, longitude, postal_code, and region. IP address can only be\
            \  specified when Subscribers are initially created. Internal, private,\
            \ or reserved IP addresses are  not acceptable."
          format: ipv4
          maxLength: 60
          minLength: 1
          type: string
        last_followup_message_number_sent:
          description: "The sequence number of the last followup message sent to the\
            \ subscriber.  This field determines the next followup message to be sent\
            \ to the Subscriber.  When set to 0 (default), the Subscriber should receive\
            \ the 1st (autoresponse) Followup message.  Set the value of this field\
            \ to 1001 if you do not want any Followups to be sent to this Subscriber."
          maximum: 1001
          minimum: 0
          type: integer
        misc_notes:
          description: Miscellaneous notes
          maxLength: 60
          minLength: 1
          type: string
        name:
          description: The subscriber's name
          example: John Doe
          maxLength: 60
          minLength: 1
          type: string
        strict_custom_fields:
          description: "If this parameter is present and set to `true`, then custom\
            \ field names are matched case sensitively.  Enabling this option also\
            \ causes the operation to fail if a custom field is included that is not\
            \ defined for the list."
          enum:
          - "true"
          - "false"
          type: string
        update_existing:
          description: "If this parameter is present and set to `true`, then if a\
            \ subscriber is already present on the list, the subscriber will be updated.\
            \  <br><br> **Note:** <br>\n- Only the fields defined in the  <a href='#tag/Subscribers/paths/~1accounts~1{accountId}~1lists~1{listId}~1subscribers~1{subscriberId}/patch'>patch</a>\
            \ endpoint will be updated. \n- Any tags in the request will be **appended**\
            \ to the existing Subscriber."
          enum:
          - "true"
          - "false"
          type: string
        tags:
          description: "A list of tags added to the subscriber.  This field is used\
            \ to apply a list of tags to a Subscriber. With Campaigns, you can trigger\
            \ a series of messages based on what Tags have been applied to your subscribers."
          example:
          - slow
          - fast
          - lightspeed
          items:
            type: string
          type: array
      required:
      - email
      type: object
    UpdateSubscriberRequestBody:
      example:
        ad_tracking: ebook
        custom_fields:
          apple: fuji
          pear: bosc
        last_followup_message_number_sent: 80
        name: John Doe
        misc_notes: Open House 2015
        email: email
        status: subscribed
        strict_custom_fields: "true"
        tags:
          add:
          - fast
          - lightspeed
          remove:
          - slow
      properties:
        ad_tracking:
          description: The customer ad tracking field
          example: ebook
          maxLength: 20
          minLength: 1
          type: string
        custom_fields:
          additionalProperties:
            minLength: 1
            type: string
          description: |-
            The custom fields specified on the subscriber.  Custom fields are represented as a sub-object where only the **values** can be modified. <br><br> **Note:** If updating custom field values, **all** fields must be included in the request. If all fields are not included, the omitted fields will be set to *null*. <br><br> In order to modify custom field values:
            - Retrieve the custom fields and values for the subscriber.
            - Add all fields and their values to the PATCH request.
            - Modify the value **only** for the fields you wish to update.
            - Submit the request containing all the custom fields and their respective values.
          example:
            apple: fuji
            pear: bosc
          type: object
        email:
          description: The subscriber's email address
          format: email
          maximum: 50
          type: string
        last_followup_message_number_sent:
          description: "The sequence number of the last followup message sent to the\
            \ subscriber.  This field determines the next followup message to be sent\
            \ to the Subscriber.  When set to 0, the Subscriber will receive the 1st\
            \ (autoresponse) Followup message.  Set the value of this field to 1001\
            \ if you do not want any Followups to be sent to this Subscriber."
          maximum: 1001
          minimum: 0
          type: integer
        misc_notes:
          description: Miscellaneous notes
          example: Open House 2015
          type: string
        name:
          description: The subscriber's name
          example: John Doe
          maxLength: 60
          minLength: 1
          type: string
        status:
          description: The subscriber's status.<br> **Note** you cannot set a subscriber's
            status to "unconfirmed".
          enum:
          - subscribed
          - unsubscribed
          type: string
        strict_custom_fields:
          description: "If this parameter is present and set to `true`, then custom\
            \ field names are matched case sensitively.  Enabling this option also\
            \ causes the operation to fail if a custom field is included that is not\
            \ defined for the list."
          enum:
          - "true"
          - "false"
          type: string
        tags:
          $ref: '#/components/schemas/UpdateSubscriberRequestBody_tags'
      type: object
    MoveSubscriberRequestBody:
      properties:
        enforce_custom_field_mapping:
          description: "If set to true, this will cause the move of a subscriber to\
            \ fail if the custom fields from the origin list do not match (case insensitively)\
            \ to the target list"
          example: true
          format: bool
          type: boolean
        last_followup_message_number_sent:
          description: "The sequence number of the last followup message sent to the\
            \ subscriber.  This field determines the next followup message to be sent\
            \ to the Subscriber.  When set to 0, the Subscriber will receive the 1st\
            \ (autoresponse) Followup message.  Set the value of this field to 1001\
            \ if you do not want any Followups to be sent to this Subscriber."
          maximum: 1001
          minimum: 0
          type: integer
        list_link:
          description: "The link to the destination [List](#tag/Lists/paths/~1accounts~1{accountId}~1lists~1{listId}/get)"
          example: https://api.aweber.com/1.0/accounts/123/lists/456
          format: uri
          type: string
        ws.op:
          description: The method name - expecting "move"
          enum:
          - move
          type: string
      required:
      - list_link
      - ws.op
      type: object
    FindSubscribers:
      example:
        entries:
        - country: United States
          last_followup_sent_at: 2015-12-17T14:06:26.861089-05:00
          subscribed_at: 2015-10-13T16:19:20-04:00
          city: Chalfont
          latitude: 37.751
          subscription_url: https://forms.aweber.com/form/16/123456789.htm
          list_name: Test List
          misc_notes: ebook
          resource_type_link: https://api.aweber.com/1.0/#subscriber
          verified_at: 2000-01-23T04:56:07.000+00:00
          last_followup_message_number_sent: 80
          id: 789
          email: email
          longitude: -97.822
          ad_tracking: ebook
          last_followup_sent_link: https://api.aweber.com/1.0/accounts/123/lists/456/campaigns/f12345678
          custom_fields:
            apple: fuji
            pear: bosc
          area_code: 555
          ip_address: 204.194.222.28
          unsubscribe_method: unsubscribe link
          is_verified: true
          tags:
          - slow
          - fast
          - lightspeed
          unsubscribed_at: 2017-10-13T10:41:43.300889-04:00
          dma_code: 504
          name: John Doe
          subscription_method: api
          postal_code: 99999-9999
          region: PA
          self_link: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers/789
          list_link: https://api.aweber.com/1.0/accounts/123/lists/456
          status: subscribed
        - country: United States
          last_followup_sent_at: 2015-12-17T14:06:26.861089-05:00
          subscribed_at: 2015-10-13T16:19:20-04:00
          city: Chalfont
          latitude: 37.751
          subscription_url: https://forms.aweber.com/form/16/123456789.htm
          list_name: Test List
          misc_notes: ebook
          resource_type_link: https://api.aweber.com/1.0/#subscriber
          verified_at: 2000-01-23T04:56:07.000+00:00
          last_followup_message_number_sent: 80
          id: 789
          email: email
          longitude: -97.822
          ad_tracking: ebook
          last_followup_sent_link: https://api.aweber.com/1.0/accounts/123/lists/456/campaigns/f12345678
          custom_fields:
            apple: fuji
            pear: bosc
          area_code: 555
          ip_address: 204.194.222.28
          unsubscribe_method: unsubscribe link
          is_verified: true
          tags:
          - slow
          - fast
          - lightspeed
          unsubscribed_at: 2017-10-13T10:41:43.300889-04:00
          dma_code: 504
          name: John Doe
          subscription_method: api
          postal_code: 99999-9999
          region: PA
          self_link: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers/789
          list_link: https://api.aweber.com/1.0/accounts/123/lists/456
          status: subscribed
        prev_collection_link: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers?ws.op=find&ws.start=1&ws.size=100
        total_size_link: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers?ws.op=find&ws.show=total_size
        start: 0
        next_collection_link: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers?ws.op=find&ws.start=1&ws.size=100
      properties:
        entries:
          description: The list of subscriber entries plus list information
          items:
            $ref: '#/components/schemas/SubscriberFind'
          type: array
        next_collection_link:
          description: A link to the next page of entries if more entries exist. This
            attribute is omitted from the collection if there are no more entries.
          example: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers?ws.op=find&ws.start=1&ws.size=100
          format: uri
          type: string
        prev_collection_link:
          description: A link to the previous page of entries if previous entries
            exist. This attribute is omitted if this is the first page.
          example: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers?ws.op=find&ws.start=1&ws.size=100
          format: uri
          type: string
        start:
          description: The starting offset for the page of entries to retrieve
          minimum: 0
          type: integer
        total_size_link:
          description: Link to the total number of entries
          example: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers?ws.op=find&ws.show=total_size
          format: uri
          type: string
      type: object
    SubscriberFind:
      example:
        country: United States
        last_followup_sent_at: 2015-12-17T14:06:26.861089-05:00
        subscribed_at: 2015-10-13T16:19:20-04:00
        city: Chalfont
        latitude: 37.751
        subscription_url: https://forms.aweber.com/form/16/123456789.htm
        list_name: Test List
        misc_notes: ebook
        resource_type_link: https://api.aweber.com/1.0/#subscriber
        verified_at: 2000-01-23T04:56:07.000+00:00
        last_followup_message_number_sent: 80
        id: 789
        email: email
        longitude: -97.822
        ad_tracking: ebook
        last_followup_sent_link: https://api.aweber.com/1.0/accounts/123/lists/456/campaigns/f12345678
        custom_fields:
          apple: fuji
          pear: bosc
        area_code: 555
        ip_address: 204.194.222.28
        unsubscribe_method: unsubscribe link
        is_verified: true
        tags:
        - slow
        - fast
        - lightspeed
        unsubscribed_at: 2017-10-13T10:41:43.300889-04:00
        dma_code: 504
        name: John Doe
        subscription_method: api
        postal_code: 99999-9999
        region: PA
        self_link: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers/789
        list_link: https://api.aweber.com/1.0/accounts/123/lists/456
        status: subscribed
      properties:
        ad_tracking:
          description: The customer ad tracking field
          example: ebook
          maxLength: 20
          minLength: 1
          type: string
        area_code:
          description: The subscriber's area code
          example: 555
          maximum: 999
          minimum: 0
          type: integer
        city:
          description: The subscriber's address city
          example: Chalfont
          maxLength: 100
          minLength: 1
          type: string
        country:
          description: The subscriber's address country
          example: United States
          maxLength: 100
          minLength: 1
          type: string
        custom_fields:
          additionalProperties:
            minimum: 1
            type: string
          description: The custom fields specified on the subscriber
          example:
            apple: fuji
            pear: bosc
          type: object
        dma_code:
          description: The subscriber's designated market area code (usa and canada
            only)
          example: 504
          maximum: 881
          minimum: 0
          type: integer
        email:
          description: The subscriber's email address
          format: email
          maxLength: 50
          minLength: 1
          type: string
        id:
          description: The lead ID
          example: 789
          minimum: 0
          type: integer
        ip_address:
          description: The subscriber's IP address
          example: 204.194.222.28
          format: ipv4
          maxLength: 60
          minLength: 1
          type: string
        is_verified:
          description: A value indication if the subscriber's email address confirmed
          type: boolean
        last_followup_message_number_sent:
          description: The sequence number of the last followup message sent to the
            subscriber
          maximum: 1001
          minimum: 0
          type: integer
        last_followup_sent_at:
          description: The last followup message sent to the subscriber
          example: 2015-12-17T14:06:26.861089-05:00
          format: date-time
          type: string
        last_followup_sent_link:
          description: "A link to the [Last Follow Up Message](#tag/Campaigns/paths/~1accounts~1{accountId}~1lists~1{listId}~1campaigns~1{campaignType}{campaignId}/get)\
            \ the subscriber was sent"
          example: https://api.aweber.com/1.0/accounts/123/lists/456/campaigns/f12345678
          format: uri
          type: string
        latitude:
          description: The subscriber's geographical latitude
          example: 37.751
          format: double
          maximum: 90.0
          minimum: -90.0
          type: number
        list_link:
          description: "A link to the [List](#tag/Lists/paths/~1accounts~1{accountId}~1lists~1{listId}/get)\
            \ the subscriber is on"
          example: https://api.aweber.com/1.0/accounts/123/lists/456
          format: uri
          type: string
        list_name:
          description: List name
          example: Test List
          maxLength: 32
          minLength: 1
          type: string
        longitude:
          description: The subscriber's geographical longitude
          example: -97.822
          format: double
          maximum: 180.0
          minimum: -180.0
          type: number
        misc_notes:
          description: Miscellaneous notes
          example: ebook
          maxLength: 60
          type: string
        name:
          description: The subscriber's name
          example: John Doe
          maxLength: 60
          minLength: 1
          type: string
        postal_code:
          description: The subscriber's address postal code
          example: 99999-9999
          maxLength: 100
          minLength: 1
          type: string
        region:
          description: The subscriber's address stage or region abbreviation
          example: PA
          maxLength: 100
          minLength: 1
          type: string
        resource_type_link:
          description: A link that identifies the type of resource that this collection
            represents
          example: https://api.aweber.com/1.0/#subscriber
          format: uri
          type: string
        self_link:
          description: The link to this resource
          example: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers/789
          format: uri
          type: string
        status:
          description: The subscriber's status
          enum:
          - subscribed
          - unsubscribed
          - unconfirmed
          type: string
        subscribed_at:
          description: The timestamp for when the subscriber subscribed
          example: 2015-10-13T16:19:20-04:00
          format: date-time
          type: string
        subscription_method:
          description: The method by which the subscriber was subscribed
          enum:
          - api
          - email
          - import
          - webform
          type: string
        subscription_url:
          description: The webform url from which the subscriber subscribed from
          example: https://forms.aweber.com/form/16/123456789.htm
          format: uri
          maximum: 100
          type: string
        tags:
          description: A list of tags added to the subscriber
          example:
          - slow
          - fast
          - lightspeed
          items:
            minLength: 1
            type: string
          type: array
        unsubscribe_method:
          description: The method that describes how the subscriber unsubscribed
          enum:
          - unsubscribe link
          - customer cp
          - undeliverable
          - "api: unsubscribe"
          - "api: move"
          type: string
        unsubscribed_at:
          description: The timestamp for when the subscriber unsubscribed
          example: 2017-10-13T10:41:43.300889-04:00
          format: date-time
          type: string
        verified_at:
          description: The timestamp for when the subscriber confirmed their email
            address
          format: date-time
          type: string
      type: object
    FindSubscribersAccount:
      example:
        entries:
        - country: United States
          last_followup_sent_at: 2015-12-17T14:06:26.861089-05:00
          subscribed_at: 2015-10-13T16:19:20-04:00
          city: Chalfont
          latitude: 37.751
          subscription_url: https://forms.aweber.com/form/16/123456789.htm
          list_name: Test List
          misc_notes: ebook
          resource_type_link: https://api.aweber.com/1.0/#subscriber
          verified_at: 2000-01-23T04:56:07.000+00:00
          last_followup_message_number_sent: 80
          id: 789
          email: email
          longitude: -97.822
          ad_tracking: ebook
          last_followup_sent_link: https://api.aweber.com/1.0/accounts/123/lists/456/campaigns/f12345678
          custom_fields:
            apple: fuji
            pear: bosc
          area_code: 555
          ip_address: 204.194.222.28
          unsubscribe_method: unsubscribe link
          is_verified: true
          tags:
          - slow
          - fast
          - lightspeed
          unsubscribed_at: 2017-10-13T10:41:43.300889-04:00
          dma_code: 504
          name: John Doe
          subscription_method: api
          postal_code: 99999-9999
          region: PA
          self_link: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers/789
          list_link: https://api.aweber.com/1.0/accounts/123/lists/456
          status: subscribed
        - country: United States
          last_followup_sent_at: 2015-12-17T14:06:26.861089-05:00
          subscribed_at: 2015-10-13T16:19:20-04:00
          city: Chalfont
          latitude: 37.751
          subscription_url: https://forms.aweber.com/form/16/123456789.htm
          list_name: Test List
          misc_notes: ebook
          resource_type_link: https://api.aweber.com/1.0/#subscriber
          verified_at: 2000-01-23T04:56:07.000+00:00
          last_followup_message_number_sent: 80
          id: 789
          email: email
          longitude: -97.822
          ad_tracking: ebook
          last_followup_sent_link: https://api.aweber.com/1.0/accounts/123/lists/456/campaigns/f12345678
          custom_fields:
            apple: fuji
            pear: bosc
          area_code: 555
          ip_address: 204.194.222.28
          unsubscribe_method: unsubscribe link
          is_verified: true
          tags:
          - slow
          - fast
          - lightspeed
          unsubscribed_at: 2017-10-13T10:41:43.300889-04:00
          dma_code: 504
          name: John Doe
          subscription_method: api
          postal_code: 99999-9999
          region: PA
          self_link: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers/789
          list_link: https://api.aweber.com/1.0/accounts/123/lists/456
          status: subscribed
        prev_collection_link: https://api.aweber.com/1.0/accounts/123/lists/456/campaigns/b789/messages?ws.start=1&ws.size=100
        resource_type_link: https://api.aweber.com/1.0/#subscribers-page-resource
        total_size_link: https://api.aweber.com/1.0/accounts/123?ws.op=findSubscribers&ws.show=total_size
        start: 0
        self_link: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers?ws.start=0&ws.size=100&account_id=123&list_id=456
        next_collection_link: https://api.aweber.com/1.0/accounts/123/lists/456/campaigns/b789/messages?ws.start=1&ws.size=100
      properties:
        entries:
          description: The list of subscriber entries plus list information
          items:
            $ref: '#/components/schemas/SubscriberFind'
          type: array
        next_collection_link:
          description: A link to the next page of entries if more entries exist. This
            attribute is omitted from the collection if there are no more entries.
          example: https://api.aweber.com/1.0/accounts/123/lists/456/campaigns/b789/messages?ws.start=1&ws.size=100
          format: uri
          type: string
        prev_collection_link:
          description: A link to the previous page of entries if previous entries
            exist. This attribute is omitted if this is the first page.
          example: https://api.aweber.com/1.0/accounts/123/lists/456/campaigns/b789/messages?ws.start=1&ws.size=100
          format: uri
          type: string
        resource_type_link:
          description: A link that identifies the type of resource that this collection
            represents
          example: https://api.aweber.com/1.0/#subscribers-page-resource
          format: uri
          type: string
        self_link:
          description: A link to the current page of entries.
          example: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers?ws.start=0&ws.size=100&account_id=123&list_id=456
          format: uri
          type: string
        start:
          description: The starting offset for the page of entries to retrieve
          minimum: 0
          type: integer
        total_size_link:
          description: Link to the total number of entries
          example: https://api.aweber.com/1.0/accounts/123?ws.op=findSubscribers&ws.show=total_size
          format: uri
          type: string
      type: object
    SubscriberGetActivity:
      example:
        entries:
          event_time: 2015-07-31 11:36:34-04:00
          http_etag: abd5e0fcbab9073cf861271845859008a7e1c750-ca5feee2b7fbb6febfca8af5541541ea960aaedb
          id: 2701
          resource_type_link: https://api.aweber.com/1.0/#subscriber_activity
          self_link: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers/789/subscribed
          subscriber_link: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers/789
          type: subscribed
        total_size_link: total_size_link
        prev_collection_link: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers/64787088?ws.op=getActivity&ws.start=1&ws.size=1"
        start: 0
        next_collection_link: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers/64787088?ws.op=getActivity&ws.start=3&ws.size=1
      properties:
        entries:
          description: "The list of activity entries.  The contents of the entry varies,\
            \ but will always have the following fields listed"
          example:
            event_time: 2015-07-31 11:36:34-04:00
            http_etag: abd5e0fcbab9073cf861271845859008a7e1c750-ca5feee2b7fbb6febfca8af5541541ea960aaedb
            id: 2701
            resource_type_link: https://api.aweber.com/1.0/#subscriber_activity
            self_link: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers/789/subscribed
            subscriber_link: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers/789
            type: subscribed
          items:
            $ref: '#/components/schemas/Activity'
          type: array
        start:
          description: The starting offset for the page of entries to retrieve
          minimum: 0
          type: integer
        total_size_link:
          description: A link to check the total number of entries found for this
            resource
          type: string
        next_collection_link:
          description: A link to the next page of entries if more entries exist. This
            attribute is omitted from the collection if there are no more entries.
          example: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers/64787088?ws.op=getActivity&ws.start=3&ws.size=1
          format: uri
          type: string
        prev_collection_link:
          description: A link to the previous page of entries if previous entries
            exist. This attribute is omitted if this is the first page.
          example: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers/64787088?ws.op=getActivity&ws.start=1&ws.size=1"
          format: uri
          type: string
      type: object
    Activity:
      properties:
        event_time:
          description: The timestamp of when the event occurred
          type: string
        id:
          description: Identifier for this subscriber activity.  This is set to the
            type if no reasonable identifier exists.
          type: integer
        resource_type_link:
          description: The link to the event type
          format: uri
          type: string
        self_link:
          description: The link to the event resource (may be null)
          format: uri
          nullable: true
          type: string
        subscriber_link:
          description: "The link to the [Subscriber](#tag/Subscribers/paths/~1accounts~1{accountId}~1lists~1{listId}~1subscribers~1{subscriberId}/get)\
            \ resource"
          format: uri
          type: string
        type:
          description: The type of activity
          enum:
          - click
          - link
          - open
          - sent_message
          - subscribed
          - tracked_event
          - verified
          type: string
      type: object
    Purchase:
      additionalProperties: false
      example:
        ad_tracking: ebook
        custom_fields:
          apple: fuji
          pear: bosc
        ip_address: 204.194.222.28
        misc_notes: ebook
        product_name: product_name
        url: url
        tags:
        - slow
        - fast
        - lightspeed
        vendor: vendor
        name: John Doe
        currency: currency
        value: 0.8008281904610115
        event_time: 2015-07-31T11:36:34-04:00
        event_note: event_note
        email: email
      properties:
        event_time:
          description: The timestamp of when the event occurred
          example: 2015-07-31T11:36:34-04:00
          type: string
        currency:
          description: "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html)."
          type: string
        event_note:
          description: A custom note associated with this specific tracked event
          type: string
        product_name:
          description: A custom description for the page or event
          type: string
        value:
          description: The monetary value associated with this tracked event.
          type: number
        vendor:
          description: The sales tracking url profile for the web page
          type: string
        url:
          description: The URL for the tracked event
          type: string
        ad_tracking:
          description: The customer ad tracking field
          example: ebook
          maxLength: 20
          minLength: 1
          type: string
        custom_fields:
          additionalProperties:
            minimum: 1
            type: string
          description: The custom fields specified on the subscriber
          example:
            apple: fuji
            pear: bosc
          type: object
        email:
          description: The subscriber's email address
          format: email
          maxLength: 50
          minLength: 1
          type: string
        ip_address:
          description: The subscriber's IP address. This must be a public IP address.
          example: 204.194.222.28
          format: ipv4
          maxLength: 60
          minLength: 1
          type: string
        misc_notes:
          description: Miscellaneous notes
          example: ebook
          maxLength: 60
          type: string
        name:
          description: The subscriber's name
          example: John Doe
          maxLength: 60
          minLength: 1
          type: string
        tags:
          description: A list of tags added to the subscriber
          example:
          - slow
          - fast
          - lightspeed
          items:
            minLength: 1
            type: string
          type: array
      required:
      - currency
      - email
      - event_note
      - event_time
      - ip_address
      - product_name
      - url
      - value
      - vendor
      type: object
    _accounts__accountId__lists__listId__subscribers_get_400_response_error:
      description: |
        An error object.
        One of the following errors may be received:

        | Error Type                           | Explanation                              |
        |--------------------------------------|------------------------------------------|
        | WebServiceError                      | `ws.start`, `ws.size`, or `sort_order` values are invalid |
        | MissingOAuthParametersError          | An OAuth parameter is missing in the request |
        | UnsupportedOAuthSignatureMethodError | The provided OAuth 1 signature method is unsupported. Only HMAC-SHA1 is supported. |
        | UnsupportedOAuthVersionError         | The provided OAuth 1 version is unsupported. |
      example:
        documentation_url: https://api.aweber.com#badrequest
        message: Maximum for "ws.size" parameter is 100.
        type: WebServiceError
        status: 400
      properties:
        documentation_url:
          description: A link to the documentation that describes the error
          example: https://api.aweber.com#badrequest
          type: string
        message:
          description: A human friendly description of the error
          example: Maximum for "ws.size" parameter is 100.
          type: string
        status:
          description: The HTTP status code
          example: 400
          type: integer
        type:
          description: The API error type
          example: WebServiceError
          type: string
      type: object
    _accounts__accountId__lists__listId__subscribers_get_400_response:
      example:
        error:
          documentation_url: https://api.aweber.com#badrequest
          message: Maximum for "ws.size" parameter is 100.
          type: WebServiceError
          status: 400
      properties:
        error:
          $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_400_response_error'
      type: object
    _accounts__accountId__lists__listId__subscribers_get_401_response:
      oneOf:
      - $ref: '#/components/schemas/Endpoint Error'
      - $ref: '#/components/schemas/Auth Error'
    _accounts__accountId__lists__listId__subscribers_get_403_response_error:
      description: |
        An error object.
        The following error may be received:

        | Error Type           | Explanation                              |
        |----------------------|------------------------------------------|
        | ForbiddenError       | Rate limit may be reached or account may be suspended |

        Please see the message body for more details.
      example:
        documentation_url: https://api.aweber.com#forbidden
        message: Rate Limit Error
        type: ForbiddenError
        status: 5
      properties:
        documentation_url:
          description: A link to the documentation that describes the error
          example: https://api.aweber.com#forbidden
          type: string
        message:
          description: A human friendly description of the error
          example: Rate Limit Error
          type: string
        status:
          description: The HTTP status code
          enum:
          - 403
          type: integer
        type:
          description: The API error type
          enum:
          - ForbiddenError
          type: string
      type: object
    _accounts__accountId__lists__listId__subscribers_get_403_response:
      example:
        error:
          documentation_url: https://api.aweber.com#forbidden
          message: Rate Limit Error
          type: ForbiddenError
          status: 5
      properties:
        error:
          $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_403_response_error'
      type: object
    _accounts__accountId__lists__listId__subscribers_get_404_response_error:
      description: |
        An error object.
        The following error may be received:

        | Error Type           | Explanation                              |
        |----------------------|------------------------------------------|
        | NotFoundError        | The requested resource could not be found |

        Please see the message body for more details.
      example:
        documentation_url: https://api.aweber.com#notfound
        message: "Object: None, name: ''"
        type: NotFoundError
        status: 5
      properties:
        documentation_url:
          description: A link to the documentation that describes the error
          example: https://api.aweber.com#notfound
          type: string
        message:
          description: A human friendly description of the error
          example: "Object: None, name: ''"
          type: string
        status:
          description: The HTTP status code
          enum:
          - 404
          type: integer
        type:
          description: The API error type
          enum:
          - NotFoundError
          type: string
      type: object
    _accounts__accountId__lists__listId__subscribers_get_404_response:
      example:
        error:
          documentation_url: https://api.aweber.com#notfound
          message: "Object: None, name: ''"
          type: NotFoundError
          status: 5
      properties:
        error:
          $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_404_response_error'
      type: object
    _accounts__accountId__lists__listId__subscribers_get_410_response_error:
      description: |
        An error object.
        The following error may be received:

        | Error Type           | Explanation                              |
        |----------------------|------------------------------------------|
        | BlockedError         | This Request has been blocked            |

        Please see the message body for more details.
      example:
        documentation_url: https://api.aweber.com/#blocked
        message: Blocked Error
        type: BlockedError
        status: 2
      properties:
        documentation_url:
          description: A link to the documentation that describes the error
          example: https://api.aweber.com/#blocked
          type: string
        message:
          description: A human friendly description of the error
          example: Blocked Error
          type: string
        status:
          description: The HTTP status code
          enum:
          - 410
          type: integer
        type:
          description: The API error type
          enum:
          - BlockedError
          type: string
      type: object
    _accounts__accountId__lists__listId__subscribers_get_410_response:
      example:
        error:
          documentation_url: https://api.aweber.com/#blocked
          message: Blocked Error
          type: BlockedError
          status: 2
      properties:
        error:
          $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_410_response_error'
      type: object
    _accounts__accountId__lists__listId__subscribers_get_500_response_error:
      description: |
        An error object.
        The following error may be received:

        | Error Type           | Explanation                              |
        |----------------------|------------------------------------------|
        | InternalServerError    | The request failed due to an internal error |

        Please see the message body for more details.
      example:
        documentation_url: https://api.aweber.com#internalerror
        message: Something went wrong.
        type: InternalServerError
        status: 7
      properties:
        documentation_url:
          description: A link to the documentation that describes the error
          example: https://api.aweber.com#internalerror
          type: string
        message:
          description: A human friendly description of the error
          example: Something went wrong.
          type: string
        status:
          description: The HTTP status code
          enum:
          - 500
          type: integer
        type:
          description: The API error type
          enum:
          - InternalServerError
          type: string
      type: object
    _accounts__accountId__lists__listId__subscribers_get_500_response:
      example:
        error:
          documentation_url: https://api.aweber.com#internalerror
          message: Something went wrong.
          type: InternalServerError
          status: 7
      properties:
        error:
          $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_500_response_error'
      type: object
    _accounts__accountId__lists__listId__subscribers_get_503_response_error:
      description: |
        An error object.
        The following error may be received:

        | Error Type           | Explanation                              |
        |----------------------|------------------------------------------|
        | ServiceUnavailableError | The server is unavailable |

        Please see the message body for more details.
      example:
        documentation_url: https://api.aweber.com#serviceunavailable
        message: Failed to communicate with endpoint
        type: ServiceUnavailableError
        status: 9
      properties:
        documentation_url:
          description: A link to the documentation that describes the error
          example: https://api.aweber.com#serviceunavailable
          type: string
        message:
          description: A human friendly description of the error
          example: Failed to communicate with endpoint
          type: string
        status:
          description: The HTTP status code
          enum:
          - 503
          type: integer
        type:
          description: The API error type
          enum:
          - ServiceUnavailableError
          type: string
      type: object
    _accounts__accountId__lists__listId__subscribers_get_503_response:
      example:
        error:
          documentation_url: https://api.aweber.com#serviceunavailable
          message: Failed to communicate with endpoint
          type: ServiceUnavailableError
          status: 9
      properties:
        error:
          $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_get_503_response_error'
      type: object
    _accounts__accountId__lists__listId__subscribers_post_400_response_error:
      description: |
        An error object.
        One of the following errors may be received:

        | Error Type                           | Explanation                              |
        |--------------------------------------|------------------------------------------|
        | WebServiceError                      | An issue with the email address entered. Issue could be the that the subscriber is already subscribed, has an invalid email, or has a blocked email. |
        | MissingArgumentError                 | No email address in the request body. |
        | BadRequestError                      | An issue with one of the fields in the request body or no Content-Type header specified. |
        | InvalidTypeError                     | A field in the request body has an invalid type. |
        | MissingOAuthParametersError          | An OAuth parameter is missing in the request. |
        | UnsupportedOAuthSignatureMethodError | The provided OAuth 1 signature method is unsupported. Only HMAC-SHA1 is supported. |
        | UnsupportedOAuthVersionError         | The provided OAuth 1 version is unsupported. |

        Please see the message body for more details.
      example:
        documentation_url: https://api.aweber.com#badrequest
        message: Missing required argument(s)
        type: BadRequestError
        status: 400
      properties:
        documentation_url:
          description: A link to the documentation that describes the error
          example: https://api.aweber.com#badrequest
          type: string
        message:
          description: A human friendly description of the error
          example: Missing required argument(s)
          type: string
        status:
          description: The HTTP status code
          example: 400
          type: integer
        type:
          description: The API error type
          example: BadRequestError
          type: string
      type: object
    _accounts__accountId__lists__listId__subscribers_post_400_response:
      example:
        error:
          documentation_url: https://api.aweber.com#badrequest
          message: Missing required argument(s)
          type: BadRequestError
          status: 400
      properties:
        error:
          $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_post_400_response_error'
      type: object
    _accounts__accountId__lists__listId__subscribers_post_403_response_error:
      description: |
        An error object.
        The following error may be received:

        | Error Type           | Explanation                              |
        |----------------------|------------------------------------------|
        | ForbiddenError       | Rate limit may be reached, account may be suspended, subscriber limit has been reached, account may be on hold, or email address cannot be accepted at this time |

        Please see the message body for more details.
      example:
        documentation_url: https://api.aweber.com#forbidden
        message: Rate Limit Error
        type: ForbiddenError
        status: 0
      properties:
        documentation_url:
          description: A link to the documentation that describes the error
          example: https://api.aweber.com#forbidden
          type: string
        message:
          description: A human friendly description of the error
          example: Rate Limit Error
          type: string
        status:
          description: The HTTP status code
          enum:
          - 403
          type: integer
        type:
          description: The API error type
          enum:
          - ForbiddenError
          type: string
      type: object
    _accounts__accountId__lists__listId__subscribers_post_403_response:
      example:
        error:
          documentation_url: https://api.aweber.com#forbidden
          message: Rate Limit Error
          type: ForbiddenError
          status: 0
      properties:
        error:
          $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_post_403_response_error'
      type: object
    _accounts__accountId__lists__listId__subscribers_post_404_response_error:
      description: |
        An error object.
        The following error may be received:

        | Error Type           | Explanation                               |
        |----------------------|-------------------------------------------|
        | NotFoundError        | The requested resource could not be found |

        Please see the message body for more details.
      example:
        documentation_url: https://api.aweber.com#notfound
        message: List with given id not found
        type: NotFoundError
        status: 6
      properties:
        documentation_url:
          description: A link to the documentation that describes the error
          example: https://api.aweber.com#notfound
          type: string
        message:
          description: A human friendly description of the error
          example: List with given id not found
          type: string
        status:
          description: The HTTP status code
          enum:
          - 404
          type: integer
        type:
          description: The API error type
          enum:
          - NotFoundError
          type: string
      type: object
    _accounts__accountId__lists__listId__subscribers_post_404_response:
      example:
        error:
          documentation_url: https://api.aweber.com#notfound
          message: List with given id not found
          type: NotFoundError
          status: 6
      properties:
        error:
          $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_post_404_response_error'
      type: object
    _accounts__accountId__lists__listId__subscribers_post_415_response_error:
      description: |
        An error object.

        The following error may be received:

        | Error Type         | Explanation                              |
        |--------------------|------------------------------------------|
        | InvalidContentType | An invalid content type was provided. Valid types are application/x-www-form-urlencoded and application/json |

        Please see the message body for more details.
      example:
        documentation_url: https://api.aweber.com#invalidcontent
        message: Content Type must be application/json or application/x-www-form-urlencoded
        type: InvalidContentType
        status: 1
      properties:
        documentation_url:
          description: A link to the documentation that describes the error
          example: https://api.aweber.com#invalidcontent
          type: string
        message:
          description: A human friendly description of the error
          example: Content Type must be application/json or application/x-www-form-urlencoded
          type: string
        status:
          description: The HTTP status code
          enum:
          - 415
          type: integer
        type:
          description: The API error type
          enum:
          - InvalidContentType
          type: string
      type: object
    _accounts__accountId__lists__listId__subscribers_post_415_response:
      example:
        error:
          documentation_url: https://api.aweber.com#invalidcontent
          message: Content Type must be application/json or application/x-www-form-urlencoded
          type: InvalidContentType
          status: 1
      properties:
        error:
          $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_post_415_response_error'
      type: object
    _accounts__accountId__lists__listId__subscribers_delete_400_response_error:
      description: |
        An error object.
        One of the following errors may be received:

        | Error Type      | Explanation                              |
        |-----------------|------------------------------------------|
        | BadRequestError | Possible reasons include: an OAuth parameter is missing in the request or the OAuth signature method or version is unsupported |

        Please see the message body for more details.
      example:
        documentation_url: https://api.aweber.com#badrequest
        message: Required parameter 'oauth_nonce' missing
        type: BadRequestError
        status: 0
      properties:
        documentation_url:
          description: A link to the documentation that describes the error
          example: https://api.aweber.com#badrequest
          type: string
        message:
          description: A human friendly description of the error
          example: Required parameter 'oauth_nonce' missing
          type: string
        status:
          description: The HTTP status code
          enum:
          - 400
          type: integer
        type:
          description: The API error type
          enum:
          - BadRequestError
          type: string
      type: object
    _accounts__accountId__lists__listId__subscribers_delete_400_response:
      example:
        error:
          documentation_url: https://api.aweber.com#badrequest
          message: Required parameter 'oauth_nonce' missing
          type: BadRequestError
          status: 0
      properties:
        error:
          $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_delete_400_response_error'
      type: object
    _accounts__accountId__lists__listId__subscribers_delete_404_response_error:
      description: |
        An error object.
        The following error may be received:

        | Error Type           | Explanation                                          |
        |----------------------|------------------------------------------------------|
        | NotFoundError        | The requested subscriber resource could not be found |

        Please see the message body for more details.
      example:
        documentation_url: https://api.aweber.com#notfound
        message: "Object: None, name: 'subscribers'"
        type: NotFoundError
        status: 6
      properties:
        documentation_url:
          description: A link to the documentation that describes the error
          example: https://api.aweber.com#notfound
          type: string
        message:
          description: A human friendly description of the error
          example: "Object: None, name: 'subscribers'"
          type: string
        status:
          description: The HTTP status code
          enum:
          - 404
          type: integer
        type:
          description: The API error type
          enum:
          - NotFoundError
          type: string
      type: object
    _accounts__accountId__lists__listId__subscribers_delete_404_response:
      example:
        error:
          documentation_url: https://api.aweber.com#notfound
          message: "Object: None, name: 'subscribers'"
          type: NotFoundError
          status: 6
      properties:
        error:
          $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_delete_404_response_error'
      type: object
    _accounts__accountId__lists__listId__subscribers_patch_400_response_error:
      description: |
        An error object.
        One of the following errors may be received:

        | Error Type                           | Explanation                              |
        |--------------------------------------|------------------------------------------|
        | BadRequestError                      | A field in the request body is invalid or no Content-Type header specified. |
        | WebServiceError                      | Email address is already subscribed |
        | MissingOAuthParametersError          | An OAuth parameter is missing in the request |
        | UnsupportedOAuthSignatureMethodError | The provided OAuth 1 signature method is unsupported. Only HMAC-SHA1 is supported. |
        | UnsupportedOAuthVersionError         | The provided OAuth 1 version is unsupported. |

        Please see the message body for more details.
      example:
        documentation_url: https://api.aweber.com#badrequest
        message: Missing required argument(s)
        type: BadRequestError
        status: 400
      properties:
        documentation_url:
          description: A link to the documentation that describes the error
          example: https://api.aweber.com#badrequest
          type: string
        message:
          description: A human friendly description of the error
          example: Missing required argument(s)
          type: string
        status:
          description: The HTTP status code
          example: 400
          type: integer
        type:
          description: The API error type
          example: BadRequestError
          type: string
      type: object
    _accounts__accountId__lists__listId__subscribers_patch_400_response:
      example:
        error:
          documentation_url: https://api.aweber.com#badrequest
          message: Missing required argument(s)
          type: BadRequestError
          status: 400
      properties:
        error:
          $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_patch_400_response_error'
      type: object
    _accounts__accountId__lists__listId__subscribers__subscriberId__get_200_response:
      allOf:
      - $ref: '#/components/schemas/Subscriber'
      - properties:
          uuid:
            description: The UUID (universally unique identifier) for the subscriber
            example: 123e4567-e89b-12d3-a456-426655440000
            type: string
        type: object
      example:
        country: United States
        last_followup_sent_at: 2015-12-17T14:06:26.861089-05:00
        subscribed_at: 2015-10-13T16:19:20-04:00
        city: Chalfont
        latitude: 37.751
        subscription_url: https://forms.aweber.com/form/16/123456789.htm
        misc_notes: ebook
        uuid: 123e4567-e89b-12d3-a456-426655440000
        resource_type_link: https://openapi-generator.tech
        verified_at: 2000-01-23T04:56:07.000+00:00
        last_followup_message_number_sent: 80
        id: 789
        email: email
        longitude: -97.822
        ad_tracking: ebook
        last_followup_sent_link: https://api.aweber.com/1.0/accounts/123/lists/456/campaigns/f12345678
        custom_fields:
          apple: fuji
          pear: bosc
        area_code: 555
        ip_address: 204.194.222.28
        unsubscribe_method: unsubscribe link
        is_verified: true
        tags:
        - slow
        - fast
        - lightspeed
        unsubscribed_at: 2017-10-13T10:41:43.300889-04:00
        dma_code: 504
        name: John Doe
        subscription_method: api
        postal_code: 99999-9999
        region: PA
        self_link: https://api.aweber.com/1.0/accounts/123/lists/456/subscribers/789
        status: subscribed
    _accounts__accountId__lists__listId__subscribers__subscriberId__get_400_response_error:
      description: |
        An error object.
        One of the following errors may be received:

        | Error Type                           | Explanation                              |
        |--------------------------------------|------------------------------------------|
        | BadRequestError                      | There was an error decoding query parameters |
        | MissingOAuthParametersError          | An OAuth parameter is missing in the request |
        | UnsupportedOAuthSignatureMethodError | The provided OAuth 1 signature method is unsupported. Only HMAC-SHA1 is supported. |
        | UnsupportedOAuthVersionError         | The provided OAuth 1 version is unsupported. |

        Please see the message body for more details.
      example:
        documentation_url: https://api.aweber.com#badrequest
        message: "Missing oauth parameters: oauth_consumer_key"
        type: MissingOAuthParametersError
        status: 6
      properties:
        documentation_url:
          description: A link to the documentation that describes the error
          example: https://api.aweber.com#badrequest
          type: string
        message:
          description: A human friendly description of the error
          example: "Missing oauth parameters: oauth_consumer_key"
          type: string
        status:
          description: The HTTP status code
          enum:
          - 400
          type: integer
        type:
          description: The API error type
          enum:
          - MissingOAuthParametersError
          type: string
      type: object
    _accounts__accountId__lists__listId__subscribers__subscriberId__get_400_response:
      example:
        error:
          documentation_url: https://api.aweber.com#badrequest
          message: "Missing oauth parameters: oauth_consumer_key"
          type: MissingOAuthParametersError
          status: 6
      properties:
        error:
          $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers__subscriberId__get_400_response_error'
      type: object
    _accounts__accountId__lists__listId__subscribers__subscriberId__post_400_response_error:
      description: |
        An error object.
        One of the following errors may be received:

        | Error Type                           | Explanation                              |
        |--------------------------------------|------------------------------------------|
        | BadRequestError                      | An issue with one of the fields in the request body or no Content-Type header is specified. |
        | MissingOAuthParametersError          | An OAuth parameter is missing in the request. |
        | UnsupportedOAuthSignatureMethodError | The provided OAuth 1 signature method is unsupported. Only HMAC-SHA1 is supported. |
        | UnsupportedOAuthVersionError         | The provided OAuth 1 version is unsupported. |

        Please see the message body for more details.
      example:
        documentation_url: https://api.aweber.com#badrequest
        message: Missing required argument(s)
        type: BadRequestError
        status: 400
      properties:
        documentation_url:
          description: A link to the documentation that describes the error
          example: https://api.aweber.com#badrequest
          type: string
        message:
          description: A human friendly description of the error
          example: Missing required argument(s)
          type: string
        status:
          description: The HTTP status code
          example: 400
          type: integer
        type:
          description: The API error type
          example: BadRequestError
          type: string
      type: object
    _accounts__accountId__lists__listId__subscribers__subscriberId__post_400_response:
      example:
        error:
          documentation_url: https://api.aweber.com#badrequest
          message: Missing required argument(s)
          type: BadRequestError
          status: 400
      properties:
        error:
          $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers__subscriberId__post_400_response_error'
      type: object
    _accounts__accountId__lists__listId__subscribers__subscriberId__post_405_response_error:
      description: |
        An error object.
        One of the following errors may be received:

        | Error Type      | Explanation |
        |-----------------|-------------|
        | WebServiceError | The move could not be completed. This could be due to the email not being accepted on the new list, custom fields not matching between lists, trying to move an unsubscribed subscriber, or trying to move a subscriber to a list they're already on. |
      example:
        documentation_url: https://api.aweber.com#methodnotallowed
        message: Subscriber already belongs to this list.
        type: WebServiceError
        status: 405
      properties:
        documentation_url:
          description: A link to the documentation that describes the error
          example: https://api.aweber.com#methodnotallowed
          type: string
        message:
          description: A human friendly description of the error
          example: Subscriber already belongs to this list.
          type: string
        status:
          description: The HTTP status code
          example: 405
          type: integer
        type:
          description: The API error type
          example: WebServiceError
          type: string
      type: object
    _accounts__accountId__lists__listId__subscribers__subscriberId__post_405_response:
      example:
        error:
          documentation_url: https://api.aweber.com#methodnotallowed
          message: Subscriber already belongs to this list.
          type: WebServiceError
          status: 405
      properties:
        error:
          $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers__subscriberId__post_405_response_error'
      type: object
    _accounts__accountId__lists__listId__subscribers_ws_op_find_get_400_response_error:
      description: |
        An error object.
        One of the following errors may be received:

        | Error Type                           | Explanation                              |
        |--------------------------------------|------------------------------------------|
        | BadRequestError                      | The search parameters or were invalid or the OAuth query string could not be parsed|
        | WebServiceError                      | `ws.start`, `ws.size`, `sort_order` or `sort_key` values are invalid |
        | MissingOAuthParametersError          | An OAuth parameter is missing in the request |
        | UnsupportedOAuthSignatureMethodError | The provided OAuth 1 signature method is unsupported. Only HMAC-SHA1 is supported. |
        | UnsupportedOAuthVersionError         | The provided OAuth 1 version is unsupported. |

        Please see the message body for more details.
      example:
        documentation_url: https://api.aweber.com#badrequest
        message: "Missing oauth parameters: oauth_consumer_key"
        type: BadRequestError
        status: 1
      properties:
        documentation_url:
          description: A link to the documentation that describes the error
          example: https://api.aweber.com#badrequest
          type: string
        message:
          description: A human friendly description of the error
          example: "Missing oauth parameters: oauth_consumer_key"
          type: string
        status:
          description: The HTTP status code
          enum:
          - 400
          type: integer
        type:
          description: The API error type
          enum:
          - BadRequestError
          - MissingOAuthParametersError
          - UnsupportedOAuthSignatureMethodError
          - UnsupportedOAuthVersionError
          - WebServiceError
          type: string
      type: object
    _accounts__accountId__lists__listId__subscribers_ws_op_find_get_400_response:
      example:
        error:
          documentation_url: https://api.aweber.com#badrequest
          message: "Missing oauth parameters: oauth_consumer_key"
          type: BadRequestError
          status: 1
      properties:
        error:
          $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_ws_op_find_get_400_response_error'
      type: object
    _accounts__accountId__lists__listId__subscribers_ws_op_find_get_403_response_error:
      description: |
        An error object.
        The following error may be received:

        | Error Type           | Explanation                              |
        |----------------------|------------------------------------------|
        | ForbiddenError       | Rate limit may be reached, account may be suspended, or the application does not have Request Subscriber Data permission |

        Please see the message body for more details.
      example:
        documentation_url: https://api.aweber.com#forbidden
        message: Rate Limit Error
        type: ForbiddenError
        status: 5
      properties:
        documentation_url:
          description: A link to the documentation that describes the error
          example: https://api.aweber.com#forbidden
          type: string
        message:
          description: A human friendly description of the error
          example: Rate Limit Error
          type: string
        status:
          description: The HTTP status code
          enum:
          - 403
          type: integer
        type:
          description: The API error type
          enum:
          - ForbiddenError
          type: string
      type: object
    _accounts__accountId__lists__listId__subscribers_ws_op_find_get_403_response:
      example:
        error:
          documentation_url: https://api.aweber.com#forbidden
          message: Rate Limit Error
          type: ForbiddenError
          status: 5
      properties:
        error:
          $ref: '#/components/schemas/_accounts__accountId__lists__listId__subscribers_ws_op_find_get_403_response_error'
      type: object
    _accounts__accountId__ws_op_findSubscribers_get_400_response_error:
      description: |
        An error object.
        One of the following errors may be received:

        | Error Type                           | Explanation                              |
        |--------------------------------------|------------------------------------------|
        | BadRequestError                      | The search parameters or were invalid or the OAuth query string could not be parsed|
        | WebServiceError                      | `ws.start` or `ws.size` values are invalid |
        | MissingOAuthParametersError          | An OAuth parameter is missing in the request |
        | UnsupportedOAuthSignatureMethodError | The provided OAuth 1 signature method is unsupported. Only HMAC-SHA1 is supported. |
        | UnsupportedOAuthVersionError         | The provided OAuth 1 version is unsupported. |

        Please see the message body for more details.
      example:
        documentation_url: https://api.aweber.com#badrequest
        message: "Missing oauth parameters: oauth_consumer_key"
        type: BadRequestError
        status: 6
      properties:
        documentation_url:
          description: A link to the documentation that describes the error
          example: https://api.aweber.com#badrequest
          type: string
        message:
          description: A human friendly description of the error
          example: "Missing oauth parameters: oauth_consumer_key"
          type: string
        status:
          description: The HTTP status code
          enum:
          - 400
          type: integer
        type:
          description: The API error type
          enum:
          - BadRequestError
          - MissingOAuthParametersError
          - UnsupportedOAuthSignatureMethodError
          - UnsupportedOAuthVersionError
          - WebServiceError
          type: string
      type: object
    _accounts__accountId__ws_op_findSubscribers_get_400_response:
      example:
        error:
          documentation_url: https://api.aweber.com#badrequest
          message: "Missing oauth parameters: oauth_consumer_key"
          type: BadRequestError
          status: 6
      properties:
        error:
          $ref: '#/components/schemas/_accounts__accountId__ws_op_findSubscribers_get_400_response_error'
      type: object
    Endpoint_Error_error:
      description: |
        An error object.
        The following error may be received:

        | Error Type           | Explanation                              |
        |----------------------|------------------------------------------|
        | UnauthorizedError    | There is a problem with your authorization credentials |

        Please see the message body for more details.
      example:
        documentation_url: https://api.aweber.com#unauthorized
        message: Consumer key is invalid.
        type: UnauthorizedError
        status: 1
      properties:
        documentation_url:
          description: A link to the documentation that describes the error
          example: https://api.aweber.com#unauthorized
          type: string
        message:
          description: A human friendly description of the error
          example: Consumer key is invalid.
          type: string
        status:
          description: The HTTP status code
          enum:
          - 401
          type: integer
        type:
          description: The API error type
          enum:
          - UnauthorizedError
          type: string
      type: object
    UpdateSubscriberRequestBody_tags:
      description: An object with the keys "add" and/or "remove" and values of lists
        of tags
      example:
        add:
        - fast
        - lightspeed
        remove:
        - slow
      properties:
        add:
          description: List of tags to add to the subscriber
          example:
          - fast
          - lightspeed
          items:
            type: string
          type: array
        remove:
          description: List of tags to remove from the subscriber
          example:
          - slow
          items:
            type: string
          type: array
      type: object
