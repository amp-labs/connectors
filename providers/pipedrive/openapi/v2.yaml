openapi: 3.0.1
info:
  title: Pipedrive API v2
  version: 2.0.0
servers:
  - url: "https://api.pipedrive.com/api/v2"
tags:
  - name: Activities
    description: |
      Activities are appointments/tasks/events on a calendar that can be associated with a deal, a lead, a person and an organization. Activities can be of different type (such as call, meeting, lunch or a custom type - see ActivityTypes object) and can be assigned to a particular user. Note that activities can also be created without a specific date/time.
  - name: Deals
    description: |
      Deals represent ongoing, lost or won sales to an organization or to a person. Each deal has a monetary value and must be placed in a stage. Deals can be owned by a user, and followed by one or many users. Each deal consists of standard data fields but can also contain a number of custom fields. The custom fields can be recognized by long hashes as keys. These hashes can be mapped against `DealField.key`. The corresponding label for each such custom field can be obtained from `DealField.name`.
  - name: Products
    description: |
      Products are the goods or services you are dealing with. Each product can have N different price points - firstly, each product can have a price in N different currencies, and secondly, each product can have N variations of itself, each having N prices in different currencies. Note that only one price per variation per currency is supported. Products can be instantiated to deals. In the context of instatiation, a custom price, quantity and discount can be applied.
  - name: Leads
    description: |
      Leads are potential deals stored in Leads Inbox before they are archived or converted to a deal. Each lead needs to be named (using the `title` field) and be linked to a person or an organization. In addition to that, a lead can contain most of the fields a deal can (such as `value` or `expected_close_date`).
  - name: Organizations
    description: |
      Organizations are companies and other kinds of organizations you are making deals with. Persons can be associated with organizations so that each organization can contain one or more persons.
  - name: Persons
    description: |
      Persons are your contacts, the customers you are doing deals with. Each person can belong to an organization. Persons should not be confused with users.
  - name: ItemSearch
    description: |
      Ordered reference objects, pointing to either deals, persons, organizations, leads, products, files or mail attachments.
  - name: Stages
    description: |
      Stage is a logical component of a pipeline, and essentially a bucket that can hold a number of deals. In the context of the pipeline a stage belongs to, it has an order number which defines the order of stages in that pipeline.
  - name: Pipelines
    description: |
      Pipelines are essentially ordered collections of stages.
  - name: Users
    description: |
      Users are individuals who have a Pipedrive account and can interact with its features.
  - name: Beta
    description: |
      Beta endpoints are endpoints that may have changes without a regular 60-90day notice period.
paths:
  /activities:
    get:
      summary: Get all activities
      description: Returns data about all activities.
      x-token-cost: 10
      operationId: getActivities
      tags:
        - Activities
      security:
        - api_key: []
        - oauth2:
            - "activities:read"
            - "activities:full"
      parameters:
        - in: query
          name: filter_id
          schema:
            type: integer
          description: "If supplied, only activities matching the specified filter are returned"
        - in: query
          name: ids
          description: "Optional comma separated string array of up to 100 entity ids to fetch. If filter_id is provided, this is ignored. If any of the requested entities do not exist or are not visible, they are not included in the response."
          schema:
            type: string
        - in: query
          name: owner_id
          schema:
            type: integer
          description: "If supplied, only activities owned by the specified user are returned. If filter_id is provided, this is ignored."
        - in: query
          name: deal_id
          schema:
            type: integer
          description: "If supplied, only activities linked to the specified deal are returned. If filter_id is provided, this is ignored."
        - in: query
          name: lead_id
          schema:
            type: string
          description: "If supplied, only activities linked to the specified lead are returned. If filter_id is provided, this is ignored."
        - in: query
          name: person_id
          schema:
            type: integer
          description: "If supplied, only activities whose primary participant is the given person are returned. If filter_id is provided, this is ignored."
        - in: query
          name: org_id
          schema:
            type: integer
          description: "If supplied, only activities linked to the specified organization are returned. If filter_id is provided, this is ignored."
        - in: query
          name: done
          schema:
            type: boolean
          description: "If supplied, only activities with specified 'done' flag value are returned"
        - in: query
          name: updated_since
          schema:
            type: string
          description: "If set, only activities with an `update_time` later than or equal to this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z."
        - in: query
          name: updated_until
          schema:
            type: string
          description: "If set, only activities with an `update_time` earlier than this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z."
        - in: query
          name: sort_by
          description: "The field to sort by. Supported fields: `id`, `update_time`, `add_time`, `due_date`."
          schema:
            type: string
            default: id
            enum:
              - id
              - update_time
              - add_time
              - due_date
        - in: query
          name: sort_direction
          description: "The sorting direction. Supported values: `asc`, `desc`."
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
        - in: query
          name: include_fields
          description: Optional comma separated string array of additional fields to include
          schema:
            type: string
            enum:
              - attendees
        - in: query
          name: limit
          description: "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
          schema:
            type: integer
            example: 100
        - in: query
          name: cursor
          required: false
          schema:
            type: string
          description: "For pagination, the marker (an opaque string value) representing the first item on the next page"
      responses:
        "200":
          description: Get all activities
          content:
            application/json:
              schema:
                type: object
                title: GetActivitiesResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Activities array
                        items:
                          type: object
                          title: ActivityItem
                          properties:
                            id:
                              type: integer
                              description: The ID of the activity
                            subject:
                              type: string
                              description: The subject of the activity
                            type:
                              type: string
                              description: The type of the activity
                            owner_id:
                              type: integer
                              description: The ID of the user who owns the activity
                            creator_user_id:
                              type: integer
                              description: The ID of the user who created the activity
                            is_deleted:
                              type: boolean
                              description: Whether the activity is deleted or not
                            add_time:
                              type: string
                              description: The creation date and time of the activity
                            update_time:
                              type: string
                              description: The last updated date and time of the activity
                            deal_id:
                              type: integer
                              description: The ID of the deal linked to the activity
                            lead_id:
                              type: string
                              description: The ID of the lead linked to the activity
                            person_id:
                              type: integer
                              description: The ID of the person linked to the activity
                            org_id:
                              type: integer
                              description: The ID of the organization linked to the activity
                            project_id:
                              type: integer
                              description: The ID of the project linked to the activity
                            due_date:
                              type: string
                              description: The due date of the activity
                            due_time:
                              type: string
                              description: The due time of the activity
                            duration:
                              type: string
                              description: The duration of the activity
                            busy:
                              type: boolean
                              description: Whether the activity marks the assignee as busy or not in their calendar
                            done:
                              type: boolean
                              description: Whether the activity is marked as done or not
                            marked_as_done_time:
                              type: string
                              description: The date and time when the activity was marked as done
                            location:
                              type: object
                              description: Location of the activity
                              properties:
                                value:
                                  type: string
                                  description: The full address of the activity
                                country:
                                  type: string
                                  description: Country of the activity
                                admin_area_level_1:
                                  type: string
                                  description: Admin area level 1 (e.g. state) of the activity
                                admin_area_level_2:
                                  type: string
                                  description: Admin area level 2 (e.g. county) of the activity
                                locality:
                                  type: string
                                  description: Locality (e.g. city) of the activity
                                sublocality:
                                  type: string
                                  description: Sublocality (e.g. neighborhood) of the activity
                                route:
                                  type: string
                                  description: Route (e.g. street) of the activity
                                street_number:
                                  type: string
                                  description: Street number of the activity
                                postal_code:
                                  type: string
                                  description: Postal code of the activity
                            participants:
                              type: array
                              description: The participants of the activity
                              items:
                                type: object
                                properties:
                                  person_id:
                                    type: integer
                                    description: The ID of the person
                                  primary:
                                    type: boolean
                                    description: Whether the person is the primary participant or not
                            attendees:
                              type: array
                              description: The attendees of the activity
                              items:
                                type: object
                                properties:
                                  email:
                                    type: string
                                    description: The email address of the attendee
                                  name:
                                    type: string
                                    description: The name of the attendee
                                  status:
                                    type: string
                                    description: The status of the attendee
                                  is_organizer:
                                    type: boolean
                                    description: Whether the attendee is the organizer or not
                                  person_id:
                                    type: integer
                                    description: The ID of the person if the attendee has a person record
                                  user_id:
                                    type: integer
                                    description: The ID of the user if the attendee is a user
                            conference_meeting_client:
                              type: string
                              description: The client used for the conference meeting
                            conference_meeting_url:
                              type: string
                              description: The URL of the conference meeting
                            conference_meeting_id:
                              type: string
                              description: The ID of the conference meeting
                            public_description:
                              type: string
                              description: The public description of the activity
                            priority:
                              type: integer
                              description: The priority of the activity. Mappable to a specific string using activityFields API.
                            note:
                              type: string
                              description: The note of the activity
                      additional_data:
                        type: object
                        description: The additional data of the list
                        properties:
                          next_cursor:
                            type: string
                            description: The first item on the next page. The value of the `next_cursor` field will be `null` if you have reached the end of the dataset and there’s no more pages to be returned.
              example:
                success: true
                data:
                  - id: 1
                    subject: Activity Subject
                    type: activity_type
                    owner_id: 1
                    creator_user_id: 1
                    is_deleted: false
                    add_time: "2021-01-01T00:00:00Z"
                    update_time: "2021-01-01T00:00:00Z"
                    deal_id: 5
                    lead_id: abc-def
                    person_id: 6
                    org_id: 7
                    project_id: 8
                    due_date: "2021-01-01"
                    due_time: "15:00:00"
                    duration: "01:00:00"
                    busy: true
                    done: true
                    marked_as_done_time: "2021-01-01T00:00:00Z"
                    location:
                      value: 123 Main St
                      country: USA
                      admin_area_level_1: CA
                      admin_area_level_2: Santa Clara
                      locality: Sunnyvale
                      sublocality: Downtown
                      route: Main St
                      street_number: "123"
                      postal_code: "94085"
                    participants:
                      - person_id: 1
                        primary: true
                    attendees:
                      - email: some@email.com
                        name: Some Name
                        status: accepted
                        is_organizer: true
                        person_id: 1
                        user_id: 1
                    conference_meeting_client: google_meet
                    conference_meeting_url: "https://meet.google.com/abc-xyz"
                    conference_meeting_id: abc-xyz
                    public_description: Public Description
                    priority: 263
                    note: Note
                additional_data:
                  next_cursor: eyJmaWVsZCI6ImlkIiwiZmllbGRWYWx1ZSI6Nywic29ydERpcmVjdGlvbiI6ImFzYyIsImlkIjo3fQ
    post:
      summary: Add a new activity
      description: Adds a new activity.
      x-token-cost: 5
      operationId: addActivity
      tags:
        - Activities
      security:
        - api_key: []
        - oauth2:
            - "activities:full"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subject:
                  type: string
                  description: The subject of the activity
                type:
                  type: string
                  description: The type of the activity
                owner_id:
                  type: integer
                  description: The ID of the user who owns the activity
                deal_id:
                  type: integer
                  description: The ID of the deal linked to the activity
                lead_id:
                  type: string
                  description: The ID of the lead linked to the activity
                person_id:
                  type: integer
                  description: The ID of the person linked to the activity
                org_id:
                  type: integer
                  description: The ID of the organization linked to the activity
                project_id:
                  type: integer
                  description: The ID of the project linked to the activity
                due_date:
                  type: string
                  description: The due date of the activity
                due_time:
                  type: string
                  description: The due time of the activity
                duration:
                  type: string
                  description: The duration of the activity
                busy:
                  type: boolean
                  description: Whether the activity marks the assignee as busy or not in their calendar
                done:
                  type: boolean
                  description: Whether the activity is marked as done or not
                location:
                  type: object
                  description: Location of the activity
                  properties:
                    value:
                      type: string
                      description: The full address of the activity
                    country:
                      type: string
                      description: Country of the activity
                    admin_area_level_1:
                      type: string
                      description: Admin area level 1 (e.g. state) of the activity
                    admin_area_level_2:
                      type: string
                      description: Admin area level 2 (e.g. county) of the activity
                    locality:
                      type: string
                      description: Locality (e.g. city) of the activity
                    sublocality:
                      type: string
                      description: Sublocality (e.g. neighborhood) of the activity
                    route:
                      type: string
                      description: Route (e.g. street) of the activity
                    street_number:
                      type: string
                      description: Street number of the activity
                    postal_code:
                      type: string
                      description: Postal code of the activity
                participants:
                  type: array
                  description: The participants of the activity
                  items:
                    type: object
                    properties:
                      person_id:
                        type: integer
                        description: The ID of the person
                      primary:
                        type: boolean
                        description: Whether the person is the primary participant or not
                attendees:
                  type: array
                  description: The attendees of the activity
                  items:
                    type: object
                    properties:
                      email:
                        type: string
                        description: The email address of the attendee
                      name:
                        type: string
                        description: The name of the attendee
                      status:
                        type: string
                        description: The status of the attendee
                      is_organizer:
                        type: boolean
                        description: Whether the attendee is the organizer or not
                      person_id:
                        type: integer
                        description: The ID of the person if the attendee has a person record
                      user_id:
                        type: integer
                        description: The ID of the user if the attendee is a user
                public_description:
                  type: string
                  description: The public description of the activity
                priority:
                  type: integer
                  description: The priority of the activity. Mappable to a specific string using activityFields API.
                note:
                  type: string
                  description: The note of the activity
      responses:
        "200":
          description: Add activity
          content:
            application/json:
              schema:
                type: object
                title: UpsertActivityResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    title: UpsertActivityResponseData
                    properties:
                      data:
                        type: object
                        title: ActivityItem
                        properties:
                          id:
                            type: integer
                            description: The ID of the activity
                          subject:
                            type: string
                            description: The subject of the activity
                          type:
                            type: string
                            description: The type of the activity
                          owner_id:
                            type: integer
                            description: The ID of the user who owns the activity
                          creator_user_id:
                            type: integer
                            description: The ID of the user who created the activity
                          is_deleted:
                            type: boolean
                            description: Whether the activity is deleted or not
                          add_time:
                            type: string
                            description: The creation date and time of the activity
                          update_time:
                            type: string
                            description: The last updated date and time of the activity
                          deal_id:
                            type: integer
                            description: The ID of the deal linked to the activity
                          lead_id:
                            type: string
                            description: The ID of the lead linked to the activity
                          person_id:
                            type: integer
                            description: The ID of the person linked to the activity
                          org_id:
                            type: integer
                            description: The ID of the organization linked to the activity
                          project_id:
                            type: integer
                            description: The ID of the project linked to the activity
                          due_date:
                            type: string
                            description: The due date of the activity
                          due_time:
                            type: string
                            description: The due time of the activity
                          duration:
                            type: string
                            description: The duration of the activity
                          busy:
                            type: boolean
                            description: Whether the activity marks the assignee as busy or not in their calendar
                          done:
                            type: boolean
                            description: Whether the activity is marked as done or not
                          marked_as_done_time:
                            type: string
                            description: The date and time when the activity was marked as done
                          location:
                            type: object
                            description: Location of the activity
                            properties:
                              value:
                                type: string
                                description: The full address of the activity
                              country:
                                type: string
                                description: Country of the activity
                              admin_area_level_1:
                                type: string
                                description: Admin area level 1 (e.g. state) of the activity
                              admin_area_level_2:
                                type: string
                                description: Admin area level 2 (e.g. county) of the activity
                              locality:
                                type: string
                                description: Locality (e.g. city) of the activity
                              sublocality:
                                type: string
                                description: Sublocality (e.g. neighborhood) of the activity
                              route:
                                type: string
                                description: Route (e.g. street) of the activity
                              street_number:
                                type: string
                                description: Street number of the activity
                              postal_code:
                                type: string
                                description: Postal code of the activity
                          participants:
                            type: array
                            description: The participants of the activity
                            items:
                              type: object
                              properties:
                                person_id:
                                  type: integer
                                  description: The ID of the person
                                primary:
                                  type: boolean
                                  description: Whether the person is the primary participant or not
                          attendees:
                            type: array
                            description: The attendees of the activity
                            items:
                              type: object
                              properties:
                                email:
                                  type: string
                                  description: The email address of the attendee
                                name:
                                  type: string
                                  description: The name of the attendee
                                status:
                                  type: string
                                  description: The status of the attendee
                                is_organizer:
                                  type: boolean
                                  description: Whether the attendee is the organizer or not
                                person_id:
                                  type: integer
                                  description: The ID of the person if the attendee has a person record
                                user_id:
                                  type: integer
                                  description: The ID of the user if the attendee is a user
                          conference_meeting_client:
                            type: string
                            description: The client used for the conference meeting
                          conference_meeting_url:
                            type: string
                            description: The URL of the conference meeting
                          conference_meeting_id:
                            type: string
                            description: The ID of the conference meeting
                          public_description:
                            type: string
                            description: The public description of the activity
                          priority:
                            type: integer
                            description: The priority of the activity. Mappable to a specific string using activityFields API.
                          note:
                            type: string
                            description: The note of the activity
                        description: The activity object
              example:
                success: true
                data:
                  id: 1
                  subject: Activity Subject
                  type: activity_type
                  owner_id: 1
                  creator_user_id: 1
                  is_deleted: false
                  add_time: "2021-01-01T00:00:00Z"
                  update_time: "2021-01-01T00:00:00Z"
                  deal_id: 5
                  lead_id: abc-def
                  person_id: 6
                  org_id: 7
                  project_id: 8
                  due_date: "2021-01-01"
                  due_time: "15:00:00"
                  duration: "01:00:00"
                  busy: true
                  done: true
                  marked_as_done_time: "2021-01-01T00:00:00Z"
                  location:
                    value: 123 Main St
                    country: USA
                    admin_area_level_1: CA
                    admin_area_level_2: Santa Clara
                    locality: Sunnyvale
                    sublocality: Downtown
                    route: Main St
                    street_number: "123"
                    postal_code: "94085"
                  participants:
                    - person_id: 1
                      primary: true
                  attendees:
                    - email: some@email.com
                      name: Some Name
                      status: accepted
                      is_organizer: true
                      person_id: 1
                      user_id: 1
                  conference_meeting_client: google_meet
                  conference_meeting_url: "https://meet.google.com/abc-xyz"
                  conference_meeting_id: abc-xyz
                  public_description: Public Description
                  priority: 263
                  note: Note
  "/activities/{id}":
    delete:
      summary: Delete an activity
      description: "Marks an activity as deleted. After 30 days, the activity will be permanently deleted."
      x-token-cost: 3
      operationId: deleteActivity
      tags:
        - Activities
      security:
        - api_key: []
        - oauth2:
            - "activities:full"
      parameters:
        - in: path
          name: id
          description: The ID of the activity
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Delete activity
          content:
            application/json:
              schema:
                title: DeleteActivityResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: Deleted activity ID
              example:
                success: true
                data:
                  id: 1
    get:
      summary: Get details of an activity
      description: Returns the details of a specific activity.
      x-token-cost: 1
      operationId: getActivity
      tags:
        - Activities
      security:
        - api_key: []
        - oauth2:
            - "activities:read"
            - "activities:full"
      parameters:
        - in: path
          name: id
          description: The ID of the activity
          required: true
          schema:
            type: integer
        - in: query
          name: include_fields
          description: Optional comma separated string array of additional fields to include
          schema:
            type: string
            enum:
              - attendees
      responses:
        "200":
          description: Get activity
          content:
            application/json:
              schema:
                type: object
                title: UpsertActivityResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    title: UpsertActivityResponseData
                    properties:
                      data:
                        type: object
                        title: ActivityItem
                        properties:
                          id:
                            type: integer
                            description: The ID of the activity
                          subject:
                            type: string
                            description: The subject of the activity
                          type:
                            type: string
                            description: The type of the activity
                          owner_id:
                            type: integer
                            description: The ID of the user who owns the activity
                          creator_user_id:
                            type: integer
                            description: The ID of the user who created the activity
                          is_deleted:
                            type: boolean
                            description: Whether the activity is deleted or not
                          add_time:
                            type: string
                            description: The creation date and time of the activity
                          update_time:
                            type: string
                            description: The last updated date and time of the activity
                          deal_id:
                            type: integer
                            description: The ID of the deal linked to the activity
                          lead_id:
                            type: string
                            description: The ID of the lead linked to the activity
                          person_id:
                            type: integer
                            description: The ID of the person linked to the activity
                          org_id:
                            type: integer
                            description: The ID of the organization linked to the activity
                          project_id:
                            type: integer
                            description: The ID of the project linked to the activity
                          due_date:
                            type: string
                            description: The due date of the activity
                          due_time:
                            type: string
                            description: The due time of the activity
                          duration:
                            type: string
                            description: The duration of the activity
                          busy:
                            type: boolean
                            description: Whether the activity marks the assignee as busy or not in their calendar
                          done:
                            type: boolean
                            description: Whether the activity is marked as done or not
                          marked_as_done_time:
                            type: string
                            description: The date and time when the activity was marked as done
                          location:
                            type: object
                            description: Location of the activity
                            properties:
                              value:
                                type: string
                                description: The full address of the activity
                              country:
                                type: string
                                description: Country of the activity
                              admin_area_level_1:
                                type: string
                                description: Admin area level 1 (e.g. state) of the activity
                              admin_area_level_2:
                                type: string
                                description: Admin area level 2 (e.g. county) of the activity
                              locality:
                                type: string
                                description: Locality (e.g. city) of the activity
                              sublocality:
                                type: string
                                description: Sublocality (e.g. neighborhood) of the activity
                              route:
                                type: string
                                description: Route (e.g. street) of the activity
                              street_number:
                                type: string
                                description: Street number of the activity
                              postal_code:
                                type: string
                                description: Postal code of the activity
                          participants:
                            type: array
                            description: The participants of the activity
                            items:
                              type: object
                              properties:
                                person_id:
                                  type: integer
                                  description: The ID of the person
                                primary:
                                  type: boolean
                                  description: Whether the person is the primary participant or not
                          attendees:
                            type: array
                            description: The attendees of the activity
                            items:
                              type: object
                              properties:
                                email:
                                  type: string
                                  description: The email address of the attendee
                                name:
                                  type: string
                                  description: The name of the attendee
                                status:
                                  type: string
                                  description: The status of the attendee
                                is_organizer:
                                  type: boolean
                                  description: Whether the attendee is the organizer or not
                                person_id:
                                  type: integer
                                  description: The ID of the person if the attendee has a person record
                                user_id:
                                  type: integer
                                  description: The ID of the user if the attendee is a user
                          conference_meeting_client:
                            type: string
                            description: The client used for the conference meeting
                          conference_meeting_url:
                            type: string
                            description: The URL of the conference meeting
                          conference_meeting_id:
                            type: string
                            description: The ID of the conference meeting
                          public_description:
                            type: string
                            description: The public description of the activity
                          priority:
                            type: integer
                            description: The priority of the activity. Mappable to a specific string using activityFields API.
                          note:
                            type: string
                            description: The note of the activity
                        description: The activity object
              example:
                success: true
                data:
                  id: 1
                  subject: Activity Subject
                  type: activity_type
                  owner_id: 1
                  creator_user_id: 1
                  is_deleted: false
                  add_time: "2021-01-01T00:00:00Z"
                  update_time: "2021-01-01T00:00:00Z"
                  deal_id: 5
                  lead_id: abc-def
                  person_id: 6
                  org_id: 7
                  project_id: 8
                  due_date: "2021-01-01"
                  due_time: "15:00:00"
                  duration: "01:00:00"
                  busy: true
                  done: true
                  marked_as_done_time: "2021-01-01T00:00:00Z"
                  location:
                    value: 123 Main St
                    country: USA
                    admin_area_level_1: CA
                    admin_area_level_2: Santa Clara
                    locality: Sunnyvale
                    sublocality: Downtown
                    route: Main St
                    street_number: "123"
                    postal_code: "94085"
                  participants:
                    - person_id: 1
                      primary: true
                  attendees:
                    - email: some@email.com
                      name: Some Name
                      status: accepted
                      is_organizer: true
                      person_id: 1
                      user_id: 1
                  conference_meeting_client: google_meet
                  conference_meeting_url: "https://meet.google.com/abc-xyz"
                  conference_meeting_id: abc-xyz
                  public_description: Public Description
                  priority: 263
                  note: Note
    patch:
      summary: Update an activity
      description: Updates the properties of an activity.
      x-token-cost: 5
      operationId: updateActivity
      tags:
        - Activities
      security:
        - api_key: []
        - oauth2:
            - "activities:full"
      parameters:
        - in: path
          name: id
          description: The ID of the activity
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subject:
                  type: string
                  description: The subject of the activity
                type:
                  type: string
                  description: The type of the activity
                owner_id:
                  type: integer
                  description: The ID of the user who owns the activity
                deal_id:
                  type: integer
                  description: The ID of the deal linked to the activity
                lead_id:
                  type: string
                  description: The ID of the lead linked to the activity
                person_id:
                  type: integer
                  description: The ID of the person linked to the activity
                org_id:
                  type: integer
                  description: The ID of the organization linked to the activity
                project_id:
                  type: integer
                  description: The ID of the project linked to the activity
                due_date:
                  type: string
                  description: The due date of the activity
                due_time:
                  type: string
                  description: The due time of the activity
                duration:
                  type: string
                  description: The duration of the activity
                busy:
                  type: boolean
                  description: Whether the activity marks the assignee as busy or not in their calendar
                done:
                  type: boolean
                  description: Whether the activity is marked as done or not
                location:
                  type: object
                  description: Location of the activity
                  properties:
                    value:
                      type: string
                      description: The full address of the activity
                    country:
                      type: string
                      description: Country of the activity
                    admin_area_level_1:
                      type: string
                      description: Admin area level 1 (e.g. state) of the activity
                    admin_area_level_2:
                      type: string
                      description: Admin area level 2 (e.g. county) of the activity
                    locality:
                      type: string
                      description: Locality (e.g. city) of the activity
                    sublocality:
                      type: string
                      description: Sublocality (e.g. neighborhood) of the activity
                    route:
                      type: string
                      description: Route (e.g. street) of the activity
                    street_number:
                      type: string
                      description: Street number of the activity
                    postal_code:
                      type: string
                      description: Postal code of the activity
                participants:
                  type: array
                  description: The participants of the activity
                  items:
                    type: object
                    properties:
                      person_id:
                        type: integer
                        description: The ID of the person
                      primary:
                        type: boolean
                        description: Whether the person is the primary participant or not
                attendees:
                  type: array
                  description: The attendees of the activity
                  items:
                    type: object
                    properties:
                      email:
                        type: string
                        description: The email address of the attendee
                      name:
                        type: string
                        description: The name of the attendee
                      status:
                        type: string
                        description: The status of the attendee
                      is_organizer:
                        type: boolean
                        description: Whether the attendee is the organizer or not
                      person_id:
                        type: integer
                        description: The ID of the person if the attendee has a person record
                      user_id:
                        type: integer
                        description: The ID of the user if the attendee is a user
                public_description:
                  type: string
                  description: The public description of the activity
                priority:
                  type: integer
                  description: The priority of the activity. Mappable to a specific string using activityFields API.
                note:
                  type: string
                  description: The note of the activity
      responses:
        "200":
          description: Edit activity
          content:
            application/json:
              schema:
                type: object
                title: UpsertActivityResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    title: UpsertActivityResponseData
                    properties:
                      data:
                        type: object
                        title: ActivityItem
                        properties:
                          id:
                            type: integer
                            description: The ID of the activity
                          subject:
                            type: string
                            description: The subject of the activity
                          type:
                            type: string
                            description: The type of the activity
                          owner_id:
                            type: integer
                            description: The ID of the user who owns the activity
                          creator_user_id:
                            type: integer
                            description: The ID of the user who created the activity
                          is_deleted:
                            type: boolean
                            description: Whether the activity is deleted or not
                          add_time:
                            type: string
                            description: The creation date and time of the activity
                          update_time:
                            type: string
                            description: The last updated date and time of the activity
                          deal_id:
                            type: integer
                            description: The ID of the deal linked to the activity
                          lead_id:
                            type: string
                            description: The ID of the lead linked to the activity
                          person_id:
                            type: integer
                            description: The ID of the person linked to the activity
                          org_id:
                            type: integer
                            description: The ID of the organization linked to the activity
                          project_id:
                            type: integer
                            description: The ID of the project linked to the activity
                          due_date:
                            type: string
                            description: The due date of the activity
                          due_time:
                            type: string
                            description: The due time of the activity
                          duration:
                            type: string
                            description: The duration of the activity
                          busy:
                            type: boolean
                            description: Whether the activity marks the assignee as busy or not in their calendar
                          done:
                            type: boolean
                            description: Whether the activity is marked as done or not
                          marked_as_done_time:
                            type: string
                            description: The date and time when the activity was marked as done
                          location:
                            type: object
                            description: Location of the activity
                            properties:
                              value:
                                type: string
                                description: The full address of the activity
                              country:
                                type: string
                                description: Country of the activity
                              admin_area_level_1:
                                type: string
                                description: Admin area level 1 (e.g. state) of the activity
                              admin_area_level_2:
                                type: string
                                description: Admin area level 2 (e.g. county) of the activity
                              locality:
                                type: string
                                description: Locality (e.g. city) of the activity
                              sublocality:
                                type: string
                                description: Sublocality (e.g. neighborhood) of the activity
                              route:
                                type: string
                                description: Route (e.g. street) of the activity
                              street_number:
                                type: string
                                description: Street number of the activity
                              postal_code:
                                type: string
                                description: Postal code of the activity
                          participants:
                            type: array
                            description: The participants of the activity
                            items:
                              type: object
                              properties:
                                person_id:
                                  type: integer
                                  description: The ID of the person
                                primary:
                                  type: boolean
                                  description: Whether the person is the primary participant or not
                          attendees:
                            type: array
                            description: The attendees of the activity
                            items:
                              type: object
                              properties:
                                email:
                                  type: string
                                  description: The email address of the attendee
                                name:
                                  type: string
                                  description: The name of the attendee
                                status:
                                  type: string
                                  description: The status of the attendee
                                is_organizer:
                                  type: boolean
                                  description: Whether the attendee is the organizer or not
                                person_id:
                                  type: integer
                                  description: The ID of the person if the attendee has a person record
                                user_id:
                                  type: integer
                                  description: The ID of the user if the attendee is a user
                          conference_meeting_client:
                            type: string
                            description: The client used for the conference meeting
                          conference_meeting_url:
                            type: string
                            description: The URL of the conference meeting
                          conference_meeting_id:
                            type: string
                            description: The ID of the conference meeting
                          public_description:
                            type: string
                            description: The public description of the activity
                          priority:
                            type: integer
                            description: The priority of the activity. Mappable to a specific string using activityFields API.
                          note:
                            type: string
                            description: The note of the activity
                        description: The activity object
              example:
                success: true
                data:
                  id: 1
                  subject: Activity Subject
                  type: activity_type
                  owner_id: 1
                  creator_user_id: 1
                  is_deleted: false
                  add_time: "2021-01-01T00:00:00Z"
                  update_time: "2021-01-01T00:00:00Z"
                  deal_id: 5
                  lead_id: abc-def
                  person_id: 6
                  org_id: 7
                  project_id: 8
                  due_date: "2021-01-01"
                  due_time: "15:00:00"
                  duration: "01:00:00"
                  busy: true
                  done: true
                  marked_as_done_time: "2021-01-01T00:00:00Z"
                  location:
                    value: 123 Main St
                    country: USA
                    admin_area_level_1: CA
                    admin_area_level_2: Santa Clara
                    locality: Sunnyvale
                    sublocality: Downtown
                    route: Main St
                    street_number: "123"
                    postal_code: "94085"
                  participants:
                    - person_id: 1
                      primary: true
                  attendees:
                    - email: some@email.com
                      name: Some Name
                      status: accepted
                      is_organizer: true
                      person_id: 1
                      user_id: 1
                  conference_meeting_client: google_meet
                  conference_meeting_url: "https://meet.google.com/abc-xyz"
                  conference_meeting_id: abc-xyz
                  public_description: Public Description
                  priority: 263
                  note: Note
  /deals:
    get:
      summary: Get all deals
      description: Returns data about all not archived deals.
      x-tool-description: "Retrieves paginated active deals with filtering by owner, person, organization, pipeline, stage, status, and time ranges. Essential for analytics, reporting, dashboard views, and bulk operations. Filters combine for precise selection; filter_id overrides individual filters."
      x-token-cost: 10
      operationId: getDeals
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - "deals:read"
            - "deals:full"
      parameters:
        - in: query
          name: filter_id
          schema:
            type: integer
          description: "If supplied, only deals matching the specified filter are returned"
        - in: query
          name: ids
          description: "Optional comma separated string array of up to 100 entity ids to fetch. If filter_id is provided, this is ignored. If any of the requested entities do not exist or are not visible, they are not included in the response."
          schema:
            type: string
        - in: query
          name: owner_id
          schema:
            type: integer
          description: "If supplied, only deals owned by the specified user are returned. If filter_id is provided, this is ignored."
        - in: query
          name: person_id
          schema:
            type: integer
          description: "If supplied, only deals linked to the specified person are returned. If filter_id is provided, this is ignored."
        - in: query
          name: org_id
          schema:
            type: integer
          description: "If supplied, only deals linked to the specified organization are returned. If filter_id is provided, this is ignored."
        - in: query
          name: pipeline_id
          schema:
            type: integer
          description: "If supplied, only deals in the specified pipeline are returned. If filter_id is provided, this is ignored."
        - in: query
          name: stage_id
          schema:
            type: integer
          description: "If supplied, only deals in the specified stage are returned. If filter_id is provided, this is ignored."
        - in: query
          name: status
          schema:
            type: string
            enum:
              - open
              - won
              - lost
              - deleted
          description: "Only fetch deals with a specific status. If omitted, all not deleted deals are returned. If set to deleted, deals that have been deleted up to 30 days ago will be included. Multiple statuses can be included as a comma separated array. If filter_id is provided, this is ignored."
        - in: query
          name: updated_since
          schema:
            type: string
          description: "If set, only deals with an `update_time` later than or equal to this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z."
        - in: query
          name: updated_until
          schema:
            type: string
          description: "If set, only deals with an `update_time` earlier than this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z."
        - in: query
          name: sort_by
          description: "The field to sort by. Supported fields: `id`, `update_time`, `add_time`."
          schema:
            type: string
            default: id
            enum:
              - id
              - update_time
              - add_time
        - in: query
          name: sort_direction
          description: "The sorting direction. Supported values: `asc`, `desc`."
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
        - in: query
          name: include_fields
          description: Optional comma separated string array of additional fields to include
          schema:
            type: string
            enum:
              - next_activity_id
              - last_activity_id
              - first_won_time
              - products_count
              - files_count
              - notes_count
              - followers_count
              - email_messages_count
              - activities_count
              - done_activities_count
              - undone_activities_count
              - participants_count
              - last_incoming_mail_time
              - last_outgoing_mail_time
              - smart_bcc_email
        - in: query
          name: custom_fields
          description: "Optional comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for faster results and smaller response.<br/>A maximum of 15 keys is allowed."
          schema:
            type: string
        - in: query
          name: limit
          description: "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
          schema:
            type: integer
            example: 100
        - in: query
          name: cursor
          required: false
          schema:
            type: string
          description: "For pagination, the marker (an opaque string value) representing the first item on the next page"
      responses:
        "200":
          description: Get all not archived deals
          content:
            application/json:
              schema:
                type: object
                title: GetDealsResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Deals array
                        items:
                          type: object
                          title: DealItem
                          properties:
                            id:
                              type: integer
                              description: The ID of the deal
                            title:
                              type: string
                              description: The title of the deal
                            owner_id:
                              type: integer
                              description: The ID of the user who owns the deal
                            person_id:
                              type: integer
                              description: The ID of the person linked to the deal
                            org_id:
                              type: integer
                              description: The ID of the organization linked to the deal
                            pipeline_id:
                              type: integer
                              description: The ID of the pipeline associated with the deal
                            stage_id:
                              type: integer
                              description: The ID of the deal stage
                            value:
                              type: number
                              description: The value of the deal
                            currency:
                              type: string
                              description: The currency associated with the deal
                            add_time:
                              type: string
                              description: The creation date and time of the deal
                            update_time:
                              type: string
                              description: The last updated date and time of the deal
                            stage_change_time:
                              type: string
                              description: The last updated date and time of the deal stage
                            is_deleted:
                              type: boolean
                              description: Whether the deal is deleted or not
                            is_archived:
                              type: boolean
                              description: Whether the deal is archived or not
                            status:
                              type: string
                              description: The status of the deal
                            probability:
                              type: number
                              nullable: true
                              description: The success probability percentage of the deal
                            lost_reason:
                              type: string
                              nullable: true
                              description: The reason for losing the deal
                            visible_to:
                              type: integer
                              description: The visibility of the deal
                            close_time:
                              type: string
                              nullable: true
                              description: The date and time of closing the deal
                            won_time:
                              type: string
                              description: The date and time of changing the deal status as won
                            lost_time:
                              type: string
                              description: The date and time of changing the deal status as lost
                            expected_close_date:
                              type: string
                              format: date
                              description: The expected close date of the deal
                            label_ids:
                              type: array
                              description: The IDs of labels assigned to the deal
                              items:
                                type: integer
                            origin:
                              type: string
                              description: The way this Deal was created. `origin` field is set by Pipedrive when Deal is created and cannot be changed.
                            origin_id:
                              type: string
                              nullable: true
                              description: The optional ID to further distinguish the origin of the deal - e.g. Which API integration created this Deal.
                            channel:
                              type: integer
                              nullable: true
                              description: 'The ID of your Marketing channel this Deal was created from. Recognized Marketing channels can be configured in your <a href="https://app.pipedrive.com/settings/fields" target="_blank" rel="noopener noreferrer">Company settings</a>.'
                            channel_id:
                              type: string
                              nullable: true
                              description: The optional ID to further distinguish the Marketing channel.
                            arr:
                              type: number
                              nullable: true
                              description: |
                                Only available in Growth and above plans

                                The Annual Recurring Revenue of the deal

                                Null if there are no products attached to the deal
                            mrr:
                              type: number
                              nullable: true
                              description: |
                                Only available in Growth and above plans

                                The Monthly Recurring Revenue of the deal

                                Null if there are no products attached to the deal
                            acv:
                              type: number
                              nullable: true
                              description: |
                                Only available in Growth and above plans

                                The Annual Contract Value of the deal

                                Null if there are no products attached to the deal
                            custom_fields:
                              type: object
                              additionalProperties: true
                              description: An object where each key represents a custom field. All custom fields are referenced as randomly generated 40-character hashes
                      additional_data:
                        type: object
                        description: The additional data of the list
                        properties:
                          next_cursor:
                            type: string
                            description: The first item on the next page. The value of the `next_cursor` field will be `null` if you have reached the end of the dataset and there’s no more pages to be returned.
              example:
                success: true
                data:
                  - id: 1
                    title: Deal Title
                    creator_user_id: 1
                    owner_id: 1
                    value: 200
                    person_id: 1
                    org_id: 1
                    stage_id: 1
                    pipeline_id: 1
                    currency: USD
                    archive_time: "2021-01-01T00:00:00Z"
                    add_time: "2021-01-01T00:00:00Z"
                    update_time: "2021-01-01T00:00:00Z"
                    stage_change_time: "2021-01-01T00:00:00Z"
                    status: open
                    is_archived: false
                    is_deleted: false
                    probability: 90
                    lost_reason: Lost Reason
                    visible_to: 7
                    close_time: "2021-01-01T00:00:00Z"
                    won_time: "2021-01-01T00:00:00Z"
                    lost_time: "2021-01-01T00:00:00Z"
                    local_won_date: "2021-01-01"
                    local_lost_date: "2021-01-01"
                    local_close_date: "2021-01-01"
                    expected_close_date: "2021-01-01"
                    label_ids:
                      - 1
                      - 2
                      - 3
                    origin: ManuallyCreated
                    origin_id: null
                    channel: 52
                    channel_id: Jun23 Billboards
                    acv: 120
                    arr: 120
                    mrr: 10
                    custom_fields: {}
                additional_data:
                  next_cursor: eyJmaWVsZCI6ImlkIiwiZmllbGRWYWx1ZSI6Nywic29ydERpcmVjdGlvbiI6ImFzYyIsImlkIjo3fQ
    post:
      summary: Add a new deal
      description: Adds a new deal.
      x-tool-description: "Creates new sales deals with customizable properties: title (required), value, person, organization, pipeline stage, and custom fields. Essential for lead conversion, sales processes, and integrations. Automatically assigns timestamps and ownership."
      x-token-cost: 5
      operationId: addDeal
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - "deals:full"
      requestBody:
        content:
          application/json:
            schema:
              required:
                - title
              type: object
              properties:
                title:
                  type: string
                  description: The title of the deal
                owner_id:
                  type: integer
                  description: The ID of the user who owns the deal
                person_id:
                  type: integer
                  description: The ID of the person linked to the deal
                org_id:
                  type: integer
                  description: The ID of the organization linked to the deal
                pipeline_id:
                  type: integer
                  description: The ID of the pipeline associated with the deal
                stage_id:
                  type: integer
                  description: The ID of the deal stage
                value:
                  type: number
                  description: The value of the deal
                currency:
                  type: string
                  description: The currency associated with the deal
                is_deleted:
                  type: boolean
                  description: Whether the deal is deleted or not
                is_archived:
                  type: boolean
                  description: Whether the deal is archived or not
                archive_time:
                  type: string
                  description: "The optional date and time of archiving the deal in UTC. Format: YYYY-MM-DD HH:MM:SS. If omitted and `is_archived` is true, it will be set to the current date and time."
                status:
                  type: string
                  description: The status of the deal
                probability:
                  type: number
                  nullable: true
                  description: The success probability percentage of the deal
                lost_reason:
                  type: string
                  nullable: true
                  description: The reason for losing the deal. Can only be set if deal status is lost.
                visible_to:
                  type: integer
                  description: The visibility of the deal
                close_time:
                  type: string
                  nullable: true
                  description: The date and time of closing the deal. Can only be set if deal status is won or lost.
                won_time:
                  type: string
                  description: The date and time of changing the deal status as won. Can only be set if deal status is won.
                lost_time:
                  type: string
                  description: The date and time of changing the deal status as lost. Can only be set if deal status is lost.
                expected_close_date:
                  type: string
                  format: date
                  description: The expected close date of the deal
                label_ids:
                  type: array
                  description: The IDs of labels assigned to the deal
                  items:
                    type: integer
                custom_fields:
                  type: object
                  additionalProperties: true
                  description: An object where each key represents a custom field. All custom fields are referenced as randomly generated 40-character hashes
      responses:
        "200":
          description: Add deal
          content:
            application/json:
              schema:
                type: object
                title: UpsertDealResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    title: UpsertDealResponseData
                    properties:
                      data:
                        type: object
                        title: DealItem
                        properties:
                          id:
                            type: integer
                            description: The ID of the deal
                          title:
                            type: string
                            description: The title of the deal
                          owner_id:
                            type: integer
                            description: The ID of the user who owns the deal
                          person_id:
                            type: integer
                            description: The ID of the person linked to the deal
                          org_id:
                            type: integer
                            description: The ID of the organization linked to the deal
                          pipeline_id:
                            type: integer
                            description: The ID of the pipeline associated with the deal
                          stage_id:
                            type: integer
                            description: The ID of the deal stage
                          value:
                            type: number
                            description: The value of the deal
                          currency:
                            type: string
                            description: The currency associated with the deal
                          add_time:
                            type: string
                            description: The creation date and time of the deal
                          update_time:
                            type: string
                            description: The last updated date and time of the deal
                          stage_change_time:
                            type: string
                            description: The last updated date and time of the deal stage
                          is_deleted:
                            type: boolean
                            description: Whether the deal is deleted or not
                          is_archived:
                            type: boolean
                            description: Whether the deal is archived or not
                          status:
                            type: string
                            description: The status of the deal
                          probability:
                            type: number
                            nullable: true
                            description: The success probability percentage of the deal
                          lost_reason:
                            type: string
                            nullable: true
                            description: The reason for losing the deal
                          visible_to:
                            type: integer
                            description: The visibility of the deal
                          close_time:
                            type: string
                            nullable: true
                            description: The date and time of closing the deal
                          won_time:
                            type: string
                            description: The date and time of changing the deal status as won
                          lost_time:
                            type: string
                            description: The date and time of changing the deal status as lost
                          expected_close_date:
                            type: string
                            format: date
                            description: The expected close date of the deal
                          label_ids:
                            type: array
                            description: The IDs of labels assigned to the deal
                            items:
                              type: integer
                          origin:
                            type: string
                            description: The way this Deal was created. `origin` field is set by Pipedrive when Deal is created and cannot be changed.
                          origin_id:
                            type: string
                            nullable: true
                            description: The optional ID to further distinguish the origin of the deal - e.g. Which API integration created this Deal.
                          channel:
                            type: integer
                            nullable: true
                            description: 'The ID of your Marketing channel this Deal was created from. Recognized Marketing channels can be configured in your <a href="https://app.pipedrive.com/settings/fields" target="_blank" rel="noopener noreferrer">Company settings</a>.'
                          channel_id:
                            type: string
                            nullable: true
                            description: The optional ID to further distinguish the Marketing channel.
                          arr:
                            type: number
                            nullable: true
                            description: |
                              Only available in Growth and above plans

                              The Annual Recurring Revenue of the deal

                              Null if there are no products attached to the deal
                          mrr:
                            type: number
                            nullable: true
                            description: |
                              Only available in Growth and above plans

                              The Monthly Recurring Revenue of the deal

                              Null if there are no products attached to the deal
                          acv:
                            type: number
                            nullable: true
                            description: |
                              Only available in Growth and above plans

                              The Annual Contract Value of the deal

                              Null if there are no products attached to the deal
                          custom_fields:
                            type: object
                            additionalProperties: true
                            description: An object where each key represents a custom field. All custom fields are referenced as randomly generated 40-character hashes
                        description: The deal object
              example:
                success: true
                data:
                  id: 1
                  title: Deal Title
                  creator_user_id: 1
                  owner_id: 1
                  value: 200
                  person_id: 1
                  org_id: 1
                  stage_id: 1
                  pipeline_id: 1
                  currency: USD
                  archive_time: "2021-01-01T00:00:00Z"
                  add_time: "2021-01-01T00:00:00Z"
                  update_time: "2021-01-01T00:00:00Z"
                  stage_change_time: "2021-01-01T00:00:00Z"
                  status: open
                  is_archived: false
                  is_deleted: false
                  probability: 90
                  lost_reason: Lost Reason
                  visible_to: 7
                  close_time: "2021-01-01T00:00:00Z"
                  won_time: "2021-01-01T00:00:00Z"
                  lost_time: "2021-01-01T00:00:00Z"
                  local_won_date: "2021-01-01"
                  local_lost_date: "2021-01-01"
                  local_close_date: "2021-01-01"
                  expected_close_date: "2021-01-01"
                  label_ids:
                    - 1
                    - 2
                    - 3
                  origin: ManuallyCreated
                  origin_id: null
                  channel: 52
                  channel_id: Jun23 Billboards
                  acv: 120
                  arr: 120
                  mrr: 10
                  custom_fields: {}
  /deals/archived:
    get:
      summary: Get all archived deals
      description: Returns data about all archived deals.
      x-tool-description: "Retrieves paginated archived deals with same filtering as active deals. Essential for historical analysis, closed opportunity reporting, data recovery, and audit trails. Supports filtering by owner, person, organization, pipeline, stage, and time ranges."
      x-token-cost: 20
      operationId: getArchivedDeals
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - "deals:read"
            - "deals:full"
      parameters:
        - in: query
          name: filter_id
          schema:
            type: integer
          description: "If supplied, only deals matching the specified filter are returned"
        - in: query
          name: ids
          description: "Optional comma separated string array of up to 100 entity ids to fetch. If filter_id is provided, this is ignored. If any of the requested entities do not exist or are not visible, they are not included in the response."
          schema:
            type: string
        - in: query
          name: owner_id
          schema:
            type: integer
          description: "If supplied, only deals owned by the specified user are returned. If filter_id is provided, this is ignored."
        - in: query
          name: person_id
          schema:
            type: integer
          description: "If supplied, only deals linked to the specified person are returned. If filter_id is provided, this is ignored."
        - in: query
          name: org_id
          schema:
            type: integer
          description: "If supplied, only deals linked to the specified organization are returned. If filter_id is provided, this is ignored."
        - in: query
          name: pipeline_id
          schema:
            type: integer
          description: "If supplied, only deals in the specified pipeline are returned. If filter_id is provided, this is ignored."
        - in: query
          name: stage_id
          schema:
            type: integer
          description: "If supplied, only deals in the specified stage are returned. If filter_id is provided, this is ignored."
        - in: query
          name: status
          schema:
            type: string
            enum:
              - open
              - won
              - lost
              - deleted
          description: "Only fetch deals with a specific status. If omitted, all not deleted deals are returned. If set to deleted, deals that have been deleted up to 30 days ago will be included. Multiple statuses can be included as a comma separated array. If filter_id is provided, this is ignored."
        - in: query
          name: updated_since
          schema:
            type: string
          description: "If set, only deals with an `update_time` later than or equal to this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z."
        - in: query
          name: updated_until
          schema:
            type: string
          description: "If set, only deals with an `update_time` earlier than this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z."
        - in: query
          name: sort_by
          description: "The field to sort by. Supported fields: `id`, `update_time`, `add_time`."
          schema:
            type: string
            default: id
            enum:
              - id
              - update_time
              - add_time
        - in: query
          name: sort_direction
          description: "The sorting direction. Supported values: `asc`, `desc`."
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
        - in: query
          name: include_fields
          description: Optional comma separated string array of additional fields to include
          schema:
            type: string
            enum:
              - next_activity_id
              - last_activity_id
              - first_won_time
              - products_count
              - files_count
              - notes_count
              - followers_count
              - email_messages_count
              - activities_count
              - done_activities_count
              - undone_activities_count
              - participants_count
              - last_incoming_mail_time
              - last_outgoing_mail_time
              - smart_bcc_email
        - in: query
          name: custom_fields
          description: "Optional comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for faster results and smaller response.<br/>A maximum of 15 keys is allowed."
          schema:
            type: string
        - in: query
          name: limit
          description: "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
          schema:
            type: integer
            example: 100
        - in: query
          name: cursor
          required: false
          schema:
            type: string
          description: "For pagination, the marker (an opaque string value) representing the first item on the next page"
      responses:
        "200":
          description: Get all archived deals
          content:
            application/json:
              schema:
                type: object
                title: GetDealsResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Deals array
                        items:
                          type: object
                          title: DealItem
                          properties:
                            id:
                              type: integer
                              description: The ID of the deal
                            title:
                              type: string
                              description: The title of the deal
                            owner_id:
                              type: integer
                              description: The ID of the user who owns the deal
                            person_id:
                              type: integer
                              description: The ID of the person linked to the deal
                            org_id:
                              type: integer
                              description: The ID of the organization linked to the deal
                            pipeline_id:
                              type: integer
                              description: The ID of the pipeline associated with the deal
                            stage_id:
                              type: integer
                              description: The ID of the deal stage
                            value:
                              type: number
                              description: The value of the deal
                            currency:
                              type: string
                              description: The currency associated with the deal
                            add_time:
                              type: string
                              description: The creation date and time of the deal
                            update_time:
                              type: string
                              description: The last updated date and time of the deal
                            stage_change_time:
                              type: string
                              description: The last updated date and time of the deal stage
                            is_deleted:
                              type: boolean
                              description: Whether the deal is deleted or not
                            is_archived:
                              type: boolean
                              description: Whether the deal is archived or not
                            status:
                              type: string
                              description: The status of the deal
                            probability:
                              type: number
                              nullable: true
                              description: The success probability percentage of the deal
                            lost_reason:
                              type: string
                              nullable: true
                              description: The reason for losing the deal
                            visible_to:
                              type: integer
                              description: The visibility of the deal
                            close_time:
                              type: string
                              nullable: true
                              description: The date and time of closing the deal
                            won_time:
                              type: string
                              description: The date and time of changing the deal status as won
                            lost_time:
                              type: string
                              description: The date and time of changing the deal status as lost
                            expected_close_date:
                              type: string
                              format: date
                              description: The expected close date of the deal
                            label_ids:
                              type: array
                              description: The IDs of labels assigned to the deal
                              items:
                                type: integer
                            origin:
                              type: string
                              description: The way this Deal was created. `origin` field is set by Pipedrive when Deal is created and cannot be changed.
                            origin_id:
                              type: string
                              nullable: true
                              description: The optional ID to further distinguish the origin of the deal - e.g. Which API integration created this Deal.
                            channel:
                              type: integer
                              nullable: true
                              description: 'The ID of your Marketing channel this Deal was created from. Recognized Marketing channels can be configured in your <a href="https://app.pipedrive.com/settings/fields" target="_blank" rel="noopener noreferrer">Company settings</a>.'
                            channel_id:
                              type: string
                              nullable: true
                              description: The optional ID to further distinguish the Marketing channel.
                            arr:
                              type: number
                              nullable: true
                              description: |
                                Only available in Growth and above plans

                                The Annual Recurring Revenue of the deal

                                Null if there are no products attached to the deal
                            mrr:
                              type: number
                              nullable: true
                              description: |
                                Only available in Growth and above plans

                                The Monthly Recurring Revenue of the deal

                                Null if there are no products attached to the deal
                            acv:
                              type: number
                              nullable: true
                              description: |
                                Only available in Growth and above plans

                                The Annual Contract Value of the deal

                                Null if there are no products attached to the deal
                            custom_fields:
                              type: object
                              additionalProperties: true
                              description: An object where each key represents a custom field. All custom fields are referenced as randomly generated 40-character hashes
                      additional_data:
                        type: object
                        description: The additional data of the list
                        properties:
                          next_cursor:
                            type: string
                            description: The first item on the next page. The value of the `next_cursor` field will be `null` if you have reached the end of the dataset and there’s no more pages to be returned.
              example:
                success: true
                data:
                  - id: 1
                    title: Deal Title
                    creator_user_id: 1
                    owner_id: 1
                    value: 200
                    person_id: 1
                    org_id: 1
                    stage_id: 1
                    pipeline_id: 1
                    currency: USD
                    archive_time: "2021-01-01T00:00:00Z"
                    add_time: "2021-01-01T00:00:00Z"
                    update_time: "2021-01-01T00:00:00Z"
                    stage_change_time: "2021-01-01T00:00:00Z"
                    status: open
                    is_archived: true
                    is_deleted: false
                    probability: 90
                    lost_reason: Lost Reason
                    visible_to: 7
                    close_time: "2021-01-01T00:00:00Z"
                    won_time: "2021-01-01T00:00:00Z"
                    lost_time: "2021-01-01T00:00:00Z"
                    local_won_date: "2021-01-01"
                    local_lost_date: "2021-01-01"
                    local_close_date: "2021-01-01"
                    expected_close_date: "2021-01-01"
                    label_ids:
                      - 1
                      - 2
                      - 3
                    origin: ManuallyCreated
                    origin_id: null
                    channel: 52
                    channel_id: Jun23 Billboards
                    acv: 120
                    arr: 120
                    mrr: 10
                    custom_fields: {}
                additional_data:
                  next_cursor: eyJmaWVsZCI6ImlkIiwiZmllbGRWYWx1ZSI6Nywic29ydERpcmVjdGlvbiI6ImFzYyIsImlkIjo3fQ
  "/deals/{id}":
    delete:
      summary: Delete a deal
      description: "Marks a deal as deleted. After 30 days, the deal will be permanently deleted."
      x-tool-description: "Soft-deletes deals with 30-day recovery period before permanent removal. Essential for deal cleanup, error correction, and removing unwanted opportunities. Becomes inaccessible via standard APIs but recoverable during grace period."
      x-token-cost: 3
      operationId: deleteDeal
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - "deals:full"
      parameters:
        - in: path
          name: id
          description: The ID of the deal
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Delete deal
          content:
            application/json:
              schema:
                title: DeleteDealResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: Deleted deal ID
              example:
                success: true
                data:
                  id: 1
    get:
      summary: Get details of a deal
      description: Returns the details of a specific deal.
      x-tool-description: "Fetches comprehensive details of a specific deal by ID, including all properties, custom fields, associated contacts, and metadata. Use this endpoint for deal detail pages, updating deal information, or when you need complete deal context. Supports optional field inclusion for optimized data retrieval and custom field expansion for enhanced deal analysis."
      x-token-cost: 1
      operationId: getDeal
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - "deals:read"
            - "deals:full"
      parameters:
        - in: path
          name: id
          description: The ID of the deal
          required: true
          schema:
            type: integer
        - in: query
          name: include_fields
          description: Optional comma separated string array of additional fields to include
          schema:
            type: string
            enum:
              - next_activity_id
              - last_activity_id
              - first_won_time
              - products_count
              - files_count
              - notes_count
              - followers_count
              - email_messages_count
              - activities_count
              - done_activities_count
              - undone_activities_count
              - participants_count
              - last_incoming_mail_time
              - last_outgoing_mail_time
              - smart_bcc_email
        - in: query
          name: custom_fields
          description: "Optional comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for faster results and smaller response.<br/>A maximum of 15 keys is allowed."
          schema:
            type: string
      responses:
        "200":
          description: Get deal
          content:
            application/json:
              schema:
                type: object
                title: UpsertDealResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    title: UpsertDealResponseData
                    properties:
                      data:
                        type: object
                        title: DealItem
                        properties:
                          id:
                            type: integer
                            description: The ID of the deal
                          title:
                            type: string
                            description: The title of the deal
                          owner_id:
                            type: integer
                            description: The ID of the user who owns the deal
                          person_id:
                            type: integer
                            description: The ID of the person linked to the deal
                          org_id:
                            type: integer
                            description: The ID of the organization linked to the deal
                          pipeline_id:
                            type: integer
                            description: The ID of the pipeline associated with the deal
                          stage_id:
                            type: integer
                            description: The ID of the deal stage
                          value:
                            type: number
                            description: The value of the deal
                          currency:
                            type: string
                            description: The currency associated with the deal
                          add_time:
                            type: string
                            description: The creation date and time of the deal
                          update_time:
                            type: string
                            description: The last updated date and time of the deal
                          stage_change_time:
                            type: string
                            description: The last updated date and time of the deal stage
                          is_deleted:
                            type: boolean
                            description: Whether the deal is deleted or not
                          is_archived:
                            type: boolean
                            description: Whether the deal is archived or not
                          status:
                            type: string
                            description: The status of the deal
                          probability:
                            type: number
                            nullable: true
                            description: The success probability percentage of the deal
                          lost_reason:
                            type: string
                            nullable: true
                            description: The reason for losing the deal
                          visible_to:
                            type: integer
                            description: The visibility of the deal
                          close_time:
                            type: string
                            nullable: true
                            description: The date and time of closing the deal
                          won_time:
                            type: string
                            description: The date and time of changing the deal status as won
                          lost_time:
                            type: string
                            description: The date and time of changing the deal status as lost
                          expected_close_date:
                            type: string
                            format: date
                            description: The expected close date of the deal
                          label_ids:
                            type: array
                            description: The IDs of labels assigned to the deal
                            items:
                              type: integer
                          origin:
                            type: string
                            description: The way this Deal was created. `origin` field is set by Pipedrive when Deal is created and cannot be changed.
                          origin_id:
                            type: string
                            nullable: true
                            description: The optional ID to further distinguish the origin of the deal - e.g. Which API integration created this Deal.
                          channel:
                            type: integer
                            nullable: true
                            description: 'The ID of your Marketing channel this Deal was created from. Recognized Marketing channels can be configured in your <a href="https://app.pipedrive.com/settings/fields" target="_blank" rel="noopener noreferrer">Company settings</a>.'
                          channel_id:
                            type: string
                            nullable: true
                            description: The optional ID to further distinguish the Marketing channel.
                          arr:
                            type: number
                            nullable: true
                            description: |
                              Only available in Growth and above plans

                              The Annual Recurring Revenue of the deal

                              Null if there are no products attached to the deal
                          mrr:
                            type: number
                            nullable: true
                            description: |
                              Only available in Growth and above plans

                              The Monthly Recurring Revenue of the deal

                              Null if there are no products attached to the deal
                          acv:
                            type: number
                            nullable: true
                            description: |
                              Only available in Growth and above plans

                              The Annual Contract Value of the deal

                              Null if there are no products attached to the deal
                          custom_fields:
                            type: object
                            additionalProperties: true
                            description: An object where each key represents a custom field. All custom fields are referenced as randomly generated 40-character hashes
                        description: The deal object
              example:
                success: true
                data:
                  id: 1
                  title: Deal Title
                  creator_user_id: 1
                  owner_id: 1
                  value: 200
                  person_id: 1
                  org_id: 1
                  stage_id: 1
                  pipeline_id: 1
                  currency: USD
                  archive_time: "2021-01-01T00:00:00Z"
                  add_time: "2021-01-01T00:00:00Z"
                  update_time: "2021-01-01T00:00:00Z"
                  stage_change_time: "2021-01-01T00:00:00Z"
                  status: open
                  is_archived: false
                  is_deleted: false
                  probability: 90
                  lost_reason: Lost Reason
                  visible_to: 7
                  close_time: "2021-01-01T00:00:00Z"
                  won_time: "2021-01-01T00:00:00Z"
                  lost_time: "2021-01-01T00:00:00Z"
                  local_won_date: "2021-01-01"
                  local_lost_date: "2021-01-01"
                  local_close_date: "2021-01-01"
                  expected_close_date: "2021-01-01"
                  label_ids:
                    - 1
                    - 2
                    - 3
                  origin: ManuallyCreated
                  origin_id: null
                  channel: 52
                  channel_id: Jun23 Billboards
                  acv: 120
                  arr: 120
                  mrr: 10
                  custom_fields: {}
    patch:
      summary: Update a deal
      description: Updates the properties of a deal.
      x-tool-description: "Modifies deal properties using PATCH semantics for partial updates without affecting unchanged fields. Essential for deal progression, value updates, stage changes, and workflow automation. Preserves data integrity by updating only provided fields."
      x-token-cost: 5
      operationId: updateDeal
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - "deals:full"
      parameters:
        - in: path
          name: id
          description: The ID of the deal
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the deal
                owner_id:
                  type: integer
                  description: The ID of the user who owns the deal
                person_id:
                  type: integer
                  description: The ID of the person linked to the deal
                org_id:
                  type: integer
                  description: The ID of the organization linked to the deal
                pipeline_id:
                  type: integer
                  description: The ID of the pipeline associated with the deal
                stage_id:
                  type: integer
                  description: The ID of the deal stage
                value:
                  type: number
                  description: The value of the deal
                currency:
                  type: string
                  description: The currency associated with the deal
                is_deleted:
                  type: boolean
                  description: Whether the deal is deleted or not
                is_archived:
                  type: boolean
                  description: Whether the deal is archived or not
                archive_time:
                  type: string
                  description: "The optional date and time of archiving the deal in UTC. Format: YYYY-MM-DD HH:MM:SS. If omitted and `is_archived` is true, it will be set to the current date and time."
                status:
                  type: string
                  description: The status of the deal
                probability:
                  type: number
                  nullable: true
                  description: The success probability percentage of the deal
                lost_reason:
                  type: string
                  nullable: true
                  description: The reason for losing the deal. Can only be set if deal status is lost.
                visible_to:
                  type: integer
                  description: The visibility of the deal
                close_time:
                  type: string
                  nullable: true
                  description: The date and time of closing the deal. Can only be set if deal status is won or lost.
                won_time:
                  type: string
                  description: The date and time of changing the deal status as won. Can only be set if deal status is won.
                lost_time:
                  type: string
                  description: The date and time of changing the deal status as lost. Can only be set if deal status is lost.
                expected_close_date:
                  type: string
                  format: date
                  description: The expected close date of the deal
                label_ids:
                  type: array
                  description: The IDs of labels assigned to the deal
                  items:
                    type: integer
                custom_fields:
                  type: object
                  additionalProperties: true
                  description: An object where each key represents a custom field. All custom fields are referenced as randomly generated 40-character hashes
      responses:
        "200":
          description: Edit deal
          content:
            application/json:
              schema:
                type: object
                title: UpsertDealResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    title: UpsertDealResponseData
                    properties:
                      data:
                        type: object
                        title: DealItem
                        properties:
                          id:
                            type: integer
                            description: The ID of the deal
                          title:
                            type: string
                            description: The title of the deal
                          owner_id:
                            type: integer
                            description: The ID of the user who owns the deal
                          person_id:
                            type: integer
                            description: The ID of the person linked to the deal
                          org_id:
                            type: integer
                            description: The ID of the organization linked to the deal
                          pipeline_id:
                            type: integer
                            description: The ID of the pipeline associated with the deal
                          stage_id:
                            type: integer
                            description: The ID of the deal stage
                          value:
                            type: number
                            description: The value of the deal
                          currency:
                            type: string
                            description: The currency associated with the deal
                          add_time:
                            type: string
                            description: The creation date and time of the deal
                          update_time:
                            type: string
                            description: The last updated date and time of the deal
                          stage_change_time:
                            type: string
                            description: The last updated date and time of the deal stage
                          is_deleted:
                            type: boolean
                            description: Whether the deal is deleted or not
                          is_archived:
                            type: boolean
                            description: Whether the deal is archived or not
                          status:
                            type: string
                            description: The status of the deal
                          probability:
                            type: number
                            nullable: true
                            description: The success probability percentage of the deal
                          lost_reason:
                            type: string
                            nullable: true
                            description: The reason for losing the deal
                          visible_to:
                            type: integer
                            description: The visibility of the deal
                          close_time:
                            type: string
                            nullable: true
                            description: The date and time of closing the deal
                          won_time:
                            type: string
                            description: The date and time of changing the deal status as won
                          lost_time:
                            type: string
                            description: The date and time of changing the deal status as lost
                          expected_close_date:
                            type: string
                            format: date
                            description: The expected close date of the deal
                          label_ids:
                            type: array
                            description: The IDs of labels assigned to the deal
                            items:
                              type: integer
                          origin:
                            type: string
                            description: The way this Deal was created. `origin` field is set by Pipedrive when Deal is created and cannot be changed.
                          origin_id:
                            type: string
                            nullable: true
                            description: The optional ID to further distinguish the origin of the deal - e.g. Which API integration created this Deal.
                          channel:
                            type: integer
                            nullable: true
                            description: 'The ID of your Marketing channel this Deal was created from. Recognized Marketing channels can be configured in your <a href="https://app.pipedrive.com/settings/fields" target="_blank" rel="noopener noreferrer">Company settings</a>.'
                          channel_id:
                            type: string
                            nullable: true
                            description: The optional ID to further distinguish the Marketing channel.
                          arr:
                            type: number
                            nullable: true
                            description: |
                              Only available in Growth and above plans

                              The Annual Recurring Revenue of the deal

                              Null if there are no products attached to the deal
                          mrr:
                            type: number
                            nullable: true
                            description: |
                              Only available in Growth and above plans

                              The Monthly Recurring Revenue of the deal

                              Null if there are no products attached to the deal
                          acv:
                            type: number
                            nullable: true
                            description: |
                              Only available in Growth and above plans

                              The Annual Contract Value of the deal

                              Null if there are no products attached to the deal
                          custom_fields:
                            type: object
                            additionalProperties: true
                            description: An object where each key represents a custom field. All custom fields are referenced as randomly generated 40-character hashes
                        description: The deal object
              example:
                success: true
                data:
                  id: 1
                  title: Deal Title
                  creator_user_id: 1
                  owner_id: 1
                  value: 200
                  person_id: 1
                  org_id: 1
                  stage_id: 1
                  pipeline_id: 1
                  currency: USD
                  archive_time: "2021-01-01T00:00:00Z"
                  add_time: "2021-01-01T00:00:00Z"
                  update_time: "2021-01-01T00:00:00Z"
                  stage_change_time: "2021-01-01T00:00:00Z"
                  status: open
                  is_archived: false
                  is_deleted: false
                  probability: 90
                  lost_reason: Lost Reason
                  visible_to: 7
                  close_time: "2021-01-01T00:00:00Z"
                  won_time: "2021-01-01T00:00:00Z"
                  lost_time: "2021-01-01T00:00:00Z"
                  local_won_date: "2021-01-01"
                  local_lost_date: "2021-01-01"
                  local_close_date: "2021-01-01"
                  expected_close_date: "2021-01-01"
                  label_ids:
                    - 1
                    - 2
                    - 3
                  origin: ManuallyCreated
                  origin_id: null
                  channel: 52
                  channel_id: Jun23 Billboards
                  acv: 120
                  arr: 120
                  mrr: 10
                  custom_fields: {}
  "/deals/{id}/followers":
    get:
      summary: List followers of a deal
      description: Lists users who are following the deal.
      x-tool-description: "Retrieves users following a deal for visibility into collaboration and stakeholder involvement. Essential for team coordination, notification management, and understanding deal ownership in collaborative sales environments."
      x-token-cost: 10
      operationId: getDealFollowers
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - "deals:read"
            - "deals:full"
      parameters:
        - in: path
          name: id
          description: The ID of the deal
          required: true
          schema:
            type: integer
        - in: query
          name: limit
          description: "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
          schema:
            type: integer
            example: 100
        - in: query
          name: cursor
          required: false
          schema:
            type: string
          description: "For pagination, the marker (an opaque string value) representing the first item on the next page"
      responses:
        "200":
          description: List entity followers
          content:
            application/json:
              schema:
                type: object
                title: GetFollowersResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Followers array
                        items:
                          type: object
                          title: FollowerItem
                          properties:
                            user_id:
                              type: integer
                              description: The ID of the user following the entity
                            add_time:
                              type: string
                              description: The add time of the following
                      additional_data:
                        type: object
                        description: The additional data of the list
                        properties:
                          next_cursor:
                            type: string
                            description: The first item on the next page. The value of the `next_cursor` field will be `null` if you have reached the end of the dataset and there’s no more pages to be returned.
              example:
                success: true
                data:
                  - user_id: 1
                    add_time: "2021-01-01T00:00:00Z"
                additional_data:
                  next_cursor: eyJmaWVsZCI6ImlkIiwiZmllbGRWYWx1ZSI6Nywic29ydERpcmVjdGlvbiI6ImFzYyIsImlkIjo3fQ
    post:
      summary: Add a follower to a deal
      description: Adds a user as a follower to the deal.
      x-tool-description: "Adds user as deal follower to receive notifications and updates about progress. Essential for team collaboration, manager oversight, stakeholder visibility, and proper deal communication."
      x-token-cost: 5
      operationId: addDealFollower
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - "deals:full"
      parameters:
        - in: path
          name: id
          description: The ID of the deal
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              required:
                - user_id
              type: object
              properties:
                user_id:
                  type: integer
                  description: The ID of the user to add as a follower
      responses:
        "201":
          description: Add a follower
          content:
            application/json:
              schema:
                type: object
                title: AddFollowerResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    properties:
                      data:
                        type: object
                        title: FollowerItem
                        properties:
                          user_id:
                            type: integer
                            description: The ID of the user following the entity
                          add_time:
                            type: string
                            description: The add time of the following
                        description: The follower object
              example:
                success: true
                data:
                  user_id: 1
                  add_time: "2021-01-01T00:00:00Z"
  "/deals/{id}/followers/changelog":
    get:
      summary: List followers changelog of a deal
      description: Lists changelogs about users have followed the deal.
      x-tool-description: "Retrieves historical log of deal follower changes including start and stop events. Essential for audit trails, team collaboration analysis, compliance, and tracking deal stakeholder evolution over time."
      x-token-cost: 10
      operationId: getDealFollowersChangelog
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - "deals:read"
            - "deals:full"
      parameters:
        - in: path
          name: id
          description: The ID of the deal
          required: true
          schema:
            type: integer
        - in: query
          name: limit
          description: "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
          schema:
            type: integer
            example: 100
        - in: query
          name: cursor
          required: false
          schema:
            type: string
          description: "For pagination, the marker (an opaque string value) representing the first item on the next page"
      responses:
        "200":
          description: List entity followers
          content:
            application/json:
              schema:
                type: object
                title: GetFollowerChangelogsResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Follower changelogs array
                        items:
                          type: object
                          title: FollowerChangelogItem
                          properties:
                            action:
                              type: string
                              description: The type of change
                            actor_user_id:
                              type: integer
                              description: The ID of the user who did the change
                            follower_user_id:
                              type: integer
                              description: The ID of the user who was following the entity
                            time:
                              type: string
                              description: The time at which the change happened
                      additional_data:
                        type: object
                        description: The additional data of the list
                        properties:
                          next_cursor:
                            type: string
                            description: The first item on the next page. The value of the `next_cursor` field will be `null` if you have reached the end of the dataset and there’s no more pages to be returned.
              example:
                success: true
                data:
                  - action: added
                    actor_user_id: 1
                    follower_user_id: 1
                    time: "2024-01-01T00:00:00Z"
                additional_data:
                  next_cursor: eyJmaWVsZCI6ImlkIiwiZmllbGRWYWx1ZSI6Nywic29ydERpcmVjdGlvbiI6ImFzYyIsImlkIjo3fQ
  "/deals/{id}/followers/{follower_id}":
    delete:
      summary: Delete a follower from a deal
      description: Deletes a user follower from the deal.
      x-tool-description: "Removes user from deal's follower list by follower ID, stopping notifications and updates. Essential for team restructuring, role changes, access control, and managing stakeholder lists."
      x-token-cost: 3
      operationId: deleteDealFollower
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - "deals:full"
      parameters:
        - in: path
          name: id
          description: The ID of the deal
          required: true
          schema:
            type: integer
        - in: path
          name: follower_id
          required: true
          schema:
            type: integer
          description: The ID of the following user
      responses:
        "200":
          description: Remove a follower
          content:
            application/json:
              schema:
                title: DeleteFollowerResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: object
                    properties:
                      user_id:
                        type: integer
                        description: Deleted follower user ID
              example:
                success: true
                data:
                  user_id: 1
  /deals/products:
    get:
      summary: Get deal products of several deals
      description: Returns data about products attached to deals
      x-tool-description: "Retrieves product attachments across multiple deals (up to 100 IDs) in single request. Essential for bulk product analysis, revenue calculations, sales analytics, and commission calculations across deal portfolios."
      x-token-cost: 10
      operationId: getDealsProducts
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - "products:read"
            - "products:full"
            - "deals:read"
            - "deals:full"
      parameters:
        - in: query
          name: deal_ids
          required: true
          schema:
            type: array
            items:
              type: integer
          description: An array of integers with the IDs of the deals for which the attached products will be returned. A maximum of 100 deal IDs can be provided.
        - in: query
          name: cursor
          required: false
          schema:
            type: string
          description: "For pagination, the marker (an opaque string value) representing the first item on the next page"
        - in: query
          name: limit
          description: "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
          schema:
            type: integer
            example: 100
        - in: query
          name: sort_by
          description: "The field to sort by. Supported fields: `id`, `deal_id`, `add_time`, `update_time`, `order_nr`."
          schema:
            type: string
            default: id
            enum:
              - id
              - deal_id
              - add_time
              - update_time
              - order_nr
        - in: query
          name: sort_direction
          description: "The sorting direction. Supported values: `asc`, `desc`."
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
      responses:
        "200":
          description: List of products attached to deals
          content:
            application/json:
              schema:
                title: GetDealsProductsResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: array
                    description: Array containing data for all products attached to deals
                    items:
                      allOf:
                        - type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the deal-product (the ID of the product attached to the deal)
                            sum:
                              type: number
                              description: The sum of all the products attached to the deal
                            tax:
                              type: number
                              description: The product tax
                            deal_id:
                              type: integer
                              description: The ID of the deal
                            name:
                              type: string
                              description: The product name
                            product_id:
                              type: integer
                              description: The ID of the product
                            product_variation_id:
                              type: integer
                              nullable: true
                              description: The ID of the product variation
                            order_nr:
                              type: integer
                              nullable: true
                              description: The order number of the product within the deal
                            add_time:
                              type: string
                              description: The date and time when the product was added to the deal
                            update_time:
                              type: string
                              description: The date and time when the deal product was last updated
                            comments:
                              type: string
                              description: The comments of the product
                            currency:
                              type: string
                              description: The currency associated with the deal product
                            discount:
                              type: number
                              default: 0
                              description: The value of the discount. The `discount_type` field can be used to specify whether the value is an amount or a percentage
                            discount_type:
                              type: string
                              enum:
                                - percentage
                                - amount
                              default: percentage
                              description: The type of the discount's value
                            quantity:
                              type: integer
                              description: The quantity of the product
                            item_price:
                              type: number
                              description: The price value of the product
                            tax_method:
                              type: string
                              enum:
                                - exclusive
                                - inclusive
                                - none
                              description: "The tax option to be applied to the products. When using `inclusive`, the tax percentage will already be included in the price. When using `exclusive`, the tax will not be included in the price. When using `none`, no tax will be added. Use the `tax` field for defining the tax percentage amount. By default, the user setting value for tax options will be used. Changing this in one product affects the rest of the products attached to the deal"
                            is_enabled:
                              type: boolean
                              description: Whether this product is enabled for the deal
                              default: true
                        - type: object
                          properties:
                            billing_frequency:
                              default: one-time
                              type: string
                              enum:
                                - one-time
                                - annually
                                - semi-annually
                                - quarterly
                                - monthly
                                - weekly
                              description: |
                                Only available in Growth and above plans

                                How often a customer is billed for access to a service or product

                                To set `billing_frequency` different than `one-time`, the deal must not have installments associated

                                A deal can have up to 20 products attached with `billing_frequency` different than `one-time`
                        - type: object
                          properties:
                            billing_frequency_cycles:
                              default: null
                              type: integer
                              nullable: true
                              description: |
                                Only available in Growth and above plans

                                The number of times the billing frequency repeats for a product in a deal

                                When `billing_frequency` is set to `one-time`, this field must be `null`

                                When `billing_frequency` is set to `weekly`, this field cannot be `null`

                                For all the other values of `billing_frequency`, `null` represents a product billed indefinitely

                                Must be a positive integer less or equal to 208
                        - type: object
                          properties:
                            billing_start_date:
                              default: null
                              type: string
                              format: YYYY-MM-DD
                              nullable: true
                              description: |
                                Only available in Growth and above plans

                                The billing start date. Must be between 10 years in the past and 10 years in the future
                  additional_data:
                    type: object
                    description: Pagination related data
                    properties:
                      next_cursor:
                        type: string
                        description: The first item on the next page. The value of the `next_cursor` field will be `null` if you have reached the end of the dataset and there’s no more pages to be returned.
              example:
                success: true
                data:
                  - id: 3
                    sum: 90
                    tax: 0
                    deal_id: 1
                    name: Mechanical Pencil
                    product_id: 1
                    product_variation_id: null
                    order_nr: 50
                    add_time: "2019-12-19T11:36:49Z"
                    update_time: "2019-12-19T11:36:49Z"
                    comments: ""
                    currency: USD
                    discount: 0
                    quantity: 1
                    item_price: 90
                    tax_method: inclusive
                    discount_type: percentage
                    is_enabled: true
                    billing_frequency: one-time
                    billing_frequency_cycles: null
                    billing_start_date: "2019-12-19"
                additional_data:
                  next_cursor: eyJmaWVsZCI6ImlkIiwiZmllbGRWYWx1ZSI6Nywic29ydERpcmVjdGlvbiI6ImFzYyIsImlkIjo3fQ
  /deals/search:
    get:
      summary: Search deals
      description: 'Searches all deals by title, notes and/or custom fields. This endpoint is a wrapper of <a href="https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem">/v1/itemSearch</a> with a narrower OAuth scope. Found deals can be filtered by the person ID and the organization ID.'
      x-tool-description: "Performs full-text search across deal titles, notes, and custom fields with advanced filtering. Essential for search functionality, autocomplete features, and deal discovery. Supports exact matching, field-specific searches, and filtering by person, organization, or status."
      x-token-cost: 20
      operationId: searchDeals
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - "deals:read"
            - "deals:full"
            - "search:read"
      parameters:
        - in: query
          name: term
          required: true
          schema:
            type: string
          description: The search term to look for. Minimum 2 characters (or 1 if using `exact_match`). Please note that the search term has to be URL encoded.
        - in: query
          name: fields
          schema:
            type: string
            enum:
              - custom_fields
              - notes
              - title
          description: 'A comma-separated string array. The fields to perform the search from. Defaults to all of them. Only the following custom field types are searchable: `address`, `varchar`, `text`, `varchar_auto`, `double`, `monetary` and `phone`. Read more about searching by custom fields <a href="https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields" target="_blank" rel="noopener noreferrer">here</a>.'
        - in: query
          name: exact_match
          schema:
            type: boolean
          description: "When enabled, only full exact matches against the given term are returned. It is <b>not</b> case sensitive."
        - in: query
          name: person_id
          schema:
            type: integer
          description: Will filter deals by the provided person ID. The upper limit of found deals associated with the person is 2000.
        - in: query
          name: organization_id
          schema:
            type: integer
          description: Will filter deals by the provided organization ID. The upper limit of found deals associated with the organization is 2000.
        - in: query
          name: status
          schema:
            type: string
            enum:
              - open
              - won
              - lost
          description: "Will filter deals by the provided specific status. open = Open, won = Won, lost = Lost. The upper limit of found deals associated with the status is 2000."
        - in: query
          name: include_fields
          schema:
            type: string
            enum:
              - deal.cc_email
          description: Supports including optional fields in the results which are not provided by default
        - in: query
          name: limit
          description: "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
          schema:
            type: integer
            example: 100
        - in: query
          name: cursor
          required: false
          schema:
            type: string
          description: "For pagination, the marker (an opaque string value) representing the first item on the next page"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                title: GetDealSearchResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          items:
                            type: array
                            description: The array of deals
                            items:
                              type: object
                              properties:
                                result_score:
                                  type: number
                                  description: Search result relevancy
                                item:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: The ID of the deal
                                    type:
                                      type: string
                                      description: The type of the item
                                    title:
                                      type: string
                                      description: The title of the deal
                                    value:
                                      type: integer
                                      description: The value of the deal
                                    currency:
                                      type: string
                                      description: The currency of the deal
                                    status:
                                      type: string
                                      description: The status of the deal
                                    visible_to:
                                      type: integer
                                      description: The visibility of the deal
                                    owner:
                                      type: object
                                      properties:
                                        id:
                                          type: integer
                                          description: The ID of the owner of the deal
                                    stage:
                                      type: object
                                      properties:
                                        id:
                                          type: integer
                                          description: The ID of the stage of the deal
                                        name:
                                          type: string
                                          description: The name of the stage of the deal
                                    person:
                                      type: object
                                      nullable: true
                                      properties:
                                        id:
                                          type: integer
                                          description: The ID of the person the deal is associated with
                                        name:
                                          type: string
                                          description: The name of the person the deal is associated with
                                    organization:
                                      type: object
                                      nullable: true
                                      properties:
                                        id:
                                          type: integer
                                          description: The ID of the organization the deal is associated with
                                        name:
                                          type: string
                                          description: The name of the organization the deal is associated with
                                    custom_fields:
                                      type: array
                                      items:
                                        type: string
                                      description: Custom fields
                                    notes:
                                      type: array
                                      description: An array of notes
                                      items:
                                        type: string
                                    is_archived:
                                      type: boolean
                                      description: A flag indicating whether the deal is archived or not
                      additional_data:
                        type: object
                        description: Pagination related data
                        properties:
                          next_cursor:
                            type: string
                            description: The first item on the next page. The value of the `next_cursor` field will be `null` if you have reached the end of the dataset and there’s no more pages to be returned.
              example:
                success: true
                data:
                  items:
                    - result_score: 1.22
                      item:
                        id: 1
                        type: deal
                        title: Jane Doe deal
                        value: 100
                        currency: USD
                        status: open
                        visible_to: 3
                        owner:
                          id: 1
                        stage:
                          id: 1
                          name: Lead In
                        person:
                          id: 1
                          name: Jane Doe
                        organization: null
                        custom_fields: []
                        notes: []
                        is_archived: false
                additional_data:
                  next_cursor: eyJmaWVsZCI6ImlkIiwiZmllbGRWYWx1ZSI6Nywic29ydERpcmVjdGlvbiI6ImFzYyIsImlkIjo3fQ
  "/deals/{id}/products":
    get:
      summary: List products attached to a deal
      description: Lists products attached to a deal.
      x-tool-description: "Retrieves products attached to deal with detailed information: quantities, prices, and configurations. Essential for deal value analysis, product management, accurate summaries, and pricing calculations."
      x-token-cost: 10
      operationId: getDealProducts
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - "products:read"
            - "products:full"
            - "deals:read"
            - "deals:full"
      parameters:
        - in: path
          name: id
          description: The ID of the deal
          required: true
          schema:
            type: integer
        - in: query
          name: cursor
          required: false
          schema:
            type: string
          description: "For pagination, the marker (an opaque string value) representing the first item on the next page"
        - in: query
          name: limit
          description: "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
          schema:
            type: integer
            example: 100
        - in: query
          name: sort_by
          description: "The field to sort by. Supported fields: `id`, `add_time`, `update_time`, `order_nr`."
          schema:
            default: id
            type: string
            enum:
              - id
              - add_time
              - update_time
              - order_nr
        - in: query
          name: sort_direction
          description: "The sorting direction. Supported values: `asc`, `desc`."
          schema:
            default: asc
            type: string
            enum:
              - asc
              - desc
      responses:
        "200":
          description: List of products attached to deals
          content:
            application/json:
              schema:
                title: GetDealsProductsResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: array
                    description: Array containing data for all products attached to deals
                    items:
                      allOf:
                        - type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the deal-product (the ID of the product attached to the deal)
                            sum:
                              type: number
                              description: The sum of all the products attached to the deal
                            tax:
                              type: number
                              description: The product tax
                            deal_id:
                              type: integer
                              description: The ID of the deal
                            name:
                              type: string
                              description: The product name
                            product_id:
                              type: integer
                              description: The ID of the product
                            product_variation_id:
                              type: integer
                              nullable: true
                              description: The ID of the product variation
                            order_nr:
                              type: integer
                              nullable: true
                              description: The order number of the product within the deal
                            add_time:
                              type: string
                              description: The date and time when the product was added to the deal
                            update_time:
                              type: string
                              description: The date and time when the deal product was last updated
                            comments:
                              type: string
                              description: The comments of the product
                            currency:
                              type: string
                              description: The currency associated with the deal product
                            discount:
                              type: number
                              default: 0
                              description: The value of the discount. The `discount_type` field can be used to specify whether the value is an amount or a percentage
                            discount_type:
                              type: string
                              enum:
                                - percentage
                                - amount
                              default: percentage
                              description: The type of the discount's value
                            quantity:
                              type: integer
                              description: The quantity of the product
                            item_price:
                              type: number
                              description: The price value of the product
                            tax_method:
                              type: string
                              enum:
                                - exclusive
                                - inclusive
                                - none
                              description: "The tax option to be applied to the products. When using `inclusive`, the tax percentage will already be included in the price. When using `exclusive`, the tax will not be included in the price. When using `none`, no tax will be added. Use the `tax` field for defining the tax percentage amount. By default, the user setting value for tax options will be used. Changing this in one product affects the rest of the products attached to the deal"
                            is_enabled:
                              type: boolean
                              description: Whether this product is enabled for the deal
                              default: true
                        - type: object
                          properties:
                            billing_frequency:
                              default: one-time
                              type: string
                              enum:
                                - one-time
                                - annually
                                - semi-annually
                                - quarterly
                                - monthly
                                - weekly
                              description: |
                                Only available in Growth and above plans

                                How often a customer is billed for access to a service or product

                                To set `billing_frequency` different than `one-time`, the deal must not have installments associated

                                A deal can have up to 20 products attached with `billing_frequency` different than `one-time`
                        - type: object
                          properties:
                            billing_frequency_cycles:
                              default: null
                              type: integer
                              nullable: true
                              description: |
                                Only available in Growth and above plans

                                The number of times the billing frequency repeats for a product in a deal

                                When `billing_frequency` is set to `one-time`, this field must be `null`

                                When `billing_frequency` is set to `weekly`, this field cannot be `null`

                                For all the other values of `billing_frequency`, `null` represents a product billed indefinitely

                                Must be a positive integer less or equal to 208
                        - type: object
                          properties:
                            billing_start_date:
                              default: null
                              type: string
                              format: YYYY-MM-DD
                              nullable: true
                              description: |
                                Only available in Growth and above plans

                                The billing start date. Must be between 10 years in the past and 10 years in the future
                  additional_data:
                    type: object
                    description: Pagination related data
                    properties:
                      next_cursor:
                        type: string
                        description: The first item on the next page. The value of the `next_cursor` field will be `null` if you have reached the end of the dataset and there’s no more pages to be returned.
              example:
                success: true
                data:
                  - id: 3
                    sum: 90
                    tax: 0
                    deal_id: 1
                    name: Mechanical Pencil
                    product_id: 1
                    product_variation_id: null
                    order_nr: 50
                    add_time: "2019-12-19T11:36:49Z"
                    update_time: "2019-12-19T11:36:49Z"
                    comments: ""
                    currency: USD
                    discount: 0
                    quantity: 1
                    item_price: 90
                    tax_method: inclusive
                    discount_type: percentage
                    is_enabled: true
                    billing_frequency: one-time
                    billing_frequency_cycles: null
                    billing_start_date: "2019-12-19"
                additional_data:
                  next_cursor: eyJmaWVsZCI6ImlkIiwiZmllbGRWYWx1ZSI6Nywic29ydERpcmVjdGlvbiI6ImFzYyIsImlkIjo3fQ
    post:
      summary: Add a product to a deal
      description: "Adds a product to a deal, creating a new item called a deal-product."
      x-tool-description: "Attaches product to deal with configurable quantity, pricing, and discounts. Essential for sales processes, quote generation, and deal composition. Automatically updates deal values and maintains accurate sales tracking."
      x-token-cost: 5
      operationId: addDealProduct
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - "products:full"
            - "deals:full"
      parameters:
        - in: path
          name: id
          description: The ID of the deal
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              title: addDealProductRequest
              required:
                - item_price
                - quantity
                - product_id
              allOf:
                - required:
                    - product_id
                    - item_price
                    - quantity
                  title: dealProductRequestBody
                  type: object
                  properties:
                    product_id:
                      type: integer
                      description: The ID of the product
                    item_price:
                      type: number
                      description: The price value of the product
                    quantity:
                      type: number
                      description: The quantity of the product
                    tax:
                      type: number
                      default: 0
                      description: The product tax
                    comments:
                      type: string
                      description: The comments of the product
                    discount:
                      type: number
                      default: 0
                      description: The value of the discount. The `discount_type` field can be used to specify whether the value is an amount or a percentage
                    is_enabled:
                      type: boolean
                      description: |
                        Whether this product is enabled for the deal

                        Not possible to disable the product if the deal has installments associated and the product is the last one enabled

                        Not possible to enable the product if the deal has installments associated and the product is recurring
                      default: true
                    tax_method:
                      type: string
                      enum:
                        - exclusive
                        - inclusive
                        - none
                      description: "The tax option to be applied to the products. When using `inclusive`, the tax percentage will already be included in the price. When using `exclusive`, the tax will not be included in the price. When using `none`, no tax will be added. Use the `tax` field for defining the tax percentage amount. By default, the user setting value for tax options will be used. Changing this in one product affects the rest of the products attached to the deal"
                    discount_type:
                      type: string
                      enum:
                        - percentage
                        - amount
                      default: percentage
                      description: The value of the discount. The `discount_type` field can be used to specify whether the value is an amount or a percentage
                    product_variation_id:
                      type: integer
                      nullable: true
                      description: The ID of the product variation
                - type: object
                  properties:
                    billing_frequency:
                      default: one-time
                      type: string
                      enum:
                        - one-time
                        - annually
                        - semi-annually
                        - quarterly
                        - monthly
                        - weekly
                      description: |
                        Only available in Growth and above plans

                        How often a customer is billed for access to a service or product

                        To set `billing_frequency` different than `one-time`, the deal must not have installments associated

                        A deal can have up to 20 products attached with `billing_frequency` different than `one-time`
                - type: object
                  properties:
                    billing_frequency_cycles:
                      default: null
                      type: integer
                      nullable: true
                      description: |
                        Only available in Growth and above plans

                        The number of times the billing frequency repeats for a product in a deal

                        When `billing_frequency` is set to `one-time`, this field must be `null`

                        When `billing_frequency` is set to `weekly`, this field cannot be `null`

                        For all the other values of `billing_frequency`, `null` represents a product billed indefinitely

                        Must be a positive integer less or equal to 208
                - type: object
                  properties:
                    billing_start_date:
                      default: null
                      type: string
                      format: YYYY-MM-DD
                      nullable: true
                      description: |
                        Only available in Growth and above plans

                        The billing start date. Must be between 10 years in the past and 10 years in the future
      responses:
        "201":
          description: Add a product to the deal
          content:
            application/json:
              schema:
                title: AddDealProductResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    allOf:
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: The ID of the deal-product (the ID of the product attached to the deal)
                          sum:
                            type: number
                            description: The sum of all the products attached to the deal
                          tax:
                            type: number
                            description: The product tax
                          deal_id:
                            type: integer
                            description: The ID of the deal
                          name:
                            type: string
                            description: The product name
                          product_id:
                            type: integer
                            description: The ID of the product
                          product_variation_id:
                            type: integer
                            nullable: true
                            description: The ID of the product variation
                          order_nr:
                            type: integer
                            nullable: true
                            description: The order number of the product within the deal
                          add_time:
                            type: string
                            description: The date and time when the product was added to the deal
                          update_time:
                            type: string
                            description: The date and time when the deal product was last updated
                          comments:
                            type: string
                            description: The comments of the product
                          currency:
                            type: string
                            description: The currency associated with the deal product
                          discount:
                            type: number
                            default: 0
                            description: The value of the discount. The `discount_type` field can be used to specify whether the value is an amount or a percentage
                          discount_type:
                            type: string
                            enum:
                              - percentage
                              - amount
                            default: percentage
                            description: The type of the discount's value
                          quantity:
                            type: integer
                            description: The quantity of the product
                          item_price:
                            type: number
                            description: The price value of the product
                          tax_method:
                            type: string
                            enum:
                              - exclusive
                              - inclusive
                              - none
                            description: "The tax option to be applied to the products. When using `inclusive`, the tax percentage will already be included in the price. When using `exclusive`, the tax will not be included in the price. When using `none`, no tax will be added. Use the `tax` field for defining the tax percentage amount. By default, the user setting value for tax options will be used. Changing this in one product affects the rest of the products attached to the deal"
                          is_enabled:
                            type: boolean
                            description: Whether this product is enabled for the deal
                            default: true
                      - type: object
                        properties:
                          billing_frequency:
                            default: one-time
                            type: string
                            enum:
                              - one-time
                              - annually
                              - semi-annually
                              - quarterly
                              - monthly
                              - weekly
                            description: |
                              Only available in Growth and above plans

                              How often a customer is billed for access to a service or product

                              To set `billing_frequency` different than `one-time`, the deal must not have installments associated

                              A deal can have up to 20 products attached with `billing_frequency` different than `one-time`
                      - type: object
                        properties:
                          billing_frequency_cycles:
                            default: null
                            type: integer
                            nullable: true
                            description: |
                              Only available in Growth and above plans

                              The number of times the billing frequency repeats for a product in a deal

                              When `billing_frequency` is set to `one-time`, this field must be `null`

                              When `billing_frequency` is set to `weekly`, this field cannot be `null`

                              For all the other values of `billing_frequency`, `null` represents a product billed indefinitely

                              Must be a positive integer less or equal to 208
                      - type: object
                        properties:
                          billing_start_date:
                            default: null
                            type: string
                            format: YYYY-MM-DD
                            nullable: true
                            description: |
                              Only available in Growth and above plans

                              The billing start date. Must be between 10 years in the past and 10 years in the future
              example:
                success: true
                data:
                  id: 3
                  sum: 90
                  tax: 0
                  deal_id: 1
                  name: Mechanical Pencil
                  product_id: 1
                  product_variation_id: null
                  order_nr: 50
                  add_time: "2019-12-19T11:36:49Z"
                  update_time: "2019-12-19T11:36:49Z"
                  comments: ""
                  currency: USD
                  discount: 0
                  quantity: 1
                  item_price: 90
                  tax_method: inclusive
                  discount_type: percentage
                  is_enabled: true
                  billing_frequency: one-time
                  billing_frequency_cycles: null
                  billing_start_date: "2019-12-19"
    delete:
      summary: Delete many products from a deal
      description: "Deletes multiple products from a deal. If no product IDs are specified, up to 100 products will be removed from the deal. A maximum of 100 product IDs can be provided per request."
      x-tool-description: "Bulk-deletes products from a deal to simplify management and cleanup. Supports selective deletion (by specifying product IDs) or full removal of up to 100 products per request, enabling efficient deal maintenance and product update workflows."
      x-token-cost: 15
      operationId: deleteManyDealProducts
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - "products:full"
            - "deals:full"
      parameters:
        - in: path
          name: id
          description: The ID of the deal
          required: true
          schema:
            type: integer
        - in: query
          name: ids
          required: false
          description: "Comma-separated list of deal product IDs to delete. If not provided, all deal products will be deleted up to 100 items. Maximum 100 IDs allowed."
          schema:
            type: string
            example: "1,2,3"
      responses:
        "200":
          description: Delete many products from a deal
          content:
            application/json:
              schema:
                title: DeleteManyDealProductResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: object
                    properties:
                      ids:
                        type: array
                        description: Array of IDs of products that were deleted from the deal
                        items:
                          type: integer
                  additional_data:
                    type: object
                    nullable: true
                    properties:
                      more_items_in_collection:
                        type: boolean
                        description: Whether there are more products to delete (when the deal has more than 100 products)
              example:
                success: true
                data:
                  ids:
                    - 1
                    - 2
                    - 3
                additional_data:
                  more_items_in_collection: false
  "/deals/{id}/products/{product_attachment_id}":
    patch:
      summary: Update the product attached to a deal
      description: Updates the details of the product that has been attached to a deal.
      x-tool-description: "Modifies product attachment configuration within deal: quantity, pricing, discounts, and properties. Essential for negotiations, quantity updates, configuration corrections, and maintaining accurate deal values."
      x-token-cost: 5
      operationId: updateDealProduct
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - "products:full"
            - "deals:full"
      parameters:
        - in: path
          name: id
          description: The ID of the deal
          required: true
          schema:
            type: integer
        - in: path
          name: product_attachment_id
          required: true
          schema:
            type: integer
          description: The ID of the deal-product (the ID of the product attached to the deal)
      requestBody:
        content:
          application/json:
            schema:
              title: updateDealProductRequest
              allOf:
                - title: dealProductRequestBody
                  type: object
                  properties:
                    product_id:
                      type: integer
                      description: The ID of the product
                    item_price:
                      type: number
                      description: The price value of the product
                    quantity:
                      type: number
                      description: The quantity of the product
                    tax:
                      type: number
                      default: 0
                      description: The product tax
                    comments:
                      type: string
                      description: The comments of the product
                    discount:
                      type: number
                      default: 0
                      description: The value of the discount. The `discount_type` field can be used to specify whether the value is an amount or a percentage
                    is_enabled:
                      type: boolean
                      description: |
                        Whether this product is enabled for the deal

                        Not possible to disable the product if the deal has installments associated and the product is the last one enabled

                        Not possible to enable the product if the deal has installments associated and the product is recurring
                      default: true
                    tax_method:
                      type: string
                      enum:
                        - exclusive
                        - inclusive
                        - none
                      description: "The tax option to be applied to the products. When using `inclusive`, the tax percentage will already be included in the price. When using `exclusive`, the tax will not be included in the price. When using `none`, no tax will be added. Use the `tax` field for defining the tax percentage amount. By default, the user setting value for tax options will be used. Changing this in one product affects the rest of the products attached to the deal"
                    discount_type:
                      type: string
                      enum:
                        - percentage
                        - amount
                      default: percentage
                      description: The value of the discount. The `discount_type` field can be used to specify whether the value is an amount or a percentage
                    product_variation_id:
                      type: integer
                      nullable: true
                      description: The ID of the product variation
                - type: object
                  properties:
                    billing_frequency:
                      type: string
                      enum:
                        - one-time
                        - annually
                        - semi-annually
                        - quarterly
                        - monthly
                        - weekly
                      description: |
                        Only available in Growth and above plans

                        How often a customer is billed for access to a service or product

                        To set `billing_frequency` different than `one-time`, the deal must not have installments associated

                        A deal can have up to 20 products attached with `billing_frequency` different than `one-time`
                - type: object
                  properties:
                    billing_frequency_cycles:
                      type: integer
                      nullable: true
                      description: |
                        Only available in Growth and above plans

                        The number of times the billing frequency repeats for a product in a deal

                        When `billing_frequency` is set to `one-time`, this field must be `null`

                        When `billing_frequency` is set to `weekly`, this field cannot be `null`

                        For all the other values of `billing_frequency`, `null` represents a product billed indefinitely

                        Must be a positive integer less or equal to 208
                - type: object
                  properties:
                    billing_start_date:
                      type: string
                      format: YYYY-MM-DD
                      nullable: true
                      description: |
                        Only available in Growth and above plans

                        The billing start date. Must be between 10 years in the past and 10 years in the future
      responses:
        "200":
          description: Add a product to the deal
          content:
            application/json:
              schema:
                title: AddDealProductResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    allOf:
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: The ID of the deal-product (the ID of the product attached to the deal)
                          sum:
                            type: number
                            description: The sum of all the products attached to the deal
                          tax:
                            type: number
                            description: The product tax
                          deal_id:
                            type: integer
                            description: The ID of the deal
                          name:
                            type: string
                            description: The product name
                          product_id:
                            type: integer
                            description: The ID of the product
                          product_variation_id:
                            type: integer
                            nullable: true
                            description: The ID of the product variation
                          order_nr:
                            type: integer
                            nullable: true
                            description: The order number of the product within the deal
                          add_time:
                            type: string
                            description: The date and time when the product was added to the deal
                          update_time:
                            type: string
                            description: The date and time when the deal product was last updated
                          comments:
                            type: string
                            description: The comments of the product
                          currency:
                            type: string
                            description: The currency associated with the deal product
                          discount:
                            type: number
                            default: 0
                            description: The value of the discount. The `discount_type` field can be used to specify whether the value is an amount or a percentage
                          discount_type:
                            type: string
                            enum:
                              - percentage
                              - amount
                            default: percentage
                            description: The type of the discount's value
                          quantity:
                            type: integer
                            description: The quantity of the product
                          item_price:
                            type: number
                            description: The price value of the product
                          tax_method:
                            type: string
                            enum:
                              - exclusive
                              - inclusive
                              - none
                            description: "The tax option to be applied to the products. When using `inclusive`, the tax percentage will already be included in the price. When using `exclusive`, the tax will not be included in the price. When using `none`, no tax will be added. Use the `tax` field for defining the tax percentage amount. By default, the user setting value for tax options will be used. Changing this in one product affects the rest of the products attached to the deal"
                          is_enabled:
                            type: boolean
                            description: Whether this product is enabled for the deal
                            default: true
                      - type: object
                        properties:
                          billing_frequency:
                            default: one-time
                            type: string
                            enum:
                              - one-time
                              - annually
                              - semi-annually
                              - quarterly
                              - monthly
                              - weekly
                            description: |
                              Only available in Growth and above plans

                              How often a customer is billed for access to a service or product

                              To set `billing_frequency` different than `one-time`, the deal must not have installments associated

                              A deal can have up to 20 products attached with `billing_frequency` different than `one-time`
                      - type: object
                        properties:
                          billing_frequency_cycles:
                            default: null
                            type: integer
                            nullable: true
                            description: |
                              Only available in Growth and above plans

                              The number of times the billing frequency repeats for a product in a deal

                              When `billing_frequency` is set to `one-time`, this field must be `null`

                              When `billing_frequency` is set to `weekly`, this field cannot be `null`

                              For all the other values of `billing_frequency`, `null` represents a product billed indefinitely

                              Must be a positive integer less or equal to 208
                      - type: object
                        properties:
                          billing_start_date:
                            default: null
                            type: string
                            format: YYYY-MM-DD
                            nullable: true
                            description: |
                              Only available in Growth and above plans

                              The billing start date. Must be between 10 years in the past and 10 years in the future
              example:
                success: true
                data:
                  id: 3
                  sum: 90
                  tax: 0
                  deal_id: 1
                  name: Mechanical Pencil
                  product_id: 1
                  product_variation_id: null
                  order_nr: 50
                  add_time: "2019-12-19T11:36:49Z"
                  update_time: "2019-12-19T11:36:49Z"
                  comments: ""
                  currency: USD
                  discount: 0
                  quantity: 1
                  item_price: 90
                  tax_method: inclusive
                  discount_type: percentage
                  is_enabled: true
                  billing_frequency: one-time
                  billing_frequency_cycles: null
                  billing_start_date: "2019-12-19"
    delete:
      summary: Delete an attached product from a deal
      description: "Deletes a product attachment from a deal, using the `product_attachment_id`."
      x-tool-description: "Removes product attachment from deal by ID, automatically recalculating values and maintaining data integrity. Essential for negotiations, quote revisions, composition changes, and clean product-deal relationships."
      x-token-cost: 3
      operationId: deleteDealProduct
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - "deals:full"
            - "products:full"
      parameters:
        - in: path
          name: id
          description: The ID of the deal
          required: true
          schema:
            type: integer
        - in: path
          name: product_attachment_id
          required: true
          schema:
            type: integer
          description: The product attachment ID
      responses:
        "200":
          description: Delete an attached product from a deal
          content:
            application/json:
              schema:
                title: DeleteDealProductResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The ID of an attached product that was deleted from the deal
              example:
                success: true
                data:
                  id: 123
  "/deals/{id}/products/bulk":
    post:
      summary: Add multiple products to a deal
      description: Adds multiple products to a deal in a single request. Maximum of 100 products allowed per request.
      x-tool-description: "Bulk attaches multiple products to deal with configurable quantities, pricing, and discounts. Essential for efficient deal composition, batch product management, and streamlined sales processes. Automatically calculates deal values and maintains sales tracking."
      x-token-cost: 25
      operationId: addManyDealProducts
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - "products:full"
            - "deals:full"
      parameters:
        - in: path
          name: id
          description: The ID of the deal
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              title: createManyDealProductRequest
              type: object
              required:
                - data
              properties:
                data:
                  type: array
                  description: "Array of products to attach to the deal. See the single product endpoint (https://developers.pipedrive.com/docs/api/v1/Deals#addDealProduct) for the expected format of array items."
                  maxItems: 100
                  items:
                    title: addDealProductRequest
                    required:
                      - item_price
                      - quantity
                      - product_id
                    allOf:
                      - required:
                          - product_id
                          - item_price
                          - quantity
                        title: dealProductRequestBody
                        type: object
                        properties:
                          product_id:
                            type: integer
                            description: The ID of the product
                          item_price:
                            type: number
                            description: The price value of the product
                          quantity:
                            type: number
                            description: The quantity of the product
                          tax:
                            type: number
                            default: 0
                            description: The product tax
                          comments:
                            type: string
                            description: The comments of the product
                          discount:
                            type: number
                            default: 0
                            description: The value of the discount. The `discount_type` field can be used to specify whether the value is an amount or a percentage
                          is_enabled:
                            type: boolean
                            description: |
                              Whether this product is enabled for the deal

                              Not possible to disable the product if the deal has installments associated and the product is the last one enabled

                              Not possible to enable the product if the deal has installments associated and the product is recurring
                            default: true
                          tax_method:
                            type: string
                            enum:
                              - exclusive
                              - inclusive
                              - none
                            description: "The tax option to be applied to the products. When using `inclusive`, the tax percentage will already be included in the price. When using `exclusive`, the tax will not be included in the price. When using `none`, no tax will be added. Use the `tax` field for defining the tax percentage amount. By default, the user setting value for tax options will be used. Changing this in one product affects the rest of the products attached to the deal"
                          discount_type:
                            type: string
                            enum:
                              - percentage
                              - amount
                            default: percentage
                            description: The value of the discount. The `discount_type` field can be used to specify whether the value is an amount or a percentage
                          product_variation_id:
                            type: integer
                            nullable: true
                            description: The ID of the product variation
                      - type: object
                        properties:
                          billing_frequency:
                            default: one-time
                            type: string
                            enum:
                              - one-time
                              - annually
                              - semi-annually
                              - quarterly
                              - monthly
                              - weekly
                            description: |
                              Only available in Growth and above plans

                              How often a customer is billed for access to a service or product

                              To set `billing_frequency` different than `one-time`, the deal must not have installments associated

                              A deal can have up to 20 products attached with `billing_frequency` different than `one-time`
                      - type: object
                        properties:
                          billing_frequency_cycles:
                            default: null
                            type: integer
                            nullable: true
                            description: |
                              Only available in Growth and above plans

                              The number of times the billing frequency repeats for a product in a deal

                              When `billing_frequency` is set to `one-time`, this field must be `null`

                              When `billing_frequency` is set to `weekly`, this field cannot be `null`

                              For all the other values of `billing_frequency`, `null` represents a product billed indefinitely

                              Must be a positive integer less or equal to 208
                      - type: object
                        properties:
                          billing_start_date:
                            default: null
                            type: string
                            format: YYYY-MM-DD
                            nullable: true
                            description: |
                              Only available in Growth and above plans

                              The billing start date. Must be between 10 years in the past and 10 years in the future
      responses:
        "201":
          description: Add many products to a deal
          content:
            application/json:
              schema:
                title: AddManyDealProductResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: array
                    description: Array of created deal products
                    items:
                      allOf:
                        - type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the deal-product (the ID of the product attached to the deal)
                            sum:
                              type: number
                              description: The sum of all the products attached to the deal
                            tax:
                              type: number
                              description: The product tax
                            deal_id:
                              type: integer
                              description: The ID of the deal
                            name:
                              type: string
                              description: The product name
                            product_id:
                              type: integer
                              description: The ID of the product
                            product_variation_id:
                              type: integer
                              nullable: true
                              description: The ID of the product variation
                            order_nr:
                              type: integer
                              nullable: true
                              description: The order number of the product within the deal
                            add_time:
                              type: string
                              description: The date and time when the product was added to the deal
                            update_time:
                              type: string
                              description: The date and time when the deal product was last updated
                            comments:
                              type: string
                              description: The comments of the product
                            currency:
                              type: string
                              description: The currency associated with the deal product
                            discount:
                              type: number
                              default: 0
                              description: The value of the discount. The `discount_type` field can be used to specify whether the value is an amount or a percentage
                            discount_type:
                              type: string
                              enum:
                                - percentage
                                - amount
                              default: percentage
                              description: The type of the discount's value
                            quantity:
                              type: integer
                              description: The quantity of the product
                            item_price:
                              type: number
                              description: The price value of the product
                            tax_method:
                              type: string
                              enum:
                                - exclusive
                                - inclusive
                                - none
                              description: "The tax option to be applied to the products. When using `inclusive`, the tax percentage will already be included in the price. When using `exclusive`, the tax will not be included in the price. When using `none`, no tax will be added. Use the `tax` field for defining the tax percentage amount. By default, the user setting value for tax options will be used. Changing this in one product affects the rest of the products attached to the deal"
                            is_enabled:
                              type: boolean
                              description: Whether this product is enabled for the deal
                              default: true
                        - type: object
                          properties:
                            billing_frequency:
                              default: one-time
                              type: string
                              enum:
                                - one-time
                                - annually
                                - semi-annually
                                - quarterly
                                - monthly
                                - weekly
                              description: |
                                Only available in Growth and above plans

                                How often a customer is billed for access to a service or product

                                To set `billing_frequency` different than `one-time`, the deal must not have installments associated

                                A deal can have up to 20 products attached with `billing_frequency` different than `one-time`
                        - type: object
                          properties:
                            billing_frequency_cycles:
                              default: null
                              type: integer
                              nullable: true
                              description: |
                                Only available in Growth and above plans

                                The number of times the billing frequency repeats for a product in a deal

                                When `billing_frequency` is set to `one-time`, this field must be `null`

                                When `billing_frequency` is set to `weekly`, this field cannot be `null`

                                For all the other values of `billing_frequency`, `null` represents a product billed indefinitely

                                Must be a positive integer less or equal to 208
                        - type: object
                          properties:
                            billing_start_date:
                              default: null
                              type: string
                              format: YYYY-MM-DD
                              nullable: true
                              description: |
                                Only available in Growth and above plans

                                The billing start date. Must be between 10 years in the past and 10 years in the future
              example:
                success: true
                data:
                  - id: 1
                    sum: 60.46
                    tax: 0
                    deal_id: 1
                    name: Product 1
                    product_id: 1
                    product_variation_id: null
                    order_nr: 10
                    add_time: "2019-12-19T11:36:49Z"
                    update_time: "2019-12-19T11:36:49Z"
                    comments: ""
                    currency: USD
                    discount: 0
                    quantity: 2
                    item_price: 30.23
                    tax_method: none
                    discount_type: percentage
                    is_enabled: true
                    billing_frequency: one-time
                    billing_frequency_cycles: null
                    billing_start_date: null
                  - id: 2
                    sum: 40.5
                    tax: 0
                    deal_id: 1
                    name: Product 2
                    product_id: 2
                    product_variation_id: null
                    order_nr: 20
                    add_time: "2019-12-19T11:36:49Z"
                    update_time: "2019-12-19T11:36:49Z"
                    comments: ""
                    currency: USD
                    discount: 0
                    quantity: 1
                    item_price: 40.5
                    tax_method: none
                    discount_type: percentage
                    is_enabled: true
                    billing_frequency: one-time
                    billing_frequency_cycles: null
                    billing_start_date: null
  "/deals/{id}/discounts":
    get:
      summary: List discounts added to a deal
      description: Lists discounts attached to a deal.
      x-tool-description: "Retrieves discount configurations applied to deal including percentage and fixed-amount discounts. Essential for discount analysis, deal value calculations, accurate pricing summaries, and complex promotional arrangements."
      x-token-cost: 10
      operationId: getAdditionalDiscounts
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - "deals:read"
            - "deals:full"
      parameters:
        - in: path
          name: id
          description: The ID of the deal
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: List of discounts added to deal
          content:
            application/json:
              schema:
                title: GetAdditionalDiscountsResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: array
                    description: Array containing data for all discounts added to a deal
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: The ID of the additional discount
                        type:
                          type: string
                          enum:
                            - percentage
                            - amount
                          description: Determines whether the discount is applied as a percentage or a fixed amount.
                        amount:
                          type: number
                          description: The discount amount.
                        description:
                          type: string
                          description: The name of the discount.
                        deal_id:
                          type: integer
                          description: The ID of the deal the discount was added to.
                        created_at:
                          type: string
                          description: The date and time of when the discount was created in the ISO 8601 format.
                        created_by:
                          type: integer
                          description: The ID of the user that created the discount.
                        updated_at:
                          type: string
                          description: The date and time of when the discount was created in the ISO 8601 format.
                        updated_by:
                          type: integer
                          description: The ID of the user that last updated the discount.
              example:
                success: true
                data:
                  - id: 30195b0e-7577-4f52-a5cf-f3ee39b9d1e0
                    description: 10%
                    amount: 10
                    type: percentage
                    deal_id: 1
                    created_at: "2024-03-12T10:30:05Z"
                    created_by: 1
                    updated_at: "2024-03-12T10:30:05Z"
                    updated_by: 1
    post:
      summary: Add a discount to a deal
      description: "Adds a discount to a deal changing, the deal value if the deal has one-time products attached."
      x-tool-description: "Applies new discount to deal, automatically recalculating values for one-time products. Essential for negotiations, promotional campaigns, volume discounts, and maintaining accurate financial tracking."
      x-token-cost: 5
      operationId: postAdditionalDiscount
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - "deals:read"
            - "deals:full"
      parameters:
        - in: path
          name: id
          description: The ID of the deal
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              title: AddAdditionalDiscountRequestBody
              required:
                - description
                - amount
                - type
              properties:
                description:
                  type: string
                  description: The name of the discount.
                amount:
                  type: number
                  description: The discount amount. Must be a positive number (excluding 0).
                type:
                  type: string
                  enum:
                    - percentage
                    - amount
                  description: Determines whether the discount is applied as a percentage or a fixed amount.
      responses:
        "201":
          description: Discount added to deal
          content:
            application/json:
              schema:
                title: AddAdditionalDiscountResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: The ID of the additional discount
                      type:
                        type: string
                        enum:
                          - percentage
                          - amount
                        description: Determines whether the discount is applied as a percentage or a fixed amount.
                      amount:
                        type: number
                        description: The discount amount.
                      description:
                        type: string
                        description: The name of the discount.
                      deal_id:
                        type: integer
                        description: The ID of the deal the discount was added to.
                      created_at:
                        type: string
                        description: The date and time of when the discount was created in the ISO 8601 format.
                      created_by:
                        type: integer
                        description: The ID of the user that created the discount.
                      updated_at:
                        type: string
                        description: The date and time of when the discount was created in the ISO 8601 format.
                      updated_by:
                        type: integer
                        description: The ID of the user that last updated the discount.
              example:
                success: true
                data:
                  id: 30195b0e-7577-4f52-a5cf-f3ee39b9d1e0
                  description: 10%
                  amount: 10
                  type: percentage
                  deal_id: 1
                  created_at: "2024-03-12T10:30:05Z"
                  created_by: 1
                  updated_at: "2024-03-12T10:30:05Z"
                  updated_by: 1
  "/deals/{id}/discounts/{discount_id}":
    patch:
      summary: Update a discount added to a deal
      description: "Edits a discount added to a deal, changing the deal value if the deal has one-time products attached."
      x-tool-description: "Modifies existing discount configuration on deal, automatically recalculating values for one-time products. Essential for discount adjustments, corrections, promotional updates, and maintaining pricing integrity."
      x-token-cost: 5
      operationId: updateAdditionalDiscount
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - "deals:read"
            - "deals:full"
      parameters:
        - in: path
          name: id
          description: The ID of the deal
          required: true
          schema:
            type: integer
        - in: path
          name: discount_id
          required: true
          schema:
            type: string
            format: uuid
          description: The ID of the discount
      requestBody:
        content:
          application/json:
            schema:
              title: updateAdditionalDiscountRequestBody
              properties:
                description:
                  type: string
                  description: The name of the discount.
                amount:
                  type: number
                  description: The discount amount. Must be a positive number (excluding 0).
                type:
                  type: string
                  enum:
                    - percentage
                    - amount
                  description: Determines whether the discount is applied as a percentage or a fixed amount.
      responses:
        "200":
          description: Edited discount.
          content:
            application/json:
              schema:
                title: UpdateAdditionalDiscountResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: The ID of the additional discount
                      type:
                        type: string
                        enum:
                          - percentage
                          - amount
                        description: Determines whether the discount is applied as a percentage or a fixed amount.
                      amount:
                        type: number
                        description: The discount amount.
                      description:
                        type: string
                        description: The name of the discount.
                      deal_id:
                        type: integer
                        description: The ID of the deal the discount was added to.
                      created_at:
                        type: string
                        description: The date and time of when the discount was created in the ISO 8601 format.
                      created_by:
                        type: integer
                        description: The ID of the user that created the discount.
                      updated_at:
                        type: string
                        description: The date and time of when the discount was created in the ISO 8601 format.
                      updated_by:
                        type: integer
                        description: The ID of the user that last updated the discount.
              example:
                success: true
                data:
                  id: 30195b0e-7577-4f52-a5cf-f3ee39b9d1e0
                  description: 10%
                  amount: 10
                  type: percentage
                  deal_id: 1
                  created_at: "2024-03-12T10:30:05Z"
                  created_by: 1
                  updated_at: "2024-03-12T10:30:05Z"
                  updated_by: 1
    delete:
      summary: Delete a discount from a deal
      description: "Removes a discount from a deal, changing the deal value if the deal has one-time products attached."
      x-tool-description: "Removes discount from deal by ID, automatically recalculating values for one-time products. Essential when discounts become inapplicable, negotiations change, or pricing corrections are needed."
      x-token-cost: 3
      operationId: deleteAdditionalDiscount
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - "deals:read"
            - "deals:full"
      parameters:
        - in: path
          name: id
          description: The ID of the deal
          required: true
          schema:
            type: integer
        - in: path
          name: discount_id
          required: true
          schema:
            type: string
            format: uuid
          description: The ID of the discount
      responses:
        "200":
          description: The ID of the deleted discount.
          content:
            application/json:
              schema:
                title: DeleteAdditionalDiscountResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The ID of the discount that was deleted from the deal
              example:
                success: true
                data:
                  id: 123
  /deals/installments:
    get:
      summary: List installments added to a list of deals
      description: |
        Lists installments attached to a list of deals.

        Only available in Growth and above plans.
      x-tool-description: "Retrieves payment installments across multiple deals (up to 100 IDs) in single request. Restricted to Growth+ plans. Essential for bulk installment analysis, payment reporting, and enterprise cash flow management."
      x-token-cost: 10
      operationId: getInstallments
      tags:
        - Deals
        - Beta
      security:
        - api_key: []
        - oauth2:
            - "deals:read"
            - "deals:full"
      parameters:
        - in: query
          name: deal_ids
          required: true
          schema:
            type: array
            items:
              type: integer
          description: An array of integers with the IDs of the deals for which the attached installments will be returned. A maximum of 100 deal IDs can be provided.
        - in: query
          name: cursor
          required: false
          schema:
            type: string
          description: "For pagination, the marker (an opaque string value) representing the first item on the next page"
        - in: query
          name: limit
          description: "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
          schema:
            type: integer
            example: 100
        - in: query
          name: sort_by
          description: "The field to sort by. Supported fields: `id`, `billing_date`, `deal_id`."
          schema:
            default: id
            type: string
            enum:
              - id
              - billing_date
              - deal_id
        - in: query
          name: sort_direction
          description: "The sorting direction. Supported values: `asc`, `desc`."
          schema:
            default: asc
            type: string
            enum:
              - asc
              - desc
      responses:
        "200":
          description: List installments added to a deal
          content:
            application/json:
              schema:
                title: GetInstallmentsResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: array
                    description: Array containing data for all installments added to a deal
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The ID of the installment
                        amount:
                          type: number
                          description: The installment amount.
                        billing_date:
                          type: string
                          description: The date which the installment will be charged.
                        description:
                          type: string
                          description: The name of installment.
                        deal_id:
                          type: integer
                          description: The ID of the deal the installment was added to.
              example:
                success: true
                data:
                  - id: 1
                    amount: 10
                    billing_date: "2025-03-10"
                    deal_id: 1
                    description: Delivery Fee
  "/deals/{id}/installments":
    post:
      summary: Add an installment to a deal
      description: |
        Adds an installment to a deal.

        An installment can only be added if the deal includes at least one one-time product. 
        If the deal contains at least one recurring product, adding installments is not allowed.

        Only available in Growth and above plans.
      x-tool-description: "Creates payment installment for deals with one-time products, enabling split payment schedules. Restricted to Growth+ plans and incompatible with recurring products. Essential for enterprise deals and custom payment terms."
      x-token-cost: 5
      operationId: postInstallment
      tags:
        - Deals
        - Beta
      security:
        - api_key: []
        - oauth2:
            - "deals:read"
            - "deals:full"
      parameters:
        - in: path
          name: id
          description: The ID of the deal
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              title: AddInstallmentRequestBody
              required:
                - description
                - amount
                - billing_date
              properties:
                description:
                  type: string
                  description: The name of the installment.
                amount:
                  type: number
                  description: The installment amount. Must be a positive number (excluding 0).
                billing_date:
                  type: string
                  description: The date which the installment will be charged. Must be in the format YYYY-MM-DD.
      responses:
        "200":
          description: Installment added to deal
          content:
            application/json:
              schema:
                title: AddAInstallmentResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The ID of the installment
                      amount:
                        type: number
                        description: The installment amount.
                      billing_date:
                        type: string
                        description: The date which the installment will be charged.
                      description:
                        type: string
                        description: The name of installment.
                      deal_id:
                        type: integer
                        description: The ID of the deal the installment was added to.
              example:
                success: true
                data:
                  id: 1
                  amount: 10
                  billing_date: "2025-03-10"
                  deal_id: 1
                  description: Delivery Fee
  "/deals/{id}/installments/{installment_id}":
    patch:
      summary: Update an installment added to a deal
      description: |
        Edits an installment added to a deal.

        Only available in Growth and above plans.
      x-tool-description: "Modifies existing payment installment within deal: amounts, dates, or terms. Restricted to Growth+ plans. Essential for renegotiating schedules, corrections, and maintaining flexible payment arrangements."
      x-token-cost: 5
      operationId: updateInstallment
      tags:
        - Deals
        - Beta
      security:
        - api_key: []
        - oauth2:
            - "deals:read"
            - "deals:full"
      parameters:
        - in: path
          name: id
          description: The ID of the deal
          required: true
          schema:
            type: integer
        - in: path
          name: installment_id
          required: true
          schema:
            type: integer
          description: The ID of the installment
      requestBody:
        content:
          application/json:
            schema:
              title: UpdateInstallmentRequestBody
              properties:
                description:
                  type: string
                  description: The name of the installment.
                amount:
                  type: number
                  description: The installment amount. Must be a positive number (excluding 0).
                billing_date:
                  type: string
                  description: The date which the installment will be charged. Must be in the format YYYY-MM-DD.
      responses:
        "200":
          description: Edited installment.
          content:
            application/json:
              schema:
                title: UpdateInstallmentResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The ID of the installment
                      amount:
                        type: number
                        description: The installment amount.
                      billing_date:
                        type: string
                        description: The date which the installment will be charged.
                      description:
                        type: string
                        description: The name of installment.
                      deal_id:
                        type: integer
                        description: The ID of the deal the installment was added to.
              example:
                success: true
                data:
                  id: 1
                  amount: 10
                  billing_date: "2025-03-10"
                  deal_id: 1
                  description: Delivery Fee
    delete:
      summary: Delete an installment from a deal
      description: |
        Removes an installment from a deal.

        Only available in Growth and above plans.
      x-tool-description: "Removes payment installment from deal by ID, simplifying schedules or correcting structures. Restricted to Growth+ plans. Essential when payment terms change or installments are no longer needed."
      x-token-cost: 3
      operationId: deleteInstallment
      tags:
        - Deals
        - Beta
      security:
        - api_key: []
        - oauth2:
            - "deals:read"
            - "deals:full"
      parameters:
        - in: path
          name: id
          description: The ID of the deal
          required: true
          schema:
            type: integer
        - in: path
          name: installment_id
          required: true
          schema:
            type: integer
          description: The ID of the installment
      responses:
        "200":
          description: The ID of the deleted installment.
          content:
            application/json:
              schema:
                title: DeleteInstallmentResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The ID of the installment that was deleted from the deal
              example:
                success: true
                data:
                  id: 1
  "/deals/{id}/convert/lead":
    post:
      security:
        - api_key: []
        - oauth2:
            - "deals:full"
      tags:
        - Deals
        - Beta
      summary: Convert a deal to a lead (BETA)
      description: 'Initiates a conversion of a deal to a lead. The return value is an ID of a job that was assigned to perform the conversion. Related entities (notes, files, emails, activities, ...) are transferred during the process to the target entity. There are exceptions for entities like invoices or history that are not transferred and remain linked to the original deal. If the conversion is successful, the deal is marked as deleted. To retrieve the created entity ID and the result of the conversion, call the <a href="https://developers.pipedrive.com/docs/api/v1/Deals#getDealConversionStatus">/api/v2/deals/{deal_id}/convert/status/{conversion_id}</a> endpoint.'
      operationId: convertDealToLead
      x-token-cost: 40
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the deal to convert
      responses:
        "200":
          description: Successful response containing payload in the `data` field
          content:
            application/json:
              schema:
                title: AddConvertDealToLeadResponse
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    description: An object containing conversion job id that performs the conversion
                    required:
                      - conversion_id
                    properties:
                      conversion_id:
                        description: The ID of the conversion job that can be used to retrieve conversion status and details. The ID has UUID format.
                        type: string
                        format: uuid
                  additional_data:
                    type: object
                    nullable: true
                    example: null
              example:
                success: true
                data:
                  conversion_id: 4b40248b-945a-4802-b996-60fdff8c5c69
                additional_data: null
        "404":
          description: A resource describing an error
          content:
            application/json:
              schema:
                type: object
                title: GetConvertResponse
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    description: The description of the error
                  error_info:
                    type: string
                    description: A message describing how to solve the problem
                  data:
                    type: object
                    nullable: true
                    example: null
                  additional_data:
                    type: object
                    nullable: true
                    example: null
              example:
                success: false
                error: Entity was not found
                error_info: Object was not found.
                data: null
                additional_data: null
  "/deals/{id}/convert/status/{conversion_id}":
    get:
      security:
        - api_key: []
        - oauth2:
            - "deals:full"
            - "deals:read"
      tags:
        - Deals
        - Beta
      summary: Get Deal conversion status (BETA)
      description: "Returns information about the conversion. Status is always present and its value (not_started, running, completed, failed, rejected) represents the current state of the conversion. Lead ID is only present if the conversion was successfully finished. This data is only temporary and removed after a few days."
      operationId: getDealConversionStatus
      x-token-cost: 1
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of a deal
        - in: path
          name: conversion_id
          required: true
          schema:
            type: string
            format: uuid
          description: The ID of the conversion
      responses:
        "200":
          description: Successful response containing payload in the `data` field
          content:
            application/json:
              example:
                success: true
                data:
                  lead_id: 9f3e6e50-9d99-11ee-9538-29c81a92c0d1
                  conversion_id: 4b40248b-945a-4802-b996-60fdff8c5c69
                  status: completed
                additional_data: null
              schema:
                title: GetConvertResponse
                type: object
                required:
                  - success
                  - data
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    description: An object containing conversion status. After successful conversion the converted entity ID is also present.
                    required:
                      - conversion_id
                      - status
                    properties:
                      lead_id:
                        description: The ID of the new lead.
                        type: string
                        format: uuid
                      deal_id:
                        description: The ID of the new deal.
                        type: integer
                      conversion_id:
                        description: The ID of the conversion job. The ID can be used to retrieve conversion status and details. The ID has UUID format.
                        type: string
                        format: uuid
                      status:
                        description: Status of the conversion job.
                        type: string
                        enum:
                          - not_started
                          - running
                          - completed
                          - failed
                          - rejected
                  additional_data:
                    type: object
                    nullable: true
                    example: null
        "404":
          description: A resource describing an error
          content:
            application/json:
              schema:
                type: object
                title: GetConvertResponse
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    description: The description of the error
                  error_info:
                    type: string
                    description: A message describing how to solve the problem
                  data:
                    type: object
                    nullable: true
                    example: null
                  additional_data:
                    type: object
                    nullable: true
                    example: null
              example:
                success: false
                error: Entity was not found
                error_info: Object was not found.
                data: null
                additional_data: null
  /persons:
    get:
      summary: Get all persons
      description: "Returns data about all persons. Fields `ims`, `postal_address`, `notes`, `birthday`, and `job_title` are only included if contact sync is enabled for the company."
      x-token-cost: 10
      operationId: getPersons
      tags:
        - Persons
      security:
        - api_key: []
        - oauth2:
            - "contacts:read"
            - "contacts:full"
      parameters:
        - in: query
          name: filter_id
          schema:
            type: integer
          description: "If supplied, only persons matching the specified filter are returned"
        - in: query
          name: ids
          description: "Optional comma separated string array of up to 100 entity ids to fetch. If filter_id is provided, this is ignored. If any of the requested entities do not exist or are not visible, they are not included in the response."
          schema:
            type: string
        - in: query
          name: owner_id
          schema:
            type: integer
          description: "If supplied, only persons owned by the specified user are returned. If filter_id is provided, this is ignored."
        - in: query
          name: org_id
          schema:
            type: integer
          description: "If supplied, only persons linked to the specified organization are returned. If filter_id is provided, this is ignored."
        - in: query
          name: updated_since
          schema:
            type: string
          description: "If set, only persons with an `update_time` later than or equal to this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z."
        - in: query
          name: updated_until
          schema:
            type: string
          description: "If set, only persons with an `update_time` earlier than this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z."
        - in: query
          name: sort_by
          description: "The field to sort by. Supported fields: `id`, `update_time`, `add_time`."
          schema:
            type: string
            default: id
            enum:
              - id
              - update_time
              - add_time
        - in: query
          name: sort_direction
          description: "The sorting direction. Supported values: `asc`, `desc`."
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
        - in: query
          name: include_fields
          description: Optional comma separated string array of additional fields to include. `marketing_status` and `doi_status` can only be included if the company has marketing app enabled.
          schema:
            type: string
            enum:
              - next_activity_id
              - last_activity_id
              - open_deals_count
              - related_open_deals_count
              - closed_deals_count
              - related_closed_deals_count
              - participant_open_deals_count
              - participant_closed_deals_count
              - email_messages_count
              - activities_count
              - done_activities_count
              - undone_activities_count
              - files_count
              - notes_count
              - followers_count
              - won_deals_count
              - related_won_deals_count
              - lost_deals_count
              - related_lost_deals_count
              - last_incoming_mail_time
              - last_outgoing_mail_time
              - marketing_status
              - doi_status
        - in: query
          name: custom_fields
          description: "Optional comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for faster results and smaller response.<br/>A maximum of 15 keys is allowed."
          schema:
            type: string
        - in: query
          name: limit
          description: "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
          schema:
            type: integer
            example: 100
        - in: query
          name: cursor
          required: false
          schema:
            type: string
          description: "For pagination, the marker (an opaque string value) representing the first item on the next page"
      responses:
        "200":
          description: Get all persons
          content:
            application/json:
              schema:
                type: object
                title: GetPersonsResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Persons array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the person
                            name:
                              type: string
                              description: The name of the person
                            first_name:
                              type: string
                              description: The first name of the person
                            last_name:
                              type: string
                              description: The last name of the person
                            owner_id:
                              type: integer
                              description: The ID of the user who owns the person
                            org_id:
                              type: integer
                              description: The ID of the organization linked to the person
                            add_time:
                              type: string
                              description: The creation date and time of the person
                            update_time:
                              type: string
                              description: The last updated date and time of the person
                            emails:
                              type: array
                              description: The emails of the person
                              items:
                                type: object
                                properties:
                                  value:
                                    type: string
                                    description: The email address of the person
                                  primary:
                                    type: boolean
                                    description: Whether the email is primary or not
                                  label:
                                    type: string
                                    description: The email address classification label
                            phones:
                              type: array
                              description: The phones of the person
                              items:
                                type: object
                                properties:
                                  value:
                                    type: string
                                    description: The phone number of the person
                                  primary:
                                    type: boolean
                                    description: Whether the phone number is primary or not
                                  label:
                                    type: string
                                    description: The phone number classification label
                            is_deleted:
                              type: boolean
                              description: Whether the person is deleted or not
                            visible_to:
                              type: integer
                              description: The visibility of the person
                            label_ids:
                              type: array
                              description: The IDs of labels assigned to the person
                              items:
                                type: integer
                            picture_id:
                              type: integer
                              description: The ID of the picture associated with the person
                            postal_address:
                              type: object
                              description: "Postal address of the person, included if contact sync is enabled for the company"
                              properties:
                                value:
                                  type: string
                                  description: The full address of the person
                                country:
                                  type: string
                                  description: Country of the person
                                admin_area_level_1:
                                  type: string
                                  description: Admin area level 1 (e.g. state) of the person
                                admin_area_level_2:
                                  type: string
                                  description: Admin area level 2 (e.g. county) of the person
                                locality:
                                  type: string
                                  description: Locality (e.g. city) of the person
                                sublocality:
                                  type: string
                                  description: Sublocality (e.g. neighborhood) of the person
                                route:
                                  type: string
                                  description: Route (e.g. street) of the person
                                street_number:
                                  type: string
                                  description: Street number of the person
                                postal_code:
                                  type: string
                                  description: Postal code of the person
                            notes:
                              type: string
                              description: "Contact sync notes of the person, maximum 10 000 characters, included if contact sync is enabled for the company"
                            im:
                              type: array
                              description: "The instant messaging accounts of the person, included if contact sync is enabled for the company"
                              items:
                                type: object
                                properties:
                                  value:
                                    type: string
                                    description: The instant messaging account of the person
                                  primary:
                                    type: boolean
                                    description: Whether the instant messaging account is primary or not
                                  label:
                                    type: string
                                    description: The instant messaging account classification label
                            birthday:
                              type: string
                              description: "The birthday of the person, included if contact sync is enabled for the company"
                            job_title:
                              type: string
                              description: "The job title of the person, included if contact sync is enabled for the company"
                            custom_fields:
                              type: object
                              additionalProperties: true
                              description: An object where each key represents a custom field. All custom fields are referenced as randomly generated 40-character hashes
                      additional_data:
                        type: object
                        description: The additional data of the list
                        properties:
                          next_cursor:
                            type: string
                            description: The first item on the next page. The value of the `next_cursor` field will be `null` if you have reached the end of the dataset and there’s no more pages to be returned.
              example:
                success: true
                data:
                  - id: 1
                    name: Person Name
                    first_name: Person
                    last_name: Name
                    owner_id: 1
                    org_id: 1
                    add_time: "2021-01-01T00:00:00Z"
                    update_time: "2021-01-01T00:00:00Z"
                    emails:
                      - value: email1@email.com
                        primary: true
                        label: work
                      - value: email2@email.com
                        primary: false
                        label: home
                    phones:
                      - value: "12345"
                        primary: true
                        label: work
                      - value: "54321"
                        primary: false
                        label: home
                    is_deleted: false
                    visible_to: 7
                    label_ids:
                      - 1
                      - 2
                      - 3
                    picture_id: 1
                    custom_fields: {}
                    notes: Notes from contact sync
                    im:
                      - value: skypeusername
                        primary: true
                        label: skype
                      - value: whatsappusername
                        primary: false
                        label: whatsapp
                    birthday: "2000-12-31"
                    job_title: Manager
                    postal_address:
                      value: 123 Main St
                      country: USA
                      admin_area_level_1: CA
                      admin_area_level_2: Santa Clara
                      locality: Sunnyvale
                      sublocality: Downtown
                      route: Main St
                      street_number: "123"
                      postal_code: "94085"
                additional_data:
                  next_cursor: eyJmaWVsZCI6ImlkIiwiZmllbGRWYWx1ZSI6Nywic29ydERpcmVjdGlvbiI6ImFzYyIsImlkIjo3fQ
    post:
      summary: Add a new person
      description: "Adds a new person. If the company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also accept and return the `marketing_status` field."
      x-token-cost: 5
      operationId: addPerson
      tags:
        - Persons
      security:
        - api_key: []
        - oauth2:
            - "contacts:full"
      requestBody:
        content:
          application/json:
            schema:
              required:
                - title
              type: object
              properties:
                name:
                  type: string
                  description: The name of the person
                owner_id:
                  type: integer
                  description: The ID of the user who owns the person
                org_id:
                  type: integer
                  description: The ID of the organization linked to the person
                add_time:
                  type: string
                  description: The creation date and time of the person
                update_time:
                  type: string
                  description: The last updated date and time of the person
                emails:
                  type: array
                  description: The emails of the person
                  items:
                    type: object
                    properties:
                      value:
                        type: string
                        description: The email address of the person
                      primary:
                        type: boolean
                        description: Whether the email is primary or not
                      label:
                        type: boolean
                        description: The email address classification label
                phones:
                  type: array
                  description: The phones of the person
                  items:
                    type: object
                    properties:
                      value:
                        type: string
                        description: The phone number of the person
                      primary:
                        type: boolean
                        description: Whether the phone number is primary or not
                      label:
                        type: boolean
                        description: The phone number classification label
                visible_to:
                  type: integer
                  description: The visibility of the person
                label_ids:
                  type: array
                  description: The IDs of labels assigned to the person
                  items:
                    type: integer
                marketing_status:
                  type: string
                  description: "If the person does not have a valid email address, then the marketing status is **not set** and `no_consent` is returned for the `marketing_status` value when the new person is created. If the change is forbidden, the status will remain unchanged for every call that tries to modify the marketing status. Please be aware that it is only allowed **once** to change the marketing status from an old status to a new one.<table><tr><th>Value</th><th>Description</th></tr><tr><td>`no_consent`</td><td>The customer has not given consent to receive any marketing communications</td></tr><tr><td>`unsubscribed`</td><td>The customers have unsubscribed from ALL marketing communications</td></tr><tr><td>`subscribed`</td><td>The customers are subscribed and are counted towards marketing caps</td></tr><tr><td>`archived`</td><td>The customers with `subscribed` status can be moved to `archived` to save consent, but they are not paid for</td></tr></table>"
                  enum:
                    - no_consent
                    - unsubscribed
                    - subscribed
                    - archived
      responses:
        "200":
          description: Add person
          content:
            application/json:
              schema:
                type: object
                title: UpsertPersonResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    title: UpsertPersonResponseData
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: The ID of the person
                          name:
                            type: string
                            description: The name of the person
                          first_name:
                            type: string
                            description: The first name of the person
                          last_name:
                            type: string
                            description: The last name of the person
                          owner_id:
                            type: integer
                            description: The ID of the user who owns the person
                          org_id:
                            type: integer
                            description: The ID of the organization linked to the person
                          add_time:
                            type: string
                            description: The creation date and time of the person
                          update_time:
                            type: string
                            description: The last updated date and time of the person
                          emails:
                            type: array
                            description: The emails of the person
                            items:
                              type: object
                              properties:
                                value:
                                  type: string
                                  description: The email address of the person
                                primary:
                                  type: boolean
                                  description: Whether the email is primary or not
                                label:
                                  type: string
                                  description: The email address classification label
                          phones:
                            type: array
                            description: The phones of the person
                            items:
                              type: object
                              properties:
                                value:
                                  type: string
                                  description: The phone number of the person
                                primary:
                                  type: boolean
                                  description: Whether the phone number is primary or not
                                label:
                                  type: string
                                  description: The phone number classification label
                          is_deleted:
                            type: boolean
                            description: Whether the person is deleted or not
                          visible_to:
                            type: integer
                            description: The visibility of the person
                          label_ids:
                            type: array
                            description: The IDs of labels assigned to the person
                            items:
                              type: integer
                          picture_id:
                            type: integer
                            description: The ID of the picture associated with the person
                          postal_address:
                            type: object
                            description: "Postal address of the person, included if contact sync is enabled for the company"
                            properties:
                              value:
                                type: string
                                description: The full address of the person
                              country:
                                type: string
                                description: Country of the person
                              admin_area_level_1:
                                type: string
                                description: Admin area level 1 (e.g. state) of the person
                              admin_area_level_2:
                                type: string
                                description: Admin area level 2 (e.g. county) of the person
                              locality:
                                type: string
                                description: Locality (e.g. city) of the person
                              sublocality:
                                type: string
                                description: Sublocality (e.g. neighborhood) of the person
                              route:
                                type: string
                                description: Route (e.g. street) of the person
                              street_number:
                                type: string
                                description: Street number of the person
                              postal_code:
                                type: string
                                description: Postal code of the person
                          notes:
                            type: string
                            description: "Contact sync notes of the person, maximum 10 000 characters, included if contact sync is enabled for the company"
                          im:
                            type: array
                            description: "The instant messaging accounts of the person, included if contact sync is enabled for the company"
                            items:
                              type: object
                              properties:
                                value:
                                  type: string
                                  description: The instant messaging account of the person
                                primary:
                                  type: boolean
                                  description: Whether the instant messaging account is primary or not
                                label:
                                  type: string
                                  description: The instant messaging account classification label
                          birthday:
                            type: string
                            description: "The birthday of the person, included if contact sync is enabled for the company"
                          job_title:
                            type: string
                            description: "The job title of the person, included if contact sync is enabled for the company"
                          custom_fields:
                            type: object
                            additionalProperties: true
                            description: An object where each key represents a custom field. All custom fields are referenced as randomly generated 40-character hashes
                        description: The person object
              example:
                success: true
                data:
                  id: 1
                  name: Person Name
                  first_name: Person
                  last_name: Name
                  owner_id: 1
                  org_id: 1
                  add_time: "2021-01-01T00:00:00Z"
                  update_time: "2021-01-01T00:00:00Z"
                  emails:
                    - value: email1@email.com
                      primary: true
                      label: work
                    - value: email2@email.com
                      primary: false
                      label: home
                  phones:
                    - value: "12345"
                      primary: true
                      label: work
                    - value: "54321"
                      primary: false
                      label: home
                  is_deleted: false
                  visible_to: 7
                  label_ids:
                    - 1
                    - 2
                    - 3
                  picture_id: 1
                  custom_fields: {}
                  notes: Notes from contact sync
                  im:
                    - value: skypeusername
                      primary: true
                      label: skype
                    - value: whatsappusername
                      primary: false
                      label: whatsapp
                  birthday: "2000-12-31"
                  job_title: Manager
                  postal_address:
                    value: 123 Main St
                    country: USA
                    admin_area_level_1: CA
                    admin_area_level_2: Santa Clara
                    locality: Sunnyvale
                    sublocality: Downtown
                    route: Main St
                    street_number: "123"
                    postal_code: "94085"
  "/persons/{id}":
    delete:
      summary: Delete a person
      description: "Marks a person as deleted. After 30 days, the person will be permanently deleted."
      x-token-cost: 3
      operationId: deletePerson
      tags:
        - Persons
      security:
        - api_key: []
        - oauth2:
            - "contacts:full"
      parameters:
        - in: path
          name: id
          description: The ID of the person
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Delete person
          content:
            application/json:
              schema:
                title: DeletePersonResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: Deleted person ID
              example:
                success: true
                data:
                  id: 1
    get:
      summary: Get details of a person
      description: "Returns the details of a specific person. Fields `ims`, `postal_address`, `notes`, `birthday`, and `job_title` are only included if contact sync is enabled for the company."
      x-token-cost: 1
      operationId: getPerson
      tags:
        - Persons
      security:
        - api_key: []
        - oauth2:
            - "contacts:read"
            - "contacts:full"
      parameters:
        - in: path
          name: id
          description: The ID of the person
          required: true
          schema:
            type: integer
        - in: query
          name: include_fields
          description: Optional comma separated string array of additional fields to include. `marketing_status` and `doi_status` can only be included if the company has marketing app enabled.
          schema:
            type: string
            enum:
              - next_activity_id
              - last_activity_id
              - open_deals_count
              - related_open_deals_count
              - closed_deals_count
              - related_closed_deals_count
              - participant_open_deals_count
              - participant_closed_deals_count
              - email_messages_count
              - activities_count
              - done_activities_count
              - undone_activities_count
              - files_count
              - notes_count
              - followers_count
              - won_deals_count
              - related_won_deals_count
              - lost_deals_count
              - related_lost_deals_count
              - last_incoming_mail_time
              - last_outgoing_mail_time
              - marketing_status
              - doi_status
        - in: query
          name: custom_fields
          description: "Optional comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for faster results and smaller response.<br/>A maximum of 15 keys is allowed."
          schema:
            type: string
      responses:
        "200":
          description: Get person
          content:
            application/json:
              schema:
                type: object
                title: UpsertPersonResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    title: UpsertPersonResponseData
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: The ID of the person
                          name:
                            type: string
                            description: The name of the person
                          first_name:
                            type: string
                            description: The first name of the person
                          last_name:
                            type: string
                            description: The last name of the person
                          owner_id:
                            type: integer
                            description: The ID of the user who owns the person
                          org_id:
                            type: integer
                            description: The ID of the organization linked to the person
                          add_time:
                            type: string
                            description: The creation date and time of the person
                          update_time:
                            type: string
                            description: The last updated date and time of the person
                          emails:
                            type: array
                            description: The emails of the person
                            items:
                              type: object
                              properties:
                                value:
                                  type: string
                                  description: The email address of the person
                                primary:
                                  type: boolean
                                  description: Whether the email is primary or not
                                label:
                                  type: string
                                  description: The email address classification label
                          phones:
                            type: array
                            description: The phones of the person
                            items:
                              type: object
                              properties:
                                value:
                                  type: string
                                  description: The phone number of the person
                                primary:
                                  type: boolean
                                  description: Whether the phone number is primary or not
                                label:
                                  type: string
                                  description: The phone number classification label
                          is_deleted:
                            type: boolean
                            description: Whether the person is deleted or not
                          visible_to:
                            type: integer
                            description: The visibility of the person
                          label_ids:
                            type: array
                            description: The IDs of labels assigned to the person
                            items:
                              type: integer
                          picture_id:
                            type: integer
                            description: The ID of the picture associated with the person
                          postal_address:
                            type: object
                            description: "Postal address of the person, included if contact sync is enabled for the company"
                            properties:
                              value:
                                type: string
                                description: The full address of the person
                              country:
                                type: string
                                description: Country of the person
                              admin_area_level_1:
                                type: string
                                description: Admin area level 1 (e.g. state) of the person
                              admin_area_level_2:
                                type: string
                                description: Admin area level 2 (e.g. county) of the person
                              locality:
                                type: string
                                description: Locality (e.g. city) of the person
                              sublocality:
                                type: string
                                description: Sublocality (e.g. neighborhood) of the person
                              route:
                                type: string
                                description: Route (e.g. street) of the person
                              street_number:
                                type: string
                                description: Street number of the person
                              postal_code:
                                type: string
                                description: Postal code of the person
                          notes:
                            type: string
                            description: "Contact sync notes of the person, maximum 10 000 characters, included if contact sync is enabled for the company"
                          im:
                            type: array
                            description: "The instant messaging accounts of the person, included if contact sync is enabled for the company"
                            items:
                              type: object
                              properties:
                                value:
                                  type: string
                                  description: The instant messaging account of the person
                                primary:
                                  type: boolean
                                  description: Whether the instant messaging account is primary or not
                                label:
                                  type: string
                                  description: The instant messaging account classification label
                          birthday:
                            type: string
                            description: "The birthday of the person, included if contact sync is enabled for the company"
                          job_title:
                            type: string
                            description: "The job title of the person, included if contact sync is enabled for the company"
                          custom_fields:
                            type: object
                            additionalProperties: true
                            description: An object where each key represents a custom field. All custom fields are referenced as randomly generated 40-character hashes
                        description: The person object
              example:
                success: true
                data:
                  id: 1
                  name: Person Name
                  first_name: Person
                  last_name: Name
                  owner_id: 1
                  org_id: 1
                  add_time: "2021-01-01T00:00:00Z"
                  update_time: "2021-01-01T00:00:00Z"
                  emails:
                    - value: email1@email.com
                      primary: true
                      label: work
                    - value: email2@email.com
                      primary: false
                      label: home
                  phones:
                    - value: "12345"
                      primary: true
                      label: work
                    - value: "54321"
                      primary: false
                      label: home
                  is_deleted: false
                  visible_to: 7
                  label_ids:
                    - 1
                    - 2
                    - 3
                  picture_id: 1
                  custom_fields: {}
                  notes: Notes from contact sync
                  im:
                    - value: skypeusername
                      primary: true
                      label: skype
                    - value: whatsappusername
                      primary: false
                      label: whatsapp
                  birthday: "2000-12-31"
                  job_title: Manager
                  postal_address:
                    value: 123 Main St
                    country: USA
                    admin_area_level_1: CA
                    admin_area_level_2: Santa Clara
                    locality: Sunnyvale
                    sublocality: Downtown
                    route: Main St
                    street_number: "123"
                    postal_code: "94085"
    patch:
      summary: Update a person
      description: "Updates the properties of a person. <br>If the company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also accept and return the `marketing_status` field."
      x-token-cost: 5
      operationId: updatePerson
      tags:
        - Persons
      security:
        - api_key: []
        - oauth2:
            - "contacts:full"
      parameters:
        - in: path
          name: id
          description: The ID of the person
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the person
                owner_id:
                  type: integer
                  description: The ID of the user who owns the person
                org_id:
                  type: integer
                  description: The ID of the organization linked to the person
                add_time:
                  type: string
                  description: The creation date and time of the person
                update_time:
                  type: string
                  description: The last updated date and time of the person
                emails:
                  type: array
                  description: The emails of the person
                  items:
                    type: object
                    properties:
                      value:
                        type: string
                        description: The email address of the person
                      primary:
                        type: boolean
                        description: Whether the email is primary or not
                      label:
                        type: boolean
                        description: The email address classification label
                phones:
                  type: array
                  description: The phones of the person
                  items:
                    type: object
                    properties:
                      value:
                        type: string
                        description: The phone number of the person
                      primary:
                        type: boolean
                        description: Whether the phone number is primary or not
                      label:
                        type: boolean
                        description: The phone number classification label
                visible_to:
                  type: integer
                  description: The visibility of the person
                label_ids:
                  type: array
                  description: The IDs of labels assigned to the person
                  items:
                    type: integer
                marketing_status:
                  type: string
                  description: "If the person does not have a valid email address, then the marketing status is **not set** and `no_consent` is returned for the `marketing_status` value when the new person is created. If the change is forbidden, the status will remain unchanged for every call that tries to modify the marketing status. Please be aware that it is only allowed **once** to change the marketing status from an old status to a new one.<table><tr><th>Value</th><th>Description</th></tr><tr><td>`no_consent`</td><td>The customer has not given consent to receive any marketing communications</td></tr><tr><td>`unsubscribed`</td><td>The customers have unsubscribed from ALL marketing communications</td></tr><tr><td>`subscribed`</td><td>The customers are subscribed and are counted towards marketing caps</td></tr><tr><td>`archived`</td><td>The customers with `subscribed` status can be moved to `archived` to save consent, but they are not paid for</td></tr></table>"
                  enum:
                    - no_consent
                    - unsubscribed
                    - subscribed
                    - archived
      responses:
        "200":
          description: Edit person
          content:
            application/json:
              schema:
                type: object
                title: UpsertPersonResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    title: UpsertPersonResponseData
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: The ID of the person
                          name:
                            type: string
                            description: The name of the person
                          first_name:
                            type: string
                            description: The first name of the person
                          last_name:
                            type: string
                            description: The last name of the person
                          owner_id:
                            type: integer
                            description: The ID of the user who owns the person
                          org_id:
                            type: integer
                            description: The ID of the organization linked to the person
                          add_time:
                            type: string
                            description: The creation date and time of the person
                          update_time:
                            type: string
                            description: The last updated date and time of the person
                          emails:
                            type: array
                            description: The emails of the person
                            items:
                              type: object
                              properties:
                                value:
                                  type: string
                                  description: The email address of the person
                                primary:
                                  type: boolean
                                  description: Whether the email is primary or not
                                label:
                                  type: string
                                  description: The email address classification label
                          phones:
                            type: array
                            description: The phones of the person
                            items:
                              type: object
                              properties:
                                value:
                                  type: string
                                  description: The phone number of the person
                                primary:
                                  type: boolean
                                  description: Whether the phone number is primary or not
                                label:
                                  type: string
                                  description: The phone number classification label
                          is_deleted:
                            type: boolean
                            description: Whether the person is deleted or not
                          visible_to:
                            type: integer
                            description: The visibility of the person
                          label_ids:
                            type: array
                            description: The IDs of labels assigned to the person
                            items:
                              type: integer
                          picture_id:
                            type: integer
                            description: The ID of the picture associated with the person
                          postal_address:
                            type: object
                            description: "Postal address of the person, included if contact sync is enabled for the company"
                            properties:
                              value:
                                type: string
                                description: The full address of the person
                              country:
                                type: string
                                description: Country of the person
                              admin_area_level_1:
                                type: string
                                description: Admin area level 1 (e.g. state) of the person
                              admin_area_level_2:
                                type: string
                                description: Admin area level 2 (e.g. county) of the person
                              locality:
                                type: string
                                description: Locality (e.g. city) of the person
                              sublocality:
                                type: string
                                description: Sublocality (e.g. neighborhood) of the person
                              route:
                                type: string
                                description: Route (e.g. street) of the person
                              street_number:
                                type: string
                                description: Street number of the person
                              postal_code:
                                type: string
                                description: Postal code of the person
                          notes:
                            type: string
                            description: "Contact sync notes of the person, maximum 10 000 characters, included if contact sync is enabled for the company"
                          im:
                            type: array
                            description: "The instant messaging accounts of the person, included if contact sync is enabled for the company"
                            items:
                              type: object
                              properties:
                                value:
                                  type: string
                                  description: The instant messaging account of the person
                                primary:
                                  type: boolean
                                  description: Whether the instant messaging account is primary or not
                                label:
                                  type: string
                                  description: The instant messaging account classification label
                          birthday:
                            type: string
                            description: "The birthday of the person, included if contact sync is enabled for the company"
                          job_title:
                            type: string
                            description: "The job title of the person, included if contact sync is enabled for the company"
                          custom_fields:
                            type: object
                            additionalProperties: true
                            description: An object where each key represents a custom field. All custom fields are referenced as randomly generated 40-character hashes
                        description: The person object
              example:
                success: true
                data:
                  id: 1
                  name: Person Name
                  first_name: Person
                  last_name: Name
                  owner_id: 1
                  org_id: 1
                  add_time: "2021-01-01T00:00:00Z"
                  update_time: "2021-01-01T00:00:00Z"
                  emails:
                    - value: email1@email.com
                      primary: true
                      label: work
                    - value: email2@email.com
                      primary: false
                      label: home
                  phones:
                    - value: "12345"
                      primary: true
                      label: work
                    - value: "54321"
                      primary: false
                      label: home
                  is_deleted: false
                  visible_to: 7
                  label_ids:
                    - 1
                    - 2
                    - 3
                  picture_id: 1
                  custom_fields: {}
                  notes: Notes from contact sync
                  im:
                    - value: skypeusername
                      primary: true
                      label: skype
                    - value: whatsappusername
                      primary: false
                      label: whatsapp
                  birthday: "2000-12-31"
                  job_title: Manager
                  postal_address:
                    value: 123 Main St
                    country: USA
                    admin_area_level_1: CA
                    admin_area_level_2: Santa Clara
                    locality: Sunnyvale
                    sublocality: Downtown
                    route: Main St
                    street_number: "123"
                    postal_code: "94085"
  "/persons/{id}/followers":
    get:
      summary: List followers of a person
      description: Lists users who are following the person.
      x-token-cost: 10
      operationId: getPersonFollowers
      tags:
        - Persons
      security:
        - api_key: []
        - oauth2:
            - "contacts:read"
            - "contacts:full"
      parameters:
        - in: path
          name: id
          description: The ID of the person
          required: true
          schema:
            type: integer
        - in: query
          name: limit
          description: "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
          schema:
            type: integer
            example: 100
        - in: query
          name: cursor
          required: false
          schema:
            type: string
          description: "For pagination, the marker (an opaque string value) representing the first item on the next page"
      responses:
        "200":
          description: List entity followers
          content:
            application/json:
              schema:
                type: object
                title: GetFollowersResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Followers array
                        items:
                          type: object
                          title: FollowerItem
                          properties:
                            user_id:
                              type: integer
                              description: The ID of the user following the entity
                            add_time:
                              type: string
                              description: The add time of the following
                      additional_data:
                        type: object
                        description: The additional data of the list
                        properties:
                          next_cursor:
                            type: string
                            description: The first item on the next page. The value of the `next_cursor` field will be `null` if you have reached the end of the dataset and there’s no more pages to be returned.
              example:
                success: true
                data:
                  - user_id: 1
                    add_time: "2021-01-01T00:00:00Z"
                additional_data:
                  next_cursor: eyJmaWVsZCI6ImlkIiwiZmllbGRWYWx1ZSI6Nywic29ydERpcmVjdGlvbiI6ImFzYyIsImlkIjo3fQ
    post:
      summary: Add a follower to a person
      description: Adds a user as a follower to the person.
      x-token-cost: 5
      operationId: addPersonFollower
      tags:
        - Persons
      security:
        - api_key: []
        - oauth2:
            - "contacts:full"
      parameters:
        - in: path
          name: id
          description: The ID of the person
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              required:
                - user_id
              type: object
              properties:
                user_id:
                  type: integer
                  description: The ID of the user to add as a follower
      responses:
        "201":
          description: Add a follower
          content:
            application/json:
              schema:
                type: object
                title: AddFollowerResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    properties:
                      data:
                        type: object
                        title: FollowerItem
                        properties:
                          user_id:
                            type: integer
                            description: The ID of the user following the entity
                          add_time:
                            type: string
                            description: The add time of the following
                        description: The follower object
              example:
                success: true
                data:
                  user_id: 1
                  add_time: "2021-01-01T00:00:00Z"
  "/persons/{id}/followers/changelog":
    get:
      summary: List followers changelog of a person
      description: Lists changelogs about users have followed the person.
      x-token-cost: 10
      operationId: getPersonFollowersChangelog
      tags:
        - Persons
      security:
        - api_key: []
        - oauth2:
            - "contacts:read"
            - "contacts:full"
      parameters:
        - in: path
          name: id
          description: The ID of the person
          required: true
          schema:
            type: integer
        - in: query
          name: limit
          description: "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
          schema:
            type: integer
            example: 100
        - in: query
          name: cursor
          required: false
          schema:
            type: string
          description: "For pagination, the marker (an opaque string value) representing the first item on the next page"
      responses:
        "200":
          description: List entity followers
          content:
            application/json:
              schema:
                type: object
                title: GetFollowerChangelogsResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Follower changelogs array
                        items:
                          type: object
                          title: FollowerChangelogItem
                          properties:
                            action:
                              type: string
                              description: The type of change
                            actor_user_id:
                              type: integer
                              description: The ID of the user who did the change
                            follower_user_id:
                              type: integer
                              description: The ID of the user who was following the entity
                            time:
                              type: string
                              description: The time at which the change happened
                      additional_data:
                        type: object
                        description: The additional data of the list
                        properties:
                          next_cursor:
                            type: string
                            description: The first item on the next page. The value of the `next_cursor` field will be `null` if you have reached the end of the dataset and there’s no more pages to be returned.
              example:
                success: true
                data:
                  - action: added
                    actor_user_id: 1
                    follower_user_id: 1
                    time: "2024-01-01T00:00:00Z"
                additional_data:
                  next_cursor: eyJmaWVsZCI6ImlkIiwiZmllbGRWYWx1ZSI6Nywic29ydERpcmVjdGlvbiI6ImFzYyIsImlkIjo3fQ
  "/persons/{id}/followers/{follower_id}":
    delete:
      summary: Delete a follower from a person
      description: Deletes a user follower from the person.
      x-token-cost: 3
      operationId: deletePersonFollower
      tags:
        - Persons
      security:
        - api_key: []
        - oauth2:
            - "contacts:full"
      parameters:
        - in: path
          name: id
          description: The ID of the person
          required: true
          schema:
            type: integer
        - in: path
          name: follower_id
          required: true
          schema:
            type: integer
          description: The ID of the following user
      responses:
        "200":
          description: Remove a follower
          content:
            application/json:
              schema:
                title: DeleteFollowerResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: object
                    properties:
                      user_id:
                        type: integer
                        description: Deleted follower user ID
              example:
                success: true
                data:
                  user_id: 1
  /organizations:
    get:
      summary: Get all organizations
      description: Returns data about all organizations.
      x-token-cost: 10
      operationId: getOrganizations
      tags:
        - Organizations
      security:
        - api_key: []
        - oauth2:
            - "contacts:read"
            - "contacts:full"
      parameters:
        - in: query
          name: filter_id
          schema:
            type: integer
          description: "If supplied, only organizations matching the specified filter are returned"
        - in: query
          name: ids
          description: "Optional comma separated string array of up to 100 entity ids to fetch. If filter_id is provided, this is ignored. If any of the requested entities do not exist or are not visible, they are not included in the response."
          schema:
            type: string
        - in: query
          name: owner_id
          schema:
            type: integer
          description: "If supplied, only organization owned by the specified user are returned. If filter_id is provided, this is ignored."
        - in: query
          name: updated_since
          schema:
            type: string
          description: "If set, only organizations with an `update_time` later than or equal to this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z."
        - in: query
          name: updated_until
          schema:
            type: string
          description: "If set, only organizations with an `update_time` earlier than this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z."
        - in: query
          name: sort_by
          description: "The field to sort by. Supported fields: `id`, `update_time`, `add_time`."
          schema:
            type: string
            default: id
            enum:
              - id
              - update_time
              - add_time
        - in: query
          name: sort_direction
          description: "The sorting direction. Supported values: `asc`, `desc`."
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
        - in: query
          name: include_fields
          description: Optional comma separated string array of additional fields to include
          schema:
            type: string
            enum:
              - next_activity_id
              - last_activity_id
              - open_deals_count
              - related_open_deals_count
              - closed_deals_count
              - related_closed_deals_count
              - email_messages_count
              - people_count
              - activities_count
              - done_activities_count
              - undone_activities_count
              - files_count
              - notes_count
              - followers_count
              - won_deals_count
              - related_won_deals_count
              - lost_deals_count
              - related_lost_deals_count
        - in: query
          name: custom_fields
          description: "Optional comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for faster results and smaller response.<br/>A maximum of 15 keys is allowed."
          schema:
            type: string
        - in: query
          name: limit
          description: "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
          schema:
            type: integer
            example: 100
        - in: query
          name: cursor
          required: false
          schema:
            type: string
          description: "For pagination, the marker (an opaque string value) representing the first item on the next page"
      responses:
        "200":
          description: Get all organizations
          content:
            application/json:
              schema:
                type: object
                title: GetOrganizationsResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Organizations array
                        items:
                          type: object
                          title: OrganizationItem
                          properties:
                            id:
                              type: integer
                              description: The ID of the organization
                            name:
                              type: string
                              description: The name of the organization
                            owner_id:
                              type: integer
                              description: The ID of the user who owns the organization
                            add_time:
                              type: string
                              description: The creation date and time of the organization
                            update_time:
                              type: string
                              description: The last updated date and time of the organization
                            is_deleted:
                              type: boolean
                              description: Whether the organization is deleted or not
                            visible_to:
                              type: integer
                              description: The visibility of the organization
                            address:
                              description: The address of the organization
                              type: object
                              title: OrganizationItemAddress
                              properties:
                                value:
                                  type: string
                                  description: The full address of the organization
                                country:
                                  type: string
                                  description: Country of the organization
                                admin_area_level_1:
                                  type: string
                                  description: Admin area level 1 (e.g. state) of the organization
                                admin_area_level_2:
                                  type: string
                                  description: Admin area level 2 (e.g. county) of the organization
                                locality:
                                  type: string
                                  description: Locality (e.g. city) of the organization
                                sublocality:
                                  type: string
                                  description: Sublocality (e.g. neighborhood) of the organization
                                route:
                                  type: string
                                  description: Route (e.g. street) of the organization
                                street_number:
                                  type: string
                                  description: Street number of the organization
                                postal_code:
                                  type: string
                                  description: Postal code of the organization
                            label_ids:
                              type: array
                              description: The IDs of labels assigned to the organization
                              items:
                                type: integer
                            custom_fields:
                              type: object
                              additionalProperties: true
                              description: An object where each key represents a custom field. All custom fields are referenced as randomly generated 40-character hashes
                      additional_data:
                        type: object
                        description: The additional data of the list
                        properties:
                          next_cursor:
                            type: string
                            description: The first item on the next page. The value of the `next_cursor` field will be `null` if you have reached the end of the dataset and there’s no more pages to be returned.
              example:
                success: true
                data:
                  - id: 1
                    name: Organization Name
                    owner_id: 1
                    org_id: 1
                    add_time: "2021-01-01T00:00:00Z"
                    update_time: "2021-01-01T00:00:00Z"
                    address:
                      value: 123 Main St
                      country: USA
                      admin_area_level_1: CA
                      admin_area_level_2: Santa Clara
                      locality: Sunnyvale
                      sublocality: Downtown
                      route: Main St
                      street_number: "123"
                      postal_code: "94085"
                    is_deleted: false
                    visible_to: 7
                    label_ids:
                      - 1
                      - 2
                      - 3
                    custom_fields: {}
                additional_data:
                  next_cursor: eyJmaWVsZCI6ImlkIiwiZmllbGRWYWx1ZSI6Nywic29ydERpcmVjdGlvbiI6ImFzYyIsImlkIjo3fQ
    post:
      summary: Add a new organization
      description: Adds a new organization.
      x-token-cost: 5
      operationId: addOrganization
      tags:
        - Organizations
      security:
        - api_key: []
        - oauth2:
            - "contacts:full"
      requestBody:
        content:
          application/json:
            schema:
              required:
                - title
              type: object
              properties:
                name:
                  type: string
                  description: The name of the organization
                owner_id:
                  type: integer
                  description: The ID of the user who owns the organization
                add_time:
                  type: string
                  description: The creation date and time of the organization
                update_time:
                  type: string
                  description: The last updated date and time of the organization
                visible_to:
                  type: integer
                  description: The visibility of the organization
                label_ids:
                  type: array
                  description: The IDs of labels assigned to the organization
                  items:
                    type: integer
                address:
                  description: The address of the organization
                  type: object
                  title: OrganizationItemAddress
                  properties:
                    value:
                      type: string
                      description: The full address of the organization
                    country:
                      type: string
                      description: Country of the organization
                    admin_area_level_1:
                      type: string
                      description: Admin area level 1 (e.g. state) of the organization
                    admin_area_level_2:
                      type: string
                      description: Admin area level 2 (e.g. county) of the organization
                    locality:
                      type: string
                      description: Locality (e.g. city) of the organization
                    sublocality:
                      type: string
                      description: Sublocality (e.g. neighborhood) of the organization
                    route:
                      type: string
                      description: Route (e.g. street) of the organization
                    street_number:
                      type: string
                      description: Street number of the organization
                    postal_code:
                      type: string
                      description: Postal code of the organization
                custom_fields:
                  type: object
                  additionalProperties: true
                  description: An object where each key represents a custom field. All custom fields are referenced as randomly generated 40-character hashes
      responses:
        "200":
          description: Add organization
          content:
            application/json:
              schema:
                type: object
                title: UpsertOrganizationResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    title: UpsertOrganizationResponseData
                    properties:
                      data:
                        type: object
                        title: OrganizationItem
                        properties:
                          id:
                            type: integer
                            description: The ID of the organization
                          name:
                            type: string
                            description: The name of the organization
                          owner_id:
                            type: integer
                            description: The ID of the user who owns the organization
                          add_time:
                            type: string
                            description: The creation date and time of the organization
                          update_time:
                            type: string
                            description: The last updated date and time of the organization
                          is_deleted:
                            type: boolean
                            description: Whether the organization is deleted or not
                          visible_to:
                            type: integer
                            description: The visibility of the organization
                          address:
                            description: The address of the organization
                            type: object
                            title: OrganizationItemAddress
                            properties:
                              value:
                                type: string
                                description: The full address of the organization
                              country:
                                type: string
                                description: Country of the organization
                              admin_area_level_1:
                                type: string
                                description: Admin area level 1 (e.g. state) of the organization
                              admin_area_level_2:
                                type: string
                                description: Admin area level 2 (e.g. county) of the organization
                              locality:
                                type: string
                                description: Locality (e.g. city) of the organization
                              sublocality:
                                type: string
                                description: Sublocality (e.g. neighborhood) of the organization
                              route:
                                type: string
                                description: Route (e.g. street) of the organization
                              street_number:
                                type: string
                                description: Street number of the organization
                              postal_code:
                                type: string
                                description: Postal code of the organization
                          label_ids:
                            type: array
                            description: The IDs of labels assigned to the organization
                            items:
                              type: integer
                          custom_fields:
                            type: object
                            additionalProperties: true
                            description: An object where each key represents a custom field. All custom fields are referenced as randomly generated 40-character hashes
                        description: The organization object
              example:
                success: true
                data:
                  id: 1
                  name: Organization Name
                  owner_id: 1
                  org_id: 1
                  add_time: "2021-01-01T00:00:00Z"
                  update_time: "2021-01-01T00:00:00Z"
                  address:
                    value: 123 Main St
                    country: USA
                    admin_area_level_1: CA
                    admin_area_level_2: Santa Clara
                    locality: Sunnyvale
                    sublocality: Downtown
                    route: Main St
                    street_number: "123"
                    postal_code: "94085"
                  is_deleted: false
                  visible_to: 7
                  label_ids:
                    - 1
                    - 2
                    - 3
                  custom_fields: {}
  "/organizations/{id}":
    delete:
      summary: Delete a organization
      description: "Marks a organization as deleted. After 30 days, the organization will be permanently deleted."
      x-token-cost: 3
      operationId: deleteOrganization
      tags:
        - Organizations
      security:
        - api_key: []
        - oauth2:
            - "contacts:full"
      parameters:
        - in: path
          name: id
          description: The ID of the organization
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Delete organization
          content:
            application/json:
              schema:
                title: DeleteOrganizationResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: Deleted organization ID
              example:
                success: true
                data:
                  id: 1
    get:
      summary: Get details of a organization
      description: Returns the details of a specific organization.
      x-token-cost: 1
      operationId: getOrganization
      tags:
        - Organizations
      security:
        - api_key: []
        - oauth2:
            - "contacts:read"
            - "contacts:full"
      parameters:
        - in: path
          name: id
          description: The ID of the organization
          required: true
          schema:
            type: integer
        - in: query
          name: include_fields
          description: Optional comma separated string array of additional fields to include
          schema:
            type: string
            enum:
              - next_activity_id
              - last_activity_id
              - open_deals_count
              - related_open_deals_count
              - closed_deals_count
              - related_closed_deals_count
              - email_messages_count
              - people_count
              - activities_count
              - done_activities_count
              - undone_activities_count
              - files_count
              - notes_count
              - followers_count
              - won_deals_count
              - related_won_deals_count
              - lost_deals_count
              - related_lost_deals_count
        - in: query
          name: custom_fields
          description: "Optional comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for faster results and smaller response.<br/>A maximum of 15 keys is allowed."
          schema:
            type: string
      responses:
        "200":
          description: Get organization
          content:
            application/json:
              schema:
                type: object
                title: UpsertOrganizationResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    title: UpsertOrganizationResponseData
                    properties:
                      data:
                        type: object
                        title: OrganizationItem
                        properties:
                          id:
                            type: integer
                            description: The ID of the organization
                          name:
                            type: string
                            description: The name of the organization
                          owner_id:
                            type: integer
                            description: The ID of the user who owns the organization
                          add_time:
                            type: string
                            description: The creation date and time of the organization
                          update_time:
                            type: string
                            description: The last updated date and time of the organization
                          is_deleted:
                            type: boolean
                            description: Whether the organization is deleted or not
                          visible_to:
                            type: integer
                            description: The visibility of the organization
                          address:
                            description: The address of the organization
                            type: object
                            title: OrganizationItemAddress
                            properties:
                              value:
                                type: string
                                description: The full address of the organization
                              country:
                                type: string
                                description: Country of the organization
                              admin_area_level_1:
                                type: string
                                description: Admin area level 1 (e.g. state) of the organization
                              admin_area_level_2:
                                type: string
                                description: Admin area level 2 (e.g. county) of the organization
                              locality:
                                type: string
                                description: Locality (e.g. city) of the organization
                              sublocality:
                                type: string
                                description: Sublocality (e.g. neighborhood) of the organization
                              route:
                                type: string
                                description: Route (e.g. street) of the organization
                              street_number:
                                type: string
                                description: Street number of the organization
                              postal_code:
                                type: string
                                description: Postal code of the organization
                          label_ids:
                            type: array
                            description: The IDs of labels assigned to the organization
                            items:
                              type: integer
                          custom_fields:
                            type: object
                            additionalProperties: true
                            description: An object where each key represents a custom field. All custom fields are referenced as randomly generated 40-character hashes
                        description: The organization object
              example:
                success: true
                data:
                  id: 1
                  name: Organization Name
                  owner_id: 1
                  org_id: 1
                  add_time: "2021-01-01T00:00:00Z"
                  update_time: "2021-01-01T00:00:00Z"
                  address:
                    value: 123 Main St
                    country: USA
                    admin_area_level_1: CA
                    admin_area_level_2: Santa Clara
                    locality: Sunnyvale
                    sublocality: Downtown
                    route: Main St
                    street_number: "123"
                    postal_code: "94085"
                  is_deleted: false
                  visible_to: 7
                  label_ids:
                    - 1
                    - 2
                    - 3
                  custom_fields: {}
    patch:
      summary: Update a organization
      description: Updates the properties of a organization.
      x-token-cost: 5
      operationId: updateOrganization
      tags:
        - Organizations
      security:
        - api_key: []
        - oauth2:
            - "contacts:full"
      parameters:
        - in: path
          name: id
          description: The ID of the organization
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the organization
                owner_id:
                  type: integer
                  description: The ID of the user who owns the organization
                add_time:
                  type: string
                  description: The creation date and time of the organization
                update_time:
                  type: string
                  description: The last updated date and time of the organization
                visible_to:
                  type: integer
                  description: The visibility of the organization
                label_ids:
                  type: array
                  description: The IDs of labels assigned to the organization
                  items:
                    type: integer
                address:
                  description: The address of the organization
                  type: object
                  title: OrganizationItemAddress
                  properties:
                    value:
                      type: string
                      description: The full address of the organization
                    country:
                      type: string
                      description: Country of the organization
                    admin_area_level_1:
                      type: string
                      description: Admin area level 1 (e.g. state) of the organization
                    admin_area_level_2:
                      type: string
                      description: Admin area level 2 (e.g. county) of the organization
                    locality:
                      type: string
                      description: Locality (e.g. city) of the organization
                    sublocality:
                      type: string
                      description: Sublocality (e.g. neighborhood) of the organization
                    route:
                      type: string
                      description: Route (e.g. street) of the organization
                    street_number:
                      type: string
                      description: Street number of the organization
                    postal_code:
                      type: string
                      description: Postal code of the organization
                custom_fields:
                  type: object
                  additionalProperties: true
                  description: An object where each key represents a custom field. All custom fields are referenced as randomly generated 40-character hashes
      responses:
        "200":
          description: Edit organization
          content:
            application/json:
              schema:
                type: object
                title: UpsertOrganizationResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    title: UpsertOrganizationResponseData
                    properties:
                      data:
                        type: object
                        title: OrganizationItem
                        properties:
                          id:
                            type: integer
                            description: The ID of the organization
                          name:
                            type: string
                            description: The name of the organization
                          owner_id:
                            type: integer
                            description: The ID of the user who owns the organization
                          add_time:
                            type: string
                            description: The creation date and time of the organization
                          update_time:
                            type: string
                            description: The last updated date and time of the organization
                          is_deleted:
                            type: boolean
                            description: Whether the organization is deleted or not
                          visible_to:
                            type: integer
                            description: The visibility of the organization
                          address:
                            description: The address of the organization
                            type: object
                            title: OrganizationItemAddress
                            properties:
                              value:
                                type: string
                                description: The full address of the organization
                              country:
                                type: string
                                description: Country of the organization
                              admin_area_level_1:
                                type: string
                                description: Admin area level 1 (e.g. state) of the organization
                              admin_area_level_2:
                                type: string
                                description: Admin area level 2 (e.g. county) of the organization
                              locality:
                                type: string
                                description: Locality (e.g. city) of the organization
                              sublocality:
                                type: string
                                description: Sublocality (e.g. neighborhood) of the organization
                              route:
                                type: string
                                description: Route (e.g. street) of the organization
                              street_number:
                                type: string
                                description: Street number of the organization
                              postal_code:
                                type: string
                                description: Postal code of the organization
                          label_ids:
                            type: array
                            description: The IDs of labels assigned to the organization
                            items:
                              type: integer
                          custom_fields:
                            type: object
                            additionalProperties: true
                            description: An object where each key represents a custom field. All custom fields are referenced as randomly generated 40-character hashes
                        description: The organization object
              example:
                success: true
                data:
                  id: 1
                  name: Organization Name
                  owner_id: 1
                  org_id: 1
                  add_time: "2021-01-01T00:00:00Z"
                  update_time: "2021-01-01T00:00:00Z"
                  address:
                    value: 123 Main St
                    country: USA
                    admin_area_level_1: CA
                    admin_area_level_2: Santa Clara
                    locality: Sunnyvale
                    sublocality: Downtown
                    route: Main St
                    street_number: "123"
                    postal_code: "94085"
                  is_deleted: false
                  visible_to: 7
                  label_ids:
                    - 1
                    - 2
                    - 3
                  custom_fields: {}
  "/organizations/{id}/followers":
    get:
      summary: List followers of an organization
      description: Lists users who are following the organization.
      x-token-cost: 10
      operationId: getOrganizationFollowers
      tags:
        - Organizations
      security:
        - api_key: []
        - oauth2:
            - "contacts:read"
            - "contacts:full"
      parameters:
        - in: path
          name: id
          description: The ID of the organization
          required: true
          schema:
            type: integer
        - in: query
          name: limit
          description: "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
          schema:
            type: integer
            example: 100
        - in: query
          name: cursor
          required: false
          schema:
            type: string
          description: "For pagination, the marker (an opaque string value) representing the first item on the next page"
      responses:
        "200":
          description: List entity followers
          content:
            application/json:
              schema:
                type: object
                title: GetFollowersResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Followers array
                        items:
                          type: object
                          title: FollowerItem
                          properties:
                            user_id:
                              type: integer
                              description: The ID of the user following the entity
                            add_time:
                              type: string
                              description: The add time of the following
                      additional_data:
                        type: object
                        description: The additional data of the list
                        properties:
                          next_cursor:
                            type: string
                            description: The first item on the next page. The value of the `next_cursor` field will be `null` if you have reached the end of the dataset and there’s no more pages to be returned.
              example:
                success: true
                data:
                  - user_id: 1
                    add_time: "2021-01-01T00:00:00Z"
                additional_data:
                  next_cursor: eyJmaWVsZCI6ImlkIiwiZmllbGRWYWx1ZSI6Nywic29ydERpcmVjdGlvbiI6ImFzYyIsImlkIjo3fQ
    post:
      summary: Add a follower to an organization
      description: Adds a user as a follower to the organization.
      x-token-cost: 5
      operationId: addOrganizationFollower
      tags:
        - Organizations
      security:
        - api_key: []
        - oauth2:
            - "contacts:full"
      parameters:
        - in: path
          name: id
          description: The ID of the organization
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              required:
                - user_id
              type: object
              properties:
                user_id:
                  type: integer
                  description: The ID of the user to add as a follower
      responses:
        "201":
          description: Add a follower
          content:
            application/json:
              schema:
                type: object
                title: AddFollowerResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    properties:
                      data:
                        type: object
                        title: FollowerItem
                        properties:
                          user_id:
                            type: integer
                            description: The ID of the user following the entity
                          add_time:
                            type: string
                            description: The add time of the following
                        description: The follower object
              example:
                success: true
                data:
                  user_id: 1
                  add_time: "2021-01-01T00:00:00Z"
  "/organizations/{id}/followers/changelog":
    get:
      summary: List followers changelog of an organization
      description: Lists changelogs about users have followed the organization.
      x-token-cost: 10
      operationId: getOrganizationFollowersChangelog
      tags:
        - Organizations
      security:
        - api_key: []
        - oauth2:
            - "contacts:read"
            - "contacts:full"
      parameters:
        - in: path
          name: id
          description: The ID of the organization
          required: true
          schema:
            type: integer
        - in: query
          name: limit
          description: "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
          schema:
            type: integer
            example: 100
        - in: query
          name: cursor
          required: false
          schema:
            type: string
          description: "For pagination, the marker (an opaque string value) representing the first item on the next page"
      responses:
        "200":
          description: List entity followers
          content:
            application/json:
              schema:
                type: object
                title: GetFollowerChangelogsResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Follower changelogs array
                        items:
                          type: object
                          title: FollowerChangelogItem
                          properties:
                            action:
                              type: string
                              description: The type of change
                            actor_user_id:
                              type: integer
                              description: The ID of the user who did the change
                            follower_user_id:
                              type: integer
                              description: The ID of the user who was following the entity
                            time:
                              type: string
                              description: The time at which the change happened
                      additional_data:
                        type: object
                        description: The additional data of the list
                        properties:
                          next_cursor:
                            type: string
                            description: The first item on the next page. The value of the `next_cursor` field will be `null` if you have reached the end of the dataset and there’s no more pages to be returned.
              example:
                success: true
                data:
                  - action: added
                    actor_user_id: 1
                    follower_user_id: 1
                    time: "2024-01-01T00:00:00Z"
                additional_data:
                  next_cursor: eyJmaWVsZCI6ImlkIiwiZmllbGRWYWx1ZSI6Nywic29ydERpcmVjdGlvbiI6ImFzYyIsImlkIjo3fQ
  "/organizations/{id}/followers/{follower_id}":
    delete:
      summary: Delete a follower from an organization
      description: Deletes a user follower from the organization.
      x-token-cost: 3
      operationId: deleteOrganizationFollower
      tags:
        - Organizations
      security:
        - api_key: []
        - oauth2:
            - "contacts:full"
      parameters:
        - in: path
          name: id
          description: The ID of the organization
          required: true
          schema:
            type: integer
        - in: path
          name: follower_id
          required: true
          schema:
            type: integer
          description: The ID of the following user
      responses:
        "200":
          description: Remove a follower
          content:
            application/json:
              schema:
                title: DeleteFollowerResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: object
                    properties:
                      user_id:
                        type: integer
                        description: Deleted follower user ID
              example:
                success: true
                data:
                  user_id: 1
  /products:
    get:
      summary: Get all products
      description: Returns data about all products.
      x-token-cost: 10
      operationId: getProducts
      tags:
        - Products
      security:
        - api_key: []
        - oauth2:
            - "products:read"
            - "products:full"
      parameters:
        - in: query
          name: owner_id
          schema:
            type: integer
          description: "If supplied, only products owned by the given user will be returned"
        - in: query
          name: ids
          description: "Optional comma separated string array of up to 100 entity ids to fetch. If filter_id is provided, this is ignored. If any of the requested entities do not exist or are not visible, they are not included in the response."
          schema:
            type: string
        - in: query
          name: filter_id
          schema:
            type: integer
          description: The ID of the filter to use
        - in: query
          name: cursor
          required: false
          schema:
            type: string
          description: "For pagination, the marker (an opaque string value) representing the first item on the next page"
        - in: query
          name: limit
          description: "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
          schema:
            type: integer
            example: 100
        - in: query
          name: sort_by
          description: "The field to sort by. Supported fields: `id`, `name`, `add_time`, `update_time`."
          schema:
            type: string
            default: id
            enum:
              - id
              - name
              - add_time
              - update_time
        - in: query
          name: sort_direction
          description: "The sorting direction. Supported values: `asc`, `desc`."
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
        - in: query
          name: custom_fields
          description: "Comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for a smaller response.<br/>A maximum of 15 keys is allowed."
          schema:
            type: string
      responses:
        "200":
          description: List of products
          content:
            application/json:
              schema:
                title: GetProductsResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: array
                    description: Array containing data for all products
                    items:
                      title: GetProductResponse
                      type: object
                      properties:
                        success:
                          type: boolean
                          description: If the response is successful or not
                        data:
                          allOf:
                            - title: BaseProduct
                              allOf:
                                - type: object
                                  properties:
                                    id:
                                      type: number
                                      description: The ID of the product
                                    name:
                                      type: string
                                      description: The name of the product
                                    code:
                                      type: string
                                      description: The product code
                                    unit:
                                      type: string
                                      description: The unit in which this product is sold
                                    tax:
                                      type: number
                                      description: The tax percentage
                                      default: 0
                                    is_deleted:
                                      type: boolean
                                      description: Whether this product will be made marked as deleted or not
                                      default: false
                                    is_linkable:
                                      type: boolean
                                      description: Whether this product can be added to a deal or not
                                      default: true
                                    visible_to:
                                      allOf:
                                        - type: number
                                          enum:
                                            - 1
                                            - 3
                                            - 5
                                            - 7
                                      description: Visibility of the product
                                    owner_id:
                                      type: integer
                                      description: Information about the Pipedrive user who owns the product
                                    custom_fields:
                                      type: object
                                      additionalProperties: true
                                      description: An object where each key represents a custom field. All custom fields are referenced as randomly generated 40-character hashes
                                - type: object
                                  properties:
                                    billing_frequency:
                                      default: one-time
                                      type: string
                                      enum:
                                        - one-time
                                        - annually
                                        - semi-annually
                                        - quarterly
                                        - monthly
                                        - weekly
                                      description: |
                                        Only available in Growth and above plans

                                        How often a customer is billed for access to a service or product
                                - type: object
                                  properties:
                                    billing_frequency_cycles:
                                      default: null
                                      type: integer
                                      nullable: true
                                      description: |
                                        Only available in Growth and above plans

                                        The number of times the billing frequency repeats for a product in a deal

                                        When `billing_frequency` is set to `one-time`, this field must be `null`

                                        When `billing_frequency` is set to `weekly`, this field cannot be `null`

                                        For all the other values of `billing_frequency`, `null` represents a product billed indefinitely

                                        Must be a positive integer less or equal to 208
                            - type: object
                              title: PricesArray
                              properties:
                                prices:
                                  type: array
                                  items:
                                    type: object
                                  description: "Array of objects, each containing: product_id (number), currency (string), price (number), cost (number), direct_cost (number | null), notes (string)"
                  additional_data:
                    type: object
                    description: Pagination related data
                    properties:
                      next_cursor:
                        type: string
                        description: The first item on the next page. The value of the `next_cursor` field will be `null` if you have reached the end of the dataset and there’s no more pages to be returned.
              example:
                success: true
                data:
                  - id: 1
                    name: Mechanical Pencil
                    code: MPENCIL
                    description: Product description
                    unit: ""
                    tax: 0
                    category: Retail
                    is_linkable: true
                    is_deleted: false
                    visible_to: 3
                    owner_id: 1234
                    add_time: "2019-12-19T11:36:49Z"
                    update_time: "2019-12-19T11:36:49Z"
                    billing_frequency: monthly
                    billing_frequency_cycles: 4
                    prices:
                      - product_id: 1
                        price: 5
                        currency: EUR
                        cost: 2
                        direct_cost: 1
                        notes: this is a note
                    custom_fields:
                      type: object
                      description: A map of custom fields with hash-based keys
                      additionalProperties:
                        oneOf:
                          - type: string
                          - type: number
                          - type: object
                            additionalProperties: true
                additional_data:
                  next_cursor: eyJmaWVsZCI6ImlkIiwiZmllbGRWYWx1ZSI6Nywic29ydERpcmVjdGlvbiI6ImFzYyIsImlkIjo3fQ
    post:
      summary: Add a product
      description: 'Adds a new product to the Products inventory. For more information, see the tutorial for <a href="https://pipedrive.readme.io/docs/adding-a-product" target="_blank" rel="noopener noreferrer">adding a product</a>.'
      x-token-cost: 5
      operationId: addProduct
      tags:
        - Products
      security:
        - api_key: []
        - oauth2:
            - "products:full"
      requestBody:
        content:
          application/json:
            schema:
              title: addProductRequest
              allOf:
                - required:
                    - name
                  type: object
                  properties:
                    name:
                      type: string
                      description: The name of the product. Cannot be an empty string
                - title: productRequest
                  type: object
                  properties:
                    code:
                      type: string
                      description: The product code
                    description:
                      type: string
                      description: The product description
                    unit:
                      type: string
                      description: The unit in which this product is sold
                    tax:
                      type: number
                      description: The tax percentage
                      default: 0
                    category:
                      type: number
                      description: The category of the product
                    owner_id:
                      type: integer
                      description: "The ID of the user who will be marked as the owner of this product. When omitted, the authorized user ID will be used"
                    is_linkable:
                      type: boolean
                      description: Whether this product can be added to a deal or not
                      default: true
                    visible_to:
                      type: number
                      allOf:
                        - type: number
                          enum:
                            - 1
                            - 3
                            - 5
                            - 7
                      description: 'The visibility of the product. If omitted, the visibility will be set to the default visibility setting of this item type for the authorized user. Read more about visibility groups <a href="https://support.pipedrive.com/en/article/visibility-groups" target="_blank" rel="noopener noreferrer">here</a>.<h4>Light / Growth and Professional plans</h4><table><tr><th style="width: 40px">Value</th><th>Description</th></tr><tr><td>`1`</td><td>Owner &amp; followers</td><tr><td>`3`</td><td>Entire company</td></tr></table><h4>Premium / Ultimate plan</h4><table><tr><th style="width: 40px">Value</th><th>Description</th></tr><tr><td>`1`</td><td>Owner only</td><tr><td>`3`</td><td>Owner''s visibility group</td></tr><tr><td>`5`</td><td>Owner''s visibility group and sub-groups</td></tr><tr><td>`7`</td><td>Entire company</td></tr></table>'
                    prices:
                      type: array
                      items:
                        type: object
                      description: "An array of objects, each containing: `currency` (string), `price` (number), `cost` (number, optional), `direct_cost` (number, optional). Note that there can only be one price per product per currency. When `prices` is omitted altogether, a default price of 0 and the user's default currency will be assigned."
                - type: object
                  properties:
                    billing_frequency:
                      default: one-time
                      type: string
                      enum:
                        - one-time
                        - annually
                        - semi-annually
                        - quarterly
                        - monthly
                        - weekly
                      description: |
                        Only available in Growth and above plans

                        How often a customer is billed for access to a service or product
                - type: object
                  properties:
                    billing_frequency_cycles:
                      default: null
                      type: integer
                      nullable: true
                      description: |
                        Only available in Growth and above plans

                        The number of times the billing frequency repeats for a product in a deal

                        When `billing_frequency` is set to `one-time`, this field must be `null`

                        When `billing_frequency` is set to `weekly`, this field cannot be `null`

                        For all the other values of `billing_frequency`, `null` represents a product billed indefinitely

                        Must be a positive integer less or equal to 208
      responses:
        "201":
          description: Add product data
          content:
            application/json:
              schema:
                title: GetProductResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    allOf:
                      - title: BaseProduct
                        allOf:
                          - type: object
                            properties:
                              id:
                                type: number
                                description: The ID of the product
                              name:
                                type: string
                                description: The name of the product
                              code:
                                type: string
                                description: The product code
                              unit:
                                type: string
                                description: The unit in which this product is sold
                              tax:
                                type: number
                                description: The tax percentage
                                default: 0
                              is_deleted:
                                type: boolean
                                description: Whether this product will be made marked as deleted or not
                                default: false
                              is_linkable:
                                type: boolean
                                description: Whether this product can be added to a deal or not
                                default: true
                              visible_to:
                                allOf:
                                  - type: number
                                    enum:
                                      - 1
                                      - 3
                                      - 5
                                      - 7
                                description: Visibility of the product
                              owner_id:
                                type: integer
                                description: Information about the Pipedrive user who owns the product
                              custom_fields:
                                type: object
                                additionalProperties: true
                                description: An object where each key represents a custom field. All custom fields are referenced as randomly generated 40-character hashes
                          - type: object
                            properties:
                              billing_frequency:
                                default: one-time
                                type: string
                                enum:
                                  - one-time
                                  - annually
                                  - semi-annually
                                  - quarterly
                                  - monthly
                                  - weekly
                                description: |
                                  Only available in Growth and above plans

                                  How often a customer is billed for access to a service or product
                          - type: object
                            properties:
                              billing_frequency_cycles:
                                default: null
                                type: integer
                                nullable: true
                                description: |
                                  Only available in Growth and above plans

                                  The number of times the billing frequency repeats for a product in a deal

                                  When `billing_frequency` is set to `one-time`, this field must be `null`

                                  When `billing_frequency` is set to `weekly`, this field cannot be `null`

                                  For all the other values of `billing_frequency`, `null` represents a product billed indefinitely

                                  Must be a positive integer less or equal to 208
                      - type: object
                        title: PricesArray
                        properties:
                          prices:
                            type: array
                            items:
                              type: object
                            description: "Array of objects, each containing: product_id (number), currency (string), price (number), cost (number), direct_cost (number | null), notes (string)"
              example:
                success: true
                data:
                  id: 1
                  name: Mechanical Pencil
                  code: MPENCIL
                  description: Product description
                  unit: ""
                  tax: 0
                  category: Retail
                  is_linkable: true
                  is_deleted: false
                  visible_to: 3
                  owner_id: 1234
                  add_time: "2019-12-19T11:36:49Z"
                  update_time: "2019-12-19T11:36:49Z"
                  billing_frequency: monthly
                  billing_frequency_cycles: 4
                  prices:
                    - product_id: 1
                      price: 5
                      currency: EUR
                      cost: 2
                      direct_cost: 1
                      notes: this is a note
                  custom_fields:
                    type: object
                    description: A map of custom fields with hash-based keys
                    additionalProperties:
                      oneOf:
                        - type: string
                        - type: number
                        - type: object
                          additionalProperties: true
  "/products/{id}/followers":
    get:
      summary: List followers of a product
      description: Lists users who are following the product.
      x-token-cost: 10
      operationId: getProductFollowers
      tags:
        - Products
      security:
        - api_key: []
        - oauth2:
            - "products:read"
            - "products:full"
      parameters:
        - in: path
          name: id
          description: The ID of the product
          required: true
          schema:
            type: integer
        - in: query
          name: limit
          description: "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
          schema:
            type: integer
            example: 100
        - in: query
          name: cursor
          required: false
          schema:
            type: string
          description: "For pagination, the marker (an opaque string value) representing the first item on the next page"
      responses:
        "200":
          description: List entity followers
          content:
            application/json:
              schema:
                type: object
                title: GetFollowersResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Followers array
                        items:
                          type: object
                          title: FollowerItem
                          properties:
                            user_id:
                              type: integer
                              description: The ID of the user following the entity
                            add_time:
                              type: string
                              description: The add time of the following
                      additional_data:
                        type: object
                        description: The additional data of the list
                        properties:
                          next_cursor:
                            type: string
                            description: The first item on the next page. The value of the `next_cursor` field will be `null` if you have reached the end of the dataset and there’s no more pages to be returned.
              example:
                success: true
                data:
                  - user_id: 1
                    add_time: "2021-01-01T00:00:00Z"
                additional_data:
                  next_cursor: eyJmaWVsZCI6ImlkIiwiZmllbGRWYWx1ZSI6Nywic29ydERpcmVjdGlvbiI6ImFzYyIsImlkIjo3fQ
    post:
      summary: Add a follower to a product
      description: Adds a user as a follower to the product.
      x-token-cost: 5
      operationId: addProductFollower
      tags:
        - Products
      security:
        - api_key: []
        - oauth2:
            - "products:full"
      parameters:
        - in: path
          name: id
          description: The ID of the product
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              required:
                - user_id
              type: object
              properties:
                user_id:
                  type: integer
                  description: The ID of the user to add as a follower
      responses:
        "201":
          description: Add a follower
          content:
            application/json:
              schema:
                type: object
                title: AddFollowerResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    properties:
                      data:
                        type: object
                        title: FollowerItem
                        properties:
                          user_id:
                            type: integer
                            description: The ID of the user following the entity
                          add_time:
                            type: string
                            description: The add time of the following
                        description: The follower object
              example:
                success: true
                data:
                  user_id: 1
                  add_time: "2021-01-01T00:00:00Z"
  "/products/{id}/followers/changelog":
    get:
      summary: List followers changelog of a product
      description: Lists changelogs about users have followed the product.
      x-token-cost: 10
      operationId: getProductFollowersChangelog
      tags:
        - Products
      security:
        - api_key: []
        - oauth2:
            - "products:read"
            - "products:full"
      parameters:
        - in: path
          name: id
          description: The ID of the product
          required: true
          schema:
            type: integer
        - in: query
          name: limit
          description: "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
          schema:
            type: integer
            example: 100
        - in: query
          name: cursor
          required: false
          schema:
            type: string
          description: "For pagination, the marker (an opaque string value) representing the first item on the next page"
      responses:
        "200":
          description: List entity followers
          content:
            application/json:
              schema:
                type: object
                title: GetFollowerChangelogsResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Follower changelogs array
                        items:
                          type: object
                          title: FollowerChangelogItem
                          properties:
                            action:
                              type: string
                              description: The type of change
                            actor_user_id:
                              type: integer
                              description: The ID of the user who did the change
                            follower_user_id:
                              type: integer
                              description: The ID of the user who was following the entity
                            time:
                              type: string
                              description: The time at which the change happened
                      additional_data:
                        type: object
                        description: The additional data of the list
                        properties:
                          next_cursor:
                            type: string
                            description: The first item on the next page. The value of the `next_cursor` field will be `null` if you have reached the end of the dataset and there’s no more pages to be returned.
              example:
                success: true
                data:
                  - action: added
                    actor_user_id: 1
                    follower_user_id: 1
                    time: "2024-01-01T00:00:00Z"
                additional_data:
                  next_cursor: eyJmaWVsZCI6ImlkIiwiZmllbGRWYWx1ZSI6Nywic29ydERpcmVjdGlvbiI6ImFzYyIsImlkIjo3fQ
  "/products/{id}/followers/{follower_id}":
    delete:
      summary: Delete a follower from a product
      description: Deletes a user follower from the product.
      x-token-cost: 3
      operationId: deleteProductFollower
      tags:
        - Products
      security:
        - api_key: []
        - oauth2:
            - "products:full"
      parameters:
        - in: path
          name: id
          description: The ID of the product
          required: true
          schema:
            type: integer
        - in: path
          name: follower_id
          required: true
          schema:
            type: integer
          description: The ID of the following user
      responses:
        "200":
          description: Remove a follower
          content:
            application/json:
              schema:
                title: DeleteFollowerResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: object
                    properties:
                      user_id:
                        type: integer
                        description: Deleted follower user ID
              example:
                success: true
                data:
                  user_id: 1
  /products/search:
    get:
      summary: Search products
      description: 'Searches all products by name, code and/or custom fields. This endpoint is a wrapper of <a href="https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem">/v1/itemSearch</a> with a narrower OAuth scope.'
      x-token-cost: 20
      operationId: searchProducts
      tags:
        - Products
      security:
        - api_key: []
        - oauth2:
            - "products:read"
            - "products:full"
            - "search:read"
      parameters:
        - in: query
          name: term
          required: true
          schema:
            type: string
          description: The search term to look for. Minimum 2 characters (or 1 if using `exact_match`). Please note that the search term has to be URL encoded.
        - in: query
          name: fields
          schema:
            type: string
            enum:
              - code
              - custom_fields
              - name
          description: 'A comma-separated string array. The fields to perform the search from. Defaults to all of them. Only the following custom field types are searchable: `address`, `varchar`, `text`, `varchar_auto`, `double`, `monetary` and `phone`. Read more about searching by custom fields <a href="https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields" target="_blank" rel="noopener noreferrer">here</a>.'
        - in: query
          name: exact_match
          schema:
            type: boolean
          description: "When enabled, only full exact matches against the given term are returned. It is <b>not</b> case sensitive."
        - in: query
          name: include_fields
          schema:
            type: string
            enum:
              - product.price
          description: Supports including optional fields in the results which are not provided by default
        - in: query
          name: limit
          description: "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
          schema:
            type: integer
            example: 100
        - in: query
          name: cursor
          required: false
          schema:
            type: string
          description: "For pagination, the marker (an opaque string value) representing the first item on the next page"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                title: GetProductSearchResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          items:
                            type: array
                            description: The array of found items
                            items:
                              type: object
                              properties:
                                result_score:
                                  type: number
                                  description: Search result relevancy
                                item:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: The ID of the product
                                    type:
                                      type: string
                                      description: The type of the item
                                    name:
                                      type: string
                                      description: The name of the product
                                    code:
                                      type: integer
                                      description: The code of the product
                                    visible_to:
                                      type: integer
                                      description: The visibility of the product
                                    owner:
                                      type: object
                                      properties:
                                        id:
                                          type: integer
                                          description: The ID of the owner of the product
                                    custom_fields:
                                      type: array
                                      items:
                                        type: string
                                      description: The custom fields
                      additional_data:
                        type: object
                        description: Pagination related data
                        properties:
                          next_cursor:
                            type: string
                            description: The first item on the next page. The value of the `next_cursor` field will be `null` if you have reached the end of the dataset and there’s no more pages to be returned.
              example:
                success: true
                data:
                  items:
                    - result_score: 0.8766
                      item:
                        id: 1
                        type: product
                        name: Some product
                        code: 123
                        visible_to: 3
                        owner:
                          id: 1
                        custom_fields: []
                additional_data:
                  next_cursor: eyJmaWVsZCI6ImlkIiwiZmllbGRWYWx1ZSI6Nywic29ydERpcmVjdGlvbiI6ImFzYyIsImlkIjo3fQ
  "/products/{id}":
    delete:
      summary: Delete a product
      description: "Marks a product as deleted. After 30 days, the product will be permanently deleted."
      x-token-cost: 3
      operationId: deleteProduct
      tags:
        - Products
      security:
        - api_key: []
        - oauth2:
            - "products:full"
      parameters:
        - in: path
          name: id
          description: The ID of the product
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Deletes a product
          content:
            application/json:
              schema:
                title: DeleteProductResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: object
                    properties:
                      id:
                        description: The ID of the removed product
                        type: integer
              example:
                success: true
                data:
                  id: 1
    get:
      summary: Get one product
      description: Returns data about a specific product.
      x-token-cost: 1
      operationId: getProduct
      tags:
        - Products
      security:
        - api_key: []
        - oauth2:
            - "products:read"
            - "products:full"
      parameters:
        - in: path
          name: id
          description: The ID of the product
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Get product information by id
          content:
            application/json:
              schema:
                title: GetProductResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    allOf:
                      - title: BaseProduct
                        allOf:
                          - type: object
                            properties:
                              id:
                                type: number
                                description: The ID of the product
                              name:
                                type: string
                                description: The name of the product
                              code:
                                type: string
                                description: The product code
                              unit:
                                type: string
                                description: The unit in which this product is sold
                              tax:
                                type: number
                                description: The tax percentage
                                default: 0
                              is_deleted:
                                type: boolean
                                description: Whether this product will be made marked as deleted or not
                                default: false
                              is_linkable:
                                type: boolean
                                description: Whether this product can be added to a deal or not
                                default: true
                              visible_to:
                                allOf:
                                  - type: number
                                    enum:
                                      - 1
                                      - 3
                                      - 5
                                      - 7
                                description: Visibility of the product
                              owner_id:
                                type: integer
                                description: Information about the Pipedrive user who owns the product
                              custom_fields:
                                type: object
                                additionalProperties: true
                                description: An object where each key represents a custom field. All custom fields are referenced as randomly generated 40-character hashes
                          - type: object
                            properties:
                              billing_frequency:
                                default: one-time
                                type: string
                                enum:
                                  - one-time
                                  - annually
                                  - semi-annually
                                  - quarterly
                                  - monthly
                                  - weekly
                                description: |
                                  Only available in Growth and above plans

                                  How often a customer is billed for access to a service or product
                          - type: object
                            properties:
                              billing_frequency_cycles:
                                default: null
                                type: integer
                                nullable: true
                                description: |
                                  Only available in Growth and above plans

                                  The number of times the billing frequency repeats for a product in a deal

                                  When `billing_frequency` is set to `one-time`, this field must be `null`

                                  When `billing_frequency` is set to `weekly`, this field cannot be `null`

                                  For all the other values of `billing_frequency`, `null` represents a product billed indefinitely

                                  Must be a positive integer less or equal to 208
                      - type: object
                        title: PricesArray
                        properties:
                          prices:
                            type: array
                            items:
                              type: object
                            description: "Array of objects, each containing: product_id (number), currency (string), price (number), cost (number), direct_cost (number | null), notes (string)"
              example:
                success: true
                data:
                  id: 1
                  name: Mechanical Pencil
                  code: MPENCIL
                  description: Product description
                  unit: ""
                  tax: 0
                  category: Retail
                  is_linkable: true
                  is_deleted: false
                  visible_to: 3
                  owner_id: 1234
                  add_time: "2019-12-19T11:36:49Z"
                  update_time: "2019-12-19T11:36:49Z"
                  billing_frequency: monthly
                  billing_frequency_cycles: 4
                  prices:
                    - product_id: 1
                      price: 5
                      currency: EUR
                      cost: 2
                      direct_cost: 1
                      notes: this is a note
                  custom_fields:
                    type: object
                    description: A map of custom fields with hash-based keys
                    additionalProperties:
                      oneOf:
                        - type: string
                        - type: number
                        - type: object
                          additionalProperties: true
    patch:
      summary: Update a product
      description: Updates product data.
      x-token-cost: 5
      operationId: updateProduct
      tags:
        - Products
      security:
        - api_key: []
        - oauth2:
            - "products:full"
      parameters:
        - in: path
          name: id
          description: The ID of the product
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              title: updateProductRequest
              allOf:
                - type: object
                  properties:
                    name:
                      type: string
                      description: The name of the product. Cannot be an empty string
                - title: productRequest
                  type: object
                  properties:
                    code:
                      type: string
                      description: The product code
                    description:
                      type: string
                      description: The product description
                    unit:
                      type: string
                      description: The unit in which this product is sold
                    tax:
                      type: number
                      description: The tax percentage
                      default: 0
                    category:
                      type: number
                      description: The category of the product
                    owner_id:
                      type: integer
                      description: "The ID of the user who will be marked as the owner of this product. When omitted, the authorized user ID will be used"
                    is_linkable:
                      type: boolean
                      description: Whether this product can be added to a deal or not
                      default: true
                    visible_to:
                      type: number
                      allOf:
                        - type: number
                          enum:
                            - 1
                            - 3
                            - 5
                            - 7
                      description: 'The visibility of the product. If omitted, the visibility will be set to the default visibility setting of this item type for the authorized user. Read more about visibility groups <a href="https://support.pipedrive.com/en/article/visibility-groups" target="_blank" rel="noopener noreferrer">here</a>.<h4>Light / Growth and Professional plans</h4><table><tr><th style="width: 40px">Value</th><th>Description</th></tr><tr><td>`1`</td><td>Owner &amp; followers</td><tr><td>`3`</td><td>Entire company</td></tr></table><h4>Premium / Ultimate plan</h4><table><tr><th style="width: 40px">Value</th><th>Description</th></tr><tr><td>`1`</td><td>Owner only</td><tr><td>`3`</td><td>Owner''s visibility group</td></tr><tr><td>`5`</td><td>Owner''s visibility group and sub-groups</td></tr><tr><td>`7`</td><td>Entire company</td></tr></table>'
                    prices:
                      type: array
                      items:
                        type: object
                      description: "An array of objects, each containing: `currency` (string), `price` (number), `cost` (number, optional), `direct_cost` (number, optional). Note that there can only be one price per product per currency. When `prices` is omitted altogether, a default price of 0 and the user's default currency will be assigned."
                - type: object
                  properties:
                    billing_frequency:
                      type: string
                      enum:
                        - one-time
                        - annually
                        - semi-annually
                        - quarterly
                        - monthly
                        - weekly
                      description: |
                        Only available in Growth and above plans

                        How often a customer is billed for access to a service or product
                - type: object
                  properties:
                    billing_frequency_cycles:
                      type: integer
                      nullable: true
                      description: |
                        Only available in Growth and above plans

                        The number of times the billing frequency repeats for a product in a deal

                        When `billing_frequency` is set to `one-time`, this field must be `null`

                        When `billing_frequency` is set to `weekly`, this field cannot be `null`

                        For all the other values of `billing_frequency`, `null` represents a product billed indefinitely

                        Must be a positive integer less or equal to 208
      responses:
        "200":
          description: Updates product data
          content:
            application/json:
              schema:
                title: UpdateProductResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    allOf:
                      - title: BaseProduct
                        allOf:
                          - type: object
                            properties:
                              id:
                                type: number
                                description: The ID of the product
                              name:
                                type: string
                                description: The name of the product
                              code:
                                type: string
                                description: The product code
                              unit:
                                type: string
                                description: The unit in which this product is sold
                              tax:
                                type: number
                                description: The tax percentage
                                default: 0
                              is_deleted:
                                type: boolean
                                description: Whether this product will be made marked as deleted or not
                                default: false
                              is_linkable:
                                type: boolean
                                description: Whether this product can be added to a deal or not
                                default: true
                              visible_to:
                                allOf:
                                  - type: number
                                    enum:
                                      - 1
                                      - 3
                                      - 5
                                      - 7
                                description: Visibility of the product
                              owner_id:
                                type: integer
                                description: Information about the Pipedrive user who owns the product
                              custom_fields:
                                type: object
                                additionalProperties: true
                                description: An object where each key represents a custom field. All custom fields are referenced as randomly generated 40-character hashes
                          - type: object
                            properties:
                              billing_frequency:
                                default: one-time
                                type: string
                                enum:
                                  - one-time
                                  - annually
                                  - semi-annually
                                  - quarterly
                                  - monthly
                                  - weekly
                                description: |
                                  Only available in Growth and above plans

                                  How often a customer is billed for access to a service or product
                          - type: object
                            properties:
                              billing_frequency_cycles:
                                default: null
                                type: integer
                                nullable: true
                                description: |
                                  Only available in Growth and above plans

                                  The number of times the billing frequency repeats for a product in a deal

                                  When `billing_frequency` is set to `one-time`, this field must be `null`

                                  When `billing_frequency` is set to `weekly`, this field cannot be `null`

                                  For all the other values of `billing_frequency`, `null` represents a product billed indefinitely

                                  Must be a positive integer less or equal to 208
                      - type: object
                        title: PricesArray
                        properties:
                          prices:
                            type: array
                            items:
                              type: object
                            description: "Array of objects, each containing: product_id (number), currency (string), price (number), cost (number), direct_cost (number | null), notes (string)"
              example:
                success: true
                data:
                  id: 1
                  name: Mechanical Pencil
                  code: MPENCIL
                  description: Product description
                  unit: ""
                  tax: 0
                  category: Retail
                  is_linkable: true
                  is_deleted: false
                  visible_to: 3
                  owner_id: 1234
                  add_time: "2019-12-19T11:36:49Z"
                  update_time: "2019-12-19T11:36:49Z"
                  billing_frequency: monthly
                  billing_frequency_cycles: 4
                  prices:
                    - product_id: 1
                      price: 5
                      currency: EUR
                      cost: 2
                      direct_cost: 1
                      notes: this is a note
                  custom_fields:
                    type: object
                    description: A map of custom fields with hash-based keys
                    additionalProperties:
                      oneOf:
                        - type: string
                        - type: number
                        - type: object
                          additionalProperties: true
  "/products/{id}/variations":
    get:
      summary: Get all product variations
      description: Returns data about all product variations.
      x-token-cost: 10
      operationId: getProductVariations
      tags:
        - Products
      security:
        - api_key: []
        - oauth2:
            - "products:read"
            - "products:full"
      parameters:
        - in: path
          name: id
          description: The ID of the product
          required: true
          schema:
            type: integer
        - in: query
          name: cursor
          required: false
          schema:
            type: string
          description: "For pagination, the marker (an opaque string value) representing the first item on the next page"
        - in: query
          name: limit
          description: "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
          schema:
            type: integer
            example: 100
      responses:
        "200":
          description: List of product variations
          content:
            application/json:
              schema:
                title: GetProductVariationsResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: array
                    description: Array containing data for all products
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          description: The ID of the product variation
                        name:
                          type: string
                          description: The name of the product variation
                        product_id:
                          type: integer
                          description: The ID of the product
                        prices:
                          type: array
                          items:
                            type: object
                          description: "Array of objects, each containing: product_variation_id (number), currency (string), price (number), cost (number), direct_cost (number) , notes (string)"
                  additional_data:
                    type: object
                    description: Pagination related data
                    properties:
                      next_cursor:
                        type: string
                        description: The first item on the next page. The value of the `next_cursor` field will be `null` if you have reached the end of the dataset and there’s no more pages to be returned.
              example:
                success: true
                data:
                  - id: 2
                    name: Upgraded Mechanical Pencil
                    product_id: 1
                    prices:
                      - product_variation_id: 2
                        price: 5
                        currency: EUR
                        cost: 2
                        direct_cost: 3
                        notes: This is the price for the upgraded mechanical pencil
                additional_data:
                  next_cursor: eyJmaWVsZCI6ImlkIiwiZmllbGRWYWx1ZSI6Nywic29ydERpcmVjdGlvbiI6ImFzYyIsImlkIjo3fQ
    post:
      summary: Add a product variation
      description: Adds a new product variation.
      x-token-cost: 5
      operationId: addProductVariation
      tags:
        - Products
      security:
        - api_key: []
        - oauth2:
            - "products:full"
      parameters:
        - in: path
          name: id
          description: The ID of the product
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              title: addProductVariationRequest
              required:
                - name
              type: object
              properties:
                name:
                  type: string
                  description: The name of the product variation. The maximum length is 255 characters.
                prices:
                  type: array
                  items:
                    type: object
                  description: "Array of objects, each containing: currency (string), price (number), cost (number, optional), direct_cost (number, optional), notes (string, optional). When prices is omitted altogether, a default price of 0, a default cost of 0, a default direct_cost of 0 and the user's default currency will be assigned."
      responses:
        "201":
          description: Add a product variation
          content:
            application/json:
              schema:
                title: GetProductVariationResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                        description: The ID of the product variation
                      name:
                        type: string
                        description: The name of the product variation
                      product_id:
                        type: integer
                        description: The ID of the product
                      prices:
                        type: array
                        items:
                          type: object
                        description: "Array of objects, each containing: product_variation_id (number), currency (string), price (number), cost (number), direct_cost (number) , notes (string)"
              example:
                success: true
                data:
                  id: 2
                  name: Upgraded Mechanical Pencil
                  product_id: 1
                  prices:
                    - product_variation_id: 2
                      price: 5
                      currency: EUR
                      cost: 2
                      direct_cost: 3
                      notes: This is the price for the upgraded mechanical pencil
  "/products/{id}/variations/{product_variation_id}":
    patch:
      summary: Update a product variation
      description: Updates product variation data.
      x-token-cost: 5
      operationId: updateProductVariation
      tags:
        - Products
      security:
        - api_key: []
        - oauth2:
            - "products:full"
      parameters:
        - in: path
          name: id
          description: The ID of the product
          required: true
          schema:
            type: integer
        - in: path
          name: product_variation_id
          description: The ID of the product variation
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              title: updateProductVariationRequest
              type: object
              properties:
                name:
                  type: string
                  description: The name of the product variation. The maximum length is 255 characters.
                prices:
                  type: array
                  items:
                    type: object
                  description: "Array of objects, each containing: currency (string), price (number), cost (number, optional), direct_cost (number, optional), notes (string, optional). When prices is omitted altogether, a default price of 0, a default cost of 0, a default direct_cost of 0 and the user's default currency will be assigned."
      responses:
        "200":
          description: Update product variation data
          content:
            application/json:
              schema:
                title: GetProductVariationResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                        description: The ID of the product variation
                      name:
                        type: string
                        description: The name of the product variation
                      product_id:
                        type: integer
                        description: The ID of the product
                      prices:
                        type: array
                        items:
                          type: object
                        description: "Array of objects, each containing: product_variation_id (number), currency (string), price (number), cost (number), direct_cost (number) , notes (string)"
              example:
                success: true
                data:
                  id: 2
                  name: Upgraded Mechanical Pencil
                  product_id: 1
                  prices:
                    - product_variation_id: 2
                      price: 5
                      currency: EUR
                      cost: 2
                      direct_cost: 3
                      notes: This is the price for the upgraded mechanical pencil
    delete:
      summary: Delete a product variation
      description: Deletes a product variation.
      x-token-cost: 3
      operationId: deleteProductVariation
      tags:
        - Products
      security:
        - api_key: []
        - oauth2:
            - "products:full"
      parameters:
        - in: path
          name: id
          description: The ID of the product
          required: true
          schema:
            type: integer
        - in: path
          name: product_variation_id
          description: The ID of the product variation
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Delete a product variation
          content:
            application/json:
              schema:
                title: DeleteProductVariationResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The ID of a deleted product variant
              example:
                success: true
                data:
                  id: 123
  "/products/{id}/images":
    get:
      summary: Get image of a product
      description: Retrieves the image of a product. The public URL has a limited lifetime of 7 days.
      x-token-cost: 10
      operationId: getProductImage
      tags:
        - Products
        - Beta
      security:
        - api_key: []
        - oauth2:
            - "products:read"
            - "products:full"
      parameters:
        - in: path
          name: id
          description: The ID of the product
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retrieves the image of a product. The public URL has a limited lifetime of 7 days.
          content:
            application/json:
              schema:
                title: GetProductImageResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: object
                    description: The product image data and the respective public URL
                    properties:
                      id:
                        type: integer
                        description: The ID of the product image
                      product_id:
                        type: integer
                        description: The ID of the product associated
                      company_id:
                        type: string
                        description: The ID of the company
                      public_url:
                        type: string
                        description: The public URL of the product image
                      add_time:
                        type: string
                        description: The date of image upload.
                      mime_type:
                        type: string
                        description: The MIME type of the product image
                      name:
                        type: string
                        description: The name of the product image file
              example:
                success: true
                data:
                  id: 1
                  product_id: 1
                  company_id: "1"
                  public_url: "http://my-server.com/images/b0369d1d-6b6a-4293-88b9-e2924782d47e.png"
                  add_time: "2025-03-10"
                  mime_type: image/png
                  name: product-image.png
    post:
      summary: Upload an image for a product
      description: Uploads an image for a product.
      x-token-cost: 20
      operationId: uploadProductImage
      tags:
        - Products
        - Beta
      security:
        - api_key: []
        - oauth2:
            - "products:full"
      parameters:
        - in: path
          name: id
          description: The ID of the product
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              title: AddProductImageRequestBody
              type: object
              required:
                - data
              properties:
                data:
                  type: string
                  format: binary
                  description: One image supplied in the multipart/form-data encoding
      responses:
        "201":
          description: Image added to product.
          content:
            application/json:
              schema:
                title: AddProductImageResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The ID of the product image
                      product_id:
                        type: number
                        description: The ID of the product associated
                      company_id:
                        type: string
                        description: The ID of the company
                      add_time:
                        type: string
                        description: The date of image upload.
              example:
                success: true
                data:
                  id: 1
                  product_id: 1
                  company_id: "1"
                  add_time: "2025-03-10"
    put:
      summary: Update an image for a product
      description: Updates the image of a product.
      x-token-cost: 20
      operationId: updateProductImage
      tags:
        - Products
        - Beta
      security:
        - api_key: []
        - oauth2:
            - "products:full"
      parameters:
        - in: path
          name: id
          description: The ID of the product
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              title: UpdateProductImageRequestBody
              type: object
              required:
                - data
              properties:
                data:
                  type: string
                  format: binary
                  description: One image supplied in the multipart/form-data encoding
      responses:
        "200":
          description: Edited product image.
          content:
            application/json:
              schema:
                title: UpdateProductImageResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The ID of the product image
                      product_id:
                        type: number
                        description: The ID of the product associated
                      company_id:
                        type: string
                        description: The ID of the company
                      add_time:
                        type: string
                        description: The date of image upload.
              example:
                success: true
                data:
                  id: 1
                  product_id: 1
                  company_id: "1"
                  add_time: "2025-03-10"
    delete:
      summary: Delete an image of a product
      description: Deletes the image of a product.
      x-token-cost: 6
      operationId: deleteProductImage
      tags:
        - Products
        - Beta
      security:
        - api_key: []
        - oauth2:
            - "products:full"
      parameters:
        - in: path
          name: id
          description: The ID of the product
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: The ID of the deleted product image.
          content:
            application/json:
              schema:
                title: DeleteProductImageResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The ID of the image that was deleted from the product.
              example:
                success: true
                data:
                  id: 1
  /leads/search:
    get:
      summary: Search leads
      description: 'Searches all leads by title, notes and/or custom fields. This endpoint is a wrapper of <a href="https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem">/v1/itemSearch</a> with a narrower OAuth scope. Found leads can be filtered by the person ID and the organization ID.'
      x-token-cost: 20
      operationId: searchLeads
      tags:
        - Leads
      security:
        - api_key: []
        - oauth2:
            - "leads:read"
            - "leads:full"
            - "search:read"
      parameters:
        - in: query
          name: term
          required: true
          schema:
            type: string
          description: The search term to look for. Minimum 2 characters (or 1 if using `exact_match`). Please note that the search term has to be URL encoded.
        - in: query
          name: fields
          schema:
            type: string
            enum:
              - custom_fields
              - notes
              - title
          description: A comma-separated string array. The fields to perform the search from. Defaults to all of them.
        - in: query
          name: exact_match
          schema:
            type: boolean
          description: "When enabled, only full exact matches against the given term are returned. It is <b>not</b> case sensitive."
        - in: query
          name: person_id
          schema:
            type: integer
          description: Will filter leads by the provided person ID. The upper limit of found leads associated with the person is 2000.
        - in: query
          name: organization_id
          schema:
            type: integer
          description: Will filter leads by the provided organization ID. The upper limit of found leads associated with the organization is 2000.
        - in: query
          name: include_fields
          schema:
            type: string
            enum:
              - lead.was_seen
          description: Supports including optional fields in the results which are not provided by default
        - in: query
          name: limit
          description: "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
          schema:
            type: integer
            example: 100
        - in: query
          name: cursor
          required: false
          schema:
            type: string
          description: "For pagination, the marker (an opaque string value) representing the first item on the next page"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                title: GetLeadSearchResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    title: GetLeadSearchResponseData
                    properties:
                      data:
                        type: object
                        properties:
                          items:
                            type: array
                            description: The array of leads
                            items:
                              type: object
                              title: LeadSearchItem
                              properties:
                                result_score:
                                  type: number
                                  description: Search result relevancy
                                item:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of the lead
                                    type:
                                      type: string
                                      description: The type of the item
                                    title:
                                      type: string
                                      description: The title of the lead
                                    owner:
                                      type: object
                                      properties:
                                        id:
                                          type: integer
                                          description: The ID of the owner of the lead
                                    person:
                                      type: object
                                      properties:
                                        id:
                                          type: integer
                                          description: The ID of the person the lead is associated with
                                        name:
                                          type: string
                                          description: The name of the person the lead is associated with
                                    organization:
                                      type: object
                                      properties:
                                        id:
                                          type: integer
                                          description: The ID of the organization the lead is associated with
                                        name:
                                          type: string
                                          description: The name of the organization the lead is associated with
                                    phones:
                                      type: array
                                      items:
                                        type: string
                                    emails:
                                      type: array
                                      items:
                                        type: string
                                    custom_fields:
                                      type: array
                                      items:
                                        type: string
                                      description: Custom fields
                                    notes:
                                      type: array
                                      description: An array of notes
                                      items:
                                        type: string
                                    value:
                                      type: integer
                                      description: The value of the lead
                                    currency:
                                      type: string
                                      description: The currency of the lead
                                    visible_to:
                                      type: integer
                                      description: The visibility of the lead
                                    is_archived:
                                      type: boolean
                                      description: A flag indicating whether the lead is archived or not
                      additional_data:
                        type: object
                        description: Pagination related data
                        properties:
                          next_cursor:
                            type: string
                            description: The first item on the next page. The value of the `next_cursor` field will be `null` if you have reached the end of the dataset and there’s no more pages to be returned.
              example:
                success: true
                data:
                  items:
                    - result_score: 0.29
                      item:
                        id: 39c433f0-8a4c-11ec-8728-09968f0a1ca0
                        type: lead
                        title: John Doe lead
                        owner:
                          id: 1
                        person:
                          id: 1
                          name: John Doe
                        organization:
                          id: 1
                          name: John company
                        phones: []
                        emails:
                          - john@doe.com
                        custom_fields: []
                        notes: []
                        value: 100
                        currency: USD
                        visible_to: 3
                        is_archived: false
                additional_data:
                  next_cursor: eyJmaWVsZCI6ImlkIiwiZmllbGRWYWx1ZSI6Nywic29ydERpcmVjdGlvbiI6ImFzYyIsImlkIjo3fQ
  "/leads/{id}/convert/deal":
    post:
      security:
        - api_key: []
        - oauth2:
            - "leads:full"
      tags:
        - Leads
        - Beta
      summary: Convert a lead to a deal (BETA)
      description: 'Initiates a conversion of a lead to a deal. The return value is an ID of a job that was assigned to perform the conversion. Related entities (notes, files, emails, activities, ...) are transferred during the process to the target entity. If the conversion is successful, the lead is marked as deleted. To retrieve the created entity ID and the result of the conversion, call the <a href="https://developers.pipedrive.com/docs/api/v1/Leads#getLeadConversionStatus">/api/v2/leads/{lead_id}/convert/status/{conversion_id}</a> endpoint.'
      operationId: convertLeadToDeal
      x-token-cost: 40
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: The ID of the lead to convert
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              type: object
              properties:
                stage_id:
                  description: "The ID of a stage the created deal will be added to. Please note that a pipeline will be assigned automatically based on the `stage_id`. If omitted, the deal will be placed in the first stage of the default pipeline."
                  type: integer
                pipeline_id:
                  description: "The ID of a pipeline the created deal will be added to. By default, the deal will be added to the first stage of the specified pipeline. Please note that `pipeline_id` and `stage_id` should not be used together as `pipeline_id` will be ignored."
                  type: integer
      responses:
        "200":
          description: Successful response containing payload in the `data` field
          content:
            application/json:
              schema:
                title: AddConvertLeadToDealResponse
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    description: An object containing conversion job id that performs the conversion
                    required:
                      - conversion_id
                    properties:
                      conversion_id:
                        description: The ID of the conversion job that can be used to retrieve conversion status and details. The ID has UUID format.
                        type: string
                        format: uuid
                  additional_data:
                    type: object
                    nullable: true
                    example: null
              example:
                success: true
                data:
                  conversion_id: 4b40248b-945a-4802-b996-60fdff8c5c69
                additional_data: null
        "404":
          description: A resource describing an error
          content:
            application/json:
              schema:
                type: object
                title: GetConvertResponse
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    description: The description of the error
                  error_info:
                    type: string
                    description: A message describing how to solve the problem
                  data:
                    type: object
                    nullable: true
                    example: null
                  additional_data:
                    type: object
                    nullable: true
                    example: null
              example:
                success: false
                error: Entity was not found
                error_info: Object was not found.
                data: null
                additional_data: null
  "/leads/{id}/convert/status/{conversion_id}":
    get:
      security:
        - api_key: []
        - oauth2:
            - "leads:full"
            - "leads:read"
      tags:
        - Leads
        - Beta
      summary: Get Lead conversion status (BETA)
      description: "Returns data about the conversion. Status is always present and its value (not_started, running, completed, failed, rejected) represents the current state of the conversion. Deal ID is only present if the conversion was successfully finished. This data is only temporary and removed after a few days."
      operationId: getLeadConversionStatus
      x-token-cost: 1
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: The ID of a lead
        - in: path
          name: conversion_id
          required: true
          schema:
            type: string
            format: uuid
          description: The ID of the conversion
      responses:
        "200":
          description: Successful response containing payload in the `data` field
          content:
            application/json:
              example:
                success: true
                data:
                  deal_id: 33
                  conversion_id: 4b40248b-945a-4802-b996-60fdff8c5c69
                  status: completed
                additional_data: null
              schema:
                title: GetConvertResponse
                type: object
                required:
                  - success
                  - data
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    description: An object containing conversion status. After successful conversion the converted entity ID is also present.
                    required:
                      - conversion_id
                      - status
                    properties:
                      lead_id:
                        description: The ID of the new lead.
                        type: string
                        format: uuid
                      deal_id:
                        description: The ID of the new deal.
                        type: integer
                      conversion_id:
                        description: The ID of the conversion job. The ID can be used to retrieve conversion status and details. The ID has UUID format.
                        type: string
                        format: uuid
                      status:
                        description: Status of the conversion job.
                        type: string
                        enum:
                          - not_started
                          - running
                          - completed
                          - failed
                          - rejected
                  additional_data:
                    type: object
                    nullable: true
                    example: null
        "404":
          description: A resource describing an error
          content:
            application/json:
              schema:
                type: object
                title: GetConvertResponse
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    description: The description of the error
                  error_info:
                    type: string
                    description: A message describing how to solve the problem
                  data:
                    type: object
                    nullable: true
                    example: null
                  additional_data:
                    type: object
                    nullable: true
                    example: null
              example:
                success: false
                error: Entity was not found
                error_info: Object was not found.
                data: null
                additional_data: null
  /organizations/search:
    get:
      summary: Search organizations
      description: 'Searches all organizations by name, address, notes and/or custom fields. This endpoint is a wrapper of <a href="https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem">/v1/itemSearch</a> with a narrower OAuth scope.'
      x-token-cost: 20
      operationId: searchOrganization
      tags:
        - Organizations
      security:
        - api_key: []
        - oauth2:
            - "contacts:read"
            - "contacts:full"
            - "search:read"
      parameters:
        - in: query
          name: term
          required: true
          schema:
            type: string
          description: The search term to look for. Minimum 2 characters (or 1 if using `exact_match`). Please note that the search term has to be URL encoded.
        - in: query
          name: fields
          schema:
            type: string
            enum:
              - address
              - custom_fields
              - notes
              - name
          description: 'A comma-separated string array. The fields to perform the search from. Defaults to all of them. Only the following custom field types are searchable: `address`, `varchar`, `text`, `varchar_auto`, `double`, `monetary` and `phone`. Read more about searching by custom fields <a href="https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields" target="_blank" rel="noopener noreferrer">here</a>.'
        - in: query
          name: exact_match
          schema:
            type: boolean
          description: "When enabled, only full exact matches against the given term are returned. It is <b>not</b> case sensitive."
        - in: query
          name: limit
          description: "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
          schema:
            type: integer
            example: 100
        - in: query
          name: cursor
          required: false
          schema:
            type: string
          description: "For pagination, the marker (an opaque string value) representing the first item on the next page"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                title: GetOrganizationSearchResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          items:
                            type: array
                            description: The array of found items
                            items:
                              type: object
                              properties:
                                result_score:
                                  type: number
                                  description: Search result relevancy
                                item:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: The ID of the organization
                                    type:
                                      type: string
                                      description: The type of the item
                                    name:
                                      type: string
                                      description: The name of the organization
                                    address:
                                      type: string
                                      description: The address of the organization
                                    visible_to:
                                      type: integer
                                      description: The visibility of the organization
                                    owner:
                                      type: object
                                      properties:
                                        id:
                                          type: integer
                                          description: The ID of the owner of the deal
                                    custom_fields:
                                      type: array
                                      items:
                                        type: string
                                      description: Custom fields
                                    notes:
                                      type: array
                                      description: An array of notes
                                      items:
                                        type: string
                      additional_data:
                        type: object
                        description: Pagination related data
                        properties:
                          next_cursor:
                            type: string
                            description: The first item on the next page. The value of the `next_cursor` field will be `null` if you have reached the end of the dataset and there’s no more pages to be returned.
              example:
                success: true
                data:
                  items:
                    - result_score: 0.316
                      item:
                        id: 1
                        type: organization
                        name: Organization name
                        address: "Mustamäe tee 3a, 10615 Tallinn"
                        visible_to: 3
                        owner:
                          id: 1
                        custom_fields: []
                        notes: []
                additional_data:
                  next_cursor: eyJmaWVsZCI6ImlkIiwiZmllbGRWYWx1ZSI6Nywic29ydERpcmVjdGlvbiI6ImFzYyIsImlkIjo3fQ
  /persons/search:
    get:
      summary: Search persons
      description: 'Searches all persons by name, email, phone, notes and/or custom fields. This endpoint is a wrapper of <a href="https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem">/v1/itemSearch</a> with a narrower OAuth scope. Found persons can be filtered by organization ID.'
      x-token-cost: 20
      operationId: searchPersons
      tags:
        - Persons
      security:
        - api_key: []
        - oauth2:
            - "contacts:read"
            - "contacts:full"
            - "search:read"
      parameters:
        - in: query
          name: term
          required: true
          schema:
            type: string
          description: The search term to look for. Minimum 2 characters (or 1 if using `exact_match`). Please note that the search term has to be URL encoded.
        - in: query
          name: fields
          schema:
            type: string
            enum:
              - custom_fields
              - email
              - notes
              - phone
              - name
          description: 'A comma-separated string array. The fields to perform the search from. Defaults to all of them. Only the following custom field types are searchable: `address`, `varchar`, `text`, `varchar_auto`, `double`, `monetary` and `phone`. Read more about searching by custom fields <a href="https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields" target="_blank" rel="noopener noreferrer">here</a>.'
        - in: query
          name: exact_match
          schema:
            type: boolean
          description: "When enabled, only full exact matches against the given term are returned. It is <b>not</b> case sensitive."
        - in: query
          name: organization_id
          schema:
            type: integer
          description: Will filter persons by the provided organization ID. The upper limit of found persons associated with the organization is 2000.
        - in: query
          name: include_fields
          schema:
            type: string
            enum:
              - person.picture
          description: Supports including optional fields in the results which are not provided by default
        - in: query
          name: limit
          description: "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
          schema:
            type: integer
            example: 100
        - in: query
          name: cursor
          required: false
          schema:
            type: string
          description: "For pagination, the marker (an opaque string value) representing the first item on the next page"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                title: GetPersonSearchResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          items:
                            type: array
                            description: The array of found items
                            items:
                              type: object
                              properties:
                                result_score:
                                  type: number
                                  description: Search result relevancy
                                item:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: The ID of the person
                                    type:
                                      type: string
                                      description: The type of the item
                                    name:
                                      type: string
                                      description: The name of the person
                                    phones:
                                      type: array
                                      description: An array of phone numbers
                                      items:
                                        type: string
                                    emails:
                                      type: array
                                      description: An array of email addresses
                                      items:
                                        type: string
                                    visible_to:
                                      type: integer
                                      description: The visibility of the person
                                    owner:
                                      type: object
                                      properties:
                                        id:
                                          type: integer
                                          description: The ID of the owner of the person
                                    organization:
                                      type: object
                                      properties:
                                        id:
                                          type: integer
                                          description: The ID of the organization the person is associated with
                                        name:
                                          type: string
                                          description: The name of the organization the person is associated with
                                    custom_fields:
                                      type: array
                                      items:
                                        type: string
                                      description: Custom fields
                                    notes:
                                      type: array
                                      description: An array of notes
                                      items:
                                        type: string
                      additional_data:
                        type: object
                        description: Pagination related data
                        properties:
                          next_cursor:
                            type: string
                            description: The first item on the next page. The value of the `next_cursor` field will be `null` if you have reached the end of the dataset and there’s no more pages to be returned.
              example:
                success: true
                data:
                  items:
                    - result_score: 0.5092
                      item:
                        id: 1
                        type: person
                        name: Jane Doe
                        phones:
                          - +372 555555555
                        emails:
                          - jane@pipedrive.com
                        visible_to: 3
                        owner:
                          id: 1
                        organization:
                          id: 1
                          name: Organization name
                          address: null
                        custom_fields: []
                        notes: []
                additional_data:
                  next_cursor: eyJmaWVsZCI6ImlkIiwiZmllbGRWYWx1ZSI6Nywic29ydERpcmVjdGlvbiI6ImFzYyIsImlkIjo3fQ
  /itemSearch:
    get:
      summary: Perform a search from multiple item types
      description: Performs a search from your choice of item types and fields.
      x-token-cost: 20
      operationId: searchItem
      tags:
        - ItemSearch
      security:
        - api_key: []
        - oauth2:
            - "search:read"
      parameters:
        - in: query
          name: term
          required: true
          schema:
            type: string
          description: The search term to look for. Minimum 2 characters (or 1 if using `exact_match`). Please note that the search term has to be URL encoded.
        - in: query
          name: item_types
          schema:
            type: string
            enum:
              - deal
              - person
              - organization
              - product
              - lead
              - file
              - mail_attachment
              - project
          description: A comma-separated string array. The type of items to perform the search from. Defaults to all.
        - in: query
          name: fields
          schema:
            type: string
            enum:
              - address
              - code
              - custom_fields
              - email
              - name
              - notes
              - phone
              - title
              - description
          description: 'A comma-separated string array. The fields to perform the search from. Defaults to all. Relevant for each item type are:<br> <table> <tr><th><b>Item type</b></th><th><b>Field</b></th></tr> <tr><td>Deal</td><td>`custom_fields`, `notes`, `title`</td></tr> <tr><td>Person</td><td>`custom_fields`, `email`, `name`, `notes`, `phone`</td></tr> <tr><td>Organization</td><td>`address`, `custom_fields`, `name`, `notes`</td></tr> <tr><td>Product</td><td>`code`, `custom_fields`, `name`</td></tr> <tr><td>Lead</td><td>`custom_fields`, `notes`, `title`</td></tr> <tr><td>File</td><td>`name`</td></tr> <tr><td>Mail attachment</td><td>`name`</td></tr> <tr><td>Project</td><td> `custom_fields`, `notes`, `title`, `description` </td></tr> </table> <br> Only the following custom field types are searchable: `address`, `varchar`, `text`, `varchar_auto`, `double`, `monetary` and `phone`. Read more about searching by custom fields <a href="https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields" target="_blank" rel="noopener noreferrer">here</a>.'
        - in: query
          name: search_for_related_items
          schema:
            type: boolean
          description: "When enabled, the response will include up to 100 newest related leads and 100 newest related deals for each found person and organization and up to 100 newest related persons for each found organization"
        - in: query
          name: exact_match
          schema:
            type: boolean
          description: "When enabled, only full exact matches against the given term are returned. It is <b>not</b> case sensitive."
        - in: query
          name: include_fields
          schema:
            type: string
            enum:
              - deal.cc_email
              - person.picture
              - product.price
          description: A comma-separated string array. Supports including optional fields in the results which are not provided by default.
        - in: query
          name: limit
          description: "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 100 is allowed."
          schema:
            type: integer
            example: 100
        - in: query
          name: cursor
          required: false
          schema:
            type: string
          description: "For pagination, the marker (an opaque string value) representing the first item on the next page"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                title: GetItemSearchResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    title: GetItemSearchResponseData
                    properties:
                      data:
                        type: object
                        properties:
                          items:
                            type: array
                            description: The array of found items
                            items:
                              type: object
                              title: ItemSearchItem
                              properties:
                                result_score:
                                  type: number
                                  description: Search result relevancy
                                item:
                                  type: object
                                  description: Item
                          related_items:
                            type: array
                            description: The array of related items if `search_for_related_items` was enabled
                            items:
                              type: object
                              title: ItemSearchItem
                              properties:
                                result_score:
                                  type: number
                                  description: Search result relevancy
                                item:
                                  type: object
                                  description: Item
                      additional_data:
                        type: object
                        description: Pagination related data
                        properties:
                          next_cursor:
                            type: string
                            description: The first item on the next page. The value of the `next_cursor` field will be `null` if you have reached the end of the dataset and there’s no more pages to be returned.
              example:
                success: true
                data:
                  items:
                    - result_score: 1.22724
                      item:
                        id: 42
                        type: deal
                        title: Sample Deal
                        value: 53883
                        currency: USD
                        status: open
                        visible_to: 3
                        owner:
                          id: 69
                        stage:
                          id: 3
                          name: Demo Scheduled
                        person:
                          id: 6
                          name: Sample Person
                        organization:
                          id: 9
                          name: Sample Organization
                          address: "Dabas, Hungary"
                        custom_fields:
                          - Sample text
                        notes:
                          - Sample note
                        is_archived: false
                    - result_score: 0.31335002
                      item:
                        id: 9
                        type: organization
                        name: Sample Organization
                        address: "Dabas, Hungary"
                        visible_to: 3
                        owner:
                          id: 69
                        custom_fields: []
                        notes: []
                    - result_score: 0.29955
                      item:
                        id: 6
                        type: person
                        name: Sample Person
                        phones:
                          - "555123123"
                          - +372 (55) 123468
                          - "0231632772"
                        emails:
                          - primary@email.com
                          - secondary@email.com
                        visible_to: 1
                        owner:
                          id: 69
                        organization:
                          id: 9
                          name: Sample Organization
                          address: "Dabas, Hungary"
                        custom_fields:
                          - Custom Field Text
                        notes:
                          - Person note
                    - result_score: 0.0093
                      item:
                        id: 4
                        type: mail_attachment
                        name: Sample mail attachment.txt
                        url: /files/4/download
                    - result_score: 0.0093
                      item:
                        id: 3
                        type: file
                        name: Sample file attachment.txt
                        url: /files/3/download
                        deal:
                          id: 42
                          title: Sample Deal
                        person:
                          id: 6
                          name: Sample Person
                        organization:
                          id: 9
                          name: Sample Organization
                          address: "Dabas, Hungary"
                    - result_score: 0.0011999999
                      item:
                        id: 1
                        type: product
                        name: Sample Product
                        code: product-code
                        visible_to: 3
                        owner:
                          id: 69
                        custom_fields: []
                  related_items:
                    - result_score: 0
                      item:
                        id: 2
                        type: deal
                        title: Other deal
                        value: 100
                        currency: USD
                        status: open
                        visible_to: 3
                        owner:
                          id: 1
                        stage:
                          id: 1
                          name: Lead In
                        person:
                          id: 1
                          name: Sample Person
                        is_archived: false
                additional_data:
                  next_cursor: eyJmaWVsZCI6ImlkIiwiZmllbGRWYWx1ZSI6Nywic29ydERpcmVjdGlvbiI6ImFzYyIsImlkIjo3fQ
  /itemSearch/field:
    get:
      summary: Perform a search using a specific field from an item type
      description: "Performs a search from the values of a specific field. Results can either be the distinct values of the field (useful for searching autocomplete field values), or the IDs of actual items (deals, leads, persons, organizations or products)."
      x-token-cost: 20
      operationId: searchItemByField
      tags:
        - ItemSearch
      security:
        - api_key: []
        - oauth2:
            - "search:read"
      parameters:
        - in: query
          name: term
          required: true
          schema:
            type: string
          description: The search term to look for. Minimum 2 characters (or 1 if `match` is `exact`). Please note that the search term has to be URL encoded.
        - in: query
          name: entity_type
          required: true
          schema:
            type: string
            enum:
              - deal
              - lead
              - person
              - organization
              - product
              - project
          description: The type of the field to perform the search from
        - in: query
          name: match
          schema:
            type: string
            default: exact
            enum:
              - exact
              - beginning
              - middle
          description: "The type of match used against the term. The search <b>is</b> case sensitive.<br/><br/> E.g. in case of searching for a value `monkey`, <ul> <li>with `exact` match, you will only find it if term is `monkey`</li> <li>with `beginning` match, you will only find it if the term matches the beginning or the whole string, e.g. `monk` and `monkey`</li> <li>with `middle` match, you will find the it if the term matches any substring of the value, e.g. `onk` and `ke`</li> </ul>."
        - in: query
          name: field
          required: true
          schema:
            type: string
          description: 'The key of the field to search from. The field key can be obtained by fetching the list of the fields using any of the fields'' API GET methods (dealFields, personFields, etc.). Only the following custom field types are searchable: `address`, `varchar`, `text`, `varchar_auto`, `double`, `monetary` and `phone`. Read more about searching by custom fields <a href="https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields" target="_blank" rel="noopener noreferrer">here</a>.'
        - in: query
          name: limit
          description: "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
          schema:
            type: integer
            example: 100
        - in: query
          name: cursor
          required: false
          schema:
            type: string
          description: "For pagination, the marker (an opaque string value) representing the first item on the next page"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                title: GetItemSearchFieldResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    properties:
                      data:
                        type: array
                        description: The array of found fields
                        items:
                          type: object
                          title: ItemSearchItem
                          properties:
                            result_score:
                              type: number
                              description: Search result relevancy
                            item:
                              type: object
                              description: Item
                      additional_data:
                        type: object
                        description: Pagination related data
                        properties:
                          next_cursor:
                            type: string
                            description: The first item on the next page. The value of the `next_cursor` field will be `null` if you have reached the end of the dataset and there’s no more pages to be returned.
              example:
                success: true
                data:
                  - id: 1
                    name: Jane Doe
                  - id: 2
                    name: John Doe
                additional_data:
                  next_cursor: eyJmaWVsZCI6ImlkIiwiZmllbGRWYWx1ZSI6Nywic29ydERpcmVjdGlvbiI6ImFzYyIsImlkIjo3fQ
  /stages:
    get:
      summary: Get all stages
      description: Returns data about all stages.
      x-token-cost: 5
      operationId: getStages
      tags:
        - Stages
      security:
        - api_key: []
        - oauth2:
            - "deals:read"
            - "deals:full"
            - admin
      parameters:
        - in: query
          name: pipeline_id
          schema:
            type: integer
          description: "The ID of the pipeline to fetch stages for. If omitted, stages for all pipelines will be fetched."
        - in: query
          name: sort_by
          description: "The field to sort by. Supported fields: `id`, `update_time`, `add_time`, `order_nr`."
          schema:
            type: string
            default: id
            enum:
              - id
              - update_time
              - add_time
              - order_nr
        - in: query
          name: sort_direction
          description: "The sorting direction. Supported values: `asc`, `desc`."
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
        - in: query
          name: limit
          description: "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
          schema:
            type: integer
            example: 100
        - in: query
          name: cursor
          required: false
          schema:
            type: string
          description: "For pagination, the marker (an opaque string value) representing the first item on the next page"
      responses:
        "200":
          description: Get all stages
          content:
            application/json:
              schema:
                title: GetStagesResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: array
                    description: The array of stages
                    items:
                      type: object
                      title: StageItem
                      properties:
                        id:
                          type: integer
                          description: The ID of the stage
                        order_nr:
                          type: integer
                          description: Defines the order of the stage
                        name:
                          type: string
                          description: The name of the stage
                        is_deleted:
                          type: boolean
                          description: Whether the stage is marked as deleted or not
                        deal_probability:
                          type: integer
                          description: The success probability percentage of the deal. Used/shown when the deal weighted values are used.
                        pipeline_id:
                          type: integer
                          description: The ID of the pipeline to add the stage to
                        is_deal_rot_enabled:
                          type: boolean
                          description: Whether deals in this stage can become rotten
                        days_to_rotten:
                          type: integer
                          nullable: true
                          description: The number of days the deals not updated in this stage would become rotten. Applies only if the `is_deal_rot_enabled` is set.
                        add_time:
                          type: string
                          description: The stage creation time
                        update_time:
                          type: string
                          description: The stage update time
                  additional_data:
                    type: object
                    description: The additional data of the list
                    properties:
                      next_cursor:
                        type: string
                        description: The first item on the next page. The value of the `next_cursor` field will be `null` if you have reached the end of the dataset and there’s no more pages to be returned.
              example:
                success: true
                data:
                  - id: 1
                    order_nr: 1
                    name: Stage Name
                    is_deleted: false
                    deal_probability: 100
                    pipeline_id: 1
                    is_deal_rot_enabled: true
                    days_to_rotten: 2
                    add_time: "2024-01-01T00:00:00Z"
                    update_time: "2024-01-01T00:00:00Z"
                additional_data:
                  next_cursor: eyJmaWVsZCI6ImlkIiwiZmllbGRWYWx1ZSI6Nywic29ydERpcmVjdGlvbiI6ImFzYyIsImlkIjo3fQ
    post:
      summary: Add a new stage
      description: "Adds a new stage, returns the ID upon success."
      x-token-cost: 5
      operationId: addStage
      tags:
        - Stages
      security:
        - api_key: []
        - oauth2:
            - admin
      requestBody:
        content:
          application/json:
            schema:
              title: addStageRequest
              required:
                - name
                - pipeline_id
              type: object
              properties:
                name:
                  type: string
                  description: The name of the stage
                pipeline_id:
                  type: integer
                  description: The ID of the pipeline to add stage to
                deal_probability:
                  type: integer
                  description: The success probability percentage of the deal. Used/shown when deal weighted values are used.
                is_deal_rot_enabled:
                  type: boolean
                  description: Whether deals in this stage can become rotten
                days_to_rotten:
                  type: integer
                  description: The number of days the deals not updated in this stage would become rotten. Applies only if the `is_deal_rot_enabled` is set.
      responses:
        "200":
          description: Add a new stage
          content:
            application/json:
              schema:
                title: UpsertStageResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: object
                    title: StageItem
                    properties:
                      id:
                        type: integer
                        description: The ID of the stage
                      order_nr:
                        type: integer
                        description: Defines the order of the stage
                      name:
                        type: string
                        description: The name of the stage
                      is_deleted:
                        type: boolean
                        description: Whether the stage is marked as deleted or not
                      deal_probability:
                        type: integer
                        description: The success probability percentage of the deal. Used/shown when the deal weighted values are used.
                      pipeline_id:
                        type: integer
                        description: The ID of the pipeline to add the stage to
                      is_deal_rot_enabled:
                        type: boolean
                        description: Whether deals in this stage can become rotten
                      days_to_rotten:
                        type: integer
                        nullable: true
                        description: The number of days the deals not updated in this stage would become rotten. Applies only if the `is_deal_rot_enabled` is set.
                      add_time:
                        type: string
                        description: The stage creation time
                      update_time:
                        type: string
                        description: The stage update time
                    description: The stage object
              example:
                success: true
                data:
                  id: 1
                  order_nr: 1
                  name: Stage Name
                  is_deleted: false
                  deal_probability: 100
                  pipeline_id: 1
                  is_deal_rot_enabled: true
                  days_to_rotten: 2
                  add_time: "2024-01-01T00:00:00Z"
                  update_time: "2024-01-01T00:00:00Z"
  "/stages/{id}":
    delete:
      summary: Delete a stage
      description: Marks a stage as deleted.
      x-token-cost: 3
      operationId: deleteStage
      tags:
        - Stages
      security:
        - api_key: []
        - oauth2:
            - admin
      parameters:
        - in: path
          name: id
          description: The ID of the stage
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Delete stage
          content:
            application/json:
              schema:
                title: DeleteStageResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: Deleted stage ID
              example:
                success: true
                data:
                  id: 1
    get:
      summary: Get one stage
      description: Returns data about a specific stage.
      x-token-cost: 1
      operationId: getStage
      tags:
        - Stages
      security:
        - api_key: []
        - oauth2:
            - "deals:read"
            - "deals:full"
            - admin
      parameters:
        - in: path
          name: id
          description: The ID of the stage
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Get one stages
          content:
            application/json:
              schema:
                title: UpsertStageResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: object
                    title: StageItem
                    properties:
                      id:
                        type: integer
                        description: The ID of the stage
                      order_nr:
                        type: integer
                        description: Defines the order of the stage
                      name:
                        type: string
                        description: The name of the stage
                      is_deleted:
                        type: boolean
                        description: Whether the stage is marked as deleted or not
                      deal_probability:
                        type: integer
                        description: The success probability percentage of the deal. Used/shown when the deal weighted values are used.
                      pipeline_id:
                        type: integer
                        description: The ID of the pipeline to add the stage to
                      is_deal_rot_enabled:
                        type: boolean
                        description: Whether deals in this stage can become rotten
                      days_to_rotten:
                        type: integer
                        nullable: true
                        description: The number of days the deals not updated in this stage would become rotten. Applies only if the `is_deal_rot_enabled` is set.
                      add_time:
                        type: string
                        description: The stage creation time
                      update_time:
                        type: string
                        description: The stage update time
                    description: The stage object
              example:
                success: true
                data:
                  id: 1
                  order_nr: 1
                  name: Stage Name
                  is_deleted: false
                  deal_probability: 100
                  pipeline_id: 1
                  is_deal_rot_enabled: true
                  days_to_rotten: 2
                  add_time: "2024-01-01T00:00:00Z"
                  update_time: "2024-01-01T00:00:00Z"
    patch:
      summary: Update stage details
      description: Updates the properties of a stage.
      x-token-cost: 5
      operationId: updateStage
      tags:
        - Stages
      security:
        - api_key: []
        - oauth2:
            - admin
      parameters:
        - in: path
          name: id
          description: The ID of the stage
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              title: updateStageRequest
              type: object
              properties:
                name:
                  type: string
                  description: The name of the stage
                pipeline_id:
                  type: integer
                  description: The ID of the pipeline to add stage to
                deal_probability:
                  type: integer
                  description: The success probability percentage of the deal. Used/shown when deal weighted values are used.
                is_deal_rot_enabled:
                  type: boolean
                  description: Whether deals in this stage can become rotten
                days_to_rotten:
                  type: integer
                  description: The number of days the deals not updated in this stage would become rotten. Applies only if the `is_deal_rot_enabled` is set.
      responses:
        "200":
          description: Update an existing stage
          content:
            application/json:
              schema:
                title: UpsertStageResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: object
                    title: StageItem
                    properties:
                      id:
                        type: integer
                        description: The ID of the stage
                      order_nr:
                        type: integer
                        description: Defines the order of the stage
                      name:
                        type: string
                        description: The name of the stage
                      is_deleted:
                        type: boolean
                        description: Whether the stage is marked as deleted or not
                      deal_probability:
                        type: integer
                        description: The success probability percentage of the deal. Used/shown when the deal weighted values are used.
                      pipeline_id:
                        type: integer
                        description: The ID of the pipeline to add the stage to
                      is_deal_rot_enabled:
                        type: boolean
                        description: Whether deals in this stage can become rotten
                      days_to_rotten:
                        type: integer
                        nullable: true
                        description: The number of days the deals not updated in this stage would become rotten. Applies only if the `is_deal_rot_enabled` is set.
                      add_time:
                        type: string
                        description: The stage creation time
                      update_time:
                        type: string
                        description: The stage update time
                    description: The stage object
              example:
                success: true
                data:
                  id: 1
                  order_nr: 1
                  name: Stage Name
                  is_deleted: false
                  deal_probability: 100
                  pipeline_id: 1
                  is_deal_rot_enabled: true
                  days_to_rotten: 2
                  add_time: "2024-01-01T00:00:00Z"
                  update_time: "2024-01-01T00:00:00Z"
  /pipelines:
    get:
      summary: Get all pipelines
      description: Returns data about all pipelines.
      x-token-cost: 5
      operationId: getPipelines
      tags:
        - Pipelines
      security:
        - api_key: []
        - oauth2:
            - "deals:read"
            - "deals:full"
            - admin
      parameters:
        - in: query
          name: sort_by
          description: "The field to sort by. Supported fields: `id`, `update_time`, `add_time`."
          schema:
            type: string
            default: id
            enum:
              - id
              - update_time
              - add_time
        - in: query
          name: sort_direction
          description: "The sorting direction. Supported values: `asc`, `desc`."
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
        - in: query
          name: limit
          description: "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
          schema:
            type: integer
            example: 100
        - in: query
          name: cursor
          required: false
          schema:
            type: string
          description: "For pagination, the marker (an opaque string value) representing the first item on the next page"
      responses:
        "200":
          description: Get all pipelines
          content:
            application/json:
              schema:
                type: object
                title: GetPipelinesResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Pipelines array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the pipeline
                            name:
                              type: string
                              description: The name of the pipeline
                            order_nr:
                              type: integer
                              description: Defines the order of pipelines. The pipeline with the lowest `order_nr` is considered the default.
                            is_selected:
                              type: boolean
                              description: Whether this pipeline is selected or not
                            is_deleted:
                              type: boolean
                              description: Whether this pipeline is marked as deleted or not
                            is_deal_probability_enabled:
                              type: boolean
                              description: Whether deal probability is disabled or enabled for this pipeline
                            add_time:
                              type: string
                              description: The pipeline creation time
                            update_time:
                              type: string
                              description: The pipeline update time
                      additional_data:
                        type: object
                        description: The additional data of the list
                        properties:
                          next_cursor:
                            type: string
                            description: The first item on the next page. The value of the `next_cursor` field will be `null` if you have reached the end of the dataset and there’s no more pages to be returned.
              example:
                success: true
                data:
                  - id: 1
                    name: Pipeline Name
                    order_nr: 1
                    is_deleted: false
                    is_deal_probability_enabled: true
                    add_time: "2024-01-01T00:00:00Z"
                    update_time: "2024-01-01T00:00:00Z"
                    is_selected: true
                additional_data:
                  next_cursor: eyJmaWVsZCI6ImlkIiwiZmllbGRWYWx1ZSI6Nywic29ydERpcmVjdGlvbiI6ImFzYyIsImlkIjo3fQ
    post:
      summary: Add a new pipeline
      description: Adds a new pipeline.
      x-token-cost: 5
      operationId: addPipeline
      tags:
        - Pipelines
      security:
        - api_key: []
        - oauth2:
            - admin
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
              type: object
              properties:
                name:
                  type: string
                  description: The name of the pipeline
                is_deal_probability_enabled:
                  type: boolean
                  default: false
                  description: Whether deal probability is disabled or enabled for this pipeline
      responses:
        "200":
          description: Add pipeline
          content:
            application/json:
              schema:
                type: object
                title: UpsertPipelineResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    title: UpsertPipelineResponseData
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: The ID of the pipeline
                          name:
                            type: string
                            description: The name of the pipeline
                          order_nr:
                            type: integer
                            description: Defines the order of pipelines. The pipeline with the lowest `order_nr` is considered the default.
                          is_selected:
                            type: boolean
                            description: Whether this pipeline is selected or not
                          is_deleted:
                            type: boolean
                            description: Whether this pipeline is marked as deleted or not
                          is_deal_probability_enabled:
                            type: boolean
                            description: Whether deal probability is disabled or enabled for this pipeline
                          add_time:
                            type: string
                            description: The pipeline creation time
                          update_time:
                            type: string
                            description: The pipeline update time
                        description: The pipeline object
              example:
                success: true
                data:
                  id: 1
                  name: Pipeline Name
                  order_nr: 1
                  is_deleted: false
                  is_deal_probability_enabled: true
                  add_time: "2024-01-01T00:00:00Z"
                  update_time: "2024-01-01T00:00:00Z"
                  is_selected: true
  "/pipelines/{id}":
    delete:
      summary: Delete a pipeline
      description: Marks a pipeline as deleted.
      x-token-cost: 3
      operationId: deletePipeline
      tags:
        - Pipelines
      security:
        - api_key: []
        - oauth2:
            - admin
      parameters:
        - in: path
          name: id
          description: The ID of the pipeline
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Delete pipeline
          content:
            application/json:
              schema:
                title: DeletePipelineResponse
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the response is successful or not
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: Deleted Pipeline ID
              example:
                success: true
                data:
                  id: 1
    get:
      summary: Get one pipeline
      description: Returns data about a specific pipeline.
      x-token-cost: 1
      operationId: getPipeline
      tags:
        - Pipelines
      security:
        - api_key: []
        - oauth2:
            - "deals:read"
            - "deals:full"
            - admin
      parameters:
        - in: path
          name: id
          description: The ID of the pipeline
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Get pipeline
          content:
            application/json:
              schema:
                type: object
                title: UpsertPipelineResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    title: UpsertPipelineResponseData
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: The ID of the pipeline
                          name:
                            type: string
                            description: The name of the pipeline
                          order_nr:
                            type: integer
                            description: Defines the order of pipelines. The pipeline with the lowest `order_nr` is considered the default.
                          is_selected:
                            type: boolean
                            description: Whether this pipeline is selected or not
                          is_deleted:
                            type: boolean
                            description: Whether this pipeline is marked as deleted or not
                          is_deal_probability_enabled:
                            type: boolean
                            description: Whether deal probability is disabled or enabled for this pipeline
                          add_time:
                            type: string
                            description: The pipeline creation time
                          update_time:
                            type: string
                            description: The pipeline update time
                        description: The pipeline object
              example:
                success: true
                data:
                  id: 1
                  name: Pipeline Name
                  order_nr: 1
                  is_deleted: false
                  is_deal_probability_enabled: true
                  add_time: "2024-01-01T00:00:00Z"
                  update_time: "2024-01-01T00:00:00Z"
                  is_selected: true
    patch:
      summary: Update a pipeline
      description: Updates the properties of a pipeline.
      x-token-cost: 5
      operationId: updatePipeline
      tags:
        - Pipelines
      security:
        - api_key: []
        - oauth2:
            - admin
      parameters:
        - in: path
          name: id
          description: The ID of the pipeline
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the pipeline
                is_deal_probability_enabled:
                  type: boolean
                  default: false
                  description: Whether deal probability is disabled or enabled for this pipeline
      responses:
        "200":
          description: Edit pipeline
          content:
            application/json:
              schema:
                type: object
                title: UpsertPipelineResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    title: UpsertPipelineResponseData
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: The ID of the pipeline
                          name:
                            type: string
                            description: The name of the pipeline
                          order_nr:
                            type: integer
                            description: Defines the order of pipelines. The pipeline with the lowest `order_nr` is considered the default.
                          is_selected:
                            type: boolean
                            description: Whether this pipeline is selected or not
                          is_deleted:
                            type: boolean
                            description: Whether this pipeline is marked as deleted or not
                          is_deal_probability_enabled:
                            type: boolean
                            description: Whether deal probability is disabled or enabled for this pipeline
                          add_time:
                            type: string
                            description: The pipeline creation time
                          update_time:
                            type: string
                            description: The pipeline update time
                        description: The pipeline object
              example:
                success: true
                data:
                  id: 1
                  name: Pipeline Name
                  order_nr: 1
                  is_deleted: false
                  is_deal_probability_enabled: true
                  add_time: "2024-01-01T00:00:00Z"
                  update_time: "2024-01-01T00:00:00Z"
                  is_selected: true
  "/users/{id}/followers":
    get:
      summary: List followers of a user
      description: Lists users who are following the user.
      x-token-cost: 10
      operationId: getUserFollowers
      tags:
        - Users
      security:
        - api_key: []
        - oauth2:
            - "users:read"
      parameters:
        - in: path
          name: id
          description: The ID of the user
          required: true
          schema:
            type: integer
        - in: query
          name: limit
          description: "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
          schema:
            type: integer
            example: 100
        - in: query
          name: cursor
          required: false
          schema:
            type: string
          description: "For pagination, the marker (an opaque string value) representing the first item on the next page"
      responses:
        "200":
          description: List entity followers
          content:
            application/json:
              schema:
                type: object
                title: GetFollowersResponse
                allOf:
                  - title: baseResponse
                    type: object
                    properties:
                      success:
                        type: boolean
                        description: If the response is successful or not
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Followers array
                        items:
                          type: object
                          title: FollowerItem
                          properties:
                            user_id:
                              type: integer
                              description: The ID of the user following the entity
                            add_time:
                              type: string
                              description: The add time of the following
                      additional_data:
                        type: object
                        description: The additional data of the list
                        properties:
                          next_cursor:
                            type: string
                            description: The first item on the next page. The value of the `next_cursor` field will be `null` if you have reached the end of the dataset and there’s no more pages to be returned.
              example:
                success: true
                data:
                  - user_id: 1
                    add_time: "2021-01-01T00:00:00Z"
                additional_data:
                  next_cursor: eyJmaWVsZCI6ImlkIiwiZmllbGRWYWx1ZSI6Nywic29ydERpcmVjdGlvbiI6ImFzYyIsImlkIjo3fQ
components:
  securitySchemes:
    basic_authentication:
      type: http
      scheme: basic
      description: "Base 64 encoded string containing the `client_id` and `client_secret` values. The header value should be `Basic <base64(client_id:client_secret)>`."
    api_key:
      type: apiKey
      name: x-api-token
      in: header
    oauth2:
      type: oauth2
      description: "For more information, see https://pipedrive.readme.io/docs/marketplace-oauth-authorization"
      flows:
        authorizationCode:
          authorizationUrl: "https://oauth.pipedrive.com/oauth/authorize"
          tokenUrl: "https://oauth.pipedrive.com/oauth/token"
          refreshUrl: "https://oauth.pipedrive.com/oauth/token"
          scopes:
            base: Read settings of the authorized user and currencies in an account
            "deals:read": "Read most of the data about deals and related entities - deal fields, products, followers, participants; all notes, files, filters, pipelines, stages, and statistics. Does not include access to activities (except the last and next activity related to a deal)"
            "deals:full": "Create, read, update and delete deals, its participants and followers; all files, notes, and filters. It also includes read access to deal fields, pipelines, stages, and statistics. Does not include access to activities (except the last and next activity related to a deal)"
            "mail:read": Read mail threads and messages
            "mail:full": "Read, update and delete mail threads. Also grants read access to mail messages"
            "activities:read": "Read activities, its fields and types; all files and filters"
            "activities:full": "Create, read, update and delete activities and all files and filters. Also includes read access to activity fields and types"
            "contacts:read": "Read the data about persons and organizations, their related fields and followers; also all notes, files, filters"
            "contacts:full": "Create, read, update and delete persons and organizations and their followers; all notes, files, filters. Also grants read access to contacts-related fields"
            "products:read": "Read products, its fields, files, followers and products connected to a deal"
            "products:full": "Create, read, update and delete products and its fields; add products to deals"
            "projects:read": "Read projects and its fields, tasks and project templates"
            "projects:full": "Create, read, update and delete projects and its fields; add projects templates and project related tasks"
            "users:read": "Read data about users (people with access to a Pipedrive account), their permissions, roles and followers"
            "recents:read": "Read all recent changes occurred in an account. Includes data about activities, activity types, deals, files, filters, notes, persons, organizations, pipelines, stages, products and users"
            "search:read": "Search across the account for deals, persons, organizations, files and products, and see details about the returned results"
            admin: "Allows to do many things that an administrator can do in a Pipedrive company account - create, read, update and delete pipelines and its stages; deal, person and organization fields; activity types; users and permissions, etc. It also allows the app to create webhooks and fetch and delete webhooks that are created by the app"
            "leads:read": Read data about leads and lead labels
            "leads:full": "Create, read, update and delete leads and lead labels"
            phone-integration: "Enables advanced call integration features like logging call duration and other metadata, and play call recordings inside Pipedrive"
            "goals:read": Read data on all goals
            "goals:full": "Create, read, update and delete goals"
            video-calls: Allows application to register as a video call integration provider and create conference links
            messengers-integration: Allows application to register as a messengers integration provider and allows them to deliver incoming messages and their statuses
