{
  "openapi": "3.0.0",
  "info": {
    "description": "These APIs will help you manage different workflows in Blueshift. Our powerful REST APIs provide an easy way to integrate your data and third party applications with Blueshift.",
    "version": "1.0.0",
    "title": "Blueshift APIs",
    "contact": {
      "email": "apiteam@getblueshift.com"
    }
  },
  "tags": [
    {
      "name": "Campaigns",
      "description": "Manage your campaigns in Blueshift."
    },
    {
      "name": "Event",
      "description": "Use the event APIs to send events from your servers."
    },
    {
      "name": "Live content",
      "description": "Use the Live content API endpoint to insert content recommendations in your website and mobile apps."
    },
    {
      "name": "Email template",
      "description": "Email template lifecycle management"
    },
    {
      "name": "Push template",
      "description": "Push template lifecycle management"
    },
    {
      "name": "SMS template",
      "description": "SMS template lifecycle management"
    },
    {
      "name": "Data validation",
      "description": "Export data to validate or get counts."
    },
    {
      "name": "Catalog",
      "description": "A catalog is a list of items which may include content or products."
    },
    {
      "name": "Customer",
      "description": "Blueshift hosts 360 degree customer profile for each of your users to represent all of their demographic, behavioral and engagement activity."
    },
    {
      "name": "Segments",
      "description": "A segment is a list of users that satisfy a criteria. For example, you can create a segment for users who are located in the San Francisco area and run campaigns for them."
    },
    {
      "name": "Custom user lists",
      "description": "A custom user list contains information about the users of your site such as name, email, phone number, and location. You can use this list as a segment and run campaigns for them."
    },
    {
      "name": "Adapters",
      "description": "Adapters are entities that provide integration to various services with Blueshift. For example, we provide adapters for various services such as Mailgun, Sendgrid, and Sparkpost for sending emails, and Infobip and Attentive adapters for SMSes. Similarly, we provide adapters for various channels and integrations."
    },
    {
      "name": "Tags",
      "description": "Tags are folder-based entities that you can use to organize your resources. Each tag folder contains its own isolated set of tags."
    },
    {
      "name": "Search",
      "description": "You can use the `customer_search` API to search for events associated with a customer."
    },
    {
      "name": "Interest Alerts",
      "description": "Interest Alerts store information about users' interests. When an event occurs in an area or topic in which multiple users are interested, you can trigger a single API call to send a notification to all the users who are interested in that topic."
    },
    {
      "name": "External Fetch",
      "description": "External Fetch is a Blueshift capability that lets you include dynamic content from external servers that is fetched “just in time” before sending a message."
    },
    {
      "name": "Promotions",
      "description": "Promotions allows you to manage promo codes that you may wish to send to your customers through Blueshift Campaigns"
    }
  ],
  "paths": {
    "/api/v1/catalogs": {
      "post": {
        "summary": "Create a catalog",
        "description": "Create a catalog in Blueshift.",
        "tags": [
          "Catalog"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "catalog": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Specify a name for the catalog that you want to create. Ensure that the value that provide in this field is unique.",
                        "example": "Winter Collection"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "catalog_uuid": {
                      "type": "string",
                      "description": "The UUID of the catalog that got created.",
                      "example": "0215377e-71c2-4a4f-8ec2-3a7d04ad0461"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get list of catalogs",
        "description": "Use this endpoint to get a list of all catalogs.",
        "tags": [
          "Catalog"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "catalogs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "description": "The catalog's UUID.",
                            "example": "dd0d2987-9e57-47d4-9380-8a3e959cbe8e"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the catalog.",
                            "example": "Books"
                          },
                          "catalog_type": {
                            "type": "string",
                            "description": "The type of the catalog.",
                            "example": "ecommerce"
                          },
                          "upload_method": {
                            "type": "string",
                            "description": "The method that you use to upload the catalog to our platform.",
                            "example": "file"
                          },
                          "url": {
                            "type": "string",
                            "description": "The URL of the catalog on your site.",
                            "example": "https://www.example.com/catalog/books"
                          },
                          "update_frequency": {
                            "type": "string",
                            "description": "The frequency at which our platform receives data from your service to update the catalog.",
                            "example": "daily"
                          },
                          "product_price_column_name": {
                            "type": "string",
                            "description": "The name of the column in the database that lists the products' prices.",
                            "example": "price"
                          },
                          "product_name_column_name": {
                            "type": "string",
                            "description": "The name of the column in the database that lists the products' names.",
                            "example": "title"
                          },
                          "product_id_column_name": {
                            "type": "string",
                            "description": "The name of the column in the database that lists the products' IDs.",
                            "example": "sku"
                          },
                          "product_image_column_name": {
                            "type": "string",
                            "description": "The name of the column in the database that lists the URLs of the products' images.",
                            "example": "image_url"
                          },
                          "product_msrp_column_name": {
                            "type": "string",
                            "description": "The name of the column in the database that lists the products' maximum selling price.",
                            "example": "msrp"
                          },
                          "product_url_column_name": {
                            "type": "string",
                            "description": "The name of the column in the database that lists the products' URLs.",
                            "example": "product_url"
                          },
                          "last_processed": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp when the catalog was last updated in ISO 8601 format.",
                            "example": "2024-10-03T04:58:34.000Z"
                          },
                          "catalog_headers": {
                            "type": "array",
                            "example": "\"title\", \"price\", \"image_url\", \"author\", \"isbn\", \"on_sale_date\", \"url\", \"sku\", \"itemformat\", \"language\", \"saleStatus\", \"consumerImprint\", \"formatFamily\", \"pages\", \"subject\"",
                            "items": {
                              "type": "string"
                            }
                          },
                          "status": {
                            "type": "string",
                            "example": "success"
                          },
                          "product_count": {
                            "type": "integer",
                            "description": "The number of items in the catalog.",
                            "example": 9882
                          },
                          "product_category_column_name": {
                            "type": "array",
                            "example": "\"subject\"",
                            "items": {
                              "type": "string"
                            }
                          },
                          "file_settings": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": ""
                          },
                          "category_options": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": ""
                          },
                          "product_tag_column_name": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "tags"
                            }
                          },
                          "tag_options": {
                            "type": "string",
                            "example": ""
                          },
                          "product_brand_column_name": {
                            "type": "string",
                            "description": "The name of the column in the database that lists the product brand.",
                            "example": "author"
                          },
                          "is_passive": {
                            "type": "boolean",
                            "description": "Indicates the availability of the product.",
                            "example": true
                          },
                          "is_active": {
                            "type": "boolean",
                            "description": "Indicates the availability of the product.",
                            "example": true
                          },
                          "product_start_date_column_name": {
                            "type": "string",
                            "description": "The name of the column in the database that indicates the start date on which a product will be available.",
                            "example": "on_sale_date"
                          },
                          "product_end_date_column_name": {
                            "type": "string",
                            "description": "The name of the column in the database that indicates the last date on which a product will be available.",
                            "example": "on_sale_end_date"
                          },
                          "parent_sku_column_name": {
                            "type": "string",
                            "description": "The name of the column in the database that lists the parent sku that ties all variants or child products together.",
                            "example": "parent_sku"
                          },
                          "product_inventory_column_name": {
                            "type": "string",
                            "description": "The name of the column in the database that lists the product inventory."
                          },
                          "default_root_category": {
                            "type": "string",
                            "description": "The default root category for the catalog."
                          },
                          "start_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date and time at which the catalog becomes available."
                          },
                          "end_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date and time at which the catalog in no longer available."
                          },
                          "archived": {
                            "type": "boolean",
                            "description": "Indicates if the catalog is archived.",
                            "example": false
                          },
                          "author": {
                            "type": "string",
                            "description": "The user who created the catalog.",
                            "example": "John Doe"
                          },
                          "access_key": {
                            "type": "string",
                            "description": "The access key used to create the catalog.",
                            "example": "your_secure_access_key_here"
                          },
                          "file_options": {
                            "type": "object",
                            "properties": {
                              "format": {
                                "type": "string",
                                "description": "The format of the catalog file.",
                                "example": "csv"
                              },
                              "col_sep": {
                                "type": "string",
                                "description": "The separator used in the csv file.",
                                "example": "|"
                              },
                              "encoding": {
                                "type": "string",
                                "description": "The encoding for the csv file.",
                                "example": "utf-8"
                              }
                            }
                          },
                          "error_access_key": {
                            "type": "string",
                            "description": "The access key for errors."
                          },
                          "catalog_file_name": {
                            "type": "string",
                            "description": "The filename of the uploaded catalog file.",
                            "example": "products.csv"
                          },
                          "login": {
                            "type": "string",
                            "description": "The user login for the catalog."
                          },
                          "password": {
                            "type": "string",
                            "description": "The password for the catalog."
                          },
                          "host": {
                            "type": "string"
                          },
                          "path": {
                            "type": "string"
                          },
                          "port": {
                            "type": "string"
                          },
                          "s3_access_key": {
                            "type": "string",
                            "description": "The access key for the S3 bucket from which the catalog is uploaded.",
                            "example": "ABCDEFPLOI7NY4NP5KON"
                          },
                          "secret_access_key": {
                            "type": "string",
                            "description": "The secret access key for the S3 bucket from which the catalog is uploaded."
                          },
                          "bucket": {
                            "type": "string",
                            "description": "The name of the S3 bucket from which the catalog is uploaded."
                          },
                          "s3_path": {
                            "type": "string",
                            "description": "The path for the S3 bucket from which the catalog is uploaded."
                          },
                          "s3_aws_region": {
                            "type": "string",
                            "description": "The region for the S3 bucket from which the catalog is uploaded.",
                            "example": "us-west-2"
                          },
                          "sftp_login": {
                            "type": "string",
                            "description": "The region for the S3 bucket from which the catalog is uploaded."
                          },
                          "sftp_password": {
                            "type": "string",
                            "description": "The sftp password for the location from which the catalog is uploaded."
                          },
                          "sftp_port": {
                            "type": "string",
                            "description": "The sftp port for the location from which the catalog is uploaded."
                          },
                          "sftp_path": {
                            "type": "string",
                            "description": "The sftp folder path for the location from which the catalog is uploaded."
                          },
                          "sftp_host": {
                            "type": "string",
                            "description": "The sftp host for the location from which the catalog is uploaded."
                          },
                          "last_catalog_file": {
                            "type": "object",
                            "description": "Last catalog upload details for recurring catalog uploads.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The ID for the file last uploaded for the catalog.",
                                "example": "332983"
                              },
                              "uuid": {
                                "type": "string",
                                "description": "The catalog's UUID.",
                                "example": "7fbea614-c257-4745-a1cb-22f6d7b87f74"
                              },
                              "catalog_id": {
                                "type": "string",
                                "description": "The catalog ID.",
                                "example": "2151"
                              },
                              "file_name": {
                                "type": "string",
                                "description": "The file name of the file last uploaded for the catalog.",
                                "example": "products.csv"
                              },
                              "total_records": {
                                "type": "string",
                                "description": "Total number of records in uploaded file.",
                                "example": "9882"
                              },
                              "processed_records": {
                                "type": "string",
                                "description": "Total number of records processed.",
                                "example": "9882"
                              },
                              "errored_records": {
                                "type": "string",
                                "description": "Number of records that resulted in an error.",
                                "example": "0"
                              },
                              "status": {
                                "type": "string",
                                "description": "The status of the file upload.",
                                "example": "success"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time for the upload.",
                                "example": "2018-10-03T04:57:24.000Z"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time for the upload.",
                                "example": "2018-10-03T04:58:34.000Z"
                              },
                              "s3_key": {
                                "type": "string",
                                "description": "The access key ID to access your S3 folder.",
                                "example": "your_secure_access_key_here"
                              },
                              "error_file_s3_key": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - The request was invalid or cannot be otherwise served. An accompanying error message will explain further."
          },
          "404": {
            "description": "Resource not found - Can happen due to resource conflicts. Re-try with exponential backoff. Contact us on support@blueshift.com if the issue persists."
          },
          "409": {
            "description": "Conflict error, please retry - The request could not be completed due to a conflict with the current state of the target resource, re-try with exponential backoff."
          },
          "413": {
            "description": "You can upload maximum 50 users in one api call\t- The server is refusing to process a request because the request payload is larger than the server is willing or able to process."
          },
          "429": {
            "description": "Rate limit exceeded\t- Too many requests. Contact us on support@blueshift.com for recommended throughput."
          },
          "500": {
            "description": "Internal Server Error\t- Please contact blueshift for more information."
          },
          "502": {
            "description": "Service unavailable, please retry - Bad Gateway, re-try with exponential backoff."
          },
          "503": {
            "description": "Service unavailable, please retry - Service Unavailable, re-try with exponential backoff."
          },
          "504": {
            "description": "Service unavailable, please retry - Gateway Timeout, please re-try with exponential backoff."
          }
        }
      }
    },
    "/api/v1/catalogs/{catalog_uuid}.json": {
      "put": {
        "summary": "Add items to a catalog",
        "description": "Use this endpoint to add items to a catalog.",
        "tags": [
          "Catalog"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "catalog_uuid",
            "description": "Specify the uuid of the catalog to which you want to add the items. You can get the catalog's UUID from its URL. For example, if you open a catalog on the Blueshift app, its URL looks like `https://app.getblueshift.com/dashboard#/app/catalogs/\u003CCATALOG_UUID\u003E/details`.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "syncUpdateWithProductData",
            "description": "If you pass this query parameter, the API returns the UUID for products that are added succesfully.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "catalog": {
                    "type": "object",
                    "properties": {
                      "products": {
                        "type": "array",
                        "description": "Specify the items that you want to add to the catalog.",
                        "items": {
                          "type": "object",
                          "required": [
                            "image",
                            "product_id",
                            "title",
                            "web_link",
                            "availability",
                            "category"
                          ],
                          "additionalProperties": true,
                          "properties": {
                            "brand": {
                              "type": "string",
                              "description": "Specify the brand name of the item.",
                              "example": "Nature Network"
                            },
                            "category": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "Specify the category identifiers starting from the root of the taxonomy.",
                                "example": [
                                  "Shows",
                                  "Shows \u003E Planet Earth"
                                ]
                              }
                            },
                            "image": {
                              "type": "string",
                              "description": "Specify the link to the image of the item. Ensure that the URL that you provide in this field does not contain more than 500 characters.",
                              "example": "http://server/image.jpg"
                            },
                            "msrp": {
                              "type": "string",
                              "description": "Specify the maximum suggested retail price of the item.",
                              "example": "$25.0"
                            },
                            "price": {
                              "type": "string",
                              "description": "Specify the selling price of an item.",
                              "example": "$23.0"
                            },
                            "product_id": {
                              "type": "string",
                              "description": "Specify the unique identifier of the item. This is what you pass in the product_ids in your events, and the values specified here must be the same. Ensure that the value that you provide in this field does not contain more than 64 characters. ",
                              "example": "84623739"
                            },
                            "availability": {
                              "type": "string",
                              "description": "Specify the availability of the item.",
                              "example": "in_stock"
                            },
                            "tags": {
                              "type": "array",
                              "description": "Specify an array of strings denoting grouping of similar products into collections or groups.",
                              "example": "[\"wildlife\",\"zoos\"]",
                              "items": {
                                "type": "string",
                                "description": "Specify an item that you can categorize under the tag. For example, wildlife, zoos or aquariums."
                              }
                            },
                            "parent_sku": {
                              "type": "string",
                              "description": "Provide the sku to tie all variants or child products together.",
                              "example": "4005050"
                            },
                            "title": {
                              "type": "string",
                              "description": "Specify the title of the item. Ensure that the title that you provide in this field does not contain more than 255 characters.",
                              "example": "Beastly Encounters: Tales from the Wild Side"
                            },
                            "web_link": {
                              "type": "string",
                              "description": "Specify the URL of the item on your website. Ensure that the URL that you provide in this field does not contain more than 500 characters.",
                              "example": "http://server/path.html"
                            },
                            "latitude": {
                              "type": "string",
                              "description": "Specify the latitude of the user's location.",
                              "example": "212.99333"
                            },
                            "longitude": {
                              "type": "string",
                              "example": "-12.39334",
                              "description": "Specify the longitude of the user's location."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "If you pass the query parameter \u003Ci\u003EsyncUpdateWithProductData\u003C/i\u003E, returns the product_id and UUID of the items that are successfully added and errors for items that failed.",
                  "properties": {
                    "success": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "product_id": {
                            "type": "string",
                            "description": "The unique identifier of the item. This is what you pass in the product_ids in your events, and the values specified here must be the same.",
                            "example": "BIR817"
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The unique identifier of the item in Blueshift.",
                            "example": "b4249dc5-0952-40b6-a4aa-b5ca255470ag"
                          }
                        }
                      }
                    },
                    "failure": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Returns the errors for items that could not be added.",
                        "properties": {
                          "errors": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "All the errors for the particular item that failed.",
                              "properties": {
                                "error_tpe": {
                                  "type": "string",
                                  "description": "The field name and the error details."
                                }
                              }
                            }
                          },
                          "product": {
                            "type": "object",
                            "description": "The details for the item for which the error occured. Includes the category and the product details.",
                            "properties": {
                              "category": {
                                "type": "array",
                                "description": "The taxonomy of the category.",
                                "example": "\"Home\", \"Home \u003E Shoes\", \"Home \u003E Shoes \u003E Running\"",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "image": {
                                "type": "string",
                                "description": "The URL of the image of the product."
                              },
                              "msrp": {
                                "type": "string",
                                "description": "The maximum suggested retail price of the item. For example, 35."
                              },
                              "price": {
                                "type": "string",
                                "description": "The selling price of an item. For example, 29."
                              },
                              "parent_sku": {
                                "type": "string",
                                "description": "The parent SKU for the item."
                              },
                              "sku": {
                                "type": "string",
                                "description": "The SKU for the item."
                              },
                              "availability": {
                                "type": "string",
                                "description": "The availability of the item. For example, `in stock` or `out of stock`."
                              },
                              "title": {
                                "type": "string",
                                "description": "The title of the item. For example, `32\" LCD TV`."
                              },
                              "web_link": {
                                "type": "string",
                                "description": "The URL of the item on your website.\tFor example, `http://server/path.html`."
                              },
                              "catalog_uuid": {
                                "type": "string",
                                "description": "The UUID of the catalog that is created.",
                                "example": "0215377e-71c2-4a4f-8ec2-3a7d04ad0461"
                              },
                              "brand": {
                                "type": "string",
                                "description": "The brand of the product.",
                                "example": "Nike"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request was invalid or cannot be otherwise served. An accompanying error message will explain further."
          },
          "413": {
            "description": "You can upload maximum 100 products in one api call\t- The server is refusing to process a request because the request payload is larger than the server is willing or able to process."
          },
          "422": {
            "description": "Unprocessable Entity - Some/all of the products have invalid data, please check the response for more information on. Returns errored items when no query parameter is passed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "products": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "brand": {
                            "type": "string",
                            "description": "The brand of the product."
                          },
                          "category": {
                            "type": "array",
                            "description": "The taxonomy of the category.",
                            "example": "\"Home\", \"Home \u003E Shoes\", \"Home \u003E Shoes \u003E Running\"",
                            "items": {
                              "type": "string"
                            }
                          },
                          "image": {
                            "type": "string",
                            "description": "The URL of the image of the product."
                          },
                          "msrp": {
                            "type": "string",
                            "description": "The maximum suggested retail price of the item. For example, 35."
                          },
                          "price": {
                            "type": "string",
                            "description": "The selling price of an item. For example, 29."
                          },
                          "product_id": {
                            "type": "string",
                            "description": "The unique identifier of the item. This is what you pass in the product_ids in your events, and the values specified here must be the same. For example, 123345jjd."
                          },
                          "availability": {
                            "type": "string",
                            "description": "The availability of the item. For example, `in stock` or `out of stock`."
                          },
                          "tags": {
                            "type": "array",
                            "description": "An array of strings denoting grouping of similar products into collections or groups. For example, [\"running\",\"athlete\"].",
                            "items": {
                              "type": "string",
                              "description": "An item that you can categorize under the tag. For example, running or athlete."
                            }
                          },
                          "title": {
                            "type": "string",
                            "description": "The title of the item. For example, `32\" LCD TV`."
                          },
                          "web_link": {
                            "type": "string",
                            "description": "The URL of the item on your website.\tFor example, `http://server/path.html`."
                          },
                          "catalog_uuid": {
                            "type": "string",
                            "description": "The UUID of the catalog that is created.",
                            "example": "0215377e-71c2-4a4f-8ec2-3a7d04ad0461"
                          }
                        }
                      }
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "All the errors for the particular item that failed.",
                      "properties": {
                        "error_tpe": {
                          "type": "string",
                          "description": "The field name and the error details."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded\t- Too many requests"
          },
          "500": {
            "description": "Internal Server Error\t- Please contact blueshift for more information"
          },
          "502": {
            "description": "Service unavailable, please retry - Bad Gateway, re-try with exponential backoff"
          },
          "503": {
            "description": "Service unavailable, please retry - Service Unavailable, re-try with exponential backoff"
          },
          "504": {
            "description": "Service unavailable, please retry - Gateway Timeout, please re-try with exponential backoff"
          }
        }
      },
      "get": {
        "summary": "Get catalog details",
        "description": "Use this endpoint to get the details for a catalog.",
        "tags": [
          "Catalog"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "catalog_uuid",
            "description": "Specify the UUID of the catalog. You can get the catalog's UUID from its URL. For example, if you open a catalog on the Blueshift app, its URL looks like `https://app.getblueshift.com/dashboard#/app/catalogs/\u003CCATALOG_UUID\u003E/details`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "description": "The catalog's UUID.",
                      "example": "1234asdfjh-asdfjh123425-asdjk1234"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the catalog."
                    },
                    "catalog_type": {
                      "type": "string",
                      "description": "The type of the catalog for example, `e-commerce`."
                    },
                    "url": {
                      "type": "string",
                      "description": "The URL of the catalog on your site."
                    },
                    "upload_method": {
                      "type": "string",
                      "description": "The method that you use to upload the catalog to our platform. For example, `api`, `file`.",
                      "example": "api"
                    },
                    "update_frequency": {
                      "type": "integer",
                      "description": "The frequency at which our platform receives data from your service to update the catalog."
                    },
                    "product_price_column_name": {
                      "type": "string",
                      "description": "The name of the column in the database that lists the products' prices."
                    },
                    "product_name_column_name": {
                      "type": "string",
                      "description": "The name of the column in the database that lists the products' names."
                    },
                    "product_id_column_name": {
                      "type": "string",
                      "description": "The name of the column in the database that lists the products' IDs."
                    },
                    "product_image_column_name": {
                      "type": "string",
                      "description": "The name of the column in the database that lists the URLs of the products' images."
                    },
                    "product_msrp_column_name": {
                      "type": "string",
                      "description": "The name of the column in the database that lists the products' maximum selling price."
                    },
                    "product_url_column_name": {
                      "type": "string",
                      "description": "The name of the column in the database that lists the products' URLs."
                    },
                    "last_processed": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp when the catalog was last updated in ISO 8601 format."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request was invalid or cannot be otherwise served. An accompanying error message will explain further.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "product_id": {
                            "type": "string",
                            "description": "can't be blank"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "413": {
            "description": "You can upload maximum 100 products in one api call\t- The server is refusing to process a request because the request payload is larger than the server is willing or able to process."
          },
          "422": {
            "description": "Unprocessable Entity - Some/all of the products have invalid data, please check the response for more information on."
          },
          "429": {
            "description": "Rate limit exceeded\t- Too many requests"
          },
          "500": {
            "description": "Internal Server Error\t- Please contact blueshift for more information"
          },
          "502": {
            "description": "Service unavailable, please retry - Bad Gateway, re-try with exponential backoff"
          },
          "503": {
            "description": "Service unavailable, please retry - Service Unavailable, re-try with exponential backoff"
          },
          "504": {
            "description": "Service unavailable, please retry - Gateway Timeout, please re-try with exponential backoff"
          }
        }
      }
    },
    "/api/v1/customers": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Search customer",
        "description": "Use this endpoint to search for a customer using the email ID that you added to our platform.",
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "name": "email",
            "description": "Specify the email ID of the customer you want to search for.",
            "example": "janedoe@acme.com",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "activated_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2023-01-04T21:51:09.457Z"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date and time when the email ID was created.",
                            "example": "2023-01-04T21:49:32.247Z"
                          },
                          "custom_attributes": {
                            "type": "object",
                            "description": "Any user-specific information as custom attributes."
                          },
                          "customer_id": {
                            "type": "string",
                            "example": "812123"
                          },
                          "device_ids": {
                            "type": "array",
                            "example": [
                              "4d031ed8-c40e-57d4-9c99-a3e308d8cd78, 4d031ed8-c40e-57d4-9c99-a3e308d8cd77, 4d031ed8-c40e-57d4-9c99-a3e308d8cd79"
                            ],
                            "items": {
                              "type": "string"
                            }
                          },
                          "device_tokens": {
                            "type": "array",
                            "example": "49244924492449244924492449244924492449244924",
                            "items": {
                              "type": "string"
                            }
                          },
                          "email": {
                            "type": "string",
                            "example": "janedoe@acme.com"
                          },
                          "email_hash": {
                            "type": "string",
                            "example": "2de9b640b9ceda26ce4c3d8a919eb42c"
                          },
                          "facebook": {
                            "type": "string",
                            "example": null
                          },
                          "first_lp_url": {
                            "type": "string",
                            "example": null
                          },
                          "first_referrer": {
                            "type": "string",
                            "example": null
                          },
                          "first_utm_campaign": {
                            "type": "string",
                            "example": "summer_sale"
                          },
                          "first_utm_content": {
                            "type": "string",
                            "example": "cta"
                          },
                          "first_utm_medium": {
                            "type": "string",
                            "example": "email"
                          },
                          "first_utm_source": {
                            "type": "string",
                            "example": "blueshift"
                          },
                          "first_utm_term": {
                            "type": "string",
                            "example": "abandoned-wishlist"
                          },
                          "firstname": {
                            "type": "string",
                            "example": "Mike"
                          },
                          "lastname": {
                            "type": "string",
                            "description": "The last name of the customer.",
                            "example": "Doel"
                          },
                          "joined_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2011-10-11T19:58:17Z"
                          },
                          "last_browser_platform": {
                            "type": "string",
                            "example": "Mac OS X"
                          },
                          "last_browser_type": {
                            "type": "string",
                            "example": "Chrome"
                          },
                          "last_browser_version": {
                            "type": "string",
                            "example": 17.4
                          },
                          "last_ip": {
                            "type": "string",
                            "example": "201.33.19.3"
                          },
                          "last_location_city": {
                            "type": "string",
                            "example": "San Francisco"
                          },
                          "last_location_country": {
                            "type": "string",
                            "example": "USA"
                          },
                          "last_location_country_code": {
                            "type": "string",
                            "example": "US"
                          },
                          "last_location_geo_latitude": {
                            "type": "string",
                            "example": null
                          },
                          "last_location_geo_longitude": {
                            "type": "string",
                            "example": null
                          },
                          "last_location_pin_code": {
                            "type": "string",
                            "example": "94536"
                          },
                          "last_location_state": {
                            "type": "string",
                            "example": "California"
                          },
                          "last_location_timezone": {
                            "type": "string",
                            "example": "Pacific/Los_Angeles"
                          },
                          "last_lp_url": {
                            "type": "string",
                            "example": "http://site.com"
                          },
                          "last_pageview_url": {
                            "type": "string",
                            "example": null
                          },
                          "last_purchase_at": {
                            "type": "string",
                            "example": "2021-08-25T06:06:59.410Z"
                          },
                          "last_referrer": {
                            "type": "string",
                            "example": null
                          },
                          "last_send_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "last_utm_campaign": {
                            "type": "string",
                            "example": null
                          },
                          "last_utm_content": {
                            "type": "string",
                            "example": null
                          },
                          "last_utm_medium": {
                            "type": "string",
                            "example": "email"
                          },
                          "last_utm_source": {
                            "type": "string",
                            "example": null
                          },
                          "last_utm_term": {
                            "type": "string",
                            "example": null
                          },
                          "last_visit_at": {
                            "type": "string",
                            "example": "2024-05-23T20:10:21Z"
                          },
                          "lifetime_orders": {
                            "type": "integer",
                            "example": 535
                          },
                          "lifetime_revenue": {
                            "type": "integer",
                            "example": 490
                          },
                          "lifetime_visits": {
                            "type": "integer",
                            "example": 5
                          },
                          "opt_out_of_ads": {
                            "type": "string",
                            "example": false
                          },
                          "opted_out_of_ads_at": {
                            "type": "string",
                            "example": null
                          },
                          "phone_number": {
                            "type": "string",
                            "example": null
                          },
                          "predictive_engagement_percentile": {
                            "type": "integer",
                            "example": 78
                          },
                          "predictive_purchase_intent_percentile": {
                            "type": "integer",
                            "example": 86
                          },
                          "predictive_retention_percentile": {
                            "type": "integer",
                            "example": 70
                          },
                          "session_last_activity_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2017-06-07 01:50:17 +0000"
                          },
                          "subscribed_at": {
                            "type": "string",
                            "example": null
                          },
                          "unsubscribed": {
                            "type": "string",
                            "example": false
                          },
                          "unsubscribed_at": {
                            "type": "string",
                            "example": null
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "uuid": {
                            "type": "string",
                            "example": "06743da2-9589-4c01-afda-e3d85e487fa7"
                          }
                        }
                      }
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "activated_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2022-09-17T17:03:25Z"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-10-03T04:57:24.000Z"
                        },
                        "custom_attributes": {
                          "type": "object",
                          "description": "Aside from standard attributes for user like phone number, email, and first name, you can create custom attributes if the data doesn't fit into standard categories."
                        },
                        "customer_id": {
                          "type": "string",
                          "example": "11158123"
                        },
                        "device_ids": {
                          "type": "array",
                          "example": [
                            "4d031ed8-c40e-57d4-9c99-a3e308d8cd78, 4d031ed8-c40e-57d4-9c99-a3e308d8cd77, 4d031ed8-c40e-57d4-9c99-a3e308d8cd79"
                          ],
                          "items": {
                            "type": "string"
                          }
                        },
                        "device_tokens": {
                          "type": "array",
                          "example": "49244924492449244924492449244924492449244924",
                          "items": {
                            "type": "string"
                          }
                        },
                        "email": {
                          "type": "string",
                          "example": "test_api_user@getblueshift.com"
                        },
                        "email_hash": {
                          "type": "string",
                          "example": "e169b640b9ceda26ce4c3d8a919eb42c"
                        },
                        "facebook": {
                          "type": "string",
                          "example": null
                        },
                        "first_lp_url": {
                          "type": "string",
                          "example": null
                        },
                        "first_referrer": {
                          "type": "string",
                          "example": null
                        },
                        "first_utm_campaign": {
                          "type": "string",
                          "example": "retargeting"
                        },
                        "first_utm_content": {
                          "type": "string",
                          "example": "post-purchase-cross-sell"
                        },
                        "first_utm_medium": {
                          "type": "string",
                          "example": "partners"
                        },
                        "first_utm_source": {
                          "type": "string",
                          "example": "criteo"
                        },
                        "first_utm_term": {
                          "type": "string",
                          "example": "web"
                        },
                        "firstname": {
                          "type": "string",
                          "example": "Mike"
                        },
                        "lastname": {
                          "type": "string",
                          "description": "The last name of the customer.",
                          "example": "Doel"
                        },
                        "joined_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2011-10-11T19:58:17Z"
                        },
                        "last_browser_platform": {
                          "type": "string",
                          "example": "Mac OS X"
                        },
                        "last_browser_type": {
                          "type": "string",
                          "example": "Chrome"
                        },
                        "last_browser_version": {
                          "type": "string",
                          "example": 30
                        },
                        "last_ip": {
                          "type": "string",
                          "example": "201.33.19.3"
                        },
                        "last_location_city": {
                          "type": "string",
                          "example": "San Francisco"
                        },
                        "last_location_country": {
                          "type": "string",
                          "example": "USA"
                        },
                        "last_location_country_code": {
                          "type": "string",
                          "example": "US"
                        },
                        "last_location_geo_latitude": {
                          "type": "string",
                          "example": "16.6178379669105"
                        },
                        "last_location_geo_longitude": {
                          "type": "string",
                          "example": "15.6178379669105"
                        },
                        "last_location_pin_code": {
                          "type": "string",
                          "example": "94536"
                        },
                        "last_location_state": {
                          "type": "string",
                          "example": "California"
                        },
                        "last_location_timezone": {
                          "type": "string",
                          "example": "Pacific/Los_Angeles"
                        },
                        "last_lp_url": {
                          "type": "string",
                          "example": "http://site.com"
                        },
                        "last_pageview_url": {
                          "type": "string",
                          "example": null
                        },
                        "last_purchase_at": {
                          "type": "string",
                          "example": "2021-08-25T06:06:59.410Z"
                        },
                        "last_referrer": {
                          "type": "string",
                          "example": null
                        },
                        "last_send_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "last_utm_campaign": {
                          "type": "string",
                          "example": null
                        },
                        "last_utm_content": {
                          "type": "string",
                          "example": null
                        },
                        "last_utm_medium": {
                          "type": "string",
                          "example": null
                        },
                        "last_utm_source": {
                          "type": "string",
                          "example": null
                        },
                        "last_utm_term": {
                          "type": "string",
                          "example": null
                        },
                        "last_visit_at": {
                          "type": "string",
                          "example": "2024-05-23T20:10:21Z"
                        },
                        "lifetime_orders": {
                          "type": "integer",
                          "example": 207
                        },
                        "lifetime_revenue": {
                          "type": "integer",
                          "example": 38612
                        },
                        "lifetime_visits": {
                          "type": "integer",
                          "example": 3158
                        },
                        "opt_out_of_ads": {
                          "type": "string",
                          "example": false
                        },
                        "opted_out_of_ads_at": {
                          "type": "string",
                          "example": null
                        },
                        "phone_number": {
                          "type": "string",
                          "example": null
                        },
                        "predictive_engagement_percentile": {
                          "type": "integer",
                          "example": 78
                        },
                        "predictive_purchase_intent_percentile": {
                          "type": "integer",
                          "example": 86
                        },
                        "predictive_retention_percentile": {
                          "type": "integer",
                          "example": 70
                        },
                        "session_last_activity_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2017-06-07 01:50:17 +0000"
                        },
                        "subscribed_at": {
                          "type": "string",
                          "example": null
                        },
                        "unsubscribed": {
                          "type": "string",
                          "example": false
                        },
                        "unsubscribed_at": {
                          "type": "string",
                          "example": null
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "uuid": {
                          "type": "string",
                          "example": "06743da2-9589-4c01-afda-e3d85e487fa7"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - The request was invalid or cannot be otherwise served. An accompanying error message will explain further."
          },
          "404": {
            "description": "Resource not found - Can happen due to resource conflicts. Re-try with exponential backoff. Contact us on support@blueshift.com if the issue persists."
          },
          "409": {
            "description": "Conflict error, please retry - The request could not be completed due to a conflict with the current state of the target resource, re-try with exponential backoff."
          },
          "413": {
            "description": "You can upload maximum 50 users in one api call\t- The server is refusing to process a request because the request payload is larger than the server is willing or able to process."
          },
          "429": {
            "description": "Rate limit exceeded\t- Too many requests. Contact us on support@blueshift.com for recommended throughput."
          },
          "500": {
            "description": "Internal Server Error\t- Please contact blueshift for more information."
          },
          "502": {
            "description": "Service unavailable, please retry - Bad Gateway, re-try with exponential backoff."
          },
          "503": {
            "description": "Service unavailable, please retry - Service Unavailable, re-try with exponential backoff."
          },
          "504": {
            "description": "Service unavailable, please retry - Gateway Timeout, please re-try with exponential backoff."
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create or update customer",
        "description": "Use this endpoint to create a new customer or update an existing customer.",
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "test_api_user@getblueshift.com",
                    "description": "Specify the email ID of the customer that you want to create or whose details you want to update. Ensure that the email that you provide in this field does not contain more than 64 characters."
                  },
                  "customer_id": {
                    "type": "string",
                    "example": "38759877",
                    "description": "Specify the customer ID of the customer that you want to create or whose details you want to update."
                  },
                  "phone_number": {
                    "type": "string",
                    "description": "Specify the phone number of the customer that you want to create or whose details you want to update. Ensure that it includes the country code, starts with a `+`, follows the [E.164 standard](https://en.wikipedia.org/wiki/E.164), does not start with a `0`, and contains 6 to 14 characters.",
                    "example": "+919742888933"
                  },
                  "firstname": {
                    "type": "string",
                    "example": "Mike",
                    "description": "Specify the firstname of the customer that you want to create or whose details you want to update."
                  },
                  "lastname": {
                    "type": "string",
                    "example": "Doel",
                    "description": "Specify the lastname of the customer that you want to create or whose details you want to update."
                  },
                  "gender": {
                    "type": "string",
                    "example": "male",
                    "description": "Specify the gender (if required) of the customer that you want to create or whose details you want to update."
                  }
                }
              }
            }
          },
          "description": "Create customer and update customer attributes"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customer": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "example": "test_api_user@getblueshift.com",
                          "description": "The email address of the user that you want to create or update. For example, `test_api_user@getblueshift.com`."
                        },
                        "email_domain": {
                          "type": "string",
                          "description": "Email domain of the user.",
                          "example": "yahoo.com"
                        },
                        "email_hard_bounced": {
                          "type": "boolean",
                          "example": "true"
                        },
                        "email_hash": {
                          "type": "string",
                          "example": "a58639ea568b694d6e056ee72d0b9531"
                        },
                        "email_spam_reported": {
                          "type": "string",
                          "example": "false"
                        },
                        "customer_id": {
                          "type": "string",
                          "example": "812123",
                          "description": "A customer ID to uniquely identify a customer."
                        },
                        "firstname": {
                          "type": "string",
                          "example": "Jane",
                          "description": "The first name of the customer."
                        },
                        "lastname": {
                          "type": "string",
                          "example": "Doe",
                          "description": "The last name of the customer."
                        },
                        "gender": {
                          "type": "string",
                          "example": "female"
                        },
                        "phone_number": {
                          "type": "string",
                          "example": null
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-10-03T04:57:24.000Z"
                        },
                        "joined_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2011-10-11T19:58:17Z"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "lifetime_orders": {
                          "type": "integer",
                          "example": 2508
                        },
                        "lifetime_revenue": {
                          "type": "integer",
                          "example": 61008
                        },
                        "lifetime_visits": {
                          "type": "integer",
                          "example": 9299
                        },
                        "lifetime_promotions_redeemed": {
                          "type": "integer",
                          "example": 0
                        },
                        "lifetime_referrals": {
                          "type": "integer",
                          "example": 0
                        },
                        "lifetime_reviews": {
                          "type": "integer",
                          "example": 0
                        },
                        "lifetime_sends": {
                          "type": "integer",
                          "example": 0
                        },
                        "lifetime_timespent": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "promotions": {
                          "type": "object"
                        },
                        "bsft_control_bucket": {
                          "type": "string",
                          "description": "Each customer, identified or anonymous, is randomly assigned a control bucket number between 1 to 100.",
                          "example": "31"
                        },
                        "custom_attributes": {
                          "type": "object",
                          "description": "Aside from standard attributes for user like phone number, email, and first name, you can create custom attributes if the data doesn't fit into standard categories."
                        },
                        "devices": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "predictive_engagement_percentile": {
                          "type": "integer",
                          "example": 78
                        },
                        "predictive_purchase_intent_percentile": {
                          "type": "integer",
                          "example": 86
                        },
                        "predictive_retention_percentile": {
                          "type": "integer",
                          "example": 70
                        },
                        "session_last_activity_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2017-06-07 01:50:17 +0000"
                        },
                        "user_at_home_location": {
                          "type": "string",
                          "example": "false"
                        },
                        "uuid": {
                          "type": "string",
                          "description": "A universally unique identifier to uniquely identify a customer.",
                          "example": "06743da2-9589-4c01-afda-e3d85e487fa7"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - The request was invalid or cannot be otherwise served. An accompanying error message will explain further."
          },
          "404": {
            "description": "Resource not found - Can happen due to resource conflicts. Re-try with exponential backoff. Contact us on support@blueshift.com if the issue persists."
          },
          "409": {
            "description": "Conflict error, please retry - The request could not be completed due to a conflict with the current state of the target resource, re-try with exponential backoff."
          },
          "413": {
            "description": "You can upload maximum 50 users in one api call\t- The server is refusing to process a request because the request payload is larger than the server is willing or able to process."
          },
          "429": {
            "description": "Rate limit exceeded\t- Too many requests. Contact us on support@blueshift.com for recommended throughput."
          },
          "500": {
            "description": "Internal Server Error\t- Please contact blueshift for more information."
          },
          "502": {
            "description": "Service unavailable, please retry - Bad Gateway, re-try with exponential backoff."
          },
          "503": {
            "description": "Service unavailable, please retry - Service Unavailable, re-try with exponential backoff."
          },
          "504": {
            "description": "Service unavailable, please retry - Gateway Timeout, please re-try with exponential backoff."
          }
        }
      }
    },
    "/api/v1/customers/{uuid}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get customer",
        "description": "Use this endpoint to get the details of a customer using the customer's UUID.",
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "uuid",
            "description": "Specify the UUID of the customer whose details you want to get.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customer": {
                      "type": "object",
                      "properties": {
                        "activated_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2022-09-17T17:03:25Z"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-10-03T04:57:24.000Z"
                        },
                        "custom_attributes": {
                          "type": "object",
                          "description": "Aside from standard attributes for user like phone number, email, and first name, you can create custom attributes if the data doesn't fit into standard categories."
                        },
                        "customer_id": {
                          "type": "string",
                          "example": "812123"
                        },
                        "device_ids": {
                          "type": "array",
                          "example": [
                            "4d031ed8-c40e-57d4-9c99-a3e308d8cd78, 4d031ed8-c40e-57d4-9c99-a3e308d8cd77, 4d031ed8-c40e-57d4-9c99-a3e308d8cd79"
                          ],
                          "items": {
                            "type": "string"
                          }
                        },
                        "device_tokens": {
                          "type": "array",
                          "example": "49244924492449244924492449244924492449244924",
                          "items": {
                            "type": "string"
                          }
                        },
                        "email": {
                          "type": "string",
                          "example": "test_api_user@getblueshift.com"
                        },
                        "email_hash": {
                          "type": "string",
                          "example": "e169b640b9ceda26ce4c3d8a919eb42c"
                        },
                        "facebook": {
                          "type": "string",
                          "example": null
                        },
                        "first_lp_url": {
                          "type": "string",
                          "example": null
                        },
                        "first_referrer": {
                          "type": "string",
                          "example": "https://www.example.com/Shopping/Checkout/SelectPayment"
                        },
                        "first_utm_campaign": {
                          "type": "string",
                          "example": "granularremarketing"
                        },
                        "first_utm_content": {
                          "type": "string",
                          "example": "ip-warming-campaign-2"
                        },
                        "first_utm_medium": {
                          "type": "string",
                          "example": "cpc"
                        },
                        "first_utm_source": {
                          "type": "string",
                          "example": "google"
                        },
                        "first_utm_term": {
                          "type": "string",
                          "example": "abandoned-wishlist"
                        },
                        "firstname": {
                          "type": "string",
                          "example": "Mike"
                        },
                        "lastname": {
                          "type": "string",
                          "example": "Doel",
                          "description": "The last name of the customer."
                        },
                        "joined_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2011-10-11T19:58:17Z"
                        },
                        "last_browser_platform": {
                          "type": "string",
                          "example": "Mac OS X"
                        },
                        "last_browser_type": {
                          "type": "string",
                          "example": "Chrome"
                        },
                        "last_browser_version": {
                          "type": "string",
                          "example": "30"
                        },
                        "last_ip": {
                          "type": "string",
                          "example": "201.33.19.3"
                        },
                        "last_location_city": {
                          "type": "string",
                          "example": "San Francisco"
                        },
                        "last_location_country": {
                          "type": "string",
                          "example": "USA"
                        },
                        "last_location_country_code": {
                          "type": "string",
                          "example": "US"
                        },
                        "last_location_geo_latitude": {
                          "type": "string",
                          "example": "null"
                        },
                        "last_location_geo_longitude": {
                          "type": "string",
                          "example": "null"
                        },
                        "last_location_pin_code": {
                          "type": "string",
                          "example": "94536"
                        },
                        "last_location_state": {
                          "type": "string",
                          "example": "California"
                        },
                        "last_location_timezone": {
                          "type": "string",
                          "example": "Pacific/Los_Angeles"
                        },
                        "last_lp_url": {
                          "type": "string",
                          "example": "http://site.com"
                        },
                        "last_pageview_url": {
                          "type": "string",
                          "example": null
                        },
                        "last_purchase_at": {
                          "type": "string",
                          "example": "2021-08-25T06:06:59.410Z"
                        },
                        "last_referrer": {
                          "type": "string",
                          "example": null
                        },
                        "last_send_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "last_utm_campaign": {
                          "type": "string",
                          "example": null
                        },
                        "last_utm_content": {
                          "type": "string",
                          "example": null
                        },
                        "last_utm_medium": {
                          "type": "string",
                          "example": null
                        },
                        "last_utm_source": {
                          "type": "string",
                          "example": null
                        },
                        "last_utm_term": {
                          "type": "string",
                          "example": null
                        },
                        "last_visit_at": {
                          "type": "string",
                          "example": "2024-05-23T20:10:21Z"
                        },
                        "lifetime_orders": {
                          "type": "integer",
                          "example": 0
                        },
                        "lifetime_revenue": {
                          "type": "integer",
                          "example": 0
                        },
                        "lifetime_visits": {
                          "type": "integer",
                          "example": 5
                        },
                        "opt_out_of_ads": {
                          "type": "string",
                          "example": false
                        },
                        "opted_out_of_ads_at": {
                          "type": "string",
                          "example": null
                        },
                        "phone_number": {
                          "type": "string",
                          "example": null
                        },
                        "predictive_engagement_percentile": {
                          "type": "integer",
                          "example": 78
                        },
                        "predictive_purchase_intent_percentile": {
                          "type": "integer",
                          "example": 86
                        },
                        "predictive_retention_percentile": {
                          "type": "integer",
                          "example": 70
                        },
                        "session_last_activity_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2017-06-07 01:50:17 +0000"
                        },
                        "subscribed_at": {
                          "type": "string",
                          "example": null
                        },
                        "unsubscribed": {
                          "type": "string",
                          "example": false
                        },
                        "unsubscribed_at": {
                          "type": "string",
                          "example": null
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "uuid": {
                          "type": "string",
                          "example": "06743da2-9589-4c01-afda-e3d85e487fa7"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request was invalid or cannot be otherwise served. An accompanying error message will explain further."
          },
          "404": {
            "description": "Resource not found. This can happen due to resource conflicts. Retry with exponential backoff. If the issue persists, contact Blueshift."
          },
          "409": {
            "description": "Conflict error, please retry. The request could not be completed due to a conflict with the current state of the target resource. Re-try with exponential backoff."
          },
          "413": {
            "description": "You can upload up to 50 users in an API call."
          },
          "429": {
            "description": "Rate limit exceeded. Too many requests. Contact us on support@blueshift.com for recommended throughput."
          },
          "500": {
            "description": "Internal server error. Contact Blueshift for more information."
          },
          "502": {
            "description": "Service unavailable, please retry. Bad gateway. Retry with exponential backoff."
          },
          "503": {
            "description": "Service unavailable, please retry. Service unavailable. Retry with exponential backoff."
          },
          "504": {
            "description": "Service unavailable, please retry. Gateway timeout. Retry with exponential backoff."
          }
        }
      }
    },
    "/api/v1/customers/bulk": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Bulk create/update",
        "description": "Use this endpoint to create or update details of multiple customers.",
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customers": {
                    "type": "array",
                    "description": "Specify the details of the customers that you want to create or of the customers whose details you want to update.",
                    "items": {
                      "type": "object",
                      "additionalProperties": true,
                      "required": [
                        "email",
                        "customer_id"
                      ],
                      "properties": {
                        "email": {
                          "type": "string",
                          "example": "johndoe@acme.com",
                          "description": "Specify the email address of the customer that you want to create or whose details you want to update. Ensure that the email that you provide here contains less than 64 characters."
                        },
                        "customer_id": {
                          "type": "string",
                          "example": "6769",
                          "description": "Specify the customer ID of the customer that you want to create or whose details you want to update."
                        },
                        "firstname": {
                          "type": "string",
                          "example": "John",
                          "description": "Specify the firstname of the customer that you want to create or whose details you want to update."
                        },
                        "lastname": {
                          "type": "string",
                          "example": "doe",
                          "description": "Specify the lastname of the customer that you want to create or whose details you want to update."
                        },
                        "uuid": {
                          "type": "string",
                          "example": "225e6b3b-31b3-4738-b21e-80d71ac6cecc",
                          "description": "Specify the UUID of the customer that you want to create or whose details you want to update."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customers": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request was invalid or cannot be otherwise served. An accompanying error message will explain further."
          },
          "404": {
            "description": "Resource not found. This can happen due to resource conflicts. Retry with exponential backoff. If the issue persists, contact Blueshift."
          },
          "409": {
            "description": "Conflict error, please retry. The request could not be completed due to a conflict with the current state of the target resource. Re-try with exponential backoff."
          },
          "413": {
            "description": "You can upload up to 50 users in an API call."
          },
          "429": {
            "description": "Rate limit exceeded. Too many requests. Contact us on support@blueshift.com for recommended throughput."
          },
          "500": {
            "description": "Internal server error. Contact Blueshift for more information."
          },
          "502": {
            "description": "Service unavailable, please retry. Bad gateway. Retry with exponential backoff."
          },
          "503": {
            "description": "Service unavailable, please retry. Service unavailable. Retry with exponential backoff."
          },
          "504": {
            "description": "Service unavailable, please retry. Gateway timeout. Retry with exponential backoff."
          }
        }
      }
    },
    "/api/v1/customers/forget": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Stop tracking a customer",
        "description": "Use this endpoint to permanently delete all personal data associated with a customer and remove them from tracking.",
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "Specify the email address of the customer you want to stop tracking.",
                    "type": "string",
                    "example": "janedoe@acme.com"
                  },
                  "customer_id": {
                    "description": "Specify the ID of the customer you want to stop tracking.",
                    "type": "string",
                    "example": "48759893"
                  },
                  "cookie": {
                    "description": "Specify the cookie ID assigned to the customer by your website to stop tracking them.",
                    "type": "string",
                    "example": "BSFT-COOKIE-9876543210"
                  },
                  "device_id": {
                    "description": "Specify the device ID linked to the customer's mobile or web device to stop tracking them.",
                    "type": "string",
                    "example": "AEBE52E7-03EE-455A-B3C4-E57283966239"
                  }
                }
              }
            }
          },
          "description": "Provide an email address, customer ID, cookie, or device ID to stop tracking a customer and remove their personal data."
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "The request was invalid or cannot be otherwise served. An accompanying error message will explain further."
          },
          "404": {
            "description": "Resource not found. This can happen due to resource conflicts. Retry with exponential backoff. If the issue persists, contact Blueshift."
          },
          "409": {
            "description": "Conflict error, please retry. The request could not be completed due to a conflict with the current state of the target resource. Retry with exponential backoff."
          },
          "413": {
            "description": "You can upload up to 50 users in an API call."
          },
          "429": {
            "description": "Rate limit exceeded. Too many requests. Contact us at support@blueshift.com for recommended throughput."
          },
          "500": {
            "description": "Internal server error. Contact Blueshift for more information."
          },
          "502": {
            "description": "Service unavailable, please retry. Bad gateway."
          },
          "503": {
            "description": "Service unavailable, please retry."
          },
          "504": {
            "description": "Service unavailable, please retry. Gateway timeout."
          }
        }
      }
    },
    "/api/v1/customers/unforget": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Start tracking a customer",
        "description": "Use this endpoint to start tracking a customer. After tracking is enabled, the customer becomes eligible for future campaigns.",
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "Specify the email address of the customer you want to start tracking.",
                    "type": "string",
                    "example": "janedoe@acme.com"
                  },
                  "customer_id": {
                    "description": "Specify the ID of the customer you want to start tracking.",
                    "type": "string",
                    "example": "48759893"
                  },
                  "cookie": {
                    "description": "Specify the cookie ID assigned to the customer by your website for tracking purposes.",
                    "type": "string",
                    "example": "BSFT-COOKIE-9876543210"
                  },
                  "device_id": {
                    "description": "Specify the device ID linked to the customer's mobile or web device.",
                    "type": "string",
                    "example": "AEBE52E7-03EE-455A-B3C4-E57283966239"
                  }
                }
              }
            }
          },
          "description": "Provide an email address, customer ID, cookie, or device ID to resume tracking for a customer whose tracking was stopped."
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "The request was invalid or cannot be otherwise served. An accompanying error message will explain further."
          },
          "404": {
            "description": "Resource not found. This can happen due to resource conflicts. Retry with exponential backoff. If the issue persists, contact Blueshift."
          },
          "409": {
            "description": "Conflict error, please retry. The request could not be completed due to a conflict with the current state of the target resource. Retry with exponential backoff."
          },
          "413": {
            "description": "You can upload up to 50 users in an API call."
          },
          "429": {
            "description": "Rate limit exceeded. Too many requests. Contact us at support@blueshift.com for recommended throughput."
          },
          "500": {
            "description": "Internal server error. Contact Blueshift for more information."
          },
          "502": {
            "description": "Service unavailable, please retry. Bad gateway."
          },
          "503": {
            "description": "Service unavailable, please retry."
          },
          "504": {
            "description": "Service unavailable, please retry. Gateway timeout."
          }
        }
      }
    },
    "/api/v1/customers/delete": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Delete a customer",
        "description": "Use this endpoint to permanently delete all personal data of your customer.",
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "delete_all_matching_customers",
            "description": "Specify this value to true if you want to delete all matching profiles of a customer.",
            "example": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Specify the email address of the customer that you want to delete.",
                    "example": "janedoe@acme.com"
                  },
                  "customer_id": {
                    "type": "string",
                    "example": "48759893",
                    "description": "Specify the customer ID of the customer that you want to delete."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "The request was invalid or cannot be otherwise served. An accompanying error message will explain further."
          },
          "404": {
            "description": "Resource not found. This can happen due to resource conflicts. Retry with exponential backoff. If the issue persists, contact Blueshift."
          },
          "409": {
            "description": "Conflict error, please retry. The request could not be completed due to a conflict with the current state of the target resource. Re-try with exponential backoff."
          },
          "413": {
            "description": "You can upload up to 50 users in an API call."
          },
          "429": {
            "description": "Rate limit exceeded. Too many requests. Contact us on support@blueshift.com for recommended throughput."
          },
          "500": {
            "description": "Internal server error. Contact Blueshift for more information."
          },
          "502": {
            "description": "Service unavailable, please retry. Bad gateway. Retry with exponential backoff."
          },
          "503": {
            "description": "Service unavailable, please retry. Service unavailable. Retry with exponential backoff."
          },
          "504": {
            "description": "Service unavailable, please retry. Gateway timeout. Retry with exponential backoff."
          }
        }
      }
    },
    "/api/v1/customers/merge": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Merge customers",
        "description": "Use this endpoint to programmatically merge two duplicate customers, effectively unifying them as one.",
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customer_id": {
                    "description": "Specify the customer_id of the duplicate customer.",
                    "example": "48759893",
                    "type": "string"
                  },
                  "bsft_new_customer_id": {
                    "description": "Specify the customer_id of the customer that you want to use going forward. This is the ID to whom we will merge details of the duplicate customer.",
                    "example": "18271400",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "The request was invalid or cannot be otherwise served. An accompanying error message will explain further."
          },
          "404": {
            "description": "Resource not found. This can happen due to resource conflicts. Retry with exponential backoff. If the issue persists, contact Blueshift."
          },
          "409": {
            "description": "Conflict error, please retry. The request could not be completed due to a conflict with the current state of the target resource. Re-try with exponential backoff."
          },
          "413": {
            "description": "You can upload up to 50 users in an API call."
          },
          "429": {
            "description": "Rate limit exceeded. Too many requests. Contact us on support@blueshift.com for recommended throughput."
          },
          "500": {
            "description": "Internal server error. Contact Blueshift for more information."
          },
          "502": {
            "description": "Service unavailable, please retry. Bad gateway. Retry with exponential backoff."
          },
          "503": {
            "description": "Service unavailable, please retry. Service unavailable. Retry with exponential backoff."
          },
          "504": {
            "description": "Service unavailable, please retry. Gateway timeout. Retry with exponential backoff."
          }
        }
      }
    },
    "/api/v1/custom_user_lists/create": {
      "post": {
        "summary": "Create empty list",
        "description": "Use this endpoint to create an empty user list.",
        "tags": [
          "Custom user lists"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "SF user list",
                    "description": "Specify a name for the list. You can identify the list that you create using this name on the dashboard. Ensure that the name that you specify is unique."
                  },
                  "description": {
                    "type": "string",
                    "example": "The list of users who are based in San Francisco.",
                    "description": "Specify an appropirate description of that provides context on what the list contains."
                  },
                  "is_seed_list": {
                    "type": "integer",
                    "example": 0,
                    "description": "Specify if this list is a seed list or not. Specify '0' if this is not a seed list. If it is, specify '1'. A seed list is a list of users -- such as internal users -- who should receive a copy of the message that you send in a campaign. You can choose a seed list in either a one-time or a recurring campaign."
                  },
                  "source": {
                    "type": "string",
                    "example": "email",
                    "description": "Specify the source that you want to use to add customers to this list. You can specify either `email` or `customer_id`.  If you leave this field empty, `email` is automatically selected for the list.  \n"
                  }
                },
                "required": [
                  "name",
                  "description"
                ]
              }
            }
          },
          "description": "Specify the details about the custom list."
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "account_id": {
                      "type": "integer",
                      "example": 182
                    },
                    "filename": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "user_count": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-10-03T04:57:24.000Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "is_exporting": {
                      "type": "boolean"
                    },
                    "user_id": {
                      "type": "string",
                      "example": 4981
                    },
                    "source": {
                      "type": "string"
                    },
                    "uuid": {
                      "type": "string"
                    },
                    "is_seed_list": {
                      "type": "boolean"
                    },
                    "deleted_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "import_method": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    },
                    "author": {
                      "type": "string"
                    }
                  },
                  "example": [
                    {
                      "id": 48,
                      "account_id": 15,
                      "filename": "f4",
                      "description": "description",
                      "filesize": null,
                      "user_count": 0,
                      "status": "ready",
                      "created_at": "2021-08-25T06:06:59.411Z",
                      "updated_at": "2021-08-25T06:06:59.411Z",
                      "is_exporting": false,
                      "user_id": 4981,
                      "source": "email",
                      "uuid": "35cb281b-efd6-46b8-8f95-90921e4b1d1f",
                      "is_seed_list": false,
                      "deleted_at": null,
                      "import_method": "api",
                      "version": "v2",
                      "author": "John Doe"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request - The request was invalid or cannot be otherwise served. An accompanying error message will explain further."
          },
          "404": {
            "description": "Resource not found - Can happen due to resource conflicts. Re-try with exponential backoff. Contact us on support@blueshift.com if the issue persists."
          },
          "409": {
            "description": "Conflict error, please retry - The request could not be completed due to a conflict with the current state of the target resource, re-try with exponential backoff."
          },
          "429": {
            "description": "Rate limit exceeded\t- Too many requests. Contact us on support@blueshift.com for recommended throughput."
          },
          "500": {
            "description": "Internal Server Error\t- Please contact blueshift for more information."
          },
          "502": {
            "description": "Service unavailable, please retry - Bad Gateway, re-try with exponential backoff."
          },
          "503": {
            "description": "Service unavailable, please retry - Service Unavailable, re-try with exponential backoff."
          },
          "504": {
            "description": "Service unavailable, please retry - Gateway Timeout, please re-try with exponential backoff."
          }
        }
      }
    },
    "/api/v1/custom_user_lists/add_user_to_list/{list_id}": {
      "put": {
        "summary": "Add user to list",
        "description": "Use this endpoint to add a user to a custom list.",
        "tags": [
          "Custom user lists"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "list_id",
            "required": true,
            "description": "Specify the ID of the list to which you want to add a user.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "identifier_key": {
                    "type": "string",
                    "description": "Specify the key that you use to identify a customer. This field can either take `customer_id` or `email`.",
                    "example": "janedoe@acme.com"
                  },
                  "identifier_value": {
                    "type": "string",
                    "description": "Specify the value of the identifier key. For example, if you specify `customer_id` in the `identifier_key` field, specify the user's alphanumeric customer ID in this field. Such as `068f8519-cc6f-4b44-b98a-b7fe2833ab7b`. If you specify `email` in the `identifier_key`, specify the user's email address.",
                    "example": "48759893"
                  }
                },
                "required": [
                  "identifier_key",
                  "identifier_value"
                ]
              }
            }
          },
          "description": "Specify the details of the user that you want to add to the list."
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request - The request was invalid or cannot be otherwise served. An accompanying error message will explain further."
          },
          "404": {
            "description": "Resource not found - Can happen due to resource conflicts. Re-try with exponential backoff. Contact us on support@blueshift.com if the issue persists."
          },
          "409": {
            "description": "Conflict error, please retry - The request could not be completed due to a conflict with the current state of the target resource, re-try with exponential backoff."
          },
          "429": {
            "description": "Rate limit exceeded\t- Too many requests. Contact us on support@blueshift.com for recommended throughput."
          },
          "500": {
            "description": "Internal Server Error\t- Please contact blueshift for more information."
          },
          "502": {
            "description": "Service unavailable, please retry - Bad Gateway, re-try with exponential backoff."
          },
          "503": {
            "description": "Service unavailable, please retry - Service Unavailable, re-try with exponential backoff."
          },
          "504": {
            "description": "Service unavailable, please retry - Gateway Timeout, please re-try with exponential backoff."
          }
        }
      }
    },
    "/api/v1/custom_user_lists/remove_user_from_list/{list_id}": {
      "put": {
        "summary": "Remove user from list",
        "description": "Use this endpoint to remove a user from a custom list.",
        "tags": [
          "Custom user lists"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "list_id",
            "required": true,
            "description": "Specify the ID of the list from which you want to remove a user.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "identifier_key": {
                    "type": "string",
                    "description": "Specify the key that you use to identify a user. This field can either take `customer_id` or `email`.",
                    "example": "janedoe@acme.com"
                  },
                  "identifier_value": {
                    "type": "string",
                    "description": "Specify the value of the identifier key. For example, if you specify `customer_id` in the `identifier_key` field, specify the user's alphanumeric customer ID in this field. Such as `abcd1234`. If you specify `email` in the `identifier_key`, specify the user's email address.",
                    "example": "48759893"
                  }
                },
                "required": [
                  "identifier_key",
                  "identifier_value"
                ]
              }
            }
          },
          "description": "Specify the details of the user that you want to remove from the list."
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request - The request was invalid or cannot be otherwise served. An accompanying error message will explain further."
          },
          "404": {
            "description": "Resource not found - Can happen due to resource conflicts. Re-try with exponential backoff. Contact us on support@blueshift.com if the issue persists."
          },
          "409": {
            "description": "Conflict error, please retry - The request could not be completed due to a conflict with the current state of the target resource, re-try with exponential backoff."
          },
          "429": {
            "description": "Rate limit exceeded\t- Too many requests. Contact us on support@blueshift.com for recommended throughput."
          },
          "500": {
            "description": "Internal Server Error\t- Please contact blueshift for more information."
          },
          "502": {
            "description": "Service unavailable, please retry - Bad Gateway, re-try with exponential backoff."
          },
          "503": {
            "description": "Service unavailable, please retry - Service Unavailable, re-try with exponential backoff."
          },
          "504": {
            "description": "Service unavailable, please retry - Gateway Timeout, please re-try with exponential backoff."
          }
        }
      }
    },
    "/api/v1/custom_user_lists/overwrite_list/{list_id}": {
      "put": {
        "summary": "Overwrite users in a list",
        "description": "Use this endpoint to overwrite all users in a custom list.",
        "tags": [
          "Custom user lists"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "list_id",
            "required": true,
            "description": "Specify the ID of the list to which you want to overwrite users.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "s3_file_path": {
                    "type": "string",
                    "description": "Specify the S3 path of the file containing identifiers that will overwrite users in the custom user list. The recommendation is to upload the file to the import/custom_lists location under the Blueshift S3 bucket."
                  }
                },
                "required": [
                  "s3_file_path"
                ]
              }
            }
          },
          "description": "Specify the S3 file path with which you want to overwrite the user list"
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request - The request was invalid or cannot be otherwise served. An accompanying error message will explain further."
          },
          "404": {
            "description": "Resource not found - Can happen due to resource conflicts. Re-try with exponential backoff. Contact us on support@blueshift.com if the issue persists."
          },
          "409": {
            "description": "Conflict error, please retry - The request could not be completed due to a conflict with the current state of the target resource, re-try with exponential backoff."
          },
          "429": {
            "description": "Rate limit exceeded\t- Too many requests. Contact us on support@blueshift.com for recommended throughput."
          },
          "500": {
            "description": "Internal Server Error\t- Please contact blueshift for more information."
          },
          "502": {
            "description": "Service unavailable, please retry - Bad Gateway, re-try with exponential backoff."
          },
          "503": {
            "description": "Service unavailable, please retry - Service Unavailable, re-try with exponential backoff."
          },
          "504": {
            "description": "Service unavailable, please retry - Gateway Timeout, please re-try with exponential backoff."
          }
        }
      }
    },
    "/api/v1/custom_user_lists/seed_lists": {
      "get": {
        "summary": "Get seed lists from your account",
        "description": "Use this endpoint to get the seed lists from your account.",
        "tags": [
          "Custom user lists"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 6883
                      },
                      "account_id": {
                        "type": "integer",
                        "example": 182
                      },
                      "filename": {
                        "type": "string",
                        "description": "The file that you used to import the seed list.",
                        "example": "dummy_push_upload.csv_2017-11-28:T10:11:38"
                      },
                      "description": {
                        "type": "string",
                        "example": "email,device_tokens,device_ids"
                      },
                      "filesize": {
                        "type": "integer",
                        "example": 159
                      },
                      "user_count": {
                        "type": "integer",
                        "example": 1000
                      },
                      "status": {
                        "type": "string",
                        "example": "ready"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-10-03T04:57:24.000Z"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-08-25T06:06:59.412Z"
                      },
                      "is_exported": {
                        "type": "boolean",
                        "example": false
                      },
                      "user_id": {
                        "type": "integer",
                        "example": 3808
                      },
                      "source": {
                        "type": "string",
                        "example": "email"
                      },
                      "uuid": {
                        "type": "string",
                        "example": "5ab42b99-3332-4af7-8aad-91b6baa934fa"
                      },
                      "is_seed_list": {
                        "type": "boolean",
                        "example": true
                      },
                      "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": null
                      },
                      "version": {
                        "type": "string",
                        "example": "v1"
                      },
                      "import_method": {
                        "type": "string",
                        "example": "upload"
                      },
                      "author": {
                        "type": "string",
                        "example": "John Doe"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - The request was invalid or cannot be otherwise served. An accompanying error message will explain further."
          },
          "404": {
            "description": "Resource not found - Can happen due to resource conflicts. Re-try with exponential backoff. Contact us on support@blueshift.com if the issue persists."
          },
          "409": {
            "description": "Conflict error, please retry - The request could not be completed due to a conflict with the current state of the target resource, re-try with exponential backoff."
          },
          "429": {
            "description": "Rate limit exceeded\t- Too many requests. Contact us on support@blueshift.com for recommended throughput."
          },
          "500": {
            "description": "Internal Server Error\t- Please contact blueshift for more information."
          },
          "502": {
            "description": "Service unavailable, please retry - Bad Gateway, re-try with exponential backoff."
          },
          "503": {
            "description": "Service unavailable, please retry - Service Unavailable, re-try with exponential backoff."
          },
          "504": {
            "description": "Service unavailable, please retry - Gateway Timeout, please re-try with exponential backoff."
          }
        }
      }
    },
    "/api/v1/custom_user_lists/id/{custom_user_list_id}": {
      "get": {
        "summary": "Get customer list details",
        "description": "Use this endpoint to get details of the specified customer list from your account.",
        "tags": [
          "Custom user lists"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "custom_user_list_id",
            "required": true,
            "description": "Specify the ID of the list.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 6883
                    },
                    "account_id": {
                      "type": "integer",
                      "example": 182
                    },
                    "filename": {
                      "type": "string",
                      "description": "The file that you used to import the seed list.",
                      "example": "dummy_push_upload.csv_2017-11-28:T10:11:38"
                    },
                    "description": {
                      "type": "string",
                      "example": "email,device_tokens,device_ids"
                    },
                    "filesize": {
                      "type": "integer",
                      "example": 159
                    },
                    "user_count": {
                      "type": "integer",
                      "example": 1000
                    },
                    "status": {
                      "type": "string",
                      "example": "ready"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-08-25T06:06:59.412Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-08-25T06:06:59.412Z"
                    },
                    "is_exporting": {
                      "type": "boolean",
                      "example": false
                    },
                    "user_id": {
                      "type": "integer",
                      "example": 3808
                    },
                    "source": {
                      "type": "string",
                      "example": "email"
                    },
                    "uuid": {
                      "type": "string",
                      "example": "5ab42b99-3332-4af7-8aad-91b6baa934fa"
                    },
                    "is_seed_list": {
                      "type": "boolean",
                      "example": true
                    },
                    "deleted_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": null
                    },
                    "version": {
                      "type": "string",
                      "example": "v1"
                    },
                    "import_method": {
                      "type": "string",
                      "example": "upload"
                    },
                    "author": {
                      "type": "string",
                      "example": "John Doe"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - The request was invalid or cannot be otherwise served. An accompanying error message will explain further."
          },
          "404": {
            "description": "Resource not found - The customer list you are looking for could not be found."
          },
          "409": {
            "description": "Conflict error, please retry - The request could not be completed due to a conflict with the current state of the target resource, re-try with exponential backoff."
          },
          "429": {
            "description": "Rate limit exceeded\t- Too many requests. Contact us on support@blueshift.com for recommended throughput."
          },
          "500": {
            "description": "Internal Server Error\t- Please contact blueshift for more information."
          },
          "502": {
            "description": "Service unavailable, please retry - Bad Gateway, re-try with exponential backoff."
          },
          "503": {
            "description": "Service unavailable, please retry - Service Unavailable, re-try with exponential backoff."
          },
          "504": {
            "description": "Service unavailable, please retry - Gateway Timeout, please re-try with exponential backoff."
          }
        }
      }
    },
    "/api/v1/custom_user_lists/bulk_add_users_to_list/{list_id}": {
      "put": {
        "summary": "Bulk add users to list",
        "description": "Use this endpoint to bulk add users to a custom list.",
        "tags": [
          "Custom user lists"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "list_id",
            "required": true,
            "description": "Specify the ID of the list to which you want to add users in bulk.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "identifier_key": {
                    "type": "string",
                    "description": "Specify the key that you use to identify the users. This field can either take `customer_id` or `email`."
                  },
                  "identifier_values": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specify the values of the identifier key. For example, if you specify `customer_id` in the `identifier_key` field, specify the users' alphanumeric customer IDs in this field. Such as [`abcd1234`]. If you specify `email` in the `identifier_key`, specify the email address of the users you want to add to the list. Such as, [`johndoe@blueshift.com`]."
                  }
                },
                "required": [
                  "identifier_key",
                  "identifier_values"
                ]
              }
            }
          },
          "description": "Specify the details of the users that you want to add to the list."
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Input params not valid."
          },
          "404": {
            "description": "The list has been deleted."
          },
          "413": {
            "description": "You can add maximum 25 users in one API call."
          },
          "422": {
            "description": "Functionality not supported for old list."
          },
          "429": {
            "description": "Rate limit exceeded\t- Too many requests"
          },
          "500": {
            "description": "Internal Server Error\t- Please contact blueshift for more information"
          },
          "502": {
            "description": "Service unavailable, please retry - Bad Gateway, re-try with exponential backoff"
          },
          "503": {
            "description": "Service unavailable, please retry - Service Unavailable, re-try with exponential backoff"
          },
          "504": {
            "description": "Service unavailable, please retry - Gateway Timeout, please re-try with exponential backoff"
          }
        }
      }
    },
    "/api/v1/custom_user_lists/bulk_remove_users_from_list/{list_id}": {
      "put": {
        "summary": "Bulk remove users from list",
        "description": "Use this endpoint to bulk remove users from a custom list.",
        "tags": [
          "Custom user lists"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "list_id",
            "required": true,
            "description": "Specify the ID of the list from which you want to remove users in bulk.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "identifier_key": {
                    "type": "string",
                    "description": "Specify the key that you use to identify the users. This field can either take `customer_id` or `email`."
                  },
                  "identifier_values": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specify the values of the identifier key. For example, if you specify `customer_id` in the `identifier_key` field, specify the users' alphanumeric customer IDs in this field. Such as [`abcd1234`]. If you specify `email` in the `identifier_key`, specify the email address of the users you want to remove from the list. Such as, [`johndoe@blueshift.com`]."
                  }
                },
                "required": [
                  "identifier_key",
                  "identifier_values"
                ]
              }
            }
          },
          "description": "Specify the details of the users that you want to bulk remove from the list."
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Input params not valid."
          },
          "404": {
            "description": "The list has been deleted."
          },
          "413": {
            "description": "You can add maximum 25 users in one API call."
          },
          "422": {
            "description": "Functionality not supported for old list."
          },
          "429": {
            "description": "Rate limit exceeded\t- Too many requests"
          },
          "500": {
            "description": "Internal Server Error\t- Please contact blueshift for more information"
          },
          "502": {
            "description": "Service unavailable, please retry - Bad Gateway, re-try with exponential backoff"
          },
          "503": {
            "description": "Service unavailable, please retry - Service Unavailable, re-try with exponential backoff"
          },
          "504": {
            "description": "Service unavailable, please retry - Gateway Timeout, please re-try with exponential backoff"
          }
        }
      }
    },
    "/api/v1/segments/list": {
      "get": {
        "summary": "Get list of segments",
        "description": "\u003Cp\u003EUse this endpoint to get the list of segments.",
        "tags": [
          "Segments"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "description": "Search for segments that contain the specified string in the name.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "archived",
            "description": "Search for segments with specified archived status. Value can be `0` to get a list of un-archived segments or `1` to get a list of archived segments. Leave blank to get a list of all segments.",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "description": "Specify the number of records to be returned per page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "Specify the page number for the search results.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {                
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "High value customers"
                          },
                          "uuid": {
                            "type": "string",
                            "example": "e24f90d8-53df-46fd-8014-ff1bfa8774b5"
                          },
                          "mixin_key": {
                            "type": "integer",
                            "example": null
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-08-25T06:06:59.412Z"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2021-08-25T06:06:59.412Z"
                          },
                          "status": {
                            "type": "string"
                          },
                          "approxusers": {
                            "type": "integer",
                            "description": "Approximate number of users in the segment. Includes known as well as anonymous users."
                          },
                          "email_users": {
                            "type": "integer",
                            "description": "Approximate number of emailable users in the segment. Excludes opted-out users."
                          },
                          "sms_users": {
                            "type": "integer",
                            "description": "Approximate number of SMS users in the segment. Excludes opted-out users."
                          },
                          "push_users": {
                            "type": "integer",
                            "description": "Approximate number of Mobile Push enabled users in the segment. Excludes opted-out users."
                          },
                          "approxusers_updated_at": {
                            "type": "integer"
                          },
                          "version": {
                            "type": "integer"
                          }
                        }
                      }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - The request was invalid or cannot be otherwise served. An accompanying error message will explain further."
          },
          "404": {
            "description": "Resource not found - Can happen due to resource conflicts. Re-try with exponential backoff. Contact us on support@blueshift.com if the issue persists."
          },
          "409": {
            "description": "Conflict error, please retry - The request could not be completed due to a conflict with the current state of the target resource, re-try with exponential backoff."
          },
          "429": {
            "description": "Rate limit exceeded\t- Too many requests. Contact us on support@blueshift.com for recommended throughput."
          },
          "500": {
            "description": "Internal Server Error\t- Please contact blueshift for more information."
          },
          "502": {
            "description": "Service unavailable, please retry - Bad Gateway, re-try with exponential backoff."
          },
          "503": {
            "description": "Service unavailable, please retry - Service Unavailable, re-try with exponential backoff."
          },
          "504": {
            "description": "Service unavailable, please retry - Gateway Timeout, please re-try with exponential backoff."
          }
        }
      }
    },
    "/api/v1/segments/{segment_uuid}/matching_users.json": {
      "get": {
        "summary": "Get segment membership counts",
        "description": "Use this endpoint to get count of users in the segment.",
        "tags": [
          "Segments"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "name": "segment_uuid",
            "description": "UUID of the segment.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "refresh",
            "description": "Trigger job to update segment counts. Counts are updated asynchronously in the background. Use refresh=true to trigger a new count update, and subsequently poll with refresh=false to retrieve updated counts.",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "channels",
            "description": "Channels can be one of: 'users', 'email', 'push', 'sms', or 'inApp'. Parameter indicates which channel audience counts to refresh.",
            "in": "query",
            "example": "email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bypass_global",
            "description": "Set 'true' to return counts bypassing the global inclusion segments.",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "refresh_status": {
                      "type": "string",
                      "example": "refreshing",
                      "description": "\u003Cp\u003E'refreshing'- indicates count calculation job has triggered and awaiting counts to be computed in the background.\u003C/p\u003E \u003Cp\u003E'ready' - indicates count calculation job completed and counts have been updated at timestamp indicated in 'approxusers_updated_at'.\u003C/p\u003E"
                    },
                    "approxusers": {
                      "type": "integer",
                      "example": 45
                    },
                    "email_users": {
                      "type": "integer",
                      "example": 20
                    },
                    "sms_users": {
                      "type": "integer"
                    },
                    "push_users": {
                      "type": "integer"
                    },
                    "in_app_users": {
                      "type": "integer"
                    },
                    "approxusers_updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-08-25T06:06:59.412Z",
                      "description": "Timestamp when segment counts were last updated."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - The request was invalid or cannot be otherwise served. An accompanying error message will explain further."
          },
          "404": {
            "description": "Resource not found - Can happen due to resource conflicts. Re-try with exponential backoff. Contact us on support@blueshift.com if the issue persists."
          },
          "409": {
            "description": "Conflict error, please retry - The request could not be completed due to a conflict with the current state of the target resource, re-try with exponential backoff."
          },
          "429": {
            "description": "Rate limit exceeded\t- Too many requests. Contact us on support@blueshift.com for recommended throughput."
          },
          "500": {
            "description": "Internal Server Error\t- Please contact blueshift for more information."
          },
          "502": {
            "description": "Service unavailable, please retry - Bad Gateway, re-try with exponential backoff."
          },
          "503": {
            "description": "Service unavailable, please retry - Service Unavailable, re-try with exponential backoff."
          },
          "504": {
            "description": "Service unavailable, please retry - Gateway Timeout, please re-try with exponential backoff."
          }
        }
      }
    },
    "/api/v1/event": {
      "post": {
        "summary": "Send an event",
        "description": "Use this endpoint to send an event from your server or use javascript events to call the API.",
        "tags": [
          "Event"
        ],
        "security": [
          {
            "event_api_auth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "properties": {
                  "customer_id": {
                    "type": "string",
                    "description": "Specify the customer ID. You must specify information in either this field or atleast in one of the following fields: `event`, `device_id`, `email`, or `group_id`. These fields are described below.",
                    "example": "812123"
                  },
                  "event": {
                    "type": "string",
                    "description": "Specify the name of the event. For example identify, view (product view), add_to_cart, remove_from_cart, checkout, purchase, search, your_custom_event_name (custom event) etc. You must atleast specify this value, or one or more of the following fields: customer_id/device_id/email. \n \u003E **📘** Ensure that the event name does not contain periods (`.`), whitespaces, is not a numeric value, and contains not more than 64 characters.\n",
                    "example": "identify"
                  },
                  "device_type": {
                    "type": "string",
                    "description": "Specify the type of the device.",
                    "example": "ios"
                  },
                  "device_token": {
                    "type": "string",
                    "description": "Specify the token of the device.\n \u003E **📘** If you use the event API to identify a user from a mobile app, ensure that you also include `device_id` and `device_token` parameters in your API call. However, we recommend that you use our SDK to identify users on a mobile app. For more information, see [Track events on your Android app](https://developer.blueshift.com/docs/events-tracking-android-sdk) and [Track events on your iOS app](https://developer.blueshift.com/docs/track-events-on-your-app-with-blueshifts-ios-sdk).\n",
                    "example": "49244924492449244924492449244924492449244924"
                  },
                  "device_id": {
                    "type": "string",
                    "description": "Specify the UUID of the device. You must atleast specify this value, or one or more of the following fields: event/customer_id/email.\n \u003E **📘** If you use the event API to identify a user from a mobile app, ensure that you also include `device_id` and `device_token` parameters in your API call.  However, we recommend that you use our SDK to identify users on a mobile app. For more information, see [Track events on your Android app](https://developer.blueshift.com/docs/events-tracking-android-sdk) and [Track events on your iOS app](https://developer.blueshift.com/docs/track-events-on-your-app-with-blueshifts-ios-sdk).\n",
                    "example": "8abe3faa-d48d-4e4a-00ca-beae01f1c987"
                  },
                  "device_idfa": {
                    "type": "string",
                    "description": "Sepcify the advertising identifier (idfa) on the device.",
                    "example": "4d031ed8-c40e-57d4-9c99-a3e308d8cd78"
                  },
                  "device_idfv": {
                    "type": "string",
                    "description": "Specify the identfier for vendor (idfv) on the device.",
                    "example": "6d031ec8-e40c-47d4-9c99-b3e308d8ed78"
                  },
                  "device_manufacturer": {
                    "type": "string",
                    "description": "Specify the manufacturer of the device.",
                    "example": "apple"
                  },
                  "os_name": {
                    "type": "string",
                    "description": "Specify the OS name.",
                    "example": "ios"
                  },
                  "network_carrier": {
                    "type": "string",
                    "description": "Specify the carrier on the mobile device.",
                    "example": "verizon"
                  },
                  "ip": {
                    "type": "string",
                    "description": "Specify the IP address of the device.",
                    "example": "192.0.2.1"
                  },
                  "email": {
                    "type": "string",
                    "description": "Specify the user's email address. For example, abc@def.com. You must atleast specify this value, or one or more of the following fields: event/device_id/customer_id.",
                    "example": "janedoe@acme.com"
                  },
                  "latitude": {
                    "type": "string",
                    "description": "Specify the latitude of the user's location.",
                    "example": "212.99333"
                  },
                  "longitude": {
                    "type": "string",
                    "description": "Specify the longitude of the user's location.",
                    "example": "-12.39334"
                  },
                  "event_uuid": {
                    "type": "string",
                    "description": "Specify a unique identifier of the event in the format `1234abcd-efghijkj-1234kfjadslk-34iu123`. For reference on the UUID format, see [RFC 4122](https://tools.ietf.org/html/rfc4122.html). Ensure that the `event_uuid` that you specify is unique. This is an optional field and you can leave this field blank.",
                    "example": "4f575aa4-082c-12ed-dd00-0676ac110004"
                  },
                  "cookie": {
                    "type": "string",
                    "description": "User's Blueshift cookie used as an identifier for anonymous users.",
                    "example": "8d74322c-7bb6-44f1-18ce-6a92c5a9672f"
                  }
                }
              }
            }
          },
          "description": "Specify device_id. The device_id is the mobile specific (iOS or Android) device identifier to uniquely identify the mobile device."
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "OK or Bad request",
                      "example": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request was invalid or cannot be otherwise served. An accompanying error message will explain further.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "customer_id": {
                            "type": "string",
                            "example": "can't be blank"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "413": {
            "description": "You can upload upto 100 products in an api call. The server is refusing to process a request because the request payload is larger than the server is willing or able to process."
          },
          "422": {
            "description": "Unprocessable Entity - Some/all of the products have invalid data, please check the response for more information on."
          },
          "429": {
            "description": "Rate limit exceeded - Too many requests"
          },
          "500": {
            "description": "Internal Server Error\t- Please contact blueshift for more information"
          },
          "502": {
            "description": "Service unavailable, please retry - Bad Gateway, re-try with exponential backoff"
          },
          "503": {
            "description": "Service unavailable, please retry - Service Unavailable, re-try with exponential backoff"
          },
          "504": {
            "description": "Service unavailable, please retry - Gateway Timeout, please re-try with exponential backoff"
          }
        }
      }
    },
    "/api/v1/bulkevents": {
      "post": {
        "summary": "Send bulk events",
        "description": "Use this endpoint to send multiple events from your server or use javascript events that call the API.",
        "tags": [
          "Event"
        ],
        "security": [
          {
            "event_api_auth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "events": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {
                        "customer_id": {
                          "type": "string",
                          "description": "Specify the customer ID. You must atleast specify this value, or one or more of the following: event/device_id/email.",
                          "example": "48759893"
                        },
                        "event": {
                          "type": "string",
                          "description": "Specify the name of the event. For example, view (product view), add_to_cart, remove_from_cart, checkout, purchase, search, your_custom_event_name (custom event) etc. You must atleast specify this value, or one or more of the following: customer_id/device_id/email.",
                          "example": "add_to_cart"
                        },
                        "device_type": {
                          "type": "string",
                          "description": "Specify the type of the device. For example, ios or android.",
                          "example": "android"
                        },
                        "device_tokens": {
                          "type": "string",
                          "description": "Specify the token of the device.",
                          "example": "12d34a5ccf37db694d48d89740bbc1f94da08e25930fc773d2af2aefdd98989c9"
                        },
                        "device_id": {
                          "type": "string",
                          "description": "Specify the UUID of the device. You must atleast specify this value, or one or more of the following: event/customer_id/email.",
                          "example": "8abe3faa-d48d-4e4a-00ca-beae01f1c987"
                        },
                        "device_idfa": {
                          "type": "string",
                          "description": "Sepcify the advertising identifier (idfa) on the device.",
                          "example": "39c20522-2ce9-4466-9876-7677b89e4d3b"
                        },
                        "device_idfv": {
                          "type": "string",
                          "description": "Specify the identfier for vendor (idfv) on the device.",
                          "example": "6d031ec8-e40c-47d4-9c99-b3e308d8ed78"
                        },
                        "device_manufacturer": {
                          "type": "string",
                          "description": "Specify the manufacturer of the device.",
                          "example": "apple"
                        },
                        "os_name": {
                          "type": "string",
                          "description": "Specify the OS name.",
                          "example": "ios"
                        },
                        "network_carrier": {
                          "type": "string",
                          "description": "Specify the carrier on the mobile device.",
                          "example": "verizon"
                        },
                        "ip": {
                          "type": "string",
                          "description": "Specify the IP address of the device.",
                          "example": "192.0.2.1"
                        },
                        "email": {
                          "type": "string",
                          "description": "Specify the user's email address. You must atleast specify this value, or one or more of the following: event/device_id/customer_id.",
                          "example": "janedoe@acme.com"
                        },
                        "latitude": {
                          "type": "string",
                          "description": "Specify the latitude of the user's location.",
                          "example": "212.99333"
                        },
                        "longitude": {
                          "type": "string",
                          "description": "Specify the longitude of the user's location.",
                          "example": "-12.39334"
                        }
                      },
                      "example": [
                        {
                          "customer_id": "abc812122",
                          "event": "identify",
                          "device_type": "ios",
                          "device_tokens": "49244924492449244924492449244924492449244924",
                          "device_id": "8abe3faa-d48d-4e4a-00ca-beae01f1c987",
                          "device_idfa": "4d031ed8-c40e-57d4-9c99-a3e308d8cd78",
                          "device_idfv": "6d031ec8-e40c-47d4-9c99-b3e308d8ed78",
                          "device_manufacturer": "apple",
                          "os_name": "ios",
                          "network_carrier": "verizon",
                          "ip": "201.44.11.21",
                          "email": "jane.doe@acme.com",
                          "latitude": "212.99333",
                          "longitude": "-12.39334"
                        },
                        {
                          "customer_id": "812123",
                          "event": "purchase",
                          "ip": "201.44.11.22",
                          "email": "jane.doe@acme.com",
                          "revenue": "31.24"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "description": "Specify device_id. The device_id is the mobile specific (iOS or Android) device identifier to uniquely identify the mobile device."
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "ok or bad request",
                      "example": "ok"
                    },
                    "count": {
                      "type": "integer",
                      "description": "The count of events sent",
                      "example": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request was invalid or cannot be otherwise served. An accompanying error message will explain further.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "customer_id": {
                            "type": "string",
                            "example": "can't be blank"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "413": {
            "description": "You can upload maximum 100 products in one api call\t- The server is refusing to process a request because the request payload is larger than the server is willing or able to process."
          },
          "422": {
            "description": "Unprocessable Entity - Some/all of the products have invalid data, please check the response for more information on."
          },
          "429": {
            "description": "Rate limit exceeded - Too many requests"
          },
          "500": {
            "description": "Internal Server Error\t- Please contact blueshift for more information"
          },
          "502": {
            "description": "Service unavailable, please retry - Bad Gateway, re-try with exponential backoff"
          },
          "503": {
            "description": "Service unavailable, please retry - Service Unavailable, re-try with exponential backoff"
          },
          "504": {
            "description": "Service unavailable, please retry - Gateway Timeout, please re-try with exponential backoff"
          }
        }
      }
    },
    "/api/v1/event/debug": {
      "get": {
        "summary": "Most recent event",
        "description": "Use this endpoint to fetch the most recent event. The event debugger API endpoint returns the most recent events our server has seen of each event type.",
        "tags": [
          "Event"
        ],
        "security": [
          {
            "event_api_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customer_id": {
                      "type": "string",
                      "example": "812123",
                      "description": "The customer ID."
                    },
                    "event": {
                      "type": "string",
                      "description": "The name of the event. For example, identify, view (product view), add_to_cart, remove_from_cart, checkout, purchase, search, your_custom_event_name (custom event) etc.",
                      "example": "identify"
                    },
                    "device_type": {
                      "type": "string",
                      "description": "The type of the device. For example, ios or android.",
                      "example": "ios"
                    },
                    "device_tokens": {
                      "type": "string",
                      "description": "The token of the device.",
                      "example": "49244924492449244924492449244924492449244924"
                    },
                    "device_id": {
                      "type": "string",
                      "description": "The UUID of the device.",
                      "example": "8abe3faa-d48d-4e4a-00ca-beae01f1c987"
                    },
                    "device_idfa": {
                      "type": "string",
                      "description": "The advertising identifier (idfa) on the device.",
                      "example": "4d031ed8-c40e-57d4-9c99-a3e308d8cd78"
                    },
                    "device_idfv": {
                      "type": "string",
                      "description": "The identfier for vendor (idfv) on the device.",
                      "example": "6d031ec8-e40c-47d4-9c99-b3e308d8ed78"
                    },
                    "device_manufacturer": {
                      "type": "string",
                      "description": "The manufacturer of the device.",
                      "example": "apple"
                    },
                    "os_name": {
                      "type": "string",
                      "description": "The OS name.",
                      "example": "ios"
                    },
                    "network_carrier": {
                      "type": "string",
                      "description": "The carrier on the mobile device.",
                      "example": "verizon"
                    },
                    "ip": {
                      "type": "string",
                      "description": "The IP address of the device.",
                      "example": "123.123.123.123"
                    },
                    "email": {
                      "type": "string",
                      "description": "The user's email address.",
                      "example": "janedoe@acme.com"
                    },
                    "latitude": {
                      "type": "string",
                      "description": "The latitude of the user's location.",
                      "example": "212.99333"
                    },
                    "longitude": {
                      "type": "string",
                      "description": "The longitude of the user's location.",
                      "example": "-12.39334"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/event/summary.json": {
      "post": {
        "summary": "Summary of events",
        "description": "Use this endpoint to get a summary of counted events. By default, this endpoint returns data for the last 7 days.",
        "tags": [
          "Event"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "timestamp_start",
            "description": "Specify a timestamp in ISO 8601 format to filter data for events that occurred after it.",
            "example": "2023-04-25T00:00:00Z",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "timestamp_end",
            "description": "Specify a timestamp in ISO 8601 format to filter data for events that occured before it.",
            "example": "2023-04-26T23:59:59Z",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "events_chart_stats": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "This data could include events, counts, and other relevant metrics.",
                        "properties": {
                          "archives": {
                            "type": "object"
                          },
                          "error": {
                            "type": "object",
                            "properties": {
                              "invalid_user_attributes": {
                                "type": "array",
                                "items": {
                                  "type": "number",
                                  "description": "Number of errors due to invalid user attributes",
                                  "example": "[10, 15, 27]"
                                }
                              },
                              "missing_identifier": {
                                "type": "array",
                                "items": {
                                  "type": "number",
                                  "description": "Number of errors due to missing identifiers",
                                  "example": "[20, 30, 15]"
                                }
                              }
                            }
                          },
                          "events": {
                            "type": "object",
                            "properties": {
                              "add_to_cart": {
                                "type": "array",
                                "items": {
                                  "type": "number",
                                  "description": "Array of event counts for `add_to_cart` events over the timeframe.",
                                  "example": "[20, 30, 15]"
                                }
                              },
                              "subscription_update": {
                                "type": "array",
                                "items": {
                                  "type": "number",
                                  "description": "Array of event counts for `subscription_update` events over the timeframe.",
                                  "example": [
                                    "53",
                                    "42",
                                    "16"
                                  ]
                                }
                              }
                            }
                          },
                          "timelapse": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "Format will be MM/DD for daily data",
                              "example": [
                                "04/25",
                                "04/26",
                                "04/27"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "stats": {
                      "type": "object",
                      "properties": {
                        "add_to_cart": {
                          "type": "object",
                          "properties": {
                            "archived": {
                              "type": "boolean",
                              "example": false
                            },
                            "count": {
                              "type": "number",
                              "description": "Event count",
                              "example": 375983
                            },
                            "display_name": {
                              "type": "string",
                              "description": "Typically same as the event name, such as, view, purchase, search.",
                              "example": "add_to_cart"
                            },
                            "type": {
                              "type": "string"
                            }
                          }
                        },
                        "subscription_update": {
                          "type": "object",
                          "properties": {
                            "archived": {
                              "type": "boolean"
                            },
                            "count": {
                              "type": "number",
                              "description": "Event count",
                              "example": 375983
                            },
                            "display_name": {
                              "type": "string",
                              "description": "Typically same as the event name, such as, view, purchase, search.",
                              "example": "pageload"
                            },
                            "type": {
                              "type": "string",
                              "description": "Specifies whether an event is standard or custom event.",
                              "example": "standard"
                            }
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "string"
                    },
                    "timestamp_end": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-06-22T17:16:14.179Z"
                    },
                    "timestamp_start": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-06-21T17:16:14.179Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/data_connectors/:data_connector_uuid/debug": {
      "get": {
        "summary": "Debug event exports",
        "description": "Use this endpoint to download the first 10 success and errored events in last 5 minutes.",
        "tags": [
          "Event"
        ],
        "security": [
          {
            "event_api_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Returns the success API request payload.",
                        "properties": {
                          "api_key": {
                            "type": "string",
                            "description": "Masked API key used in the payload."
                          },
                          "events": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Array of event payloads which was sent to destination."
                            }
                          }
                        }
                      }
                    },
                    "failure": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Returns the errored API request payload.",
                        "properties": {
                          "_bsft_outbound_data_error": {
                            "type": "string",
                            "description": "The error message for the errored API request."
                          },
                          "events": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Array of event payloads which was sent to destination."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The User API key was incorrect or this feature is not enabled for your account."
          },
          "404": {
            "description": "Resource not found. This can happen due to resource conflicts. Retry with exponential backoff. If the issue persists, contact Blueshift."
          }
        }
      }
    },
    "/live": {
      "post": {
        "summary": "Live content",
        "description": "Use this endpoint to insert content recommendations in your website and mobile apps.",
        "tags": [
          "Live content"
        ],
        "security": [
          {
            "event_api_auth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "slot": {
                    "type": "string",
                    "description": "Specify the name of the slot on your website as registered on the Blueshift app.",
                    "example": "Promotions_Homepage_Carousel_JSON"
                  },
                  "api_key": {
                    "type": "string",
                    "description": "Specify the Event API key that you get from the account settings page of the Blueshift app.",
                    "example": "\u003CYOUR_API_KEY\u003E"
                  },
                  "user": {
                    "type": "object",
                    "properties": {
                      "customer_id": {
                        "type": "string",
                        "description": "Specify the customer ID of the user.",
                        "example": "812123"
                      },
                      "email": {
                        "type": "string",
                        "description": "Specify the email address of the user.",
                        "example": "janedoe@acme.com"
                      },
                      "cookie": {
                        "type": "string",
                        "description": "Specify the user's Blueshift cookie as an identifier for anonymous users.",
                        "example": "8d74322c-7bb6-44f1-18ce-6a92c5a9672f"
                      },
                      "device_id": {
                        "type": "string",
                        "description": "Specify the UUID of the device.",
                        "example": "8abe3faa-d48d-4e4a-00ca-beae01f1c987"
                      }
                    }
                  },
                  "context": {
                    "type": "object",
                    "properties": {
                      "seed_item_ids": {
                        "type": "array",
                        "description": "Specify the IDs of the items that form the basis of replay or related items.",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "\u003Citem_id_1\u003E",
                          "\u003Citem_id_2\u003E",
                          "..."
                        ]
                      },
                      "exclude_item_ids": {
                        "type": "array",
                        "description": "Specify the IDs of the items that should be excluded from the response.",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "\u003Citem_id_1\u003E",
                          "\u003Citem_id_2\u003E",
                          "..."
                        ]
                      },
                      "exclude_categories": {
                        "type": "array",
                        "description": "Specify the categories that should be excluded from the response.",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "category1",
                          "category2",
                          "..."
                        ]
                      },
                      "page_number": {
                        "type": "integer",
                        "description": "Specify this value to get more pages of recommendations if pagination is enabled for your account.",
                        "example": 2
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "Create a live content campaign and enter the campaign name, select the target segment, flight dates, the slot name and the JSON template"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "object",
                      "properties": {
                        "products": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "image_url": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "price": {
                                "type": "number"
                              },
                              "sku": {
                                "type": "string"
                              },
                              "url": {
                                "type": "string"
                              }
                            }
                          },
                          "example": [
                            {
                              "image_url": "https://images.randomhouse.com/cover/9780140437911",
                              "name": "Saint Joan",
                              "price": 14,
                              "sku": 9780140437911,
                              "url": "http://www.blueshiftreads.com/products/drama-european-english-irish-scottish-welsh/saint-joan"
                            },
                            {
                              "image_url": "https://images.randomhouse.com/cover/9780142410806",
                              "name": "Free Baseball",
                              "price": 5.99,
                              "sku": 9780142410806,
                              "url": "http://www.blueshiftreads.com/products/juvenile-fiction-sports-recreation-baseball-softball/free-baseball"
                            }
                          ]
                        },
                        "user": {
                          "type": "object",
                          "properties": {
                            "firstname": {
                              "type": "string",
                              "example": "Jane"
                            },
                            "lastname": {
                              "type": "string",
                              "description": "The last name of the customer.",
                              "example": "Doe"
                            }
                          }
                        }
                      }
                    },
                    "feedback": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "selected_experiment_uuid": {
                          "type": "string",
                          "example": "175d4f44-f1f0-438c-ad38-f4ede2047974"
                        },
                        "selected_trigger_uuid": {
                          "type": "string",
                          "example": "d181abb6-d5d5-4120-8c9b-c0de724576d6"
                        },
                        "skipped_triggers": {
                          "type": "object",
                          "properties": {
                            "d181abb6-d5d5-4120-8c9b-c0de724576d6": {
                              "type": "string",
                              "example": "Active ( launch preview simulation is enabled )"
                            }
                          }
                        }
                      }
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "tracking": {
                      "type": "object",
                      "properties": {
                        "click_url": {
                          "type": "string",
                          "example": "http://api.getblueshift.com/track?uid=d1a50376-4f62-46d0-b4a3-36ca0bd2f9cc&eid=175d4f44-f1f0-438c-ad38-f4ede2047974&mid=42a62e43-438a-4cf9-ac1d-a24706fe3065&a=click"
                        },
                        "impression_url": {
                          "type": "string",
                          "example": "http://api.getblueshift.com/track?uid=d1a50376-4f62-46d0-b4a3-36ca0bd2f9cc&eid=175d4f44-f1f0-438c-ad38-f4ede2047974&mid=42a62e43-438a-4cf9-ac1d-a24706fe3065&a=open"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/campaigns/{campaign_type}": {
      "post": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Create a campaign",
        "description": "Use this endpoint to create a campaign and specify its attributes.",
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "campaign_type",
            "description": "Specify how the campaign is triggered. Choose an option from the list.",
            "schema": {
              "type": "string",
              "enum": [
                "event_triggered",
                "one_time"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "startdate"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the campaign.",
                    "example": "Spring_Sale_2025_EMAIL"
                  },
                  "author": {
                    "type": "string",
                    "description": "Email address of the campaign author.",
                    "example": "marketing_manager@company.com"
                  },
                  "launch": {
                    "type": "boolean",
                    "description": "Determines if the campaign should be launched immediately (`true`) or saved as a draft (`false`). Default: `true`.",
                    "example": true
                  },
                  "startdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Campaign start time in ISO 8601 format. Default: current time.",
                    "example": "2025-03-15T12:00:00Z"
                  },
                  "enddate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Campaign end time in ISO 8601 format. Default: runs indefinitely.",
                    "example": "2025-04-15T12:00:00Z"
                  },
                  "segment_uuid": {
                    "type": "string",
                    "description": "UUID of the segment associated with this campaign. Required for one-time campaigns.",
                    "example": "89abc123-d456-789e-0123-45678f9a0123"
                  },
                  "triggering_event_name": {
                    "type": "string",
                    "description": "The event that triggers this campaign. Default: `API triggered`.",
                    "example": "user_signup_confirmation"
                  },
                  "bypass_message_limits": {
                    "type": "boolean",
                    "description": "Whether to bypass messaging limits. Default: `false`.",
                    "example": false
                  },
                  "bypass_global_inclusion_segment": {
                    "type": "boolean",
                    "description": "Whether to send messages to users outside the global inclusion segment.",
                    "example": true
                  },
                  "skip_incrementing_user_message_limits": {
                    "type": "boolean",
                    "description": "Determines if campaign messages count towards a user’s message limits. Default: `false`.",
                    "example": true
                  },
                  "remove_unsubscribe_from_email_headers": {
                    "type": "boolean",
                    "description": "Whether to exclude unsubscribe headers from emails. Default: `false`.",
                    "example": true
                  },
                  "send_summary_emails": {
                    "type": "string",
                    "description": "Email address to receive the campaign execution summary.",
                    "example": "campaign_summary@company.com"
                  },
                  "send_to_unsubscribed": {
                    "type": "boolean",
                    "description": "Whether to send messages to unsubscribed users. Default: `false`.",
                    "example": false
                  },
                  "journey_concurrency": {
                    "type": "string",
                    "description": "Defines how often a user can enter the journey. Options: `once_per_lifetime`, `once_at_any_time`, `multiple`. Default: `once_at_any_time`.",
                    "example": "multiple",
                    "enum": [
                      "once_per_lifetime",
                      "once_at_any_time",
                      "multiple"
                    ],
                    "default": "once_at_any_time"
                  },
                  "seed_list_uuids": {
                    "type": "array",
                    "description": "An array of seed list UUIDs for testing campaigns.",
                    "example": [
                      "123e4567-e89b-12d3-a456-426614174000",
                      "123e4567-e89b-12d3-a456-426614174001",
                      "123e4567-e89b-12d3-a456-426614174002"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "tag_data": {
                    "type": "string",
                    "description": "Tags associated with the campaign. Format: `folder_name: tag1, tag2, tag3`. Example: `Regions:USA,Canada|Products:Electronics,Apparel`.",
                    "example": "Regions:USA,Canada|Products:Electronics,Apparel"
                  },
                  "triggers": {
                    "type": "array",
                    "description": "You can add only one trigger at a time. If you add multiple triggers, the endpoint returns an error.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "trigger_name": {
                          "type": "string",
                          "description": "Name of the trigger for reference.",
                          "example": "Welcome Email Trigger"
                        },
                        "template_uuid": {
                          "type": "string",
                          "description": "UUID of the template linked to this trigger (email, push, SMS, etc.).",
                          "example": "8da0744e-141d-4c9d-85d7-c89a54ac745a"
                        },
                        "utm_source": {
                          "type": "string",
                          "description": "UTM Source for tracking. Default: blueshift.",
                          "example": "blueshift"
                        },
                        "utm_campaign": {
                          "type": "string",
                          "description": "UTM Campaign name. Default: campaign name.",
                          "example": "spring_sale_2025"
                        },
                        "utm_medium": {
                          "type": "string",
                          "description": "UTM Medium (e.g., email, push). Default: inferred from the template.",
                          "example": "email"
                        },
                        "utm_content": {
                          "type": "string",
                          "description": "UTM Content.",
                          "example": "discount_offer_banner"
                        },
                        "utm_term": {
                          "type": "string",
                          "description": "UTM Term for keyword tracking.",
                          "example": "exclusive_deal"
                        },
                        "account_adapter_uuid": {
                          "type": "string",
                          "description": "UUID of the adapter for message sending.",
                          "example": "c2102111-e660-47df-aa3e-678d71a93644"
                        },
                        "account_adapter_liquid_expression": {
                          "type": "string",
                          "description": "Liquid expression to dynamically assign an adapter UUID. Leave account_adapter_uuid blank when using this.",
                          "example": "{% case user.country %}{% when 'US' %}c2102111-e660-47df-aa3e-678d71a93644{% else %}fallback_uuid{% endcase %}"
                        },
                        "from_name": {
                          "type": "string",
                          "description": "Sender's name for email campaigns.",
                          "example": "Blueshift Marketing"
                        },
                        "from_address": {
                          "type": "string",
                          "description": "Sender's email address. It must match the adapter domain.",
                          "example": "marketing@blueshift.com"
                        },
                        "reply_to_address": {
                          "type": "string",
                          "description": "Email address where replies are sent.",
                          "example": "support@blueshift.com"
                        },
                        "custom_url_params": {
                          "type": "array",
                          "description": "Custom UTM parameters.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Specify the name of the property.",
                                "example": "region"
                              },
                              "value": {
                                "type": "string",
                                "description": "Specify the value of the property.",
                                "example": "North America"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "Specifications for the campaign to be created."
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "campaign": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "description": "The unique ID of the created campaign.",
                          "example": "21a5b6c7-8901-4d2e-9f3g-45678abcdef"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the created campaign.",
                          "example": "Spring Sale 2025"
                        },
                        "startdate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The date and time when the campaign starts in ISO 8601 format.",
                          "example": "2025-03-01T09:00:00.000Z"
                        },
                        "enddate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The date and time when the campaign ends in ISO 8601 format.",
                          "example": "2025-03-15T23:59:59.000Z"
                        },
                        "status": {
                          "type": "string",
                          "description": "The current status of the campaign.",
                          "example": "launched"
                        },
                        "triggering_event_name": {
                          "type": "string",
                          "description": "Specify the event that triggers this campaign.",
                          "example": "cart_abandonment"
                        },
                        "journey_concurrency": {
                          "type": "string",
                          "description": "The number of times a campaign runs for a user.",
                          "example": "once_at_any_time"
                        },
                        "author": {
                          "type": "string",
                          "description": "The author of the campaign.",
                          "example": "John Doe"
                        },
                        "tag_data": {
                          "type": "string",
                          "description": "Tags associated with the campaign.",
                          "example": "Region:US,EU,APAC"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request contains missing or invalid parameters, incorrect formatting, or conflicts such as duplicate campaign names.",
            "content": {
              "application/json": {
                "example": {
                  "errors": {
                    "name": [
                      "can't be blank"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - API authentication failed due to an invalid or missing API key.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not authorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The API key does not have sufficient permissions to perform this action.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Permission denied"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The requested API endpoint does not exist. Verify the request path.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Endpoint not found"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - The request limit has been exceeded. Reduce request frequency.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - An unexpected error occurred on the server. Contact support if the issue persists.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal Server Error - Please contact support for more information."
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway - The server received an invalid response while processing the request. Retry the request.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Bad Gateway - Please retry the request."
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - The service is temporarily unavailable. Try again later.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Service Unavailable - The service is temporarily unavailable. Try again later."
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout - The server took too long to respond. Implement exponential backoff and retry.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Gateway Timeout - The server took too long to respond. Retry with exponential backoff."
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/campaigns/{campaign_uuid}/update_schedule": {
      "patch": {
        "summary": "Update campaign schedule",
        "description": "Use this endpoint to update the schedule of an existing campaign.",
        "tags": [
          "Campaigns"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "campaign_uuid",
            "required": true,
            "description": "Specify the UUID of the campaign to update.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "startdate": {
                    "type": "string",
                    "description": "Specify the campaign start time in ISO 8601 format. The default value is current time (the campaign is launched immediately).",
                    "example": "2024-11-01T14:02:36.000Z"
                  },
                  "enddate": {
                    "type": "string",
                    "description": "Specify the campaign end time in ISO 8601 format. The default value is null (the campaign runs forever).",
                    "example": "2024-11-15T14:02:36.000Z"
                  },
                  "recurring_schedule": {
                    "type": "string",
                    "description": "Applicable to Segment-Triggered campaigns. Allowed values are 'daily' and 'continuously'.",
                    "example": "daily"
                  },
                  "repeating_schedule_attributes": {
                    "type": "object",
                    "description": "Attributes for Recurring campaigns",
                    "properties": {
                      "interval_size": {
                        "type": "integer",
                        "description": "Positive integer specifying the interval size.",
                        "example": 1
                      },
                      "interval_unit": {
                        "type": "string",
                        "description": "The unit of the interval. Options: 'day', 'week', 'month'.",
                        "example": "day"
                      },
                      "day_of_month": {
                        "type": "string",
                        "description": "Monthly schedule option. Options: 'nth_day', 'nth_weekday', 'last_day'.",
                        "example": "nth_day"
                      },
                      "days_of_week": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of days for scheduling. Example: ['mon', 'tue'].",
                        "example": [
                          "mon",
                          "wed",
                          "fri"
                        ]
                      }
                    }
                  }
                },
                "required": [
                  "startdate"
                ]
              }
            }
          },
          "description": "Specify the schedule details for the campaign."
        },
        "responses": {
          "200": {
            "description": "The schedule has been successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Status message confirming the update.",
                      "example": "Campaign schedule updated successfully."
                    },
                    "updated_fields": {
                      "type": "object",
                      "description": "Fields that were updated in the campaign schedule.",
                      "properties": {
                        "startdate": {
                          "type": "string",
                          "example": "2024-11-01T14:02:36.000Z"
                        },
                        "enddate": {
                          "type": "string",
                          "example": "2024-11-15T14:02:36.000Z"
                        },
                        "recurring_schedule": {
                          "type": "string",
                          "example": "daily"
                        },
                        "repeating_schedule_attributes": {
                          "type": "object",
                          "properties": {
                            "interval_size": {
                              "type": "integer",
                              "example": 1
                            },
                            "interval_unit": {
                              "type": "string",
                              "example": "day"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters or conditions."
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key."
          },
          "404": {
            "description": "Resource not found - The specified campaign ID was not found."
          },
          "422": {
            "description": "Unprocessable Entity - Some/all schedule details contain invalid data."
          },
          "500": {
            "description": "Internal Server Error - Please contact support for more information."
          },
          "502": {
            "description": "Bad Gateway - Please retry the request."
          },
          "503": {
            "description": "Service Unavailable - The service is temporarily unavailable. Try again later."
          },
          "504": {
            "description": "Gateway Timeout - The server took too long to respond. Retry with exponential backoff."
          }
        }
      }
    },
    "/api/v1/campaigns/{campaign_uuid}/launch": {
      "patch": {
        "summary": "Launch a campaign",
        "description": "Use this endpoint to launch a campaign. Archived or completed cannot be launched. The launch API will return any errors typically displayed on the UI during a campaign launch.",
        "tags": [
          "Campaigns"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "campaign_uuid",
            "required": true,
            "description": "Specify the UUID of the campaign to launch.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "No additional parameters are required in the request body to pause a campaign.",
          "content": {

          }
        },
        "responses": {
          "200": {
            "description": "Campaign launched successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "description": "Unique identifier for the launched campaign.",
                      "example": "be1a0fcd-5e60-43c5-97a0-3e4b16fb351e"
                    },
                    "status": {
                      "type": "string",
                      "description": "The current status of the campaign.",
                      "example": "launched"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of the last update for the campaign.",
                      "example": "2024-11-20T08:12:30.778Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid parameters or conditions for launching the campaign. Ensure the campaign is eligible for launch."
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key."
          },
          "403": {
            "description": "Forbidden - You do not have permission to launch this campaign."
          },
          "404": {
            "description": "Resource not found - The specified campaign ID was not found."
          },
          "422": {
            "description": "Conflict error - The campaign cannot be launched due to an invalid state or missing configuration. Possible reasons include being archived or completed, missing a start time, lack of a required segment, or absence of triggers."
          },
          "500": {
            "description": "Internal server error - Please contact support for more information."
          }
        }
      }
    },
    "/api/v1/campaigns/{campaign_uuid}/pause": {
      "patch": {
        "summary": "Pause a campaign",
        "description": "Use this endpoint to pause an active campaign. Only campaigns that are currently being executed can be paused. Archived and completed campaigns cannot be paused.",
        "tags": [
          "Campaigns"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "campaign_uuid",
            "required": true,
            "description": "Specify the UUID of the campaign to pause.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "No additional parameters are required in the request body to pause a campaign.",
          "content": {

          }
        },
        "responses": {
          "200": {
            "description": "Campaign paused successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "description": "Unique identifier for the paused campaign.",
                      "example": "be1a0fcd-5e60-43c5-97a0-3e4b16fb351e"
                    },
                    "status": {
                      "type": "string",
                      "description": "The current status of the campaign.",
                      "example": "paused"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of the last update for the campaign.",
                      "example": "2024-11-20T08:28:01.807Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid conditions for pausing the campaign. Ensure the campaign is currently in Executing state."
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key."
          },
          "403": {
            "description": "Forbidden - You do not have permission to pause this campaign."
          },
          "404": {
            "description": "Resource not found - The specified campaign ID was not found."
          },
          "422": {
            "description": "Conflict error - The campaign is not in a state that allows it to be paused. Only Executing campaigns can be paused."
          },
          "500": {
            "description": "Internal server error - Please contact support for more information."
          }
        }
      }
    },
    "/api/v1/campaigns/execute": {
      "post": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Trigger a campaign",
        "description": "Use this endpoint to trigger a campaign.",
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "properties": {
                  "email": {
                    "description": "Specify the email address of the user for whom you want to trigger the campaign.",
                    "type": "string",
                    "example": "test@blueshift.com"
                  },
                  "campaign_uuid": {
                    "description": "Specify the UUID of the campaign that you want to trigger. You can copy the UUID from the URL of the campaign on the Blueshift app. For example, if you open a campaign in the Blueshift app, its URL looks like `https://app.getblueshift.com/dashboard#/app/campaigns/\u003CCAMPAIGN_UUID\u003E/details`.",
                    "type": "string",
                    "example": "a43b685d-65e3-5303-64d8-d4b4ab075b5f"
                  },
                  "email_attachments": {
                    "type": "array",
                    "description": "Specify the URLs of the files that you want to send as an attachment along with the email.",
                    "example": [
                      "https://docs.google.com/document/d/1234567890abcdefghijklmnopqrstuvwxyz/view?usp=sharing",
                      "https://www.dropbox.com/s/abcdefghijklmnopqrstuvwxyz1234567890?dl=0"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "_bsft_high_priority": {
                    "description": "Set to true if the campaign must be processed as a high priority campaign. Blueshift first processes all high priority campaigns in a first in first out order. This is followed by all other campaigns in a first in first out order. The default value is false.",
                    "type": "boolean",
                    "default": false,
                    "example": true
                  },
                  "transaction_uuid": {
                    "description": "Optionally include the transaction UUID (must be a well formed UUID) to avoid duplicate messages. The API returns a 200 status code for a duplicate request along with a message noting that a request with the given transaction UUID was already processed.",
                    "type": "string",
                    "example": "a0d1a0f3-6596-4e1c-b487-3639e05b6d2f"
                  }
                }
              }
            }
          },
          "description": "required parameters to trigger a campaign."
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/campaigns/bulk_execute": {
      "post": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Bulk trigger campaigns",
        "description": "Use this endpoint to trigger multiple campaigns.",
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "payloads": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {
                        "email": {
                          "description": "Specify the email address of the user for whom you want to trigger the campaign.",
                          "type": "string",
                          "example": "john.doe@blueshift.com"
                        },
                        "campaign_uuid": {
                          "description": "Specify the UUID of the campaign that needs to be triggered. You can copy the UUID from the URL of the campaign on the Blueshift app. For example, if you open a campaign in the Blueshift app, its URL looks like `https://app.getblueshift.com/dashboard#/app/campaigns/\u003CCAMPAIGN_UUID\u003E/details`.",
                          "type": "string",
                          "example": "857ad5a5-1cd1-4c8a-bd9b-b2cdbb6595cc"
                        },
                        "email_attachments": {
                          "type": "array",
                          "description": "Specify the URLs of the files that you want to send as an attachment along with the email.",
                          "example": [
                            "{https://cdn.getblueshift.com/examples/sample.pdf}",
                            "{https://cdn.getblueshift.com/static/csv/test.csv}"
                          ],
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "List of required parameters to trigger a campaign."
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/campaigns.json": {
      "get": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Performance summary",
        "description": "Use this endpoint to export the performance data of all the campaigns for a given date range.",
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "end_time",
            "description": "Specify a timestamp in the ISO 8601 format to filter the performance data of the campaigns that ran before it.",
            "example": "2023-10-06T20:41:21.000Z",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "start_time",
            "description": "Specify a timestamp in the ISO 8601 format to filter the performance data of the campaigns that ran after it.",
            "example": "2023-05-05T20:41:21.000Z",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "status",
            "description": "Specify a status to filter the campaigns.",
            "example": "launched",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "launched",
                "draft",
                "paused",
                "completed"
              ]
            }
          },
          {
            "name": "tag_data",
            "description": "Specify tags to filter the campaigns.",
            "example": "tag_data=Category:Welcome",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "campaign_executing": {
                            "type": "boolean",
                            "example": false
                          },
                          "campaign_execution_ended_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-10-03T04:57:24.000Z"
                          },
                          "campaign_execution_started_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2023-10-05T04:57:24.000Z"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2023-10-03T04:57:24.000Z"
                          },
                          "currency": {
                            "type": "string",
                            "example": "USD"
                          },
                          "enddate": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-05-03T04:57:24.000Z"
                          },
                          "exec_term": {
                            "type": "string",
                            "enum": [
                              "on_going"
                            ],
                            "example": "on_going"
                          },
                          "name": {
                            "type": "string",
                            "example": "Daily market tips"
                          },
                          "recurring_number": {
                            "type": "number",
                            "example": "1"
                          },
                          "recurring_schedule": {
                            "type": "string",
                            "example": "continuously"
                          },
                          "recurring_time": {
                            "type": "number",
                            "description": "Schedule a recurring campaign to execute sends at a specific time of a day. The system tracks the campaign's last execution time (`last_recurring_execution_started_at`) and uses it to determine the next scheduled run.",
                            "example": "2024-01-03T14:45:00.000Z"
                          },
                          "recurring_unit": {
                            "type": "string",
                            "example": "day"
                          },
                          "segment_name": {
                            "type": "string",
                            "example": "Daily market tips segment",
                            "description": "The segment for which the campaign is running"
                          },
                          "segment_uuid": {
                            "type": "string",
                            "example": "9dfd5cdc-fedc-40b5-8c65-ba533c57c8bf"
                          },
                          "startdate": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-01-02T14:45:00.000Z"
                          },
                          "statistics": {
                            "type": "object",
                            "properties": {
                              "activations": {
                                "type": "number"
                              },
                              "add_to_carts": {
                                "type": "number"
                              },
                              "assigns": {
                                "type": "number"
                              },
                              "attributions": {
                                "type": "object"
                              },
                              "bounces": {
                                "type": "number"
                              },
                              "checkouts": {
                                "type": "number"
                              },
                              "clicks": {
                                "type": "number"
                              },
                              "deliveries": {
                                "type": "number"
                              },
                              "end_time": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "media_spent": {
                                "type": "number"
                              },
                              "opens": {
                                "type": "number",
                                "example": 20
                              },
                              "pageloads": {
                                "type": "number",
                                "example": 5
                              },
                              "purchases": {
                                "type": "number",
                                "example": 75
                              },
                              "revenue": {
                                "type": "number",
                                "example": 19618
                              },
                              "sends": {
                                "type": "number",
                                "example": 110
                              },
                              "spam_reports": {
                                "type": "number",
                                "example": 2
                              },
                              "start_time": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "timezone": {
                                "type": "string",
                                "example": "Pacific/Los_Angeles"
                              },
                              "unique_clicks": {
                                "type": "number",
                                "example": 150
                              },
                              "unique_opens": {
                                "type": "number",
                                "example": 250
                              },
                              "unsubscribes": {
                                "type": "number",
                                "example": 2
                              },
                              "visits": {
                                "type": "number",
                                "example": 2160
                              }
                            }
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "launched",
                              "draft",
                              "paused"
                            ],
                            "example": "paused"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-05-05T20:41:21.000Z"
                          },
                          "uuid": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/campaigns/{campaign_uuid}/detail.json": {
      "get": {
        "summary": "Detailed report with stats",
        "description": "Use this endpoint to get a detailed report of a specific campaign.",
        "tags": [
          "Campaigns"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "name": "campaign_uuid",
            "description": "Specify the UUID of the campaign for which you want a detailed report. For example, if you open an campaign in the Blueshift app, its URL looks like: `https://app.getblueshift.com/dashboard#/app/campaigns/\u003CCAMPAIGN_UUID\u003E/details`. You can copy the UUID from the URL of the campaign on dashboard.",
            "example": "a43b685d-65e3-5303-64d8-d4b4ab075b5f",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "description": "Specify a timestamp in the ISO 8601 format to filter the report of the campaign upto it.",
            "example": "2023-08-05T07:05:38.000Z",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "start_time",
            "description": "Specify a timestamp in the ISO 8601 format to filter the report of the campaign after it.",
            "example": "2023-07-05T07:05:38.000Z",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/campaigns/{campaign_uuid}.json": {
      "get": {
        "summary": "Detailed report without stats",
        "description": "Use this endpoint to get a detailed report of a specific campaign that does not include campaign statistics.",
        "tags": [
          "Campaigns"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "name": "campaign_uuid",
            "description": "Specify the UUID of the campaign for which you want a detailed report. You can copy the UUID from the URL of the campaign on dashboard. For example, if you open a campaign in the Blueshift app, its URL looks like `https://app.getblueshift.com/dashboard#/app/campaigns/\u003CCAMPAIGN_UUID\u003E/details`.",
            "example": "a43b685d-65e3-5303-64d8-d4b4ab075b5f",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/campaigns.json": {
      "get": {
        "summary": "List campaigns",
        "description": "Use this endpoint to get the list of campaigns.",
        "tags": [
          "Campaigns"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "description": "Search for campaigns that contain the specified string in the name of the campaign.",
            "example": "Members-only Banner",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "description": "Search for campaigns created by specified author.",
            "example": "janedoe@acme.com",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_after",
            "description": "Search for campaigns created after specified date and time.",
            "example": "2024-05-21T07:05:00.000Z",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created_before",
            "description": "Search for campaigns created before specified date and time.",
            "example": "2024-05-24T07:05:00.000Z",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "startdate",
            "description": "Search for campaigns that started after specified date and time. If the start date is not specified, for one time campaigns, response contains only campaigns that have a start date within the last 30 days. For other campaign types, if start date is not specified, all campaigns are returned irrespective of start date.",
            "example": "2024-05-22T02:26:00.000Z",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "archived",
            "description": "Search for campaigns with specified archived status. Set as true for archived campaigns.",
            "example": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "description": "Search for campaigns with specified status.",
            "example": "launched",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "exec_term",
            "description": "Search for campaigns of specified type. Value can be one_time, recurring, on_going (segment triggered), transactional (event triggered), or onsite (live content).",
            "example": "one_time",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "description": "Specify the number of records to be returned per page",
            "example": 4,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "Specify the page number for the search results.",
            "example": 3,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the campaign."
                          },
                          "status": {
                            "type": "string",
                            "description": "The current status of the campaign. The value can be draft, launched, paused, or completed.",
                            "example": "draft"
                          },
                          "startdate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The start date and time at which the campaign starts running.",
                            "example": "2024-05-05T20:41:21.000Z"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date and time at which the campaign was last updated.",
                            "example": "2024-05-05T21:41:21.000Z"
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The UUID of the campaign.",
                            "example": "a43b685d-65e3-5303-64d8-d4b4ab075b5f"
                          },
                          "exec_term": {
                            "type": "string",
                            "description": "The type of campaign. Value can be one_time, recurring, on_going (segment triggered), transactional (event triggered), or onsite (live content).",
                            "example": "one_time"
                          },
                          "next_execution_scheduled_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "For a recurring campaign, the next date and time at which the campaign will run."
                          },
                          "archived": {
                            "type": "string",
                            "description": "Returns true if the campaign is archived."
                          },
                          "holdout_percentage": {
                            "type": "string",
                            "description": "Specifies the campaign level holdout percentage."
                          },
                          "segment_uuid": {
                            "type": "string",
                            "description": "The UUID of the segment for a segment based campaign."
                          },
                          "segment_name": {
                            "type": "string",
                            "description": "The name of the segment.",
                            "example": "Anti Churn"
                          },
                          "author": {
                            "type": "string",
                            "description": "The author of the campaign."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/campaigns/index_select": {
      "get": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Get campaign information",
        "description": "Use this endpoint to get specific information about all campaigns.",
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "select",
            "description": "Add the attributes (comma separated) that you want to fetch for all campaigns.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/campaigns/{campaign_uuid}/archive": {
      "put": {
        "summary": "Archive a single campaign",
        "description": "Use this endpoint to archive a specific campaign by its UUID.",
        "tags": [
          "Campaigns"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "campaign_uuid",
            "required": true,
            "description": "Specify the UUID of the campaign to archive.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Campaign archived successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "archived": {
                      "type": "boolean",
                      "description": "Indicates whether the campaign was successfully archived.",
                      "example": true
                    }
                  }
                },
                "example": {
                  "archived": true
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid parameters or request conditions."
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key."
          },
          "404": {
            "description": "Resource not found - The specified campaign UUID was not found."
          }
        }
      }
    },
    "/api/v1/campaigns/{campaign_uuid}/unarchive": {
      "put": {
        "summary": "Unarchive a single campaign",
        "description": "Use this endpoint to unarchive a specific campaign by its UUID.",
        "tags": [
          "Campaigns"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "campaign_uuid",
            "required": true,
            "description": "Specify the UUID of the campaign to unarchive.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Campaign unarchived successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "archived": {
                      "type": "boolean",
                      "description": "Indicates whether the campaign is archived. `false` means the campaign is unarchived.",
                      "example": false
                    }
                  }
                },
                "example": {
                  "archived": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid parameters or request conditions."
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key."
          },
          "404": {
            "description": "Resource not found - The specified campaign UUID was not found."
          }
        }
      }
    },
    "/api/v1/campaigns/bulk_archive": {
      "put": {
        "summary": "Bulk archive campaigns",
        "description": "Use this endpoint to archive multiple campaigns by providing an array of UUIDs.",
        "tags": [
          "Campaigns"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of campaign UUIDs to archive.",
                    "example": [
                      "uuid1",
                      "uuid2",
                      "uuid3",
                      "uuid4",
                      "uuid5"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Campaigns archived successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "no_change": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of UUIDs for campaigns that were already archived.",
                      "example": []
                    },
                    "blocked": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of UUIDs for campaigns that could not be archived due to restrictions.",
                      "example": []
                    },
                    "successful": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "description": "UUID of the successfully archived campaign."
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the successfully archived campaign."
                          }
                        }
                      },
                      "description": "List of campaigns that were successfully archived.",
                      "example": [
                        {
                          "uuid": "1a2b3c4d-5678-90ab-cdef-1234567890ab",
                          "name": "Holiday Season Campaign"
                        },
                        {
                          "uuid": "2b3c4d5e-6789-01bc-def0-2345678901cd",
                          "name": "Spring Sale Campaign"
                        },
                        {
                          "uuid": "3c4d5e6f-7890-12cd-ef01-3456789012de",
                          "name": "Summer Offers Campaign"
                        },
                        {
                          "uuid": "4d5e6f7g-8901-23de-f012-4567890123ef",
                          "name": "Autumn Clearance Sale"
                        },
                        {
                          "uuid": "5e6f7g8h-9012-34ef-0123-5678901234fg",
                          "name": "Winter Discounts Campaign"
                        }
                      ]
                    },
                    "failed": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of UUIDs for campaigns that could not be archived.",
                      "example": []
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid parameters or request conditions."
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key."
          },
          "404": {
            "description": "Resource not found - One or more campaigns not found."
          }
        }
      }
    },
    "/api/v1/campaigns/bulk_unarchive": {
      "put": {
        "summary": "Bulk unarchive campaigns",
        "description": "Use this endpoint to unarchive multiple campaigns by providing an array of UUIDs.",
        "tags": [
          "Campaigns"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of campaign UUIDs to unarchive.",
                    "example": [
                      "uuid1",
                      "uuid2",
                      "uuid3",
                      "uuid4",
                      "uuid5"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Campaigns unarchived successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "no_change": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of UUIDs for campaigns that were already unarchived.",
                      "example": []
                    },
                    "blocked": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of UUIDs for campaigns that could not be unarchived due to restrictions.",
                      "example": []
                    },
                    "successful": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "description": "UUID of the successfully unarchived campaign."
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the successfully unarchived campaign."
                          }
                        }
                      },
                      "description": "List of campaigns that were successfully unarchived.",
                      "example": [
                        {
                          "uuid": "7e3a2d1e-df8a-4d9c-95f2-a12f4d2f8e19",
                          "name": "Holiday Sale Campaign"
                        },
                        {
                          "uuid": "c15f84be-a5d4-4a3c-8096-4c8de82b0df3",
                          "name": "Back-to-School Promotion"
                        },
                        {
                          "uuid": "f29d2345-4a6b-432d-a1de-5c3490f74f52",
                          "name": "Summer Discounts Campaign"
                        },
                        {
                          "uuid": "1b5e9876-5c4d-476f-91a8-b43c9ad2e4d1",
                          "name": "Winter Clearance Sale"
                        },
                        {
                          "uuid": "e5d2a4f3-d5b4-44a6-803e-8d547c3cdb78",
                          "name": "Black Friday Deals"
                        }
                      ]
                    },
                    "failed": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of UUIDs for campaigns that could not be unarchived.",
                      "example": []
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid parameters or request conditions."
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key."
          },
          "404": {
            "description": "Resource not found - One or more campaigns not found."
          }
        }
      }
    },
    "/api/v1/email_templates.json": {
      "get": {
        "summary": "List email templates",
        "description": "Use this endpoint to get the list of email templates.",
        "tags": [
          "Email template"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "description": "Search for email templates that contain the specified string in the name of the template.",
            "example": "Support email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "archived",
            "description": "Search for templates with specified archived status. Specify value as `0` to get a list of un-archived templates, or as `1` to get a list of archived templates. Leave blank to get a list of all templates.",
            "example": true,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "resource.editor_type",
            "description": "Search for templates of the specified type. Specify value as `html` to get a list of HTML templates or `bee_editor` to get a list of Visual Editor templates. Leave blank to get a list of all templates.",
            "example": "bee_editor",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "description": "Specify the number of records to be returned per page",
            "example": 1,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "Specify the page number for the search results.",
            "example": 1,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "description": "The list of email templates.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the email template.",
                            "example": "Support email"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date and time when the email template was created.",
                            "example": "2024-05-22T15:27:16.000Z"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date and time when the email template was last updated.",
                            "example": "2024-05-24T05:01:54.000Z"
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The UUID of the email template.",
                            "example": "94d45bc8-3488-2002-cd9b-d6314445c545"
                          },
                          "author": {
                            "type": "string",
                            "description": "The author of the email template.",
                            "example": "Jane Doe"
                          },
                          "resource": {
                            "type": "object",
                            "properties": {
                              "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time when the resource (such as the template's subject or content) got updated.",
                                "example": "2024-05-24T05:01:37.000Z"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create email template",
        "description": "Use this endpoint to create an email template.",
        "tags": [
          "Email template"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "resource",
                  "skip_user_on_external_fetch_error",
                  "template_properties"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My API Template",
                    "description": "Specify the name for the template."
                  },
                  "author": {
                    "type": "string",
                    "example": "john.doe@blueshift.com",
                    "description": "Specify the email address of the template's author."
                  },
                  "resource": {
                    "type": "object",
                    "required": [
                      "subject",
                      "content"
                    ],
                    "properties": {
                      "subject": {
                        "type": "string",
                        "description": "Specify the subject line of the template.",
                        "example": "Hey, {{user.firstname}}!"
                      },
                      "preheader": {
                        "type": "string",
                        "description": "Specify the preheader line of the template.",
                        "example": "Here are few deals you don't want to miss!"
                      },
                      "content": {
                        "type": "string",
                        "description": "Specify the body of the template with its HTML content.",
                        "example": "\u003C!DOCTYPE html\u003E\n\u003Chtml\u003E\n\u003Cbody\u003E\nHello\n\u003C/body\u003E\u003C/html\u003E"
                      }
                    }
                  },
                  "skip_user_on_external_fetch_error": {
                    "type": "boolean",
                    "default": true,
                    "description": "Message is not sent to user if the external fetch encounters an error or does not return any data)",
                    "example": true
                  },
                  "template_properties": {
                    "type": "array",
                    "maxItems": 1,
                    "description": "Specify the campaign behavior properties for the template.",
                    "items": {
                      "type": "object",
                      "required": [
                        "skip_user_on_blank_products",
                        "skip_user_on_blank_event_products"
                      ],
                      "properties": {
                        "skip_user_on_blank_products": {
                          "type": "boolean",
                          "default": true
                        },
                        "skip_user_on_blank_event_products": {
                          "type": "boolean",
                          "default": true
                        },
                        "account_algorithm_uuid": {
                          "type": "string",
                          "nullable": true,
                          "description": "Specify the recommendation scheme for the template. If you leave this field blank, no change will be done to any recommendation schemes that were previously added to the template. If you send null as a value, any recommendation schemes that were previously added to the template will be removed.",
                          "example": "2879b1a3-ee84-4e13-b63c-ad83674c0ca1"
                        }
                      }
                    }
                  },
                  "external_fetches": {
                    "type": "array",
                    "description": "Specify the external fetches for the template.",
                    "example": [
                      {
                        "uuid": "e789705f-3eb3-4e2a-a666-648dedae6g86"
                      },
                      {
                        "uuid": "af9bbbd3-7133-4ab4-80a2-938b67c12d34"
                      }
                    ],
                    "items": {
                      "type": "object",
                      "required": [
                        "uuid"
                      ],
                      "properties": {
                        "uuid": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "transaction_mixins": {
                    "type": "array",
                    "description": "Specify the transaction mixins for the template. Note that when you add multiple transaction mixins, the resultant transactions are the OR result of all the queries related to the transactions mixins. For example, the resultant JSON response will contain any transaction that meets EITHER the `transaction_mixin1` criteria OR the `transaction_mixin2` criteria (or both).",
                    "example": [
                      {
                        "uuid": "transaction_mixin1_uuid"
                      },
                      {
                        "uuid": "transaction_mixin2_uuid"
                      }
                    ],
                    "items": {
                      "type": "object",
                      "required": [
                        "uuid"
                      ],
                      "properties": {
                        "uuid": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "tag_data": {
                    "type": "string",
                    "description": "Specify a folder and then tags under the folder in the format `folder_name: tag1, tag2, tag3`. For example, `Regions:USA,China,Brazil,Hong Kong,India,Sweden,Canada`.\n  \n  \u003E **📘**  Tag data should exist in your account.\n",
                    "example": "Regions:USA,China,Brazil,Hong Kong,India,Sweden,Canada"
                  }
                }
              }
            }
          },
          "description": "Takes the template details returns a JSON that provides the UUID of the created template."
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/email_templates/{TEMPLATE_UUID}.json": {
      "get": {
        "summary": "Get template details",
        "description": "Use this endpoint to get a JSON representation of your email template along with a list of campaigns using the template.",
        "tags": [
          "Email template"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "name": "TEMPLATE_UUID",
            "in": "path",
            "required": true,
            "description": "Specify the UUID of the template. The template uuids can be found by [querying the index](https://developer.blueshift.com/reference/email-template#get_api-v1-email-templates-json), or from the URL when you view a template in the Blueshift app. For example, in `https://app.getblueshift.com/dashboard#/email_template_studio/\u003CTEMPLATE_UUID\u003E/edit/info`, the `\u003CTEMPLATE_UUID\u003E` is the uuid you need.",
            "example": "9da0744e-***-**-85d7-***4ac745b",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "my template",
                      "description": "The name of the template."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time when the template was created.",
                      "example": "2023-10-03T04:57:24.000Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time when the template was updated.",
                      "example": "2024-05-03T04:57:24.000Z"
                    },
                    "uuid": {
                      "type": "string",
                      "example": "1da9e1e8-feae-4ec3-be0a-7dba528590bb",
                      "description": "The UUID of the template."
                    },
                    "author": {
                      "type": "string",
                      "example": "Bertram Gilfoyle",
                      "description": "The name of the author of the template."
                    },
                    "resource": {
                      "type": "object",
                      "properties": {
                        "subject": {
                          "type": "string",
                          "example": "Hello",
                          "description": "The subject line of the email template."
                        },
                        "content": {
                          "type": "string",
                          "example": "\u003C!DOCTYPE html\u003E\n\u003Chtml\u003E\n\u003Cbody\u003E\nHello\u003C/body\u003E\u003C/html\u003E",
                          "description": "The HTML content of the email template."
                        }
                      }
                    },
                    "campaigns": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "names": {
                            "type": "string"
                          },
                          "uuid": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "The list of campaigns that use this template.",
                      "example": [
                        {
                          "names": "my campaign",
                          "uuid": "f63ebf4f-160b-42d8-b482-cbe0fc7de6b7",
                          "status": "draft"
                        },
                        {
                          "names": "my other campaign",
                          "uuid": "ab67f1a7-efbb-46cd-8e9d-9a823e77bf1c",
                          "status": "launched"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update email template",
        "description": "Use this endpoint to update an email template.",
        "tags": [
          "Email template"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "name": "TEMPLATE_UUID",
            "in": "path",
            "required": true,
            "description": "Specify the UUID of the template. The template uuids can be found by [querying the index](https://developer.blueshift.com/reference/email-template#get_api-v1-email-templates-json), or from the URL when you view a template in the Blueshift app. For example, in `https://app.getblueshift.com/dashboard#/email_template_studio/\u003CTEMPLATE_UUID\u003E/edit/info`, the `\u003CTEMPLATE_UUID\u003E` is the uuid you need.",
            "example": "9da0744e-***-**-85d7-***4ac745b",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resource": {
                    "type": "object",
                    "properties": {
                      "subject": {
                        "type": "string",
                        "description": "Specify the subject line of the template.",
                        "example": "Hey there {{user.firstname}}!"
                      },
                      "preheader": {
                        "type": "string",
                        "description": "Specify the preheader line of the template.",
                        "example": "Recommendations just for you. Get it now!"
                      },
                      "content": {
                        "type": "string",
                        "example": "\u003C!DOCTYPE html\u003E\n\u003Chtml\u003E\n\u003Cbody\u003E\nHello\n\u003C/body\u003E\u003C/html\u003E",
                        "description": "Specify the body of the template with its HTML content. \nEnsure that you format your subject and content as a quoted string literal. \n- **Incorrect**: `\u003Ca href=\"https://www.getblueshift.com\"\u003E`\n- **Correct**: `\u003Ca href=\\\"https://www.getblueshift.com\\\"\u003E` \nFailure to properly escape your content results in a malformed JSON, and a malformed JSON leads to an error or mangled mangled content. You can use this [online tool](https://www.freeformatter.com/json-escape.html) to see an example of how it should look.\n"
                      }
                    }
                  },
                  "skip_user_on_external_fetch_error": {
                    "type": "boolean",
                    "default": true,
                    "description": "Message is not sent to user if the external fetch encounters an error or does not return any data)",
                    "example": true
                  },
                  "template_properties": {
                    "type": "array",
                    "maxItems": 1,
                    "description": "Specify the campaign behavior properties for the template.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "skip_user_on_blank_products": {
                          "type": "boolean",
                          "default": true,
                          "example": true
                        },
                        "skip_user_on_blank_event_products": {
                          "type": "boolean",
                          "default": true,
                          "example": true
                        },
                        "account_algorithm_uuid": {
                          "type": "string",
                          "nullable": true,
                          "description": "Specify the recommendation scheme for the template. If you leave this field blank, no change will be done to any recommendation schemes that were previously added to the template. If you send null as a value, any recommendation schemes that were previously added to the template will be removed.",
                          "example": "4879b1a3-ee24-3e13-a63c-da83674c0ca2"
                        }
                      }
                    }
                  },
                  "external_fetches": {
                    "type": "array",
                    "description": "Specify the external fetches for the template. If you leave this field blank, any external fetches that were previously added to the template will be removed.",
                    "example": [
                      {
                        "uuid": "e789705f-3eb3-4e2a-a666-648dedae6g86"
                      },
                      {
                        "uuid": "af9bbbd3-7133-4ab4-80a2-938b67c12d34"
                      }
                    ],
                    "items": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "transaction_mixins": {
                    "type": "array",
                    "description": "Specify the transaction mixins for the template. If you leave this field blank, any transaction mixins that were previously added to the template will be removed. If you add multiple transaction mixins, the resultant transactions are the OR result of all the queries related to the transactions mixins.",
                    "example": [
                      {
                        "uuid": "transaction_mixin1_uuid"
                      },
                      {
                        "uuid": "transaction_mixin2_uuid"
                      }
                    ],
                    "items": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "Takes the UUID and details of template to update it."
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/email_templates/test_send.json": {
      "post": {
        "summary": "Send a test mail",
        "description": "Use this endpoint to send a test mail to a specific email address.",
        "tags": [
          "Email template"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "personalize_for"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Specify the UUID of the template. The template uuids can be found by [querying the index](https://developer.blueshift.com/reference/email-template#get_api-v1-email-templates-json), or from the URL when you view a template in the Blueshift app. For example, in `https://app.getblueshift.com/dashboard#/email_template_studio/\u003CTEMPLATE_UUID\u003E/edit/info`, the `\u003CTEMPLATE_UUID\u003E` is the uuid you need.",
                    "example": "9da0744e-***-**-85d7-***4ac745b"
                  },
                  "personalize_for": {
                    "type": "string",
                    "description": "Specify the email address of the user whose personalization context we should use to send the test email.",
                    "example": "testuser@getblueshift.com"
                  },
                  "recipients": {
                    "type": "array",
                    "description": "Specify email addresses of the recipients",
                    "example": [
                      "email1",
                      "email2",
                      "email3",
                      "..."
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "from_name": {
                    "type": "string",
                    "description": "Specify the name that we should use in the `from` field of the email.\n \u003E **📘** This is only applicable for the email channel.\n",
                    "example": "Blueshift Support"
                  },
                  "from_address": {
                    "type": "string",
                    "description": "Specify the email address that we should use as the sender's email address. For example, `support@blueshift.com`.\n \u003E **📘** This is only applicable for the email channel. \nYou can take a look at documentation on [SendGrid](https://help.blueshift.com/hc/en-us/articles/360046787053-SendGrid-Email#h_6da2d422-23a0-4504-b0ce-000b203201fd) for reference. If you use a different adapter, you can review its documentation too.\n",
                    "example": "support@blueshift.com"
                  },
                  "reply_to_address": {
                    "type": "string",
                    "description": "Specify the email address to which your customers can reply to, if they want to reply to an email that our platform sends.\n \u003E **📘** This is only applicable for the email channel. \nYou can take a look at documentation on [SendGrid](https://help.blueshift.com/hc/en-us/articles/360046787053-SendGrid-Email#h_6da2d422-23a0-4504-b0ce-000b203201fd) for reference. If you use a different adapter, you can review its documentation too.\n",
                    "example": "support@blueshift.com"
                  }
                }
              }
            }
          },
          "description": "Sends a test mail to a specific email address, using the personalization context for a given user. The following request will send a test mail to me@example.com"
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sync_render": {
      "post": {
        "summary": "Render email template",
        "description": "Use this endpoint to render an email template that you create using our email template editor.",
        "tags": [
          "Email template"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "required": [
                  "template_uuid",
                  "transaction_uuid"
                ],
                "properties": {
                  "template_uuid": {
                    "type": "string",
                    "description": "Specify the UUID of the template. The template uuids can be found by [querying the index](https://developer.blueshift.com/reference/email-template#get_api-v1-email-templates-json), or from the URL when you view a template in the Blueshift app. For example, in `https://app.getblueshift.com/dashboard#/email_template_studio/\u003CTEMPLATE_UUID\u003E/edit/info`, the `\u003CTEMPLATE_UUID\u003E` is the uuid you need.",
                    "example": "8fd4eca2-ca0f-11ed-afa1-0242ac230007"
                  },
                  "transaction_uuid": {
                    "type": "string",
                    "description": "A UUID that you generate. Ensure that it's for each API call. It is used to identify a specific request and used to debug any issues with the API.",
                    "example": "a0d1a0f3-6596-4e1c-b487-3639e05b6d2f"
                  }
                }
              }
            }
          },
          "description": "Renders the email template created using the Blueshift app so that a customer can use it outside of Blueshift."
        },
        "responses": {
          "200": {
            "description": "Success - The template was successfully rendered.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "transaction_uuid": {
                      "type": "string",
                      "example": "a0d1a0f3-6596-4e1c-b487-3639e05b6d2f"
                    },
                    "template_uuid": {
                      "type": "string",
                      "example": "9da0744e-141d-4c9d-85d7-c89a54ac745b"
                    },
                    "html_content": {
                      "type": "string"
                    },
                    "text_content": {
                      "type": "string"
                    },
                    "subject": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - The request body was invalid. This means you are missing or have an error with the transaction_uuid or template_uuid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "original_request": {
                      "type": "object",
                      "properties": {
                        "transaction_uuid": {
                          "type": "string",
                          "example": "a0d1a0f3-6596-4e1c-b487-3639e05b6d2f"
                        },
                        "template_uuid": {
                          "type": "string",
                          "example": "9da0744e-141d-4c9d-85d7-c89a54ac745b"
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "error_message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The User API key was incorrect or this feature is not enabled for your account."
          },
          "403": {
            "description": "Forbidden - The User API key was incorrect or this feature is not enabled for your account."
          },
          "404": {
            "description": "Resource not found - The API endpoint was incorrect. Ensure that you are using the correct URL: https://api.getblueshift.com/api/v1/sync_render"
          },
          "422": {
            "description": "Cannot process the entity - The request body was valid but the template failed to render. See below on how to handle these errors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "original_request": {
                      "type": "object",
                      "properties": {
                        "transaction_uuid": {
                          "type": "string",
                          "example": "a0d1a0f3-6596-4e1c-b487-3639e05b6d2f"
                        },
                        "template_uuid": {
                          "type": "string",
                          "example": "9da0744e-141d-4c9d-85d7-c89a54ac745b"
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "error_code": {
                      "type": "integer",
                      "description": "A number that points to an issue. Look at the description of the endpoint to learn more about it."
                    },
                    "error_message": {
                      "type": "string"
                    },
                    "retry": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded - Too many requests. Contact Blueshft for more information on recommended number of API calls/throughputs."
          },
          "500": {
            "description": "Internal server error - An unforseen error occured. Contact Blueshift for more information."
          },
          "502": {
            "description": "Bad gateway - Error establishing connection, retry with exponential back-off."
          },
          "503": {
            "description": "Service unavailable - Service is temporarily unavailable, retry with exponential back-off."
          },
          "504": {
            "description": "Gateway timeout - The connection timed out, retry with exponential back-off."
          }
        }
      }
    },
    "/api/v1/push_templates.json": {
      "get": {
        "summary": "List push templates",
        "description": "Use this endpoint to get the list of push templates.",
        "tags": [
          "Push template"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "description": "Search for push templates that contain the specified string in the name of the template.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "archived",
            "description": "Search for templates with specified archived status. Value can be `0` to get a list of un-archived templates or `1` to get a list of archived templates. Leave blank to get a list of all templates.",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "description": "Specify the number of records to be returned per page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "Specify the page number for the search results.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-10-03T04:57:24.000Z"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "uuid": {
                            "type": "string"
                          },
                          "author": {
                            "type": "string"
                          },
                          "resource": {
                            "type": "object",
                            "properties": {
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a template",
        "description": "Use this endpoint to create a push template.",
        "tags": [
          "Push template"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "push_template",
                  "template_property"
                ],
                "properties": {
                  "push_template": {
                    "type": "object",
                    "required": [
                      "name",
                      "content",
                      "skip_user_on_external_fetch_error"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Specify the name of the template. For example, `My API created template`.",
                        "example": "Summer Rush"
                      },
                      "author": {
                        "type": "string",
                        "example": "john.doe@blueshift.com",
                        "description": "Specify the email address of the author of the template."
                      },
                      "message_type": {
                        "type": "string",
                        "description": "Only `json` message type is supported.",
                        "enum": [
                          "json"
                        ],
                        "example": "json",
                        "default": "json"
                      },
                      "device_type": {
                        "type": "string",
                        "description": "Specify the type of device you want to target. For example, `both`, `apple`, or `android`. By default, it's set to both.",
                        "enum": [
                          "apple",
                          "android",
                          "both"
                        ],
                        "example": "apple",
                        "default": "both"
                      },
                      "content": {
                        "type": "string",
                        "description": "Specify the `JSON` payload of the notification that is pushed to a user. For example, specify `\"{\\\"GCM\\\":{\\\"notification\\\":{\\\"title\\\":\\\"Notification Content\\\"}},\\\"APNS\\\":{\\\"aps\\\":{\\\"alert\\\":\\\"Hello world, now we're cookin!\\\"}}}\"`. Leave the GCM payload empty if you want the push notification to be iOS only. Similarly, leave the APNs payload empty if you want the push notification to be Android only.",
                        "example": "\u003C!DOCTYPE html\u003E\n\u003Chtml\u003E\n\u003Cbody\u003E\nHellooo\n\u003C/body\u003E\u003C/html\u003E"
                      },
                      "tag_data": {
                        "type": "string",
                        "description": "Specify a folder and then tags under the folder in the format `folder_name: tag1, tag2, tag3`. For example, `Regions:USA,China,Brazil,Hong Kong,India,Sweden,Canada`.\n\n  \u003E **📘**  Tag data should exist in your account.\n",
                        "example": "Regions:USA,China,Brazil,Hong Kong,India,Sweden,Canada"
                      },
                      "skip_user_on_external_fetch_error": {
                        "type": "boolean",
                        "default": true,
                        "description": "Message is not sent to user if the external fetch encounters an error or does not return any data)",
                        "example": true
                      }
                    }
                  },
                  "template_property": {
                    "type": "object",
                    "description": "Specify the campaign behavior properties for the template.",
                    "required": [
                      "skip_user_on_blank_products",
                      "skip_user_on_blank_event_products"
                    ],
                    "properties": {
                      "skip_user_on_blank_products": {
                        "type": "boolean",
                        "default": true
                      },
                      "skip_user_on_blank_event_products": {
                        "type": "boolean",
                        "default": true
                      },
                      "account_algorithm_uuid": {
                        "type": "string",
                        "nullable": true,
                        "description": "Specify the recommendation scheme for the template. If you leave this field blank, no change will be done to any recommendation schemes that were previously added to the template. If you send null as a value, any recommendation schemes that were previously added to the template will be removed."
                      }
                    }
                  },
                  "external_fetches": {
                    "type": "array",
                    "description": "Specify the external fetches for the template.",
                    "example": [
                      {
                        "uuid": "e789705f-3eb3-4e2a-a666-648dedae6g86"
                      },
                      {
                        "uuid": "af9bbbd3-7133-4ab4-80a2-938b67c12d34"
                      }
                    ],
                    "items": {
                      "type": "object",
                      "required": [
                        "uuid"
                      ],
                      "properties": {
                        "uuid": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "transaction_mixins": {
                    "type": "array",
                    "description": "Specify the transaction mixins for the template.",
                    "example": [
                      {
                        "uuid": "transaction_mixin1_uuid"
                      },
                      {
                        "uuid": "transaction_mixin2_uuid"
                      }
                    ],
                    "items": {
                      "type": "object",
                      "required": [
                        "uuid"
                      ],
                      "properties": {
                        "uuid": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "Specify the details of the push template."
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/push_templates/test_push.json": {
      "post": {
        "summary": "Push a test message",
        "description": "Use this endpoint to push a test message to users.",
        "tags": [
          "Push template"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "uuid",
                  "personalize_for"
                ],
                "properties": {
                  "uuid": {
                    "type": "string",
                    "description": "Specify the UUID of the template. You can the UUID from the URL of the template. For example, if you open the template in the Blueshift app, its URL looks like `https://app.getblueshift.com/dashboard#/app/push_template/studio/\u003CTEMPLATE_UUID\u003E/edit/info`.",
                    "example": "9da0744e-141d-4c9d-85d7-c89a54ac745b"
                  },
                  "personalize_for": {
                    "type": "string",
                    "description": "The email address of the user profile for whom you want to personalize the test push message.",
                    "example": "janedoe@acme.com"
                  },
                  "email": {
                    "type": "string",
                    "description": "Specify the email address of the user to whom you want to push the test message.",
                    "example": "test@blueshift.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/push_templates/{template_uuid}": {
      "put": {
        "summary": "Update a template",
        "description": "Use this endpoint to update a push template.",
        "tags": [
          "Push template"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "template_uuid",
            "description": "Specify the UUID of the template that you want to update. You can get the template UUID from the URL when you view a template in the Blueshift app. For example, in `https://app.getblueshift.com/dashboard#/app/push_template/studio/\u003CTEMPLATE_UUID\u003E/edit/info`, the \u003CTEMPLATE_UUID\u003E is the uuid that you need.",
            "example": "9da0744e-141d-4c9d-85d7-c89a54ac745b",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "push_template": {
                    "type": "object",
                    "properties": {
                      "message_type": {
                        "type": "string",
                        "description": "Only `json` message type is supported.",
                        "enum": [
                          "json"
                        ],
                        "default": "json"
                      },
                      "device_type": {
                        "type": "string",
                        "description": "Specify the type of device you want to target.",
                        "enum": [
                          "apple",
                          "android",
                          "both"
                        ]
                      },
                      "content": {
                        "type": "string",
                        "description": "Specify the `JSON` payload of the notification that is pushed to a user. For example, specify `\"{\\\"GCM\\\":{\\\"notification\\\":{\\\"title\\\":\\\"Notification Content\\\"}},\\\"APNS\\\":{\\\"aps\\\":{\\\"alert\\\":\\\"Hello world, now we're cookin!\\\"}}}\"`. Leave the GCM payload empty if you want the push notification to be iOS only. Similarly, leave the APNs payload empty if you want the push notification to be Android only."
                      },
                      "tag_data": {
                        "type": "string",
                        "description": "Specify a folder and then tags under the folder in the format `folder_name: tag1, tag2, tag3`. **📘**  Tag data should exist in your account.",
                        "example": "Regions:USA,China,Brazil,Hong Kong,India,Sweden,Canada"
                      },
                      "skip_user_on_external_fetch_error": {
                        "type": "boolean",
                        "default": true,
                        "description": "Message is not sent to user if the external fetch encounters an error or does not return any data)",
                        "example": true
                      }
                    }
                  },
                  "template_property": {
                    "type": "object",
                    "description": "Specify the campaign behavior properties for the template.",
                    "properties": {
                      "skip_user_on_blank_products": {
                        "type": "boolean",
                        "default": true,
                        "example": true
                      },
                      "skip_user_on_blank_event_products": {
                        "type": "boolean",
                        "default": true,
                        "example": true
                      },
                      "account_algorithm_uuid": {
                        "type": "string",
                        "nullable": true,
                        "description": "Specify the recommendation scheme for the template. If you leave this field blank, no change will be done to any recommendation schemes that were previously added to the template. If you send null as a value, any recommendation schemes that were previously added to the template will be removed.",
                        "example": "3879b1a3-ee84-5e13-b63c-ad83674c0ba1"
                      }
                    }
                  },
                  "external_fetches": {
                    "type": "array",
                    "description": "Specify the external fetches for the template. If you leave this field blank, any external fetches that were previously added to the template will be removed.",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "\u003CUuid_1\u003E",
                      "\u003CUuid_2\u003E",
                      "..."
                    ]
                  },
                  "transaction_mixins": {
                    "type": "array",
                    "description": "Specify the transaction mixins for the template. If you leave this field blank, any transaction mixins that were previously added to the template will be removed.",
                    "example": [
                      {
                        "uuid": "e789705f-3eb3-4e2a-a666-648dedae6g86"
                      },
                      {
                        "uuid": "af9bbbd3-7133-4ab4-80a2-938b67c12d34"
                      }
                    ],
                    "items": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "Update a push template."
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sms_templates.json": {
      "get": {
        "tags": [
          "SMS template"
        ],
        "summary": "List SMS templates",
        "description": "Use this endpoint to list all SMS templates. The SMS template has the content that the Blueshift platform uses to create and send text messages to your customers.",
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "name": "resource.message_type",
            "description": "Search for SMS templates by the message type - sms or mms.",
            "example": "sms",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "sms",
                "mms"
              ]
            }
          },
          {
            "name": "name",
            "description": "Search for SMS templates that contain the specified string in the name of the template.",
            "example": "Template SMS test",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "archived",
            "description": "Search for templates with specified archived status. Value can be `0` to get a list of un-archived templates or `1` to get a list of archived templates. Leave blank to get a list of all templates.",
            "example": "1",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "description": "Specify the number of records to be returned per page",
            "example": "5",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "Specify the page number for the search results.",
            "example": "2",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                "type":"object",
                "properties":{
                "results":{
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Properties of the SMS template.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the template",
                        "example": "Template SMS test"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time of the template's creation.",
                        "example": "2024-10-03T04:57:24.000Z"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time when the template got updated."
                      },
                      "uuid": {
                        "type": "string",
                        "description": "The universally unique identifier of the template.",
                        "example": "bb8e4fd8-12cf-3409-899b-7d2b4ecfc93b"
                      },
                      "archived": {
                        "type": "boolean",
                        "description": "Describes whether the template is archived or not.",
                        "example": true
                      },
                      "is_destroy": {
                        "type": "boolean",
                        "description": "Describes whether you can delete the template or not.",
                        "example": false
                      },
                      "author": {
                        "type": "string",
                        "description": "The name of the author of the template.",
                        "example": "Jane Doe"
                      }
                    }
                  }
                }
                }
                }
              }
            }
          },
          "400": {
            "description": "The request was invalid or cannot be otherwise served. An accompanying error message will explain further."
          },
          "404": {
            "description": "Resource not found. This can happen due to resource conflicts. Retry with exponential backoff. If the issue persists, contact Blueshift."
          },
          "409": {
            "description": "Conflict error, please retry. The request could not be completed due to a conflict with the current state of the target resource. Re-try with exponential backoff."
          },
          "429": {
            "description": "Rate limit exceeded. Too many requests. Contact us on support@blueshift.com for recommended throughput."
          },
          "500": {
            "description": "Internal server error. Contact Blueshift for more information."
          },
          "502": {
            "description": "Service unavailable, please retry. Bad gateway. Retry with exponential backoff."
          },
          "503": {
            "description": "Service unavailable, please retry. Service unavailable. Retry with exponential backoff."
          },
          "504": {
            "description": "Service unavailable, please retry. Gateway timeout. Retry with exponential backoff."
          }
        }
      },
      "post": {
        "tags": [
          "SMS template"
        ],
        "summary": "Create a template",
        "description": "Use this endpoint to create an SMS template.",
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "template",
                  "template_property"
                ],
                "properties": {
                  "template": {
                    "type": "object",
                    "description": "Specify the properties of the template.",
                    "required": [
                      "name",
                      "resource",
                      "skip_user_on_external_fetch_error"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Specify the name of the template.",
                        "example": "John's SMS template"
                      },
                      "author": {
                        "type": "string",
                        "example": "john.doe@blueshift.com",
                        "description": "Specify the email address of the author of the template. For example, `johndoe@blueshift.com`."
                      },
                      "resource": {
                        "type": "object",
                        "description": "Specify the content of the template. For a message of type MMS, the media URL is a required field.",
                        "properties": {
                          "message_type": {
                            "type": "string",
                            "description": "Specify the type of the template. The type can be `sms` or `mms`.",
                            "example": "sms",
                            "enum": [
                              "sms",
                              "mms"
                            ],
                            "default": "sms"
                          },
                          "subject": {
                            "type": "string",
                            "description": "Specify the subject for an MMS template.",
                            "example": "Hey, {{user.firstname}}!"
                          },
                          "content": {
                            "type": "string",
                            "description": "Specify the content of the template. This content is used in the text message that a campaign triggers. This field is required for SMS messages.",
                            "example": "\u003C!DOCTYPE html\u003E\n\u003Chtml\u003E\n\u003Cbody\u003E\nHellooo\n\u003C/body\u003E\u003C/html\u003E"
                          },
                          "media_url": {
                            "type": "string",
                            "description": "Specify the URL for the media for an MMS message. This field is required for MMS messages.",
                            "example": "https://cdn.getblueshift.com/pictures/114354/content/sample-pic.jpeg"
                          },
                          "shorten_links": {
                            "type": "boolean",
                            "description": "Specify whether we should shorten URLs in a text message. We can track link clicks if you set this value to `true`.",
                            "example": true,
                            "default": true
                          }
                        }
                      },
                      "tag_data": {
                        "type": "string",
                        "description": "Specify a folder and then tags under the folder in the format `folder_name: tag1, tag2, tag3`. For example, `Regions:USA,China,Brazil,Hong Kong,India,Sweden,Canada`.\n\n  \u003E **📘**  Tag data should exist in your account.\n",
                        "example": "Regions:USA,China,Brazil,Hong Kong,India,Sweden,Canada"
                      },
                      "skip_user_on_external_fetch_error": {
                        "type": "boolean",
                        "default": true,
                        "description": "Message is not sent to user if the external fetch encounters an error or does not return any data)",
                        "example": true
                      }
                    }
                  },
                  "template_property": {
                    "type": "object",
                    "description": "Specify the campaign behavior properties for the template.",
                    "required": [
                      "skip_user_on_blank_products",
                      "skip_user_on_blank_event_products"
                    ],
                    "properties": {
                      "skip_user_on_blank_products": {
                        "type": "boolean",
                        "default": true
                      },
                      "skip_user_on_blank_event_products": {
                        "type": "boolean",
                        "default": true
                      },
                      "account_algorithm_uuid": {
                        "type": "string",
                        "nullable": true,
                        "description": "Specify the recommendation scheme for the template. If you leave this field blank, no change will be done to any recommendation schemes that were previously added to the template. If you send null as a value, any recommendation schemes that were previously added to the template will be removed.",
                        "example": "2879b1a3-ee84-4e13-b63c-ad83674c0ca1"
                      }
                    }
                  },
                  "external_fetches": {
                    "type": "array",
                    "description": "Specify the external fetches for the template.",
                    "example": [
                      {
                        "uuid": "e789705f-3eb3-4e2a-a666-648dedae6g86"
                      },
                      {
                        "uuid": "af9bbbd3-7133-4ab4-80a2-938b67c12d34"
                      }
                    ],
                    "items": {
                      "type": "object",
                      "required": [
                        "uuid"
                      ],
                      "properties": {
                        "uuid": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "transaction_mixins": {
                    "type": "array",
                    "description": "Specify the transaction mixins for the template.",
                    "example": [
                      {
                        "uuid": "transaction_mixin1_uuid"
                      },
                      {
                        "uuid": "transaction_mixin2_uuid"
                      }
                    ],
                    "items": {
                      "type": "object",
                      "required": [
                        "uuid"
                      ],
                      "properties": {
                        "uuid": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "Takes the template and its details and returns a JSON that provides the UUID of the template."
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the template",
                      "example": "John's SMS template"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of the template's creation.",
                      "example": "2024-05-05T20:41:21.000Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the template got updated.",
                      "example": "2024-05-11T22:04:38.000Z"
                    },
                    "uuid": {
                      "type": "string",
                      "description": "The universally unique identifier of the template.",
                      "example": "67b6ad85-461c-403f-b779-64eb4e7d401c"
                    },
                    "archived": {
                      "type": "boolean",
                      "description": "Describes whether the template is archived or not.",
                      "example": false
                    },
                    "is_destroy": {
                      "type": "boolean",
                      "description": "Describes whether you can delete the template or not."
                    },
                    "author": {
                      "type": "string",
                      "description": "The name of the author of the template."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request was invalid or cannot be otherwise served. An accompanying error message will explain further."
          },
          "404": {
            "description": "Resource not found. This can happen due to resource conflicts. Retry with exponential backoff. If the issue persists, contact Blueshift."
          },
          "409": {
            "description": "Conflict error, please retry. The request could not be completed due to a conflict with the current state of the target resource. Re-try with exponential backoff."
          },
          "429": {
            "description": "Rate limit exceeded. Too many requests. Contact us on support@blueshift.com for recommended throughput."
          },
          "500": {
            "description": "Internal server error. Contact Blueshift for more information."
          },
          "502": {
            "description": "Service unavailable, please retry. Bad gateway. Retry with exponential backoff."
          },
          "503": {
            "description": "Service unavailable, please retry. Service unavailable. Retry with exponential backoff."
          },
          "504": {
            "description": "Service unavailable, please retry. Gateway timeout. Retry with exponential backoff."
          }
        }
      }
    },
    "/api/v1/sms_templates/{template_uuid}": {
      "put": {
        "tags": [
          "SMS template"
        ],
        "summary": "Update a template",
        "description": "Use this endpoint to update an existing SMS template.",
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "name": "template_uuid",
            "description": "Specify the UUID of the template that you want to update. You can copy the UUID from the URL of the template on the Blueshift app. For example, if you open a template in the Blueshift app, its URL looks like `https://app.getblueshift.com/dashboard#/app/sms_template/\u003Ctemplate_uuid\u003E/edit`.",
            "example": "9da0744e-141d-4c9d-85d7-c89a54ac745b",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "template"
                ],
                "properties": {
                  "template": {
                    "type": "object",
                    "description": "Specify the properties of the template.",
                    "required": [
                      "resource"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Specify a new name for the template. For example, `John's SMS template`.",
                        "example": "Summer Rush"
                      },
                      "resource": {
                        "type": "object",
                        "description": "Specify new content for the template. For a message of type MMS, the media URL is a required field.",
                        "properties": {
                          "subject": {
                            "type": "string",
                            "description": "Specify the subject for an MMS template.",
                            "example": "Hey, {{user.firstname}}!"
                          },
                          "content": {
                            "type": "string",
                            "description": "Specify the content of the template. This content is used in the text message that a campaign triggers. This field is required for SMS messages."
                          },
                          "media_url": {
                            "type": "string",
                            "description": "Specify the URL for the media for an MMS template. This field is required for MMS messages."
                          },
                          "shorten_links": {
                            "type": "boolean",
                            "description": "Specify whether we should shorten URLs in a text message. We can track link clicks if you set this value to `true`.",
                            "example": true,
                            "default": true
                          }
                        }
                      },
                      "tag_data": {
                        "type": "string",
                        "description": "Specify a folder and then tags under the folder in the format `folder_name: tag1, tag2, tag3`. For example, `Regions:USA,China,Brazil,Hong Kong,India,Sweden,Canada`. **📘**  Tag data should exist in your account.",
                        "example": "Regions:USA,China,Brazil,Hong Kong,India,Sweden,Canada"
                      },
                      "skip_user_on_external_fetch_error": {
                        "type": "boolean",
                        "default": true,
                        "description": "Message is not sent to user if the external fetch encounters an error or does not return any data)",
                        "example": true
                      }
                    }
                  },
                  "template_property": {
                    "type": "object",
                    "description": "Specify the campaign behavior properties for the template.",
                    "properties": {
                      "skip_user_on_blank_products": {
                        "type": "boolean",
                        "default": true
                      },
                      "skip_user_on_blank_event_products": {
                        "type": "boolean",
                        "default": true
                      },
                      "account_algorithm_uuid": {
                        "type": "string",
                        "nullable": true,
                        "description": "Specify the recommendation scheme for the template. If you leave this field blank, no change will be done to any recommendation schemes that were previously added to the template. If you send null as a value, any recommendation schemes that were previously added to the template will be removed.",
                        "example": "2879b1a3-ee84-4e13-b63c-ad83674c0ca1"
                      }
                    }
                  },
                  "external_fetches": {
                    "type": "array",
                    "description": "Specify the external fetches for the template. If you leave this field blank, any external fetches that were previously added to the template will be removed.",
                    "example": [
                      {
                        "uuid": "e789705f-3eb3-4e2a-a666-648dedae6g86"
                      },
                      {
                        "uuid": "af9bbbd3-7133-4ab4-80a2-938b67c12d34"
                      }
                    ],
                    "items": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "transaction_mixins": {
                    "type": "array",
                    "description": "Specify the transaction mixins for the template. If you leave this field blank, any transaction mixins that were previously added to the template will be removed.",
                    "example": [
                      {
                        "uuid": "transaction_mixin1_uuid"
                      },
                      {
                        "uuid": "transaction_mixin2_uuid"
                      }
                    ],
                    "items": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "Specify the values of the properties that you want to update in the template."
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the template",
                      "example": "John's SMS template"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of the template's creation.",
                      "example": "2016-08-19T21:53:38.000Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the template got updated.",
                      "example": "2020-11-19T12:48:13.000Z"
                    },
                    "uuid": {
                      "type": "string",
                      "description": "The universally unique identifier of the template.",
                      "example": "41e574b2-72bd-4fad-bc5b-6b0aa0cc04f3"
                    },
                    "archived": {
                      "type": "boolean",
                      "description": "Describes whether the template is archived or not.",
                      "example": false
                    },
                    "author": {
                      "type": "string",
                      "description": "The name of the author of the template."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request was invalid or cannot be otherwise served. An accompanying error message will explain further."
          },
          "404": {
            "description": "Resource not found. This can happen due to resource conflicts. Retry with exponential backoff. If the issue persists, contact Blueshift."
          },
          "409": {
            "description": "Conflict error, please retry. The request could not be completed due to a conflict with the current state of the target resource. Re-try with exponential backoff."
          },
          "429": {
            "description": "Rate limit exceeded. Too many requests. Contact us on support@blueshift.com for recommended throughput."
          },
          "500": {
            "description": "Internal server error. Contact Blueshift for more information."
          },
          "502": {
            "description": "Service unavailable, please retry. Bad gateway. Retry with exponential backoff."
          },
          "503": {
            "description": "Service unavailable, please retry. Service unavailable. Retry with exponential backoff."
          },
          "504": {
            "description": "Service unavailable, please retry. Gateway timeout. Retry with exponential backoff."
          }
        }
      }
    },
    "/api/v1/sms_templates/test_send.json": {
      "post": {
        "tags": [
          "SMS template"
        ],
        "summary": "Send a test SMS",
        "description": "Use this endpoint to send a test message. You can use this endpoint to test an SMS template that you create in Blueshift.",
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "uuid",
                  "mobile",
                  "personalize_for"
                ],
                "properties": {
                  "uuid": {
                    "type": "string",
                    "description": "Specify the UUID of the template that you want to use to send a test SMS message.",
                    "example": "153e6eaa-cae2-45a3-a59c-f6bed9a38712"
                  },
                  "mobile": {
                    "type": "string",
                    "description": "Specify the mobile number of the individual who should receive the test SMS message with the country code. For example, if the phone number is `23456789` and the country code is `1`, specify the number as `167892453`.",
                    "example": "167892453"
                  },
                  "personalize_for": {
                    "type": "string",
                    "description": "Specify the email address of the customer whose information we should use to customize the SMS message. For example, if you want the message to contain the first name of a specific customer, specify that customer's email address.",
                    "example": "janedoe@acme.com"
                  }
                }
              }
            }
          },
          "description": "Specify the template that you want to choose and the phone number to which you want to send the message."
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/account_adapters": {
      "get": {
        "tags": [
          "Adapters"
        ],
        "summary": "List adapters",
        "description": "Use this endpoint to list all the adapters that you use in your Blueshift account.\u003Cbr\u003EAn adapter is an entity that provides integrations to other third party services such as Mailgun to send emails and Infobip to send SMSes. Your account can have multiple adapters for different channels.",
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "name": "channel_name",
            "description": "Specify the name of the channel whose adapters you want to see. Values that you can provide in this field are: `Email`, `SMS`, `Push Message`, `Webhook`, `InApp`, and `Segment Report`. This field is required.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "adapter_name",
            "description": "Specify the name of the adapter that you want to search. For example, `sendgrid` or `sparkpost`. This field is optional. ",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Specifies the date and time when the adapter was created.",
                      "example": "2016-08-19T21:53:38.000Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Specifies the date-time when the adapter was last modified.",
                      "example": "2020-05-22T18:05:25.000Z"
                    },
                    "uuid": {
                      "type": "string",
                      "description": "The unique identified of the adapter.",
                      "example": "48400530-21e4-4403-826c-d50cc97d18b7"
                    },
                    "is_active": {
                      "type": "boolean",
                      "description": "Describes if the adapter is actively in use.",
                      "example": false
                    },
                    "primary_name": {
                      "type": "string",
                      "description": "Specifies the Alias Name of the adapter that you enter when you create it.",
                      "example": "John's Sendgrid integration adapter"
                    },
                    "from_name": {
                      "type": "string",
                      "description": "Specifies the sender name that you enter when you create the adapter. The emails that are sent from Blueshift as a part of your camapaign use this name as the sender name.",
                      "example": "John Doe"
                    },
                    "from_address": {
                      "type": "string",
                      "description": "Specifies the sender email address that you enter when you create the adapter. The emails that are sent from Blueshift as a part of your campaign use this email address as the sender address.",
                      "example": "john.doe@blueshift.com"
                    },
                    "reply_to_address": {
                      "type": "string",
                      "description": "Specifies the reply to address that you enter when you create an adapter. When a customer replies to one of the emails that is sent from a campaign, the reply email is sent to this address.",
                      "example": "customer.replies@blueshift.com"
                    },
                    "cname_record": {
                      "type": "string",
                      "description": "Specifies the cname record that points to the domain that is used to send emails. Generally, you set this up in the email service provider as a sender domain.",
                      "example": "mails.domain.com"
                    },
                    "bypass_suppression_list": {
                      "type": "boolean",
                      "description": "Specifies whether emails should be sent to customers that are a part of the suppression list. Customers who are a part of a suppression list do not get emails from a campaign. Bypassing this list sends emails to those customers as well.",
                      "example": false
                    },
                    "name": {
                      "type": "string",
                      "description": "Specifies the provider of the channel. For example, if you use Sendgrid as the prodvider of the email channel, you see `Sendgrid` as the response.",
                      "example": "Sendgrid"
                    }
                  },
                  "example": [
                    {
                      "created_at": "2016-08-19T21:53:38.000Z",
                      "updated_at": "2020-05-22T18:05:25.000Z",
                      "uuid": "48400530-21e4-4403-826c-d50cc97d18b7",
                      "is_active": false,
                      "primary_name": null,
                      "from_name": null,
                      "from_address": null,
                      "reply_to_address": null,
                      "cname_record": null,
                      "bypass_suppression_list\"": false,
                      "name": "Blueshift"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "The request was invalid or cannot be otherwise served. An accompanying error message will explain further."
          },
          "404": {
            "description": "Resource not found. This can happen due to resource conflicts. Retry with exponential backoff. If the issue persists, contact Blueshift."
          },
          "409": {
            "description": "Conflict error, please retry. The request could not be completed due to a conflict with the current state of the target resource. Re-try with exponential backoff."
          },
          "413": {
            "description": "You can upload up to 50 users in an API call."
          },
          "429": {
            "description": "Rate limit exceeded. Too many requests. Contact us on support@blueshift.com for recommended throughput."
          },
          "500": {
            "description": "Internal server error. Contact Blueshift for more information."
          },
          "502": {
            "description": "Service unavailable, please retry. Bad gateway. Retry with exponential backoff."
          },
          "503": {
            "description": "Service unavailable, please retry. Service unavailable. Retry with exponential backoff."
          },
          "504": {
            "description": "Service unavailable, please retry. Gateway timeout. Retry with exponential backoff."
          }
        }
      }
    },
    "/api/v1/tag_contexts/list": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "List tags and tag folders",
        "description": "Use this endpoint to list all the tags and tag folders in your Blueshift account.",
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "name": "resource_type",
            "description": "Specify the specific resource whose tags you want to see. For example, you can specify `Segment` or `Campaign`. This field is optional.",
            "example": "Campaign",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resource_uuid",
            "description": "Specify the UUID of the resource whose tags you want to see. For example, `1234-abcd-2345-efgh`. You can get the resource's UUID from its URL. For example, if you open a campaign in the Blueshift app, its URL looks like `https://app.getblueshift.com/dashboard#/app/campaigns/\u003CCAMPAIGN_UUID\u003E/details`. This field is optional.",
            "example": "b0427c10-f580-47e5-9c3b-906b780c7595",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Specifies the tag folder's ID.",
                        "example": 180
                      },
                      "account_id": {
                        "type": "integer",
                        "description": "Specifies ID of the account under which the tag folder is created.",
                        "example": 182
                      },
                      "description": {
                        "type": "string",
                        "description": "Specifies the description of the tag's folder that you provide when you create the tag.",
                        "example": "New users push for the top categories"
                      },
                      "color": {
                        "type": "string",
                        "description": "Specifies the hex-code of the color that you choose for the tag.",
                        "example": "#76ef4f"
                      },
                      "allowed_tags": {
                        "type": "string",
                        "description": "Specifies the list of tags that you add in the folder.",
                        "example": "new member top categories push"
                      },
                      "tagged_items": {
                        "type": "array",
                        "description": "Lists the entities that have this tag. For example, email templates, shared assets, or segments.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "uuid": {
                              "type": "string",
                              "description": "The UUID of the enitity that has this tag.",
                              "example": "d0d3e2d0-983f-4fb0-8d14-70da314120cd"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the entitity that has this tag.",
                              "example": "Black Friday 2024"
                            },
                            "resource_type": {
                              "type": "string",
                              "description": "The type of the entity. For example, `Template:EmailTemplate`, `Campaign`, `SharedAsset`.",
                              "example": "Campaign"
                            },
                            "tags": {
                              "type": "string",
                              "description": "The list of tags attached to this entity.",
                              "example": "Black Friday 2024:Wishlist"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request was invalid or cannot be otherwise served. An accompanying error message will explain further."
          },
          "404": {
            "description": "Resource not found. This can happen due to resource conflicts. Retry with exponential backoff. If the issue persists, contact Blueshift."
          },
          "409": {
            "description": "Conflict error, please retry. The request could not be completed due to a conflict with the current state of the target resource. Re-try with exponential backoff."
          },
          "413": {
            "description": "You can upload up to 50 users in an API call."
          },
          "429": {
            "description": "Rate limit exceeded. Too many requests. Contact us on support@blueshift.com for recommended throughput."
          },
          "500": {
            "description": "Internal server error. Contact Blueshift for more information."
          },
          "502": {
            "description": "Service unavailable, please retry. Bad gateway. Retry with exponential backoff."
          },
          "503": {
            "description": "Service unavailable, please retry. Service unavailable. Retry with exponential backoff."
          },
          "504": {
            "description": "Service unavailable, please retry. Gateway timeout. Retry with exponential backoff."
          }
        }
      }
    },
    "/api/v1/customer_search/show_events": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Get customer events",
        "description": "Use this endpoint to fetch the details of the events for a customer using the customer's UUID.",
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "uuid",
            "description": "Specify the uuid of the customer whose event details you want to fetch.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_bsft_doc_type": {
                        "type": "string",
                        "description": "The type of object.",
                        "example": "events"
                      },
                      "_bsft_ts": {
                        "type": "string",
                        "description": "The timestamp in ISO 8601 format when the object was created.",
                        "example": "2021-08-25T06:06:59.415Z"
                      },
                      "_bsft_type": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The type of entity within Blueshift. Event in this case.",
                            "example": "events"
                          },
                          "parent": {
                            "type": "integer",
                            "description": "The UUID of the customer who generated this event.",
                            "example": "51aceb79-2cbc-4e2b-a132-b02de69bba15"
                          }
                        }
                      },
                      "_exp": {
                        "type": "string",
                        "example": 1627204743378
                      },
                      "account_uuid": {
                        "type": "string",
                        "description": "The ID of the account under which the user is created.",
                        "example": "4b5b584f-fee7-44f3-ae3a-8ba90aa7d2d5"
                      },
                      "browser_platform": {
                        "type": "string",
                        "description": "The platform the used when the event occured.",
                        "example": "Windows"
                      },
                      "browser_type": {
                        "type": "string",
                        "description": "The broswer used when the event occured.",
                        "example": "Firefox"
                      },
                      "browser_version": {
                        "type": "string",
                        "description": "The version of the broswer used.",
                        "example": "126.0"
                      },
                      "cookie": {
                        "type": "string",
                        "description": "The Blueshift cookie created during the browser session.",
                        "example": "b854bae6-6dc8-c80c-6133-c45d0ba0fdc4"
                      },
                      "email": {
                        "type": "string",
                        "description": "The user's email address."
                      },
                      "event": {
                        "type": "string",
                        "description": "The name of the event. For example, identify, view (product view), add_to_cart, remove_from_cart, checkout, purchase, search, your_custom_event_name (custom event) etc.",
                        "example": "identify"
                      },
                      "event_uuid": {
                        "type": "string",
                        "description": "The unique identifier for the event.",
                        "example": "3766f118-d4cd-11eb-a278-0242ac110006"
                      },
                      "ip": {
                        "type": "string",
                        "description": "The IP address of the device used.",
                        "example": "201.33.19.3"
                      },
                      "referrer": {
                        "type": "string",
                        "description": "The URL of the page that referred the customer to the specific page on which the event occured.",
                        "example": "http://site.com"
                      },
                      "santized_at": {
                        "type": "string",
                        "description": "The timestamp when our backend processed the event.",
                        "example": "2021-08-25T06:06:59.415Z"
                      },
                      "session_uuid": {
                        "type": "string",
                        "description": "The unique identifier for the user session.",
                        "example": null
                      },
                      "site": {
                        "type": "string",
                        "description": "The URL for the website accessed by the user.",
                        "example": "http://site.com"
                      },
                      "timestamp": {
                        "type": "string",
                        "description": "The timestamp in ISO 8601 format.",
                        "example": "2021-06-24T04:53:54Z\","
                      },
                      "timestamp_epoch": {
                        "type": "string",
                        "description": "The number of seconds since January 1, 1970 that have passed since the occurrence of the event.",
                        "example": 1624510434
                      },
                      "url": {
                        "type": "string",
                        "description": "The URL of the page that indicates where the event occured.",
                        "example": "http://site.com"
                      },
                      "user_agent": {
                        "type": "string",
                        "description": "The user-agent that indicates the data source of the API call.",
                        "example": "mozilla/5.0 (macintosh; intel mac os x 10_15_7) applewebkit/537.36 (khtml, like gecko) chrome/91.0.4472.77 safari/537.36"
                      },
                      "user_uuid": {
                        "type": "string",
                        "description": "The unique identifier for the customer whose events data is being searched.",
                        "example": "51aceb79-2cbc-4e2b-a132-b02de69bba15"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request was invalid or cannot be otherwise served. An accompanying error message will explain further."
          },
          "404": {
            "description": "Resource not found. This can happen due to resource conflicts. Retry with exponential backoff. If the issue persists, contact Blueshift."
          },
          "409": {
            "description": "Conflict error, please retry. The request could not be completed due to a conflict with the current state of the target resource. Re-try with exponential backoff."
          },
          "429": {
            "description": "Rate limit exceeded. Too many requests. Contact us on support@blueshift.com for recommended throughput."
          },
          "500": {
            "description": "Internal server error. Contact Blueshift for more information."
          },
          "502": {
            "description": "Service unavailable, please retry. Bad gateway. Retry with exponential backoff."
          },
          "503": {
            "description": "Service unavailable, please retry. Service unavailable. Retry with exponential backoff."
          },
          "504": {
            "description": "Service unavailable, please retry. Gateway timeout. Retry with exponential backoff."
          }
        }
      }
    },
    "/api/v1/interests/alert": {
      "post": {
        "tags": [
          "Interest Alerts"
        ],
        "summary": "Update or alert customers",
        "description": "Use this endpoint to send an update to or to alert customers about topics that they have subscribed to.",
        "security": [
          {
            "event_api_auth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "topic",
                  "author",
                  "metadata"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "Specify the name of the event for which the alert is being sent.",
                    "example": "interest_news_alert"
                  },
                  "topic": {
                    "type": "string",
                    "description": "Specify the topic that the alert is for.",
                    "example": "sports"
                  },
                  "author": {
                    "type": "string",
                    "description": "Specify the email address for the author of the alert.",
                    "example": "john.doe@blueshift.com"
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Specify the metadata attribute name and value for the topic.",
                    "example": "live_match_today"
                  }
                }
              }
            }
          },
          "description": "Update customers about a topic that they have subscribed to."
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "true or false",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request was invalid or cannot be otherwise served. An accompanying error message will explain further.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "topic": {
                            "type": "string",
                            "example": "can't be blank"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Some/all of the products have invalid data, please check the response for more information on."
          },
          "429": {
            "description": "Rate limit exceeded - Too many requests"
          },
          "500": {
            "description": "Internal Server Error\t- Please contact blueshift for more information"
          },
          "502": {
            "description": "Service unavailable, please retry - Bad Gateway, re-try with exponential backoff"
          },
          "503": {
            "description": "Service unavailable, please retry - Service Unavailable, re-try with exponential backoff"
          },
          "504": {
            "description": "Service unavailable, please retry - Gateway Timeout, please re-try with exponential backoff"
          }
        }
      }
    },
    "/api/v1/interests/user_subscriptions": {
      "get": {
        "tags": [
          "Interest Alerts"
        ],
        "summary": "Get customer subscriptions",
        "description": "Use this endpoint to get all the topics that a customer has subscribed to.",
        "security": [
          {
            "event_api_auth": []
          }
        ],
        "parameters": [
          {
            "name": "email",
            "description": "Specify the customer's email address. For example, abc@def.com. You must atleast specify this value, or one of the following fields: uuid, customer_id, phone_number, or device_id.",
            "example": "janedoe@acme.com",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "description": "The unique identifier for the customer.",
            "example": "e909605f-3eb3-4e2a-a666-648dedae5b89",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customer_id",
            "description": "Specify the customer ID.",
            "example": "812123",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phone_number",
            "description": "Specify the phone number of the customer. Ensure that it includes the country code, starts with a +, follows the E.164 standard, does not start with a 0, and contains 6 to 14 characters. For example, +14155553467.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "device_id",
            "description": "Specify the UUID of the device.",
            "example": "8abe3faa-d48d-4e4a-00ca-beae01f1c987",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "topics": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Politics"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request was invalid or cannot be otherwise served. An accompanying error message will explain further.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "topic": {
                            "type": "string",
                            "example": "can't be blank"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found. Ensure that you are using the correct API endpoint. This can happen due to resource conflicts. Retry with exponential backoff. If the issue persists, contact Blueshift."
          },
          "422": {
            "description": "Unprocessable Entity - Some/all of the products have invalid data, please check the response for more information on."
          },
          "429": {
            "description": "Rate limit exceeded - Too many requests"
          },
          "500": {
            "description": "Internal Server Error\t- Please contact blueshift for more information"
          },
          "502": {
            "description": "Service unavailable, please retry - Bad Gateway, re-try with exponential backoff"
          },
          "503": {
            "description": "Service unavailable, please retry - Service Unavailable, re-try with exponential backoff"
          },
          "504": {
            "description": "Service unavailable, please retry - Gateway Timeout, please re-try with exponential backoff"
          }
        }
      }
    },
    "/api/v1/external_fetches.json": {
      "get": {
        "summary": "List external fetch templates",
        "description": "Use this endpoint to get the list of external fetch templates.",
        "tags": [
          "External Fetch"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "name": "per_page",
            "description": "Specify the number of records to be returned per page",
            "example": 2,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "Specify the page number for the search results.",
            "example": 2,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2023-08-29T01:41:27.000Z"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2023-08-29T05:15:39.000Z"
                          },
                          "uuid": {
                            "type": "string",
                            "example": "f8220927-20b7-409c-b970-8c17a24e1010"
                          },
                          "author": {
                            "type": "string",
                            "example": "Jane Doe"
                          },
                          "resource": {
                            "type": "object",
                            "properties": {
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create an external fetch template",
        "description": "Use this endpoint to create an external fetch template.",
        "tags": [
          "External Fetch"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "alias_name",
                  "http_method",
                  "url"
                ],
                "properties": {
                  "alias_name": {
                    "type": "string",
                    "description": "Specify the name of the external fetch template. The alias_name can contain lowercase alphanumeric characters and underscores only.",
                    "example": "fetch_weekly_promotions"
                  },
                  "author": {
                    "type": "string",
                    "example": "john.doe@blueshift.com",
                    "description": "Specify the email address of the author of the template."
                  },
                  "http_method": {
                    "type": "string",
                    "description": "HTTP method to fetch the data. Set `GET` or `POST` as the method.",
                    "example": "GET",
                    "enum": [
                      "GET",
                      "POST"
                    ]
                  },
                  "auth_header": {
                    "type": "string",
                    "description": "Along with the `auth_token`, specifies the details for secure URLs.",
                    "example": "your_auth_header"
                  },
                  "auth_token": {
                    "type": "string",
                    "description": "Along with the `auth_header`, specifies the details for secure URLs.",
                    "example": "your_auth_token"
                  },
                  "url": {
                    "type": "string",
                    "description": "The external URL. The external fetch URL may include dynamic liquid variables such as user id, email address, product ids, and more.",
                    "example": "https://api.example.com/data"
                  },
                  "body": {
                    "type": "string",
                    "description": "Specify the `JSON` payload if the `http_method` is `POST`.",
                    "example": {
                      "user_id": 4981,
                      "email": "jane.doe@acme.com",
                      "first_name": "Jane",
                      "last_name": "Doe",
                      "preferences": {
                        "language": "en_US",
                        "newsletter_subscription": true
                      }
                    }
                  },
                  "test_context": {
                    "type": "string",
                    "description": "Specify the test context for the template.",
                    "example": "This is a test fetch to update user profile (user: 4981)"
                  }
                }
              }
            }
          },
          "description": "Specify the details of the external fetch template."
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/external_fetches/{template_uuid}": {
      "put": {
        "summary": "Update an external fetch template",
        "description": "Use this endpoint to update an external fetch template.",
        "tags": [
          "External Fetch"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "template_uuid",
            "description": "Specify the UUID of the template that you want to update. You can get the template UUID from the URL when you view a template in the Blueshift app. For example, in `https://app.getblueshift.com/dashboard#/app/external_fetches/\u003CTEMPLATE_UUID\u003E/edit`, the \u003CTEMPLATE_UUID\u003E is the uuid that you need.",
            "example": "8da0744e-141d-4c9d-85d7-c89a54ac745a",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "alias_name": {
                    "type": "string",
                    "description": "Specify the name of the external fetch template. The alias_name can contain lowercase alphanumeric characters and underscores only.",
                    "example": "fetch_weekly_promotions_jane_doe"
                  },
                  "author": {
                    "type": "string",
                    "description": "Specify the email address of the author of the template.",
                    "example": "john.doe@blueshift.com"
                  },
                  "http_method": {
                    "type": "string",
                    "description": "HTTP method to fetch the data. Set `GET` or `POST` as the method.",
                    "example": "GET",
                    "enum": [
                      "GET",
                      "POST"
                    ]
                  },
                  "auth_header": {
                    "type": "string",
                    "description": "Along with the `auth_token`, specifies the details for secure URLs.",
                    "example": "your_auth_header"
                  },
                  "auth_token": {
                    "type": "string",
                    "description": "Along with the `auth_header`, specifies the details for secure URLs.",
                    "example": "your_auth_token"
                  },
                  "url": {
                    "type": "string",
                    "description": "The external URL. The external fetch URL may include dynamic liquid variables such as user id, email address, product ids, and more.",
                    "example": "https://example.com/api/v2/additional_seat_link?license_key={(user_transaction.license_key)}"
                  },
                  "body": {
                    "type": "string",
                    "description": "Specify the `JSON` payload if the `http_method` is `POST`."
                  },
                  "test_context": {
                    "type": "string",
                    "description": "Specify the test context for the template.",
                    "example": {
                      "user_transaction": {
                        "license_key": "some_value"
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "Update an external fetch template."
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/onsite_slots.json": {
      "get": {
        "summary": "List live content slots",
        "description": "\u003Cp\u003EUse this endpoint to get the list of live content slots. To try this endpoint:\u003C/p\u003E  \u003Col\u003E\u003Cli\u003E\u003Cp\u003EGet the \u003Cstrong\u003EUser API Key\u003C/strong\u003E from the \u003Cstrong\u003EAPI Keys\u003C/strong\u003E tab of your Account Settings in the Blueshift app.\u003C/p\u003E\u003C/li\u003E \u003Cli\u003E\u003Cp\u003EPaste the API key in the \u003Cstrong\u003Eusername\u003C/strong\u003E field for \u003Cstrong\u003EAuthentication\u003C/strong\u003E. Leave the password field blank.\u003C/p\u003E\u003C/li\u003E \u003Cli\u003E\u003Cp\u003EClick the \u003Cstrong\u003EBase URL\u003C/strong\u003E dropdown and select the API endpoint URL for your Blueshift region. For \u003Cstrong\u003EEU region\u003C/strong\u003E select \u003Ci\u003Eapi.eu.getblueshift.com\u003C/i\u003E and for the \u003Cstrong\u003ERest of the world\u003C/strong\u003E select \u003Ci\u003Eapi.getblueshift.com\u003C/i\u003E.\u003C/li\u003E \u003Cli\u003E\u003Cp\u003ESpecify the values of the API call using the fields provided below. Ensure that you specify values for the required fields.\u003C/p\u003E\u003C/li\u003E \u003Cli\u003E\u003Cp\u003EClick \u003Cstrong\u003ETry It\u003C/strong\u003E.\u003C/p\u003E\u003C/li\u003E\u003C/ol\u003E",
        "tags": [
          "Live content"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "description": "Search for live content slot that contain the specified string in the name of the slot. Leave blank to get a list of all slots.",
            "example": "mobile_top_banner",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slot_format",
            "description": "Search for live content slots based on their format. This filter is case insensitive, and values can be HTML, JSON, Popup, or Landing Page. Leave blank to get a list of all slots.",
            "example": "JSON",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "active",
            "description": "Search for live content slots based on active filter. when 'active' is true, it returns slots linked to campaigns not in 'Completed' or 'Archived' states. when 'active' is false, it return slots those unused by campaigns or associated with campaigns in 'Completed' or 'Archived' states. Leave blank to get a list of all slots.",
            "example": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                   "type": "object",
                    "properties": {
                      "results": {
                  "type": "array",
                  "description": "The list of live content slots.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the live content slot.",
                        "example": "abandon_browse_html"
                      },
                      "format": {
                        "type": "string",
                        "description": "The format of the live content slot.",
                        "example": "HTML"
                      },
                      "uuid": {
                        "type": "string",
                        "description": "The UUID of the live content slot.",
                        "example": "81878e0675c5c-4baa-b876-f90b0cf62e02"
                      }
                    }
                  }
                  }
                }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/promotions/{promotion_uuid}/add_promocodes": {
      "put": {
        "summary": "Add promo codes to promotion",
        "description": "Use this endpoint to add promo codes to existing promotion.",
        "tags": [
          "Promotions"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "promotion_uuid",
            "required": true,
            "description": "Specify the UUID of the promotion to which you want to add promo codes.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "promocodes": {
                    "type": "array",
                    "description": "Array of promo codes to overwrite the current list.",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "promo_code_1",
                      "promo_code_2",
                      "promo_code_3"
                    ]
                  }
                },
                "required": [
                  "promocodes"
                ]
              }
            }
          },
          "description": "Specify the array of the promo codes that you want to add to the promotion."
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "available_codes": {
                      "type": "integer",
                      "description": "Available codes in promotion for consumption by the campaign.",
                      "example": 6
                    },
                    "total_codes": {
                      "type": "integer",
                      "description": "Total codes present in the promotion including available codes and used codes.",
                      "example": 10
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - The request was invalid or cannot be otherwise served. An accompanying error message will explain further."
          },
          "404": {
            "description": "Resource not found - Can happen due to resource conflicts. Re-try with exponential backoff. Contact us on support@blueshift.com if the issue persists."
          },
          "409": {
            "description": "Conflict error, please retry - The request could not be completed due to a conflict with the current state of the target resource, re-try with exponential backoff."
          },
          "500": {
            "description": "Internal Server Error\t- Please contact blueshift for more information."
          },
          "502": {
            "description": "Service unavailable, please retry - Bad Gateway, re-try with exponential backoff."
          },
          "503": {
            "description": "Service unavailable, please retry - Service Unavailable, re-try with exponential backoff."
          },
          "504": {
            "description": "Service unavailable, please retry - Gateway Timeout, please re-try with exponential backoff."
          }
        }
      }
    },
    "/api/v1/promotions/{promotion_uuid}/overwrite": {
      "put": {
        "summary": "Overwrite promo codes in promotion",
        "description": "Use this endpoint to replace all existing promo codes in a promotion with a new set of codes.",
        "tags": [
          "Promotions"
        ],
        "security": [
          {
            "user_api_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "promotion_uuid",
            "required": true,
            "description": "Specify the UUID of the promotion to which you want to add promo codes.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "promocodes": {
                    "type": "array",
                    "description": "List of promo codes to replace the current set. For testing, enter each promo code individually as a string below. For bulk updates, use the Postman collection to submit multiple promo codes as an array, e.g., `[\"SUMMER2023\", \"FALL2023\", \"WINTER2023\"]`.",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "SUMMER2023",
                      "FALL2023",
                      "WINTER2023"
                    ]
                  }
                },
                "required": [
                  "promocodes"
                ]
              }
            }
          },
          "description": "Specify the array of promo codes that will replace the existing codes in the promotion."
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "available_codes": {
                      "type": "integer",
                      "description": "Available codes in promotion for consumption by the campaign.",
                      "example": 6
                    },
                    "total_codes": {
                      "type": "integer",
                      "description": "Total codes present in the promotion including available codes and used codes.",
                      "example": 10
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - The request was invalid or cannot be otherwise served. An accompanying error message will explain further."
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key."
          },
          "404": {
            "description": "Resource not found - The specified promotion ID was not found."
          },
          "409": {
            "description": "Conflict error, please retry - The request could not be completed due to a conflict with the current state of the target resource, re-try with exponential backoff."
          },
          "500": {
            "description": "Internal Server Error - Please contact support for more information."
          },
          "502": {
            "description": "Bad Gateway - Please retry the request."
          },
          "503": {
            "description": "Service Unavailable - The service is temporarily unavailable. Try again later."
          },
          "504": {
            "description": "Gateway Timeout - The server took too long to respond. Retry with exponential backoff."
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://api.getblueshift.com"
    },
    {
      "url": "https://api.eu.getblueshift.com"
    }
  ],
  "components": {
    "securitySchemes": {
      "event_api_auth": {
        "type": "http",
        "scheme": "basic"
      },
      "user_api_auth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true,
    "samples-enabled": true
  }
}