{"openapi":"3.0.3","info":{"title":"The Confluence Cloud REST API v2","description":"This document describes Confluence's v2 APIs. This is intended to be an iteration on the existing Confluence Cloud REST API with improvements in both endpoint definitions and performance.","termsOfService":"https://developer.atlassian.com/platform/marketplace/atlassian-developer-terms/","version":"2.0.0"},"externalDocs":{"description":"The online and complete version of the Confluence Cloud REST API docs.","url":"https://developer.atlassian.com/cloud/confluence/rest/v2"},"servers":[{"url":"https://{your-domain}/wiki/api/v2","variables":{"your-domain":{"default":"no-default","description":"Specific domain of the Confluence site being used. Must be provided."}}}],"tags":[{"name":"Admin Key","description":"The [Admin Key feature](https://support.atlassian.com/confluence-cloud/docs/bypass-access-restrictions-on-a-page-with-admin-key/) is only offered with Confluence Cloud Premium and Enterprise to organization or site admins.\n\n**NOTE:** Users can only make calls to our public REST APIs using a valid Admin Key by adding the following HTTP header on their requests: `Atl-Confluence-With-Admin-Key: true`. Visit the [Confluence Cloud Changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-2480) for more details."},{"name":"Attachment","description":""},{"name":"Ancestors","description":""},{"name":"Blog Post","description":""},{"name":"Children","description":""},{"name":"Classification Level","description":""},{"name":"Comment","description":""},{"name":"Content","description":""},{"name":"Content Properties","description":""},{"name":"Custom Content","description":""},{"name":"Database","description":""},{"name":"Data Policies","description":""},{"name":"Descendants","description":""},{"name":"Folder","description":""},{"name":"Label","description":""},{"name":"Like","description":""},{"name":"Operation","description":""},{"name":"Page","description":""},{"name":"Smart Link","description":""},{"name":"Space","description":""},{"name":"Space Permissions","description":""},{"name":"Space Properties","description":""},{"name":"Space Roles","description":""},{"name":"Task","description":""},{"name":"User","description":""},{"name":"Version","description":""},{"name":"Whiteboard","description":""}],"paths":{"/admin-key":{"get":{"tags":["Admin Key"],"operationId":"getAdminKey","summary":"Get Admin Key","description":"Returns information about the admin key if one is currently enabled for the calling user within the site.\n\n**[Permissions](https://support.atlassian.com/user-management/docs/give-users-admin-permissions/#Centralized-user-management-content) required**:\nUser must be an organization or site admin.","responses":{"200":{"description":"Returned if an admin key is currently enabled for the calling user.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AdminKeyResponse"}}}},"401":{"description":"Returned if the authentication credentials are incorrect or missing from the request.","content":{}},"404":{"description":"Returned if the calling user does not currently have an admin key, if the calling user does not have permission to use admin keys, or if the site is not a Confluence Cloud Premium or Enterprise instance.","content":{}}},"x-atlassian-connect-scope":"INACCESSIBLE"},"post":{"tags":["Admin Key"],"operationId":"enableAdminKey","summary":"Enable Admin Key","description":"Enables admin key access for the calling user within the site. If an admin key already exists for the user, a new one will be issued with an updated expiration time.\n\n**Note:** The `durationInMinutes` field within the request body is optional. If the request body is empty or if the `durationInMinutes` is set to 0 minutes, a new admin key will be issued to the calling user with a default duration of 10 minutes.\n\n**[Permissions](https://support.atlassian.com/user-management/docs/give-users-admin-permissions/#Centralized-user-management-content) required**:\nUser must be an organization or site admin.","requestBody":{"$ref":"#/components/requestBodies/AdminKeyRequest"},"responses":{"200":{"description":"Returned if a new admin key is successfully issued for the calling user.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AdminKeyResponse"}}}},"400":{"description":"Returned if the request body contains an invalid `durationInMinutes`.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing from the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to use admin keys or if the site is not a Confluence Cloud Premium or Enterprise instance.","content":{}}},"x-atlassian-connect-scope":"INACCESSIBLE"},"delete":{"tags":["Admin Key"],"operationId":"disableAdminKey","summary":"Disable Admin Key","description":"Disables admin key access for the calling user within the site.\n\n**[Permissions](https://support.atlassian.com/user-management/docs/give-users-admin-permissions/#Centralized-user-management-content) required**:\nUser must be an organization or site admin.","responses":{"204":{"description":"Returned if admin key access was successfully disabled for the calling user or if the user did not have an admin key in the first place.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing from the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to use admin keys or if the site is not a Confluence Cloud Premium or Enterprise instance.","content":{}}},"x-atlassian-connect-scope":"INACCESSIBLE"}},"/attachments":{"get":{"tags":["Attachment"],"operationId":"getAttachments","summary":"Get attachments","description":"Returns all attachments. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the container of the attachment.","parameters":[{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/AttachmentSortOrder"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"status","in":"query","required":false,"description":"Filter the results to attachments based on their status. By default, `current` and `archived` are used.","schema":{"type":"array","items":{"type":"string","enum":["current","archived","trashed"]}}},{"name":"mediaType","in":"query","required":false,"description":"Filters on the mediaType of attachments. Only one may be specified.","schema":{"type":"string"}},{"name":"filename","in":"query","required":false,"description":"Filters on the file-name of attachments. Only one may be specified.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of attachments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":50,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested attachments are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<Attachment>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/AttachmentBulk"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information.  Example response header format: `Link: </wiki/api/v2/attachments?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:attachment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:attachment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/attachments/{id}":{"get":{"tags":["Attachment"],"operationId":"getAttachmentById","summary":"Get attachment by id","description":"Returns a specific attachment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the attachment's container.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the attachment to be returned. If you don't know the attachment's ID, use Get attachments for page/blogpost/custom content.","schema":{"type":"string","pattern":"(att)?[0-9]+"}},{"name":"version","in":"query","description":"Allows you to retrieve a previously published version. Specify the previous version's number to retrieve its details.","schema":{"type":"integer"}},{"name":"include-labels","in":"query","description":"Includes labels associated with this attachment in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-properties","in":"query","description":"Includes content properties associated with this attachment in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-operations","in":"query","description":"Includes operations associated with this attachment in the response, as defined in the `Operation` object.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-versions","in":"query","description":"Includes versions associated with this attachment in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-version","in":"query","description":"Includes the current version associated with this attachment in the response.\nBy default this is included and can be omitted by setting the value to `false`.","schema":{"type":"boolean","default":true}},{"name":"include-collaborators","in":"query","description":"Includes collaborators on the attachment.","schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"Returned if the requested attachment is returned.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/AttachmentSingle"},{"type":"object","properties":{"_links":{"type":"object","properties":{"base":{"type":"string","description":"Base url of the Confluence site."}}}}}]}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested attachment or the attachment was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:attachment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:attachment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"delete":{"tags":["Attachment"],"operationId":"deleteAttachment","summary":"Delete attachment","description":"Delete an attachment by id.\n\nDeleting an attachment moves the attachment to the trash, where it can be restored later. To permanently delete an attachment (or \"purge\" it),\nthe endpoint must be called on a **trashed** attachment with the following param `purge=true`.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the container of the attachment.\nPermission to delete attachments in the space.\nPermission to administer the space (if attempting to purge).","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the attachment to be deleted.","schema":{"format":"int64","type":"integer"}},{"name":"purge","in":"query","required":false,"description":"If attempting to purge the attachment.","schema":{"type":"boolean","default":false}}],"responses":{"204":{"description":"Returned if the attachment was successfully deleted.","content":{}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- The provided attachment does not exist\n- The user does not have permissions to view the container of the attachment\n- The user does not have the needed permissions to delete an attachment in the space"}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["delete:attachment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["delete:attachment:confluence"]}],"x-atlassian-connect-scope":"DELETE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/attachments/{id}/labels":{"get":{"tags":["Label"],"operationId":"getAttachmentLabels","summary":"Get labels for attachment","description":"Returns the labels of specific attachment. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the parent content of the attachment and its corresponding space.\nOnly labels that the user has permission to view will be returned.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the attachment for which labels should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"prefix","in":"query","required":false,"description":"Filter the results to labels based on their prefix.","schema":{"type":"string","enum":["my","team","global","system"]}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"type":"string","items":{"$ref":"#/components/schemas/LabelSortOrder"}}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of labels per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested labels are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<Label>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Label"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/attachments/<id>/labels?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nparent content of the requested attachment or the attachment was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:attachment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:attachment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/attachments/{id}/operations":{"get":{"tags":["Operation"],"operationId":"getAttachmentOperations","summary":"Get permitted operations for attachment","description":"Returns the permitted operations on specific attachment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the parent content of the attachment and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the attachment for which operations should be returned.","schema":{"type":"string","pattern":"(att)?[0-9]+"}}],"responses":{"200":{"description":"Returned if the requested operations are returned.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PermittedOperationsResponse"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nparent content of the requested attachment or the attachment was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:attachment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:attachment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/attachments/{attachment-id}/properties":{"get":{"tags":["Content Properties"],"operationId":"getAttachmentContentProperties","summary":"Get content properties for attachment","description":"Retrieves all Content Properties tied to a specified attachment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the attachment.","parameters":[{"name":"attachment-id","in":"path","required":true,"description":"The ID of the attachment for which content properties should be returned.","schema":{"type":"string","pattern":"(att)?[0-9]+"}},{"name":"key","in":"query","required":false,"description":"Filters the response to return a specific content property with matching key (case sensitive).","schema":{"type":"string"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/ContentPropertySortOrder"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of attachments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested content properties are successfully retrieved.","content":{"application/json":{"schema":{"title":"MultiEntityResult<ContentProperty>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/ContentProperty"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/attachments/<attachment-id>/properties?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified attachment or the attachment was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:attachment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:attachment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"post":{"tags":["Content Properties"],"operationId":"createAttachmentProperty","summary":"Create content property for attachment","description":"Creates a new content property for an attachment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to update the attachment.","parameters":[{"name":"attachment-id","in":"path","required":true,"description":"The ID of the attachment to create a property for.","schema":{"type":"string","pattern":"(att)?[0-9]+"}}],"requestBody":{"description":"The content property to be created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentPropertyCreateRequest"}}},"required":true},"responses":{"200":{"description":"Returned if the content property was created successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentProperty"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified attachment or the attachment was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:attachment:confluence","write:attachment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:attachment:confluence","write:attachment:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/attachments/{attachment-id}/properties/{property-id}":{"get":{"tags":["Content Properties"],"operationId":"getAttachmentContentPropertiesById","summary":"Get content property for attachment by id","description":"Retrieves a specific Content Property by ID that is attached to a specified attachment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the attachment.","parameters":[{"name":"attachment-id","in":"path","required":true,"description":"The ID of the attachment for which content properties should be returned.","schema":{"pattern":"(att)?0-9+","type":"string"}},{"name":"property-id","in":"path","required":true,"description":"The ID of the content property to be returned","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested content property is successfully retrieved.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentProperty"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified attachment,the attachment was not found, or the property was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:attachment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:attachment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"put":{"tags":["Content Properties"],"operationId":"updateAttachmentPropertyById","summary":"Update content property for attachment by id","description":"Update a content property for attachment by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the attachment.","parameters":[{"name":"attachment-id","in":"path","required":true,"description":"The ID of the attachment the property belongs to.","schema":{"type":"string","pattern":"(att)?[0-9]+"}},{"name":"property-id","in":"path","required":true,"description":"The ID of the property to be updated.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"description":"The content property to be updated.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentPropertyUpdateRequest"}}},"required":true},"responses":{"200":{"description":"Returned if the content property was updated successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentProperty"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified attachment or the attachment was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:attachment:confluence","write:attachment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:attachment:confluence","write:attachment:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"delete":{"tags":["Content Properties"],"operationId":"deleteAttachmentPropertyById","summary":"Delete content property for attachment by id","description":"Deletes a content property for an attachment by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to attachment the page.","parameters":[{"name":"attachment-id","in":"path","required":true,"description":"The ID of the attachment the property belongs to.","schema":{"type":"string","pattern":"(att)?[0-9]+"}},{"name":"property-id","in":"path","required":true,"description":"The ID of the property to be deleted.","schema":{"format":"int64","type":"integer"}}],"responses":{"204":{"description":"Returned if the content property was deleted successfully."},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified attachment or the attachment was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:attachment:confluence","write:attachment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:attachment:confluence","write:attachment:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/attachments/{id}/versions":{"get":{"tags":["Version"],"operationId":"getAttachmentVersions","summary":"Get attachment versions","description":"Returns the versions of specific attachment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the attachment and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the attachment to be queried for its versions. If you don't know the attachment ID, use Get attachments and filter the results.","schema":{"type":"string","pattern":"(att)?[0-9]+"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of versions per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/VersionSortOrder"}}],"responses":{"200":{"description":"Returned if the requested attachment versions are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<Version>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/AttachmentVersion"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/attachments/<id>/versions?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested page or the page was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:attachment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:attachment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/attachments/{attachment-id}/versions/{version-number}":{"get":{"tags":["Version"],"operationId":"getAttachmentVersionDetails","summary":"Get version details for attachment version","description":"Retrieves version details for the specified attachment and version number.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the attachment.","parameters":[{"name":"attachment-id","in":"path","required":true,"description":"The ID of the attachment for which version details should be returned.","schema":{"pattern":"(att)?0-9+","type":"string"}},{"name":"version-number","in":"path","required":true,"description":"The version number of the attachment to be returned.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested version details are successfully retrieved.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DetailedVersion"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified attachment, the attachment was not found, or the version number does not exist.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:attachment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:attachment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/attachments/{id}/footer-comments":{"get":{"tags":["Comment"],"operationId":"getAttachmentComments","summary":"Get attachment comments","description":"Returns the comments of the specific attachment.\nThe number of results is limited by the `limit` parameter and additional results (if available) will be available through\nthe `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the attachment and its corresponding containers.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the attachment for which comments should be returned.","schema":{"type":"string","pattern":"(att)?[0-9]+"}},{"name":"body-format","in":"query","required":false,"description":"The content format type to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.","schema":{"$ref":"#/components/schemas/PrimaryBodyRepresentation"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of comments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/CommentSortOrder"}},{"name":"version","in":"query","required":false,"description":"Version number of the attachment to retrieve comments for. If no version provided, retrieves comments for the latest version.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the attachment comments were successfully retrieved","content":{"application/json":{"schema":{"title":"MultiEntityResult<AttachmentCommentModel>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/AttachmentCommentModel"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/attachments/<id>/comments?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nattachment or associated containers.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:comment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/blogposts":{"get":{"tags":["Blog Post"],"operationId":"getBlogPosts","summary":"Get blog posts","description":"Returns all blog posts. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nOnly blog posts that the user has permission to view will be returned.","parameters":[{"name":"id","in":"query","required":false,"description":"Filter the results based on blog post ids. Multiple blog post ids can be specified as a comma-separated list.","schema":{"type":"array","maxItems":250,"items":{"type":"integer","format":"int64"}}},{"name":"space-id","in":"query","required":false,"description":"Filter the results based on space ids. Multiple space ids can be specified as a comma-separated list.","schema":{"type":"array","maxItems":100,"items":{"type":"integer","format":"int64"}}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/BlogPostSortOrder"}},{"name":"status","in":"query","required":false,"description":"Filter the results to blog posts based on their status. By default, `current` is used.","schema":{"type":"array","items":{"type":"string","enum":["current","deleted","trashed"]}}},{"name":"title","in":"query","required":false,"description":"Filter the results to blog posts based on their title.","schema":{"type":"string"}},{"name":"body-format","in":"query","description":"The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.","schema":{"$ref":"#/components/schemas/PrimaryBodyRepresentation"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of blog posts per result to return. If more results exist, use the `Link` response header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested blog posts are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<BlogPost>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/BlogPostBulk"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/blogposts?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"post":{"tags":["Blog Post"],"operationId":"createBlogPost","summary":"Create blog post","description":"Creates a new blog post in the space specified by the spaceId.\n\nBy default this will create the blog post as a non-draft, unless the status is specified as draft.\nIf creating a non-draft, the title must not be empty.\n\nCurrently only supports the storage representation specified in the body.representation enums below","parameters":[{"name":"private","in":"query","description":"The blog post will be private. Only the user who creates this blog post will have permission to view and edit one.","schema":{"type":"boolean","default":false}}],"requestBody":{"$ref":"#/components/requestBodies/BlogPostCreateRequest"},"responses":{"200":{"description":"Returned if the blog post was created successfully.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/BlogPostSingle"},{"type":"object","properties":{"_links":{"type":"object","properties":{"base":{"type":"string","description":"Base url of the Confluence site."}}}}}]}}}},"400":{"description":"Returned if invalid values were passed in for any of the enums, a REQUIRED parameter was missing, or if the given title is a duplicate in the space","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing from the request","content":{}},"404":{"description":"Returned if:\n- The provided space does not exist\n- The user does not have permissions to view the space\n- The user does not have the needed permissions to create a blog post in the provided space","content":{}},"413":{"description":"Returned if the request is too large in size (over 5 MB)","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["write:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["write:page:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/blogposts/{id}":{"get":{"tags":["Blog Post"],"operationId":"getBlogPostById","summary":"Get blog post by id","description":"Returns a specific blog post.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the blog post and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the blog post to be returned. If you don't know the blog post ID, use Get blog posts and filter the results.","schema":{"format":"int64","type":"integer"}},{"name":"body-format","in":"query","description":"The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.","schema":{"$ref":"#/components/schemas/PrimaryBodyRepresentationSingle"}},{"name":"get-draft","in":"query","description":"Retrieve the draft version of this blog post.","schema":{"type":"boolean","default":false}},{"name":"status","in":"query","description":"Filter the blog post being retrieved by its status.","schema":{"type":"array","items":{"type":"string","enum":["current","trashed","deleted","historical","draft"]}}},{"name":"version","in":"query","description":"Allows you to retrieve a previously published version. Specify the previous version's number to retrieve its details.","schema":{"type":"integer"}},{"name":"include-labels","in":"query","description":"Includes labels associated with this blog post in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-properties","in":"query","description":"Includes content properties associated with this blog post in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-operations","in":"query","description":"Includes operations associated with this blog post in the response, as defined in the `Operation` object.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-likes","in":"query","description":"Includes likes associated with this blog post in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-versions","in":"query","description":"Includes versions associated with this blog post in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-version","in":"query","description":"Includes the current version associated with this blog post in the response.\nBy default this is included and can be omitted by setting the value to `false`.","schema":{"type":"boolean","default":true}},{"name":"include-favorited-by-current-user-status","in":"query","description":"Includes whether this blog post has been favorited by the current user.","schema":{"type":"boolean","default":false}},{"name":"include-webresources","in":"query","description":"Includes web resources that can be used to render blog post content on a client.","schema":{"type":"boolean","default":false}},{"name":"include-collaborators","in":"query","description":"Includes collaborators on the blog post.","schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"Returned if the requested blog post is returned.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/BlogPostSingle"},{"type":"object","properties":{"_links":{"type":"object","properties":{"base":{"type":"string","description":"Base url of the Confluence site."}}}}}]}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested blog post or the blog post was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"put":{"tags":["Blog Post"],"operationId":"updateBlogPost","summary":"Update blog post","description":"Update a blog post by id.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the blog post and its corresponding space. Permission to update blog posts in the space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the blog post to be updated. If you don't know the blog post ID, use Get Blog Posts and filter the results.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"$ref":"#/components/requestBodies/BlogPostUpdateRequest"},"responses":{"200":{"description":"Returned if the requested blog post is successfully updated.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/BlogPostSingle"},{"type":"object","properties":{"_links":{"type":"object","properties":{"base":{"type":"string","description":"Base url of the Confluence site."}}}}}]}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- The provided blog post does not exist\n- The user does not have permissions to view the blog post\n- The user does not have the needed permissions to update a blog post in the space"}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["write:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["write:page:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"delete":{"tags":["Blog Post"],"operationId":"deleteBlogPost","summary":"Delete blog post","description":"Delete a blog post by id.\n\nBy default this will delete blog posts that are non-drafts. To delete a blog post that is a draft, the endpoint must be called on a \ndraft with the following param `draft=true`. Discarded drafts are not sent to the trash and are permanently deleted.\n\nDeleting a blog post that is not a draft moves the blog post to the trash, where it can be restored later.\nTo permanently delete a blog post (or \"purge\" it), the endpoint must be called on a **trashed** blog post with the following param `purge=true`.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the blog post and its corresponding space.\nPermission to delete blog posts in the space.\nPermission to administer the space (if attempting to purge).","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the blog post to be deleted.","schema":{"format":"int64","type":"integer"}},{"name":"purge","in":"query","required":false,"description":"If attempting to purge the blog post.","schema":{"type":"boolean","default":false}},{"name":"draft","in":"query","required":false,"description":"If attempting to delete a blog post that is a draft.","schema":{"type":"boolean","default":false}}],"responses":{"204":{"description":"Returned if the blog post was successfully deleted.","content":{}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- The provided blog post does not exist\n- The user does not have permissions to view the blog post\n- The user does not have the needed permissions to delete a blog post in the space"}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["delete:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["delete:page:confluence"]}],"x-atlassian-connect-scope":"DELETE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/blogposts/{id}/attachments":{"get":{"tags":["Attachment"],"operationId":"getBlogpostAttachments","summary":"Get attachments for blog post","description":"Returns the attachments of specific blog post. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the blog post and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the blog post for which attachments should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/AttachmentSortOrder"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"status","in":"query","required":false,"description":"Filter the results to attachments based on their status. By default, `current` and `archived` are used.","schema":{"type":"array","items":{"type":"string","enum":["current","archived","trashed"]}}},{"name":"mediaType","in":"query","required":false,"description":"Filters on the mediaType of attachments. Only one may be specified.","schema":{"type":"string"}},{"name":"filename","in":"query","required":false,"description":"Filters on the file-name of attachments. Only one may be specified.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of attachments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":50,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested attachments are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<Attachment>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/AttachmentBulk"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/blogposts/<id>/attachments?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested blog post or the blog post was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:attachment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:attachment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/blogposts/{id}/custom-content":{"get":{"tags":["Custom Content"],"operationId":"getCustomContentByTypeInBlogPost","summary":"Get custom content by type in blog post","description":"Returns all custom content for a given type within a given blogpost. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the custom content, the container of the custom content (blog post), and the corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the blog post for which custom content should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"type","in":"query","required":true,"description":"The type of custom content being requested. See: https://developer.atlassian.com/cloud/confluence/custom-content/ for additional details on custom content.","schema":{"type":"string"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/CustomContentSortOrder"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of pages per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}},{"name":"body-format","in":"query","description":"The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.\n\nNote: If the custom content body type is `storage`, the `storage` and `atlas_doc_format` body formats are able to be returned. If the custom content body type is `raw`, only the `raw` body format is able to be returned.","schema":{"$ref":"#/components/schemas/CustomContentBodyRepresentation"}}],"responses":{"200":{"description":"Returned if the requested custom content is returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<CustomContent>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/CustomContentBulk"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/blogposts/{id}/custom-content?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the given blog post is not found. Returned if the type of custom content is not found. Note, this is distinct from the type being present, but no instances of the type, which would be a 200 with empty results."}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:custom-content:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:custom-content:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/blogposts/{id}/labels":{"get":{"tags":["Label"],"operationId":"getBlogPostLabels","summary":"Get labels for blog post","description":"Returns the labels of specific blog post. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the blog post and its corresponding space.\nOnly labels that the user has permission to view will be returned.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the blog post for which labels should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"prefix","in":"query","required":false,"description":"Filter the results to labels based on their prefix.","schema":{"type":"string","enum":["my","team","global","system"]}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"type":"string","items":{"$ref":"#/components/schemas/LabelSortOrder"}}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of labels per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested labels are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<Label>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Label"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/blogposts/<id>/labels?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested blog post or the blog post was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/blogposts/{id}/likes/count":{"get":{"tags":["Like"],"operationId":"getBlogPostLikeCount","summary":"Get like count for blog post","description":"Returns the count of likes of specific blog post.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the blog post and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the blog post for which like count should be returned.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested count is returned.","content":{"application/json":{"schema":{"title":"Integer","type":"object","properties":{"count":{"type":"integer","format":"int64","description":"The count number"}}}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested blog post or the blog post was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/blogposts/{id}/likes/users":{"get":{"tags":["Like"],"operationId":"getBlogPostLikeUsers","summary":"Get account IDs of likes for blog post","description":"Returns the account IDs of likes of specific blog post.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the blog post and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the blog post for which account IDs should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of account IDs per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":0,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested account IDs are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<String>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Like"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/blogposts/<id>/likes/users?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested blog post or the blog post was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/blogposts/{blogpost-id}/properties":{"get":{"tags":["Content Properties"],"operationId":"getBlogpostContentProperties","summary":"Get content properties for blog post","description":"Retrieves all Content Properties tied to a specified blog post.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the blog post.","parameters":[{"name":"blogpost-id","in":"path","required":true,"description":"The ID of the blog post for which content properties should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"key","in":"query","required":false,"description":"Filters the response to return a specific content property with matching key (case sensitive).","schema":{"type":"string"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/ContentPropertySortOrder"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of attachments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested content properties are successfully retrieved.","content":{"application/json":{"schema":{"title":"MultiEntityResult<ContentProperty>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/ContentProperty"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/blogposts/<blogpost-id>/properties?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified blog post or the blog post was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"post":{"tags":["Content Properties"],"operationId":"createBlogpostProperty","summary":"Create content property for blog post","description":"Creates a new property for a blogpost.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to update the blog post.","parameters":[{"name":"blogpost-id","in":"path","required":true,"description":"The ID of the blog post to create a property for.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"description":"The content property to be created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentPropertyCreateRequest"}}},"required":true},"responses":{"200":{"description":"Returned if the content property was created successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentProperty"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified blog post or the blog post was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence","write:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence","write:page:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/blogposts/{blogpost-id}/properties/{property-id}":{"get":{"tags":["Content Properties"],"operationId":"getBlogpostContentPropertiesById","summary":"Get content property for blog post by id","description":"Retrieves a specific Content Property by ID that is attached to a specified blog post.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the blog post.","parameters":[{"name":"blogpost-id","in":"path","required":true,"description":"The ID of the blog post for which content properties should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"property-id","in":"path","required":true,"description":"The ID of the property being requested","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested content property is successfully retrieved.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentProperty"}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/blogposts/<blogpost-id>/properties/<property-id>?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified blog post,the blog post was not found, or the property was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"put":{"tags":["Content Properties"],"operationId":"updateBlogpostPropertyById","summary":"Update content property for blog post by id","description":"Update a content property for blog post by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the blog post.","parameters":[{"name":"blogpost-id","in":"path","required":true,"description":"The ID of the blog post the property belongs to.","schema":{"format":"int64","type":"integer"}},{"name":"property-id","in":"path","required":true,"description":"The ID of the property to be updated.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"description":"The content property to be updated.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentPropertyUpdateRequest"}}},"required":true},"responses":{"200":{"description":"Returned if the content property was updated successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentProperty"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified blog post or the blog post was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence","write:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence","write:page:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"delete":{"tags":["Content Properties"],"operationId":"deleteBlogpostPropertyById","summary":"Delete content property for blogpost by id","description":"Deletes a content property for a blogpost by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the blog post.","parameters":[{"name":"blogpost-id","in":"path","required":true,"description":"The ID of the blog post the property belongs to.","schema":{"format":"int64","type":"integer"}},{"name":"property-id","in":"path","required":true,"description":"The ID of the property to be deleted.","schema":{"format":"int64","type":"integer"}}],"responses":{"204":{"description":"Returned if the content property was deleted successfully."},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified blog post or the blog post was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence","write:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence","write:page:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/blogposts/{id}/operations":{"get":{"tags":["Operation"],"operationId":"getBlogPostOperations","summary":"Get permitted operations for blog post","description":"Returns the permitted operations on specific blog post.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the parent content of the blog post and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the blog post for which operations should be returned.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested operations are returned.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PermittedOperationsResponse"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nparent content of the requested blog post or the blog post was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/blogposts/{id}/versions":{"get":{"tags":["Version"],"operationId":"getBlogPostVersions","summary":"Get blog post versions","description":"Returns the versions of specific blog post. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the blog post and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the blog post to be queried for its versions. If you don't know the blog post ID, use Get blog posts and filter the results.","schema":{"format":"int64","type":"integer"}},{"name":"body-format","in":"query","description":"The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.","schema":{"$ref":"#/components/schemas/PrimaryBodyRepresentation"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of versions per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/VersionSortOrder"}}],"responses":{"200":{"description":"Returned if the requested blog post versions are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<Version>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/BlogPostVersion"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/blogposts/<id>/versions?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested page or the page was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/blogposts/{blogpost-id}/versions/{version-number}":{"get":{"tags":["Version"],"operationId":"getBlogPostVersionDetails","summary":"Get version details for blog post version","description":"Retrieves version details for the specified blog post and version number.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the blog post.","parameters":[{"name":"blogpost-id","in":"path","required":true,"description":"The ID of the blog post for which version details should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"version-number","in":"path","required":true,"description":"The version number of the blog post to be returned.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested version details are successfully retrieved.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DetailedVersion"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified blog post, the blog post was not found, or the version number does not exist.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/content/convert-ids-to-types":{"post":{"tags":["Content"],"operationId":"convertContentIdsToContentTypes","summary":"Convert content ids to content types","description":"Converts a list of content ids into their associated content types. This is useful for users migrating from v1 to v2\nwho may have stored just content ids without their associated type. This will return types as they should be used in v2.\nNotably, this will return `inline-comment` for inline comments and `footer-comment` for footer comments, which is distinct from them\nboth being represented by `comment` in v1.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the requested content. Any content that the user does not have permission to view or does not exist will map to `null` in the response.","requestBody":{"$ref":"#/components/requestBodies/ContentIdToContentTypeRequest"},"responses":{"200":{"description":"Returned if the requested content ids are successfully converted to their content types","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentIdToContentTypeResponse"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:content.metadata:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:content.metadata:confluence"]}],"x-atlassian-connect-scope":"NONE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/custom-content":{"get":{"tags":["Custom Content"],"operationId":"getCustomContentByType","summary":"Get custom content by type","description":"Returns all custom content for a given type. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the custom content, the container of the custom content, and the corresponding space (if different from the container).","parameters":[{"name":"type","in":"query","required":true,"description":"The type of custom content being requested. See: https://developer.atlassian.com/cloud/confluence/custom-content/ for additional details on custom content.","schema":{"type":"string"}},{"name":"id","in":"query","required":false,"description":"Filter the results based on custom content ids. Multiple custom content ids can be specified as a comma-separated list.","schema":{"type":"array","maxItems":250,"items":{"type":"integer","format":"int64"}}},{"name":"space-id","in":"query","required":false,"description":"Filter the results based on space ids. Multiple space ids can be specified as a comma-separated list.","schema":{"type":"array","maxItems":100,"items":{"type":"integer","format":"int64"}}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/CustomContentSortOrder"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of pages per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}},{"name":"body-format","in":"query","description":"The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.\n\nNote: If the custom content body type is `storage`, the `storage` and `atlas_doc_format` body formats are able to be returned. If the custom content body type is `raw`, only the `raw` body format is able to be returned.","schema":{"$ref":"#/components/schemas/CustomContentBodyRepresentation"}}],"responses":{"200":{"description":"Returned if the requested custom content is returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<CustomContent>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/CustomContentBulk"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/custom-content?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the type of custom content is not found. Note, this is distinct from the type being present, but no instances of the type, which would be a 200 with empty results."}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:custom-content:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:custom-content:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"post":{"tags":["Custom Content"],"operationId":"createCustomContent","summary":"Create custom content","description":"Creates a new custom content in the given space, page, blogpost or other custom content.\n\nOnly one of `spaceId`, `pageId`, `blogPostId`, or `customContentId` is required in the request body.\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page or blogpost and its corresponding space. Permission to create custom content in the space.","requestBody":{"$ref":"#/components/requestBodies/CustomContentCreateRequest"},"responses":{"201":{"description":"Returned if the requested custom content is created successfully.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/CustomContentSingle"},{"type":"object","properties":{"_links":{"type":"object","properties":{"base":{"type":"string","description":"Base url of the Confluence site."}}}}}]}}},"headers":{"location":{"schema":{"type":"string"},"description":"Relative link to created custom content Example response header format: `location: </wiki/api/v2/custom-content/<id>>`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the type of custom content is not found."}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["write:custom-content:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["write:custom-content:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/custom-content/{id}":{"get":{"tags":["Custom Content"],"operationId":"getCustomContentById","summary":"Get custom content by id","description":"Returns a specific piece of custom content. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the custom content, the container of the custom content, and the corresponding space (if different from the container).","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the custom content to be returned. If you don't know the custom content ID, use Get Custom Content by Type and filter the results.","schema":{"format":"int64","type":"integer"}},{"name":"body-format","in":"query","description":"The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.\n\nNote: If the custom content body type is `storage`, the `storage` and `atlas_doc_format` body formats are able to be returned. If the custom content body type is `raw`, only the `raw` body format is able to be returned.","schema":{"$ref":"#/components/schemas/CustomContentBodyRepresentationSingle"}},{"name":"version","in":"query","description":"Allows you to retrieve a previously published version. Specify the previous version's number to retrieve its details.","schema":{"type":"integer"}},{"name":"include-labels","in":"query","description":"Includes labels associated with this custom content in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-properties","in":"query","description":"Includes content properties associated with this custom content in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-operations","in":"query","description":"Includes operations associated with this custom content in the response, as defined in the `Operation` object.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-versions","in":"query","description":"Includes versions associated with this custom content in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-version","in":"query","description":"Includes the current version associated with this custom content in the response.\nBy default this is included and can be omitted by setting the value to `false`.","schema":{"type":"boolean","default":true}},{"name":"include-collaborators","in":"query","description":"Includes collaborators on the custom content.","schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"Returned if the requested custom content is returned.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/CustomContentSingle"},{"type":"object","properties":{"_links":{"type":"object","properties":{"base":{"type":"string","description":"Base url of the Confluence site."}}}}}]}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested custom content or the custom content was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:custom-content:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:custom-content:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"put":{"tags":["Custom Content"],"operationId":"updateCustomContent","summary":"Update custom content","description":"Update a custom content by id.\nAt most one of `spaceId`, `pageId`, `blogPostId`, or `customContentId` is allowed in the request body.\nNote that if `spaceId` is specified, it must be the same as the `spaceId` used for creating the custom content\nas moving custom content to a different space is not supported.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page or blogpost and its corresponding space. Permission to update custom content in the space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the custom content to be updated. If you don't know the custom content ID, use Get Custom Content by Type and filter the results.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"$ref":"#/components/requestBodies/CustomContentUpdateRequest"},"responses":{"200":{"description":"Returned if the requested custom content is updated successfully.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/CustomContentSingle"},{"type":"object","properties":{"_links":{"type":"object","properties":{"base":{"type":"string","description":"Base url of the Confluence site."}}}}}]}}},"headers":{"location":{"schema":{"type":"string"},"description":"Relative link to updated custom content Example response header format: `location: </wiki/api/v2/custom-content/<id>>`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the type of custom content is not found."}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["write:custom-content:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["write:custom-content:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"delete":{"tags":["Custom Content"],"operationId":"deleteCustomContent","summary":"Delete custom content","description":"Delete a custom content by id.\n\nDeleting a custom content will either move it to the trash or permanently delete it (purge it), depending on the apiSupport.\nTo permanently delete a **trashed** custom content, the endpoint must be called with the following param `purge=true`.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page or blogpost and its corresponding space.\nPermission to delete custom content in the space.\nPermission to administer the space (if attempting to purge).","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the custom content to be deleted.","schema":{"format":"int64","type":"integer"}},{"name":"purge","in":"query","required":false,"description":"If attempting to purge the custom content.","schema":{"type":"boolean","default":false}}],"responses":{"204":{"description":"Returned if the custom content was deleted.","content":{}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the custom content is not found."}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["delete:custom-content:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["delete:custom-content:confluence"]}],"x-atlassian-connect-scope":"DELETE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/custom-content/{id}/attachments":{"get":{"tags":["Attachment"],"operationId":"getCustomContentAttachments","summary":"Get attachments for custom content","description":"Returns the attachments of specific custom content. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the custom content and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the custom content for which attachments should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/AttachmentSortOrder"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"status","in":"query","required":false,"description":"Filter the results to attachments based on their status. By default, `current` and `archived` are used.","schema":{"type":"array","items":{"type":"string","enum":["current","archived","trashed"]}}},{"name":"mediaType","in":"query","required":false,"description":"Filters on the mediaType of attachments. Only one may be specified.","schema":{"type":"string"}},{"name":"filename","in":"query","required":false,"description":"Filters on the file-name of attachments. Only one may be specified.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of attachments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":50,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested attachments are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<Attachment>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/AttachmentBulk"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/custom-content/<id>/attachments?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested custom content or the custom content was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:attachment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:attachment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/custom-content/{id}/footer-comments":{"get":{"tags":["Comment"],"operationId":"getCustomContentComments","summary":"Get custom content comments","description":"Returns the comments of the specific custom content.\nThe number of results is limited by the `limit` parameter and additional results (if available) will be available through\nthe `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the custom content and its corresponding containers.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the custom content for which comments should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"body-format","in":"query","required":false,"description":"The content format type to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.","schema":{"$ref":"#/components/schemas/PrimaryBodyRepresentation"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of comments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/CommentSortOrder"}}],"responses":{"200":{"description":"Returned if the custom content comments were successfully retrieved","content":{"application/json":{"schema":{"title":"MultiEntityResult<CustomContentCommentModel>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/CustomContentCommentModel"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/custom-content/<id>/footer-comments?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\ncustom content or associated containers.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:comment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/custom-content/{id}/labels":{"get":{"tags":["Label"],"operationId":"getCustomContentLabels","summary":"Get labels for custom content","description":"Returns the labels for a specific piece of custom content. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the custom content and its corresponding space.\nOnly labels that the user has permission to view will be returned.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the custom content for which labels should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"prefix","in":"query","required":false,"description":"Filter the results to labels based on their prefix.","schema":{"type":"string","enum":["my","team","global","system"]}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"type":"string","items":{"$ref":"#/components/schemas/LabelSortOrder"}}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of labels per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested labels are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<Label>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Label"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/custom-content/<id>/labels?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested page or the page was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:custom-content:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:custom-content:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/custom-content/{id}/operations":{"get":{"tags":["Operation"],"operationId":"getCustomContentOperations","summary":"Get permitted operations for custom content","description":"Returns the permitted operations on specific custom content.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the parent content of the custom content and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the custom content for which operations should be returned.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested operations are returned.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PermittedOperationsResponse"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nparent content of the requested custom content or the custom content was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:custom-content:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:custom-content:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/custom-content/{custom-content-id}/properties":{"get":{"tags":["Content Properties"],"operationId":"getCustomContentContentProperties","summary":"Get content properties for custom content","description":"Retrieves Content Properties tied to a specified custom content.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the custom content.","parameters":[{"name":"custom-content-id","in":"path","required":true,"description":"The ID of the custom content for which content properties should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"key","in":"query","required":false,"description":"Filters the response to return a specific content property with matching key (case sensitive).","schema":{"type":"string"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/ContentPropertySortOrder"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of attachments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested content properties are successfully retrieved.","content":{"application/json":{"schema":{"title":"MultiEntityResult<ContentProperty>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/ContentProperty"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/custom-content/<custom-content-id>/properties?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified custom content or the custom content was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:custom-content:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:custom-content:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"post":{"tags":["Content Properties"],"operationId":"createCustomContentProperty","summary":"Create content property for custom content","description":"Creates a new content property for a piece of custom content.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to update the custom content.","parameters":[{"name":"custom-content-id","in":"path","required":true,"description":"The ID of the custom content to create a property for.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"description":"The content property to be created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentPropertyCreateRequest"}}},"required":true},"responses":{"200":{"description":"Returned if the content property was created successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentProperty"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified custom content or the custom content was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:custom-content:confluence","write:custom-content:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:custom-content:confluence","write:custom-content:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/custom-content/{custom-content-id}/properties/{property-id}":{"get":{"tags":["Content Properties"],"operationId":"getCustomContentContentPropertiesById","summary":"Get content property for custom content by id","description":"Retrieves a specific Content Property by ID that is attached to a specified custom content.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the page.","parameters":[{"name":"custom-content-id","in":"path","required":true,"description":"The ID of the custom content for which content properties should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"property-id","in":"path","required":true,"description":"The ID of the content property being requested.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested content property is successfully retrieved.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentProperty"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified custom content, the custom content was not found, or the property was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:custom-content:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:custom-content:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"put":{"tags":["Content Properties"],"operationId":"updateCustomContentPropertyById","summary":"Update content property for custom content by id","description":"Update a content property for a piece of custom content by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the custom content.","parameters":[{"name":"custom-content-id","in":"path","required":true,"description":"The ID of the custom content the property belongs to.","schema":{"format":"int64","type":"integer"}},{"name":"property-id","in":"path","required":true,"description":"The ID of the property to be updated.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"description":"The content property to be updated.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentPropertyUpdateRequest"}}},"required":true},"responses":{"200":{"description":"Returned if the content property was updated successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentProperty"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified custom content or the custom content was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:custom-content:confluence","write:custom-content:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:custom-content:confluence","write:custom-content:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"delete":{"tags":["Content Properties"],"operationId":"deleteCustomContentPropertyById","summary":"Delete content property for custom content by id","description":"Deletes a content property for a piece of custom content by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the custom content.","parameters":[{"name":"custom-content-id","in":"path","required":true,"description":"The ID of the custom content the property belongs to.","schema":{"format":"int64","type":"integer"}},{"name":"property-id","in":"path","required":true,"description":"The ID of the property to be deleted.","schema":{"format":"int64","type":"integer"}}],"responses":{"204":{"description":"Returned if the content property was deleted successfully."},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified custom content or the custom content was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:custom-content:confluence","write:custom-content:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:custom-content:confluence","write:custom-content:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/labels":{"get":{"tags":["Label"],"operationId":"getLabels","summary":"Get labels","description":"Returns all labels. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nOnly labels that the user has permission to view will be returned.","parameters":[{"name":"label-id","in":"query","required":false,"description":"Filters on label ID. Multiple IDs can be specified as a comma-separated list.","schema":{"type":"array","items":{"type":"integer","format":"int64"}}},{"name":"prefix","in":"query","description":"Filters on label prefix. Multiple IDs can be specified as a comma-separated list.","schema":{"type":"array","items":{"type":"string"}}},{"name":"cursor","in":"query","description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"type":"string","items":{"$ref":"#/components/schemas/LabelSortOrder"}}},{"name":"limit","in":"query","description":"Maximum number of labels per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested labels are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<Label>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Label"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/labels?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:label:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:label:confluence"]}],"x-atlassian-data-security-policy":[{"app-access-rule-exempt":true}],"x-atlassian-connect-scope":"READ"}},"/labels/{id}/attachments":{"get":{"tags":["Attachment"],"operationId":"getLabelAttachments","summary":"Get attachments for label","description":"Returns the attachments of specified label. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the attachment and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the label for which attachments should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/AttachmentSortOrder"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of pages per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested attachments for specified label were successfully fetched.","content":{"application/json":{"schema":{"title":"MultiEntityResult<Attachment>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/AttachmentBulk"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/labels/<id>/attachment?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested label or label was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:attachment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:attachment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/labels/{id}/blogposts":{"get":{"tags":["Blog Post"],"operationId":"getLabelBlogPosts","summary":"Get blog posts for label","description":"Returns the blogposts of specified label. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the label for which blog posts should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"space-id","in":"query","required":false,"description":"Filter the results based on space ids. Multiple space ids can be specified as a comma-separated list.","schema":{"type":"array","maxItems":100,"items":{"type":"integer","format":"int64"}}},{"name":"body-format","in":"query","description":"The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.","schema":{"$ref":"#/components/schemas/PrimaryBodyRepresentation"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/BlogPostSortOrder"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of blog posts per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested blog posts for specified label were successfully fetched.","content":{"application/json":{"schema":{"title":"MultiEntityResult<BlogPost>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/BlogPostBulk"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/labels/<id>/blogposts?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested label or label was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/labels/{id}/pages":{"get":{"tags":["Page"],"operationId":"getLabelPages","summary":"Get pages for label","description":"Returns the pages of specified label. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the label for which pages should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"space-id","in":"query","required":false,"description":"Filter the results based on space ids. Multiple space ids can be specified as a comma-separated list.","schema":{"type":"array","maxItems":100,"items":{"type":"integer","format":"int64"}}},{"name":"body-format","in":"query","description":"The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.","schema":{"$ref":"#/components/schemas/PrimaryBodyRepresentation"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/PageSortOrder"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of pages per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested pages for specified label were successfully fetched.","content":{"application/json":{"schema":{"title":"MultiEntityResult<Page>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/PageBulk"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/labels/<id>/pages?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested label or label was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/pages":{"get":{"tags":["Page"],"operationId":"getPages","summary":"Get pages","description":"Returns all pages. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nOnly pages that the user has permission to view will be returned.","parameters":[{"name":"id","in":"query","required":false,"description":"Filter the results based on page ids. Multiple page ids can be specified as a comma-separated list.","schema":{"type":"array","maxItems":250,"items":{"type":"integer","format":"int64"}}},{"name":"space-id","in":"query","required":false,"description":"Filter the results based on space ids. Multiple space ids can be specified as a comma-separated list.","schema":{"type":"array","maxItems":100,"items":{"type":"integer","format":"int64"}}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/PageSortOrder"}},{"name":"status","in":"query","required":false,"description":"Filter the results to pages based on their status. By default, `current` and `archived` are used.","schema":{"type":"array","items":{"type":"string","enum":["current","archived","deleted","trashed"]}}},{"name":"title","in":"query","required":false,"description":"Filter the results to pages based on their title.","schema":{"type":"string"}},{"name":"body-format","in":"query","description":"The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.","schema":{"$ref":"#/components/schemas/PrimaryBodyRepresentation"}},{"name":"subtype","in":"query","required":false,"description":"Filter the results to pages based on their subtype.","schema":{"type":"string","enum":["live","page"]}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of pages per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested pages are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<Page>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/PageBulk"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/pages?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"post":{"tags":["Page"],"operationId":"createPage","summary":"Create page","description":"Creates a page in the space.\n\nPages are created as published by default unless specified as a draft in the status field. If creating a published page, the title must be specified.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the corresponding space. Permission to create a page in the space.","parameters":[{"name":"embedded","in":"query","description":"Tag the content as embedded and content will be created in NCS.","schema":{"type":"boolean","default":false}},{"name":"private","in":"query","description":"The page will be private. Only the user who creates this page will have permission to view and edit one.","schema":{"type":"boolean","default":false}},{"name":"root-level","in":"query","description":"The page will be created at the root level of the space (outside the space homepage tree). If true, then a \nvalue may not be supplied for the `parentId` body parameter.","schema":{"type":"boolean","default":false}}],"requestBody":{"$ref":"#/components/requestBodies/PageCreateRequest"},"responses":{"200":{"description":"Returned if the page was successfully created.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PageSingle"},{"type":"object","properties":{"_links":{"type":"object","properties":{"base":{"type":"string","description":"Base url of the Confluence site."}}}}}]}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing from the request.","content":{}},"404":{"description":"Returned if:\n- The space does not exist\n- The user does not have permissions to view the space\n- The user does not have the needed permissions to create a page in the provided space"},"413":{"description":"Returned if the request is too large in size (over 5 MB).","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["write:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["write:page:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/pages/{id}":{"get":{"tags":["Page"],"operationId":"getPageById","summary":"Get page by id","description":"Returns a specific page.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the page and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the page to be returned. If you don't know the page ID, use Get pages and filter the results.","schema":{"format":"int64","type":"integer"}},{"name":"body-format","in":"query","description":"The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.","schema":{"$ref":"#/components/schemas/PrimaryBodyRepresentationSingle"}},{"name":"get-draft","in":"query","description":"Retrieve the draft version of this page.","schema":{"type":"boolean","default":false}},{"name":"status","in":"query","description":"Filter the page being retrieved by its status.","schema":{"type":"array","items":{"type":"string","enum":["current","archived","trashed","deleted","historical","draft"]}}},{"name":"version","in":"query","description":"Allows you to retrieve a previously published version. Specify the previous version's number to retrieve its details.","schema":{"type":"integer"}},{"name":"include-labels","in":"query","description":"Includes labels associated with this page in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-properties","in":"query","description":"Includes content properties associated with this page in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-operations","in":"query","description":"Includes operations associated with this page in the response, as defined in the `Operation` object.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-likes","in":"query","description":"Includes likes associated with this page in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-versions","in":"query","description":"Includes versions associated with this page in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-version","in":"query","description":"Includes the current version associated with this page in the response.\nBy default this is included and can be omitted by setting the value to `false`.","schema":{"type":"boolean","default":true}},{"name":"include-favorited-by-current-user-status","in":"query","description":"Includes whether this page has been favorited by the current user.","schema":{"type":"boolean","default":false}},{"name":"include-webresources","in":"query","description":"Includes web resources that can be used to render page content on a client.","schema":{"type":"boolean","default":false}},{"name":"include-collaborators","in":"query","description":"Includes collaborators on the page.","schema":{"type":"boolean","default":false}},{"name":"include-direct-children","in":"query","description":"Includes direct children of the page, as defined in the `ChildrenResponse` object.","schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"Returned if the requested page is returned.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PageSingle"},{"type":"object","properties":{"_links":{"type":"object","properties":{"base":{"type":"string","description":"Base url of the Confluence site."}}}}}]}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested page or the page was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"put":{"tags":["Page"],"operationId":"updatePage","summary":"Update page","description":"Update a page by id.\n\nWhen the \"current\" version is updated, the provided body content is considered as the latest version. This latest body content\nwill be attempted to be merged into the draft version through a content reconciliation algorithm. If two versions are significantly diverged, \nthe latest provided content may entirely override what was previously in the draft. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the page and its corresponding space. Permission to update pages in the space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the page to be updated. If you don't know the page ID, use Get Pages and filter the results.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"$ref":"#/components/requestBodies/PageUpdateRequest"},"responses":{"200":{"description":"Returned if the requested page is successfully updated.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PageSingle"},{"type":"object","properties":{"_links":{"type":"object","properties":{"base":{"type":"string","description":"Base url of the Confluence site."}}}}}]}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- The provided page does not exist\n- The user does not have permissions to view the page\n- The user does not have the needed permissions to update a page in the space\n- The user provides a parentId for a page that does not exist or they do not have permission to view\n- There are no spaces associated with the given spaceId"}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["write:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["write:page:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"delete":{"tags":["Page"],"operationId":"deletePage","summary":"Delete page","description":"Delete a page by id.\n\nBy default this will delete pages that are non-drafts. To delete a page that is a draft, the endpoint must be called on a \ndraft with the following param `draft=true`. Discarded drafts are not sent to the trash and are permanently deleted.\n\nDeleting a page moves the page to the trash, where it can be restored later. To permanently delete a page (or \"purge\" it),\nthe endpoint must be called on a **trashed** page with the following param `purge=true`.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the page and its corresponding space.\nPermission to delete pages in the space.\nPermission to administer the space (if attempting to purge).","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the page to be deleted.","schema":{"format":"int64","type":"integer"}},{"name":"purge","in":"query","required":false,"description":"If attempting to purge the page.","schema":{"type":"boolean","default":false}},{"name":"draft","in":"query","required":false,"description":"If attempting to delete a page that is a draft.","schema":{"type":"boolean","default":false}}],"responses":{"204":{"description":"Returned if the page was successfully deleted.","content":{}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- The provided page does not exist\n- The user does not have permissions to view the page\n- The user does not have the needed permissions to delete a page in the space"}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["delete:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["delete:page:confluence"]}],"x-atlassian-connect-scope":"DELETE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/pages/{id}/attachments":{"get":{"tags":["Attachment"],"operationId":"getPageAttachments","summary":"Get attachments for page","description":"Returns the attachments of specific page. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the page for which attachments should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/AttachmentSortOrder"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"status","in":"query","required":false,"description":"Filter the results to attachments based on their status. By default, `current` and `archived` are used.","schema":{"type":"array","items":{"type":"string","enum":["current","archived","trashed"]}}},{"name":"mediaType","in":"query","required":false,"description":"Filters on the mediaType of attachments. Only one may be specified.","schema":{"type":"string"}},{"name":"filename","in":"query","required":false,"description":"Filters on the file-name of attachments. Only one may be specified.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of attachments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":50,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested attachments are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<Attachment>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/AttachmentBulk"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/pages/<id>/attachments?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested page or the page was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:attachment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:attachment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/pages/{id}/custom-content":{"get":{"tags":["Custom Content"],"operationId":"getCustomContentByTypeInPage","summary":"Get custom content by type in page","description":"Returns all custom content for a given type within a given page. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the custom content, the container of the custom content (page), and the corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the page for which custom content should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"type","in":"query","required":true,"description":"The type of custom content being requested. See: https://developer.atlassian.com/cloud/confluence/custom-content/ for additional details on custom content.","schema":{"type":"string"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/CustomContentSortOrder"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of pages per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}},{"name":"body-format","in":"query","description":"The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.\n\nNote: If the custom content body type is `storage`, the `storage` and `atlas_doc_format` body formats are able to be returned. If the custom content body type is `raw`, only the `raw` body format is able to be returned.","schema":{"$ref":"#/components/schemas/CustomContentBodyRepresentation"}}],"responses":{"200":{"description":"Returned if the requested custom content is returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<CustomContent>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/CustomContentBulk"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/pages/{id}/custom-content?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the given page is not found. Returned if the type of custom content is not found. Note, this is distinct from the type being present, but no instances of the type, which would be a 200 with empty results."}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:custom-content:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:custom-content:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/pages/{id}/labels":{"get":{"tags":["Label"],"operationId":"getPageLabels","summary":"Get labels for page","description":"Returns the labels of specific page. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page and its corresponding space.\nOnly labels that the user has permission to view will be returned.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the page for which labels should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"prefix","in":"query","required":false,"description":"Filter the results to labels based on their prefix.","schema":{"type":"string","enum":["my","team","global","system"]}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"type":"string","items":{"$ref":"#/components/schemas/LabelSortOrder"}}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of labels per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested labels are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<Label>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Label"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/pages/<id>/labels?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested page or the page was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/pages/{id}/likes/count":{"get":{"tags":["Like"],"operationId":"getPageLikeCount","summary":"Get like count for page","description":"Returns the count of likes of specific page.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the page for which like count should be returned.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested count is returned.","content":{"application/json":{"schema":{"title":"Integer","type":"object","properties":{"count":{"type":"integer","format":"int64","description":"The count number"}}}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested page or the page was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/pages/{id}/likes/users":{"get":{"tags":["Like"],"operationId":"getPageLikeUsers","summary":"Get account IDs of likes for page","description":"Returns the account IDs of likes of specific page.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the page for which like count should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of account IDs per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":0,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested account IDs are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<String>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Like"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/pages/<id>/likes/users?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested page or the page was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/pages/{id}/operations":{"get":{"tags":["Operation"],"operationId":"getPageOperations","summary":"Get permitted operations for page","description":"Returns the permitted operations on specific page.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the parent content of the page and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the page for which operations should be returned.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested operations are returned.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PermittedOperationsResponse"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nparent content of the requested page or the page was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/pages/{page-id}/properties":{"get":{"tags":["Content Properties"],"operationId":"getPageContentProperties","summary":"Get content properties for page","description":"Retrieves Content Properties tied to a specified page.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the page.","parameters":[{"name":"page-id","in":"path","required":true,"description":"The ID of the page for which content properties should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"key","in":"query","required":false,"description":"Filters the response to return a specific content property with matching key (case sensitive).","schema":{"type":"string"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/ContentPropertySortOrder"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of attachments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested content properties are successfully retrieved.","content":{"application/json":{"schema":{"title":"MultiEntityResult<ContentProperty>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/ContentProperty"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/pages/<page-id>/properties?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified page or the page was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"post":{"tags":["Content Properties"],"operationId":"createPageProperty","summary":"Create content property for page","description":"Creates a new content property for a page.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to update the page.","parameters":[{"name":"page-id","in":"path","required":true,"description":"The ID of the page to create a property for.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"description":"The content property to be created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentPropertyCreateRequest"}}},"required":true},"responses":{"200":{"description":"Returned if the content property was created successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentProperty"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified page or the page was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence","write:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence","write:page:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/pages/{page-id}/properties/{property-id}":{"get":{"tags":["Content Properties"],"operationId":"getPageContentPropertiesById","summary":"Get content property for page by id","description":"Retrieves a specific Content Property by ID that is attached to a specified page.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the page.","parameters":[{"name":"page-id","in":"path","required":true,"description":"The ID of the page for which content properties should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"property-id","in":"path","required":true,"description":"The ID of the content property being requested.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested content property is successfully retrieved.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentProperty"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified page, the page was not found, or the property was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"put":{"tags":["Content Properties"],"operationId":"updatePagePropertyById","summary":"Update content property for page by id","description":"Update a content property for a page by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the page.","parameters":[{"name":"page-id","in":"path","required":true,"description":"The ID of the page the property belongs to.","schema":{"format":"int64","type":"integer"}},{"name":"property-id","in":"path","required":true,"description":"The ID of the property to be updated.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"description":"The content property to be updated.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentPropertyUpdateRequest"}}},"required":true},"responses":{"200":{"description":"Returned if the content property was updated successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentProperty"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified page or the page was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence","write:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence","write:page:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"delete":{"tags":["Content Properties"],"operationId":"deletePagePropertyById","summary":"Delete content property for page by id","description":"Deletes a content property for a page by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the page.","parameters":[{"name":"page-id","in":"path","required":true,"description":"The ID of the page the property belongs to.","schema":{"format":"int64","type":"integer"}},{"name":"property-id","in":"path","required":true,"description":"The ID of the property to be deleted.","schema":{"format":"int64","type":"integer"}}],"responses":{"204":{"description":"Returned if the content property was deleted successfully."},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified page or the page was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence","write:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence","write:page:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/pages/{id}/title":{"put":{"tags":["Page"],"operationId":"updatePageTitle","summary":"Update page title","description":"Updates the title of a specified page.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the page and its corresponding space. Permission to update pages in the space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the page to be updated. If you don't know the page ID, use Get Pages and filter the results","schema":{"format":"int64","type":"integer"}}],"requestBody":{"$ref":"#/components/requestBodies/PageTitleUpdateRequest"},"responses":{"200":{"description":"Returned if the requested page is successfully updated.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PageSingle"},{"type":"object","properties":{"_links":{"type":"object","properties":{"base":{"type":"string","description":"Base url of the Confluence site."}}}}}]}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- The provided page does not exist\n- The user does not have permissions to view the page\n- The user does not have the needed permissions to update a page in the space\n- The user provides a parentId for a page that does not exist or they do not have permission to view\n- There are no spaces associated with the given spaceId"}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["write:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["write:page:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/pages/{id}/versions":{"get":{"tags":["Version"],"operationId":"getPageVersions","summary":"Get page versions","description":"Returns the versions of specific page.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the page and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the page to be queried for its versions. If you don't know the page ID, use Get pages and filter the results.","schema":{"format":"int64","type":"integer"}},{"name":"body-format","in":"query","description":"The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.","schema":{"$ref":"#/components/schemas/PrimaryBodyRepresentation"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of versions per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/VersionSortOrder"}}],"responses":{"200":{"description":"Returned if the requested page versions are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<Version>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/PageVersion"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/pages/<id>/versions?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested page or the page was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/whiteboards":{"post":{"tags":["Whiteboard"],"operationId":"createWhiteboard","summary":"Create whiteboard","description":"Creates a whiteboard in the space.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the corresponding space. Permission to create a whiteboard in the space.","parameters":[{"name":"private","in":"query","description":"The whiteboard will be private. Only the user who creates this whiteboard will have permission to view and edit one.","schema":{"type":"boolean","default":false}}],"requestBody":{"$ref":"#/components/requestBodies/WhiteboardCreateRequest"},"responses":{"200":{"description":"Returned if the whiteboard was successfully created.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/WhiteboardSingle"},{"type":"object","properties":{"_links":{"type":"object","properties":{"base":{"type":"string","description":"Base url of the Confluence site."}}}}}]}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing from the request.","content":{}},"404":{"description":"Returned if:\n- The space does not exist\n- The user does not have permissions to view the space\n- The user does not have the needed permissions to create a whiteboard in the provided space"},"413":{"description":"Returned if the request is too large in size (over 5 MB).","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["write:whiteboard:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["write:whiteboard:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/whiteboards/{id}":{"get":{"tags":["Whiteboard"],"operationId":"getWhiteboardById","summary":"Get whiteboard by id","description":"Returns a specific whiteboard.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the whiteboard and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the whiteboard to be returned","schema":{"format":"int64","type":"integer"}},{"name":"include-collaborators","in":"query","description":"Includes collaborators on the whiteboard.","schema":{"type":"boolean","default":false}},{"name":"include-direct-children","in":"query","description":"Includes direct children of the whiteboard, as defined in the `ChildrenResponse` object.","schema":{"type":"boolean","default":false}},{"name":"include-operations","in":"query","description":"Includes operations associated with this whiteboard in the response, as defined in the `Operation` object.\nThe number of results will be limited to 50 and sorted in the default sort order.\nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-properties","in":"query","description":"Includes content properties associated with this whiteboard in the response.\nThe number of results will be limited to 50 and sorted in the default sort order.\nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"Returned if the requested whiteboard is returned.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/WhiteboardSingle"},{"type":"object","properties":{"_links":{"type":"object","properties":{"base":{"type":"string","description":"Base url of the Confluence site."}}}}}]}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested whiteboard or the whiteboard was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:whiteboard:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:whiteboard:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"delete":{"tags":["Whiteboard"],"operationId":"deleteWhiteboard","summary":"Delete whiteboard","description":"Delete a whiteboard by id.\n\nDeleting a whiteboard moves the whiteboard to the trash, where it can be restored later\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the whiteboard and its corresponding space.\nPermission to delete whiteboards in the space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the whiteboard to be deleted.","schema":{"format":"int64","type":"integer"}}],"responses":{"204":{"description":"Returned if the whiteboard was successfully deleted.","content":{}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- The provided whiteboard does not exist\n- The user does not have permissions to view the whiteboard\n- The user does not have the needed permissions to delete a whiteboard in the space"}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["delete:whiteboard:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["delete:whiteboard:confluence"]}],"x-atlassian-connect-scope":"DELETE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/whiteboards/{id}/properties":{"get":{"tags":["Content Properties"],"operationId":"getWhiteboardContentProperties","summary":"Get content properties for whiteboard","description":"Retrieves Content Properties tied to a specified whiteboard.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the whiteboard.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the whiteboard for which content properties should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"key","in":"query","required":false,"description":"Filters the response to return a specific content property with matching key (case sensitive).","schema":{"type":"string"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/ContentPropertySortOrder"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of attachments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested content properties are successfully retrieved.","content":{"application/json":{"schema":{"title":"MultiEntityResult<ContentProperty>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/ContentProperty"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/whiteboards/<id>/properties?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified whiteboard or the whiteboard was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:whiteboard:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:whiteboard:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"post":{"tags":["Content Properties"],"operationId":"createWhiteboardProperty","summary":"Create content property for whiteboard","description":"Creates a new content property for a whiteboard.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to update the whiteboard.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the whiteboard to create a property for.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"description":"The content property to be created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentPropertyCreateRequest"}}},"required":true},"responses":{"200":{"description":"Returned if the content property was created successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentProperty"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified whiteboard or the whiteboard was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:whiteboard:confluence","write:whiteboard:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:whiteboard:confluence","write:whiteboard:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/whiteboards/{whiteboard-id}/properties/{property-id}":{"get":{"tags":["Content Properties"],"operationId":"getWhiteboardContentPropertiesById","summary":"Get content property for whiteboard by id","description":"Retrieves a specific Content Property by ID that is attached to a specified whiteboard.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the whiteboard.","parameters":[{"name":"whiteboard-id","in":"path","required":true,"description":"The ID of the whiteboard for which content properties should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"property-id","in":"path","required":true,"description":"The ID of the content property being requested.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested content property is successfully retrieved.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentProperty"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified whiteboard, the whiteboard was not found, or the property was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:whiteboard:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:whiteboard:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"put":{"tags":["Content Properties"],"operationId":"updateWhiteboardPropertyById","summary":"Update content property for whiteboard by id","description":"Update a content property for a whiteboard by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the whiteboard.","parameters":[{"name":"whiteboard-id","in":"path","required":true,"description":"The ID of the whiteboard the property belongs to.","schema":{"format":"int64","type":"integer"}},{"name":"property-id","in":"path","required":true,"description":"The ID of the property to be updated.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"description":"The content property to be updated.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentPropertyUpdateRequest"}}},"required":true},"responses":{"200":{"description":"Returned if the content property was updated successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentProperty"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified whiteboard or the whiteboard was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:whiteboard:confluence","write:whiteboard:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:whiteboard:confluence","write:whiteboard:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"delete":{"tags":["Content Properties"],"operationId":"deleteWhiteboardPropertyById","summary":"Delete content property for whiteboard by id","description":"Deletes a content property for a whiteboard by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the whiteboard.","parameters":[{"name":"whiteboard-id","in":"path","required":true,"description":"The ID of the whiteboard the property belongs to.","schema":{"format":"int64","type":"integer"}},{"name":"property-id","in":"path","required":true,"description":"The ID of the property to be deleted.","schema":{"format":"int64","type":"integer"}}],"responses":{"204":{"description":"Returned if the content property was deleted successfully."},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified whiteboard or the whiteboard was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:whiteboard:confluence","write:whiteboard:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:whiteboard:confluence","write:whiteboard:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/whiteboards/{id}/operations":{"get":{"tags":["Operation"],"operationId":"getWhiteboardOperations","summary":"Get permitted operations for a whiteboard","description":"Returns the permitted operations on specific whiteboard.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the whiteboard and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the whiteboard for which operations should be returned.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested operations are returned.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PermittedOperationsResponse"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested whiteboard or the whiteboard was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:whiteboard:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:whiteboard:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/whiteboards/{id}/direct-children":{"get":{"tags":["Children"],"operationId":"getWhiteboardDirectChildren","summary":"Get direct children of a whiteboard","description":"Returns all children for given whiteboard id in the content tree. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\nThe following types of content will be returned:\n- Database\n- Embed\n- Folder\n- Page\n- Whiteboard\n\nThis endpoint returns minimal information about each child. To fetch more details, use a related endpoint based on the content type, such\nas:\n\n- [Get database by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-database/#api-databases-id-get)\n- [Get embed by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-smart-link/#api-embeds-id-get)\n- [Get folder by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-folder/#api-folders-id-get)\n- [Get page by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-page/#api-pages-id-get)\n- [Get whiteboard by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-whiteboard/#api-whiteboards-id-get).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nOnly content that the user has permission to view will be returned.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the parent whiteboard.","schema":{"format":"int64","type":"integer"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of items per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"type":"string","items":{"$ref":"#/components/schemas/ContentSortOrder"}}}],"responses":{"200":{"description":"Returned if the requested children are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<ChildrenResponse>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/ChildrenResponse"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. Example response header format: <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:hierarchical-content:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:hierarchical-content:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/whiteboards/{id}/descendants":{"get":{"tags":["Descendants"],"operationId":"getWhiteboardDescendants","summary":"Get descendants of a whiteboard","description":"Returns descendants in the content tree for a given whiteboard by ID in top-to-bottom order (that is, the highest descendant is the first\nitem in the response payload). The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available by calling this endpoint with the cursor in the response payload. There is also a `depth` parameter specifying depth\nof descendants to be fetched.\n\nThe following types of content will be returned:\n- Database\n- Embed\n- Folder\n- Page\n- Whiteboard\n\nThis endpoint returns minimal information about each descendant. To fetch more details, use a related endpoint based on the content type, such\nas:\n\n- [Get database by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-database/#api-databases-id-get)\n- [Get embed by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-smart-link/#api-embeds-id-get)\n- [Get folder by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-folder/#api-folders-id-get)\n- [Get page by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-page/#api-pages-id-get)\n- [Get whiteboard by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-whiteboard/#api-whiteboards-id-get).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nPermission to view the whiteboard and its corresponding space","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the whiteboard.","schema":{"format":"int64","type":"integer"}},{"name":"limit","in":"query","description":"Maximum number of items per result to return. If more results exist, call the endpoint with the cursor to fetch the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}},{"name":"depth","in":"query","description":"Maximum depth of descendants to return. If more results are required, use the endpoint corresponding to the content type of the deepest descendant to fetch more descendants.","schema":{"format":"int32","default":2,"minimum":1,"maximum":5,"type":"integer"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}}],"responses":{"200":{"description":"Returned if the requested descendants are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<DescendantsResponse>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/DescendantsResponse"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. Example response header format: <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified whiteboard or the whiteboard was not found.\ncontent: { }"}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:hierarchical-content:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:hierarchical-content:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/whiteboards/{id}/ancestors":{"get":{"tags":["Ancestors"],"operationId":"getWhiteboardAncestors","summary":"Get all ancestors of whiteboard","description":"Returns all ancestors for a given whiteboard by ID in top-to-bottom order (that is, the highest ancestor is the first\nitem in the response payload). The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available by calling this endpoint with the ID of first ancestor in the response payload.\n\nThis endpoint returns minimal information about each ancestor. To fetch more details, use a related endpoint, such\nas [Get whiteboard by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-whiteboard/#api-whiteboards-id-get).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nPermission to view the whiteboard and its corresponding space","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the whiteboard.","schema":{"format":"int64","type":"integer"}},{"name":"limit","in":"query","description":"Maximum number of items per result to return. If more results exist, call the endpoint with the highest ancestor's ID to fetch the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested ancestors are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<Ancestor>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Ancestor"}}}}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified whiteboard or the whiteboard was not found."}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:content.metadata:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:content.metadata:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/databases":{"post":{"tags":["Database"],"operationId":"createDatabase","summary":"Create database","description":"Creates a database in the space.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the corresponding space. Permission to create a database in the space.","parameters":[{"name":"private","in":"query","description":"The database will be private. Only the user who creates this database will have permission to view and edit one.","schema":{"type":"boolean","default":false}}],"requestBody":{"$ref":"#/components/requestBodies/DatabaseCreateRequest"},"responses":{"200":{"description":"Returned if the database was successfully created.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/DatabaseSingle"},{"type":"object","properties":{"_links":{"type":"object","properties":{"base":{"type":"string","description":"Base url of the Confluence site."}}}}}]}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing from the request.","content":{}},"404":{"description":"Returned if:\n- The space does not exist\n- The user does not have permissions to view the space\n- The user does not have the needed permissions to create a database in the provided space"},"413":{"description":"Returned if the request is too large in size (over 5 MB).","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["write:database:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["write:database:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/databases/{id}":{"get":{"tags":["Database"],"operationId":"getDatabaseById","summary":"Get database by id","description":"Returns a specific database.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the database and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the database to be returned","schema":{"format":"int64","type":"integer"}},{"name":"include-collaborators","in":"query","description":"Includes collaborators on the database.","schema":{"type":"boolean","default":false}},{"name":"include-direct-children","in":"query","description":"Includes direct children of the database, as defined in the `ChildrenResponse` object.","schema":{"type":"boolean","default":false}},{"name":"include-operations","in":"query","description":"Includes operations associated with this database in the response, as defined in the `Operation` object.\nThe number of results will be limited to 50 and sorted in the default sort order.\nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-properties","in":"query","description":"Includes content properties associated with this database in the response.\nThe number of results will be limited to 50 and sorted in the default sort order.\nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"Returned if the requested database is returned.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/DatabaseSingle"},{"type":"object","properties":{"_links":{"type":"object","properties":{"base":{"type":"string","description":"Base url of the Confluence site."}}}}}]}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested database or the database was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:database:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:database:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"delete":{"tags":["Database"],"operationId":"deleteDatabase","summary":"Delete database","description":"Delete a database by id.\n\nDeleting a database moves the database to the trash, where it can be restored later\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the database and its corresponding space.\nPermission to delete databases in the space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the database to be deleted.","schema":{"format":"int64","type":"integer"}}],"responses":{"204":{"description":"Returned if the database was successfully deleted.","content":{}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- The provided database does not exist\n- The user does not have permissions to view the database\n- The user does not have the needed permissions to delete a database in the space"}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["delete:database:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["delete:database:confluence"]}],"x-atlassian-connect-scope":"DELETE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/databases/{id}/properties":{"get":{"tags":["Content Properties"],"operationId":"getDatabaseContentProperties","summary":"Get content properties for database","description":"Retrieves Content Properties tied to a specified database.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the database.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the database for which content properties should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"key","in":"query","required":false,"description":"Filters the response to return a specific content property with matching key (case sensitive).","schema":{"type":"string"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/ContentPropertySortOrder"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of attachments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested content properties are successfully retrieved.","content":{"application/json":{"schema":{"title":"MultiEntityResult<ContentProperty>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/ContentProperty"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/databases/<id>/properties?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified database or the database was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:database:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:database:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"post":{"tags":["Content Properties"],"operationId":"createDatabaseProperty","summary":"Create content property for database","description":"Creates a new content property for a database.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to update the database.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the database to create a property for.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"description":"The content property to be created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentPropertyCreateRequest"}}},"required":true},"responses":{"200":{"description":"Returned if the content property was created successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentProperty"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified database or the database was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:database:confluence","write:database:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:database:confluence","write:database:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/databases/{database-id}/properties/{property-id}":{"get":{"tags":["Content Properties"],"operationId":"getDatabaseContentPropertiesById","summary":"Get content property for database by id","description":"Retrieves a specific Content Property by ID that is attached to a specified database.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the database.","parameters":[{"name":"database-id","in":"path","required":true,"description":"The ID of the database for which content properties should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"property-id","in":"path","required":true,"description":"The ID of the content property being requested.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested content property is successfully retrieved.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentProperty"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified database, the database was not found, or the property was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:database:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:database:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"put":{"tags":["Content Properties"],"operationId":"updateDatabasePropertyById","summary":"Update content property for database by id","description":"Update a content property for a database by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the database.","parameters":[{"name":"database-id","in":"path","required":true,"description":"The ID of the database the property belongs to.","schema":{"format":"int64","type":"integer"}},{"name":"property-id","in":"path","required":true,"description":"The ID of the property to be updated.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"description":"The content property to be updated.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentPropertyUpdateRequest"}}},"required":true},"responses":{"200":{"description":"Returned if the content property was updated successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentProperty"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified database or the database was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:database:confluence","write:database:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:database:confluence","write:database:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"delete":{"tags":["Content Properties"],"operationId":"deleteDatabasePropertyById","summary":"Delete content property for database by id","description":"Deletes a content property for a database by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the database.","parameters":[{"name":"database-id","in":"path","required":true,"description":"The ID of the database the property belongs to.","schema":{"format":"int64","type":"integer"}},{"name":"property-id","in":"path","required":true,"description":"The ID of the property to be deleted.","schema":{"format":"int64","type":"integer"}}],"responses":{"204":{"description":"Returned if the content property was deleted successfully."},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified database or the database was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:database:confluence","write:database:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:database:confluence","write:database:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/databases/{id}/operations":{"get":{"tags":["Operation"],"operationId":"getDatabaseOperations","summary":"Get permitted operations for a database","description":"Returns the permitted operations on specific database.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the database and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the database for which operations should be returned.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested operations are returned.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PermittedOperationsResponse"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested database or the database was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:database:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:database:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/databases/{id}/direct-children":{"get":{"tags":["Children"],"operationId":"getDatabaseDirectChildren","summary":"Get direct children of a database","description":"Returns all children for given database id in the content tree. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\nThe following types of content will be returned:\n- Database\n- Embed\n- Folder\n- Page\n- Whiteboard\n\nThis endpoint returns minimal information about each child. To fetch more details, use a related endpoint based on the content type, such\nas:\n\n- [Get database by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-database/#api-databases-id-get)\n- [Get embed by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-smart-link/#api-embeds-id-get)\n- [Get folder by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-folder/#api-folders-id-get)\n- [Get page by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-page/#api-pages-id-get)\n- [Get whiteboard by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-whiteboard/#api-whiteboards-id-get).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nOnly content that the user has permission to view will be returned.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the parent database.","schema":{"format":"int64","type":"integer"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of items per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"type":"string","items":{"$ref":"#/components/schemas/ContentSortOrder"}}}],"responses":{"200":{"description":"Returned if the requested children are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<ChildrenResponse>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/ChildrenResponse"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. Example response header format: <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified database or the database was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:hierarchical-content:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:hierarchical-content:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/databases/{id}/descendants":{"get":{"tags":["Descendants"],"operationId":"getDatabaseDescendants","summary":"Get descendants of a database","description":"Returns descendants in the content tree for a given database by ID in top-to-bottom order (that is, the highest descendant is the first\nitem in the response payload). The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available by calling this endpoint with the cursor in the response payload. There is also a `depth` parameter specifying depth\nof descendants to be fetched.\n\nThe following types of content will be returned:\n- Database\n- Embed\n- Folder\n- Page\n- Whiteboard\n\nThis endpoint returns minimal information about each descendant. To fetch more details, use a related endpoint based on the content type, such\nas:\n\n- [Get database by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-database/#api-databases-id-get)\n- [Get embed by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-smart-link/#api-embeds-id-get)\n- [Get folder by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-folder/#api-folders-id-get)\n- [Get page by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-page/#api-pages-id-get)\n- [Get whiteboard by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-whiteboard/#api-whiteboards-id-get).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nPermission to view the database and its corresponding space","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the database.","schema":{"format":"int64","type":"integer"}},{"name":"limit","in":"query","description":"Maximum number of items per result to return. If more results exist, call the endpoint with the cursor to fetch the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}},{"name":"depth","in":"query","description":"Maximum depth of descendants to return. If more results are required, use the endpoint corresponding to the content type of the deepest descendant to fetch more descendants.","schema":{"format":"int32","default":2,"minimum":1,"maximum":5,"type":"integer"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}}],"responses":{"200":{"description":"Returned if the requested descendants are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<DescendantsResponse>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/DescendantsResponse"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. Example response header format: <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified database or the database was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:hierarchical-content:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:hierarchical-content:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/databases/{id}/ancestors":{"get":{"tags":["Ancestors"],"operationId":"getDatabaseAncestors","summary":"Get all ancestors of database","description":"Returns all ancestors for a given database by ID in top-to-bottom order (that is, the highest ancestor is the first\nitem in the response payload). The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available by calling this endpoint with the ID of first ancestor in the response payload.\n\nThis endpoint returns minimal information about each ancestor. To fetch more details, use a related endpoint, such\nas [Get database by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-database/#api-databases-id-get).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nPermission to view the database and its corresponding space","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the database.","schema":{"format":"int64","type":"integer"}},{"name":"limit","in":"query","description":"Maximum number of items per result to return. If more results exist, call the endpoint with the highest ancestor's ID to fetch the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested ancestors are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<Ancestor>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Ancestor"}}}}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified database or the database was not found."}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:content.metadata:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:content.metadata:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/embeds":{"post":{"tags":["Smart Link"],"operationId":"createSmartLink","summary":"Create Smart Link in the content tree","description":"Creates a Smart Link in the content tree in the space.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the corresponding space. Permission to create a Smart Link in the content tree in the space.","requestBody":{"$ref":"#/components/requestBodies/SmartLinkCreateRequest"},"responses":{"200":{"description":"Returned if the Smart Link was successfully created in the content tree.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/SmartLinkSingle"},{"type":"object","properties":{"_links":{"type":"object","properties":{"base":{"type":"string","description":"Base url of the Confluence site."}}}}}]}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing from the request.","content":{}},"404":{"description":"Returned if:\n- The space does not exist\n- The user does not have permissions to view the space\n- The user does not have the needed permissions to create a Smart Link in the content tree in the provided space"},"413":{"description":"Returned if the request is too large in size (over 5 MB).","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["write:embed:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["write:embed:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/embeds/{id}":{"get":{"tags":["Smart Link"],"operationId":"getSmartLinkById","summary":"Get Smart Link in the content tree by id","description":"Returns a specific Smart Link in the content tree.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the Smart Link in the content tree and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the Smart Link in the content tree to be returned.","schema":{"format":"int64","type":"integer"}},{"name":"include-collaborators","in":"query","description":"Includes collaborators on the Smart Link.","schema":{"type":"boolean","default":false}},{"name":"include-direct-children","in":"query","description":"Includes direct children of the Smart Link, as defined in the `ChildrenResponse` object.","schema":{"type":"boolean","default":false}},{"name":"include-operations","in":"query","description":"Includes operations associated with this Smart Link in the response, as defined in the `Operation` object.\nThe number of results will be limited to 50 and sorted in the default sort order.\nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-properties","in":"query","description":"Includes content properties associated with this Smart Link in the response.\nThe number of results will be limited to 50 and sorted in the default sort order.\nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"Returned if the requested Smart Link in the content tree is returned.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/SmartLinkSingle"},{"type":"object","properties":{"_links":{"type":"object","properties":{"base":{"type":"string","description":"Base url of the Confluence site."}}}}}]}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested Smart Link in the content tree or the Smart Link was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:embed:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:embed:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"delete":{"tags":["Smart Link"],"operationId":"deleteSmartLink","summary":"Delete Smart Link in the content tree","description":"Delete a Smart Link in the content tree by id.\n\nDeleting a Smart Link in the content tree moves the Smart Link to the trash, where it can be restored later\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the Smart Link in the content tree and its corresponding space.\nPermission to delete Smart Links in the content tree in the space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the Smart Link in the content tree to be deleted.","schema":{"format":"int64","type":"integer"}}],"responses":{"204":{"description":"Returned if the Smart Link in the content tree was successfully deleted.","content":{}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- The provided Smart Link in the content tree does not exist\n- The user does not have permissions to view the Smart Link in the content tree\n- The user does not have the needed permissions to delete a Smart Link in the content tree in the space"}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["delete:embed:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["delete:embed:confluence"]}],"x-atlassian-connect-scope":"DELETE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/embeds/{id}/properties":{"get":{"tags":["Content Properties"],"operationId":"getSmartLinkContentProperties","summary":"Get content properties for Smart Link in the content tree","description":"Retrieves Content Properties tied to a specified Smart Link in the content tree.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the Smart Link in the content tree.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the Smart Link in the content tree for which content properties should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"key","in":"query","required":false,"description":"Filters the response to return a specific content property with matching key (case sensitive).","schema":{"type":"string"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/ContentPropertySortOrder"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of Smart Links per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested content properties are successfully retrieved.","content":{"application/json":{"schema":{"title":"MultiEntityResult<ContentProperty>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/ContentProperty"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/embeds/<id>/properties?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified Smart Link in the content tree or the Smart Link was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:embed:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:embed:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"post":{"tags":["Content Properties"],"operationId":"createSmartLinkProperty","summary":"Create content property for Smart Link in the content tree","description":"Creates a new content property for a Smart Link in the content tree.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to update the Smart Link in the content tree.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the Smart Link in the content tree to create a property for.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"description":"The content property to be created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentPropertyCreateRequest"}}},"required":true},"responses":{"200":{"description":"Returned if the content property was created successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentProperty"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified Smart Link in the content tree or the Smart Link was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:embed:confluence","write:embed:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:embed:confluence","write:embed:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/embeds/{embed-id}/properties/{property-id}":{"get":{"tags":["Content Properties"],"operationId":"getSmartLinkContentPropertiesById","summary":"Get content property for Smart Link in the content tree by id","description":"Retrieves a specific Content Property by ID that is attached to a specified Smart Link in the content tree.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the Smart Link in the content tree.","parameters":[{"name":"embed-id","in":"path","required":true,"description":"The ID of the Smart Link in the content tree for which content properties should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"property-id","in":"path","required":true,"description":"The ID of the content property being requested.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested content property is successfully retrieved.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentProperty"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified Smart Link in the content tree, the Smart Link was not found, or the property was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:embed:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:embed:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"put":{"tags":["Content Properties"],"operationId":"updateSmartLinkPropertyById","summary":"Update content property for Smart Link in the content tree by id","description":"Update a content property for a Smart Link in the content tree by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the Smart Link in the content tree.","parameters":[{"name":"embed-id","in":"path","required":true,"description":"The ID of the Smart Link in the content tree the property belongs to.","schema":{"format":"int64","type":"integer"}},{"name":"property-id","in":"path","required":true,"description":"The ID of the property to be updated.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"description":"The content property to be updated.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentPropertyUpdateRequest"}}},"required":true},"responses":{"200":{"description":"Returned if the content property was updated successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentProperty"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified Smart Link in the content tree or the Smart Link was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:embed:confluence","write:embed:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:embed:confluence","write:embed:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"delete":{"tags":["Content Properties"],"operationId":"deleteSmartLinkPropertyById","summary":"Delete content property for Smart Link in the content tree by id","description":"Deletes a content property for a Smart Link in the content tree by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the Smart Link in the content tree.","parameters":[{"name":"embed-id","in":"path","required":true,"description":"The ID of the Smart Link in the content tree the property belongs to.","schema":{"format":"int64","type":"integer"}},{"name":"property-id","in":"path","required":true,"description":"The ID of the property to be deleted.","schema":{"format":"int64","type":"integer"}}],"responses":{"204":{"description":"Returned if the content property was deleted successfully."},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified Smart Link in the content tree or the Smart Link was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:embed:confluence","write:embed:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:embed:confluence","write:embed:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/embeds/{id}/operations":{"get":{"tags":["Operation"],"operationId":"getSmartLinkOperations","summary":"Get permitted operations for a Smart Link in the content tree","description":"Returns the permitted operations on specific Smart Link in the content tree.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the Smart Link in the content tree and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the Smart Link in the content tree for which operations should be returned.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested operations are returned.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PermittedOperationsResponse"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested Smart Link in the content tree or the Smart Link was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:embed:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:embed:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/embeds/{id}/direct-children":{"get":{"tags":["Children"],"operationId":"getSmartLinkDirectChildren","summary":"Get direct children of a Smart Link","description":"Returns all children for given smart link id in the content tree. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\nThe following types of content will be returned:\n- Database\n- Embed\n- Folder\n- Page\n- Whiteboard\n\nThis endpoint returns minimal information about each child. To fetch more details, use a related endpoint based on the content type, such\nas:\n\n- [Get database by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-database/#api-databases-id-get)\n- [Get embed by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-smart-link/#api-embeds-id-get)\n- [Get folder by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-folder/#api-folders-id-get)\n- [Get page by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-page/#api-pages-id-get)\n- [Get whiteboard by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-whiteboard/#api-whiteboards-id-get).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nOnly content that the user has permission to view will be returned.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the parent smart link.","schema":{"format":"int64","type":"integer"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of items per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"type":"string","items":{"$ref":"#/components/schemas/ContentSortOrder"}}}],"responses":{"200":{"description":"Returned if the requested children are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<ChildrenResponse>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/ChildrenResponse"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. Example response header format: <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified smart link or the smart link was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:hierarchical-content:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:hierarchical-content:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/embeds/{id}/descendants":{"get":{"tags":["Descendants"],"operationId":"getSmartLinkDescendants","summary":"Get descendants of a smart link","description":"Returns descendants in the content tree for a given smart link by ID in top-to-bottom order (that is, the highest descendant is the first\nitem in the response payload). The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available by calling this endpoint with the cursor in the response payload. There is also a `depth` parameter specifying depth\nof descendants to be fetched.\n\nThe following types of content will be returned:\n- Database\n- Embed\n- Folder\n- Page\n- Whiteboard\n\n\nThis endpoint returns minimal information about each descendant. To fetch more details, use a related endpoint based on the content type, such\nas:\n\n- [Get database by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-database/#api-databases-id-get)\n- [Get embed by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-smart-link/#api-embeds-id-get)\n- [Get folder by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-folder/#api-folders-id-get)\n- [Get page by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-page/#api-pages-id-get)\n- [Get whiteboard by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-whiteboard/#api-whiteboards-id-get).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nPermission to view the smart link and its corresponding space","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the smart link.","schema":{"format":"int64","type":"integer"}},{"name":"limit","in":"query","description":"Maximum number of items per result to return. If more results exist, call the endpoint with the cursor to fetch the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}},{"name":"depth","in":"query","description":"Maximum depth of descendants to return. If more results are required, use the endpoint corresponding to the content type of the deepest descendant to fetch more descendants.","schema":{"format":"int32","default":2,"minimum":1,"maximum":5,"type":"integer"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}}],"responses":{"200":{"description":"Returned if the requested descendants are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<DescendantsResponse>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/DescendantsResponse"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. Example response header format: <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified smart link or the smart link was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:hierarchical-content:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:hierarchical-content:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/embeds/{id}/ancestors":{"get":{"tags":["Ancestors"],"operationId":"getSmartLinkAncestors","summary":"Get all ancestors of Smart Link in content tree","description":"Returns all ancestors for a given Smart Link in the content tree by ID in top-to-bottom order (that is, the highest ancestor is\nthe first item in the response payload). The number of results is limited by the `limit` parameter and additional results \n(if available) will be available by calling this endpoint with the ID of first ancestor in the response payload.\n\nThis endpoint returns minimal information about each ancestor. To fetch more details, use a related endpoint, such\nas [Get Smart Link in the content tree by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-smart-link/#api-embeds-id-get).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nPermission to view the Smart Link in the content tree and its corresponding space","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the Smart Link in the content tree.","schema":{"format":"int64","type":"integer"}},{"name":"limit","in":"query","description":"Maximum number of items per result to return. If more results exist, call the endpoint with the highest ancestor's ID to fetch the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested ancestors are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<Ancestor>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Ancestor"}}}}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified Smart Link in the content tree or the Smart Link was not found."}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:content.metadata:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:content.metadata:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/folders":{"post":{"tags":["Folder"],"operationId":"createFolder","summary":"Create folder","description":"Creates a folder in the space.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the corresponding space. Permission to create a folder in the space.","requestBody":{"$ref":"#/components/requestBodies/FolderCreateRequest"},"responses":{"200":{"description":"Returned if the folder was successfully created in the content tree.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/FolderSingle"},{"type":"object","properties":{"_links":{"type":"object","properties":{"base":{"type":"string","description":"Base url of the Confluence site."}}}}}]}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing from the request.","content":{}},"404":{"description":"Returned if:\n- The space does not exist\n- The user does not have permissions to view the space\n- The user does not have the needed permissions to create a folder in the provided space"},"413":{"description":"Returned if the request is too large in size (over 5 MB).","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["write:folder:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["write:folder:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/folders/{id}":{"get":{"tags":["Folder"],"operationId":"getFolderById","summary":"Get folder by id","description":"Returns a specific folder.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the folder and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the folder to be returned.","schema":{"format":"int64","type":"integer"}},{"name":"include-collaborators","in":"query","description":"Includes collaborators on the folder.","schema":{"type":"boolean","default":false}},{"name":"include-direct-children","in":"query","description":"Includes direct children of the folder, as defined in the `ChildrenResponse` object.","schema":{"type":"boolean","default":false}},{"name":"include-operations","in":"query","description":"Includes operations associated with this folder in the response, as defined in the `Operation` object.\nThe number of results will be limited to 50 and sorted in the default sort order.\nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-properties","in":"query","description":"Includes content properties associated with this folder in the response.\nThe number of results will be limited to 50 and sorted in the default sort order.\nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"Returned if the requested folder is returned.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/FolderSingle"},{"type":"object","properties":{"_links":{"type":"object","properties":{"base":{"type":"string","description":"Base url of the Confluence site."}}}}}]}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested folder or the folder was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:folder:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:folder:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"delete":{"tags":["Folder"],"operationId":"deleteFolder","summary":"Delete folder","description":"Delete a folder by id.\n\nDeleting a folder moves the folder to the trash, where it can be restored later\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the folder and its corresponding space.\nPermission to delete folders in the space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the folder to be deleted.","schema":{"format":"int64","type":"integer"}}],"responses":{"204":{"description":"Returned if the folder was successfully deleted.","content":{}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- The provided folder does not exist\n- The user does not have permissions to view the folder\n- The user does not have the needed permissions to delete folder in the space"}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["delete:folder:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["delete:folder:confluence"]}],"x-atlassian-connect-scope":"DELETE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/folders/{id}/properties":{"get":{"tags":["Content Properties"],"operationId":"getFolderContentProperties","summary":"Get content properties for folder","description":"Retrieves Content Properties tied to a specified folder.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the folder.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the folder for which content properties should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"key","in":"query","required":false,"description":"Filters the response to return a specific content property with matching key (case sensitive).","schema":{"type":"string"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/ContentPropertySortOrder"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of attachments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested content properties are successfully retrieved.","content":{"application/json":{"schema":{"title":"MultiEntityResult<ContentProperty>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/ContentProperty"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/embeds/<id>/properties?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified folder or the folder was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:folder:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:folder:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"post":{"tags":["Content Properties"],"operationId":"createFolderProperty","summary":"Create content property for folder","description":"Creates a new content property for a folder.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to update the folder.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the folder to create a property for.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"description":"The content property to be created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentPropertyCreateRequest"}}},"required":true},"responses":{"200":{"description":"Returned if the content property was created successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentProperty"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified folder or the folder was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:folder:confluence","write:folder:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:folder:confluence","write:folder:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/folders/{folder-id}/properties/{property-id}":{"get":{"tags":["Content Properties"],"operationId":"getFolderContentPropertiesById","summary":"Get content property for folder by id","description":"Retrieves a specific Content Property by ID that is attached to a specified folder.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the folder.","parameters":[{"name":"folder-id","in":"path","required":true,"description":"The ID of the folder for which content properties should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"property-id","in":"path","required":true,"description":"The ID of the content property being requested.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested content property is successfully retrieved.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentProperty"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified folder, the folder was not found, or the property was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:folder:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:folder:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"put":{"tags":["Content Properties"],"operationId":"updateFolderPropertyById","summary":"Update content property for folder by id","description":"Update a content property for a folder by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the folder.","parameters":[{"name":"folder-id","in":"path","required":true,"description":"The ID of the folder the property belongs to.","schema":{"format":"int64","type":"integer"}},{"name":"property-id","in":"path","required":true,"description":"The ID of the property to be updated.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"description":"The content property to be updated.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentPropertyUpdateRequest"}}},"required":true},"responses":{"200":{"description":"Returned if the content property was updated successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentProperty"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified folder or the folder was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:folder:confluence","write:folder:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:folder:confluence","write:folder:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"delete":{"tags":["Content Properties"],"operationId":"deleteFolderPropertyById","summary":"Delete content property for folder by id","description":"Deletes a content property for a folder by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the folder.","parameters":[{"name":"folder-id","in":"path","required":true,"description":"The ID of the folder the property belongs to.","schema":{"format":"int64","type":"integer"}},{"name":"property-id","in":"path","required":true,"description":"The ID of the property to be deleted.","schema":{"format":"int64","type":"integer"}}],"responses":{"204":{"description":"Returned if the content property was deleted successfully."},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified folder or the folder was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:folder:confluence","write:folder:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:folder:confluence","write:folder:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/folders/{id}/operations":{"get":{"tags":["Operation"],"operationId":"getFolderOperations","summary":"Get permitted operations for a folder","description":"Returns the permitted operations on specific folder.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the folder and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the folder for which operations should be returned.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested operations are returned.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PermittedOperationsResponse"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested folder or the folder was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:folder:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:folder:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/folders/{id}/direct-children":{"get":{"tags":["Children"],"operationId":"getFolderDirectChildren","summary":"Get direct children of a folder","description":"Returns all children for given folder id in the content tree. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\nThe following types of content will be returned:\n- Database\n- Embed\n- Folder\n- Page\n- Whiteboard\n\nThis endpoint returns minimal information about each child. To fetch more details, use a related endpoint based on the content type, such\nas:\n\n- [Get database by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-database/#api-databases-id-get)\n- [Get embed by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-smart-link/#api-embeds-id-get)\n- [Get folder by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-folder/#api-folders-id-get)\n- [Get page by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-page/#api-pages-id-get)\n- [Get whiteboard by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-whiteboard/#api-whiteboards-id-get).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nOnly content that the user has permission to view will be returned.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the parent folder.","schema":{"format":"int64","type":"integer"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of items per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"type":"string","items":{"$ref":"#/components/schemas/ContentSortOrder"}}}],"responses":{"200":{"description":"Returned if the requested children are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<ChildrenResponse>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/ChildrenResponse"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. Example response header format: <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified folder or the folder was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:hierarchical-content:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:hierarchical-content:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/folders/{id}/descendants":{"get":{"tags":["Descendants"],"operationId":"getFolderDescendants","summary":"Get descendants of folder","description":"Returns descendants in the content tree for a given folder by ID in top-to-bottom order (that is, the highest descendant is the first\nitem in the response payload). The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available by calling this endpoint with the cursor in the response payload. There is also a `depth` parameter specifying depth\nof descendants to be fetched.\n\nThe following types of content will be returned:\n- Database\n- Embed\n- Folder\n- Page\n- Whiteboard\n\nThis endpoint returns minimal information about each descendant. To fetch more details, use a related endpoint based on the content type, such\nas:\n\n- [Get database by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-database/#api-databases-id-get)\n- [Get embed by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-smart-link/#api-embeds-id-get)\n- [Get folder by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-folder/#api-folders-id-get)\n- [Get page by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-page/#api-pages-id-get)\n- [Get whiteboard by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-whiteboard/#api-whiteboards-id-get).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nPermission to view the  and its corresponding space","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the folder.","schema":{"format":"int64","type":"integer"}},{"name":"limit","in":"query","description":"Maximum number of items per result to return. If more results exist, call the endpoint with the cursor to fetch the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}},{"name":"depth","in":"query","description":"Maximum depth of descendants to return. If more results are required, use the endpoint corresponding to the content type of the deepest descendant to fetch more descendants.","schema":{"format":"int32","default":2,"minimum":1,"maximum":5,"type":"integer"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}}],"responses":{"200":{"description":"Returned if the requested descendants are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<DescendantsResponse>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/DescendantsResponse"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. Example response header format: <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified folder or the folder was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:hierarchical-content:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:hierarchical-content:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/folders/{id}/ancestors":{"get":{"tags":["Ancestors"],"operationId":"getFolderAncestors","summary":"Get all ancestors of folder","description":"Returns all ancestors for a given folder by ID in top-to-bottom order (that is, the highest ancestor is\nthe first item in the response payload). The number of results is limited by the `limit` parameter and additional results \n(if available) will be available by calling this endpoint with the ID of first ancestor in the response payload.\n\nThis endpoint returns minimal information about each ancestor. To fetch more details, use a related endpoint, such\nas [Get folder by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-smart-link/#api-folders-id-get).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nPermission to view the folder and its corresponding space","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the folder.","schema":{"format":"int64","type":"integer"}},{"name":"limit","in":"query","description":"Maximum number of items per result to return. If more results exist, call the endpoint with the highest ancestor's ID to fetch the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested ancestors are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<Ancestor>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Ancestor"}}}}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified folder or the folder was not found."}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:content.metadata:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:content.metadata:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/pages/{page-id}/versions/{version-number}":{"get":{"tags":["Version"],"operationId":"getPageVersionDetails","summary":"Get version details for page version","description":"Retrieves version details for the specified page and version number.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the page.","parameters":[{"name":"page-id","in":"path","required":true,"description":"The ID of the page for which version details should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"version-number","in":"path","required":true,"description":"The version number of the page to be returned.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested version details are successfully retrieved.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DetailedVersion"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified page, the page was not found, or the version number does not exist.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/custom-content/{custom-content-id}/versions":{"get":{"tags":["Version"],"operationId":"getCustomContentVersions","summary":"Get custom content versions","description":"Returns the versions of specific custom content.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the custom content and its corresponding page and space.","parameters":[{"name":"custom-content-id","in":"path","required":true,"description":"The ID of the custom content to be queried for its versions. If you don't know the custom content ID, use Get custom-content by type and filter the results.","schema":{"format":"int64","type":"integer"}},{"name":"body-format","in":"query","description":"The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.\n\nNote: If the custom content body type is `storage`, the `storage` and `atlas_doc_format` body formats are able to be returned. If the custom content body type is `raw`, only the `raw` body format is able to be returned.","schema":{"$ref":"#/components/schemas/CustomContentBodyRepresentation"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of versions per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/VersionSortOrder"}}],"responses":{"200":{"description":"Returned if the requested custom content versions are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<Version>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/CustomContentVersion"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/custom-content/<id>/versions?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested custom content or the custom content was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:custom-content:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:custom-content:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/custom-content/{custom-content-id}/versions/{version-number}":{"get":{"tags":["Version"],"operationId":"getCustomContentVersionDetails","summary":"Get version details for custom content version","description":"Retrieves version details for the specified custom content and version number.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the page.","parameters":[{"name":"custom-content-id","in":"path","required":true,"description":"The ID of the custom content for which version details should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"version-number","in":"path","required":true,"description":"The version number of the custom content to be returned.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested version details are successfully retrieved.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DetailedVersion"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified custom content, the custom content was not found, or the version number does not exist.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:custom-content:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:custom-content:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/spaces":{"get":{"tags":["Space"],"operationId":"getSpaces","summary":"Get spaces","description":"Returns all spaces. The results will be sorted by id ascending. The number of results is limited by the `limit` parameter and\nadditional results (if available) will be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nOnly spaces that the user has permission to view will be returned.","parameters":[{"name":"ids","in":"query","required":false,"description":"Filter the results to spaces based on their IDs. Multiple IDs can be specified as a comma-separated list.","schema":{"type":"array","maxItems":250,"items":{"type":"integer","format":"int64"}}},{"name":"keys","in":"query","required":false,"description":"Filter the results to spaces based on their keys. Multiple keys can be specified as a comma-separated list.","schema":{"type":"array","maxItems":250,"items":{"type":"string"}}},{"name":"type","in":"query","required":false,"description":"Filter the results to spaces based on their type.","schema":{"type":"string","enum":["global","collaboration","knowledge_base","personal"]}},{"name":"status","in":"query","required":false,"description":"Filter the results to spaces based on their status.","schema":{"type":"string","enum":["current","archived"]}},{"name":"labels","in":"query","required":false,"description":"Filter the results to spaces based on their labels. Multiple labels can be specified as a comma-separated list.","schema":{"type":"array","items":{"type":"string"}}},{"name":"favorited-by","in":"query","required":false,"description":"Filter the results to spaces favorited by the user with the specified account ID.","schema":{"type":"string"}},{"name":"not-favorited-by","in":"query","required":false,"description":"Filter the results to spaces NOT favorited by the user with the specified account ID.","schema":{"type":"string"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/SpaceSortOrder"}},{"name":"description-format","in":"query","required":false,"description":"The content format type to be returned in the `description` field of the response. If available, the representation will be available under a response field of the same name under the `description` field.","schema":{"$ref":"#/components/schemas/SpaceDescriptionBodyRepresentation"}},{"name":"include-icon","in":"query","required":false,"description":"If the icon for the space should be fetched or not.","schema":{"type":"boolean","default":false}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of spaces per result to return. If more results exist, use the `Link` response header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested spaces are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<Space>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/SpaceBulk"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/spaces?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:space:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:space:confluence"]}],"x-atlassian-data-security-policy":[{"app-access-rule-exempt":true}],"x-atlassian-connect-scope":"READ"},"post":{"tags":["Space","EAP"],"operationId":"createSpace","summary":"Create space","description":"Creates a Space as specified in the payload.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to create spaces.","requestBody":{"$ref":"#/components/requestBodies/SpaceCreateRequest"},"responses":{"201":{"description":"Returned if the requested space is created.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/SpaceBulk"},{"type":"object","properties":{"_links":{"type":"object","properties":{"base":{"type":"string","description":"Base url of the Confluence site."}}}}}]}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to create spaces.","content":{}},"413":{"description":"Returned if the request is too large in size (over 5 MB).","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["write:space:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["write:space:confluence"]}],"x-atlassian-data-security-policy":[{"app-access-rule-exempt":true}],"x-atlassian-connect-scope":"WRITE","x-experimental":true}},"/spaces/{id}":{"get":{"tags":["Space"],"operationId":"getSpaceById","summary":"Get space by id","description":"Returns a specific space.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the space to be returned.","schema":{"format":"int64","type":"integer"}},{"name":"description-format","in":"query","required":false,"description":"The content format type to be returned in the `description` field of the response. If available, the representation will be available under a response field of the same name under the `description` field.","schema":{"$ref":"#/components/schemas/SpaceDescriptionBodyRepresentation"}},{"name":"include-icon","in":"query","required":false,"description":"If the icon for the space should be fetched or not.","schema":{"type":"boolean","default":false}},{"name":"include-operations","in":"query","description":"Includes operations associated with this space in the response, as defined in the `Operation` object.\nThe number of results will be limited to 50 and sorted in the default sort order.\nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-properties","in":"query","description":"Includes space properties associated with this space in the response.\nThe number of results will be limited to 50 and sorted in the default sort order.\nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-permissions","in":"query","description":"Includes space permissions associated with this space in the response.\nThe number of results will be limited to 50 and sorted in the default sort order.\nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-role-assignments","in":"query","description":"Includes role assignments associated with this space in the response. This parameter is only accepted for EAP sites.\nThe number of results will be limited to 50 and sorted in the default sort order.\nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-labels","in":"query","description":"Includes labels associated with this space in the response.\nThe number of results will be limited to 50 and sorted in the default sort order.\nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"Returned if the requested space is returned.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/SpaceSingle"},{"type":"object","properties":{"_links":{"type":"object","properties":{"base":{"type":"string","description":"Base url of the Confluence site."}}}}}]}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested space or the space was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:space:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:space:confluence"]}],"x-atlassian-data-security-policy":[{"app-access-rule-exempt":true}],"x-atlassian-connect-scope":"READ"}},"/spaces/{id}/blogposts":{"get":{"tags":["Blog Post"],"operationId":"getBlogPostsInSpace","summary":"Get blog posts in space","description":"Returns all blog posts in a space. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission) and view the space.\nOnly blog posts that the user has permission to view will be returned.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the space for which blog posts should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/BlogPostSortOrder"}},{"name":"status","in":"query","required":false,"description":"Filter the results to blog posts based on their status. By default, `current` is used.","schema":{"type":"array","items":{"type":"string","enum":["current","deleted","trashed"]}}},{"name":"title","in":"query","required":false,"description":"Filter the results to blog posts based on their title.","schema":{"type":"string"}},{"name":"body-format","in":"query","description":"The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.","schema":{"$ref":"#/components/schemas/PrimaryBodyRepresentation"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of blog posts per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested blog posts are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<BlogPost>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/BlogPostBulk"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/spaces/<id>/blogposts?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified space or the space was not found."}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/spaces/{id}/labels":{"get":{"tags":["Label"],"operationId":"getSpaceLabels","summary":"Get labels for space","description":"Returns the labels of specific space. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the space.\nOnly labels that the user has permission to view will be returned.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the space for which labels should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"prefix","in":"query","required":false,"description":"Filter the results to labels based on their prefix.","schema":{"default":"my, team","type":"string","enum":["my","team"]}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"type":"string","items":{"$ref":"#/components/schemas/LabelSortOrder"}}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of labels per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested labels are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<Label>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Label"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/spaces/<id>/labels?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested space or the space was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:space:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:space:confluence"]}],"x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}],"x-atlassian-connect-scope":"READ"}},"/spaces/{id}/content/labels":{"get":{"tags":["Label"],"operationId":"getSpaceContentLabels","summary":"Get labels for space content","description":"Returns the labels of space content (pages, blogposts etc). The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the space.\nOnly labels that the user has permission to view will be returned.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the space for which labels should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"prefix","in":"query","required":false,"description":"Filter the results to labels based on their prefix.","schema":{"default":"my, team","type":"string","enum":["my","team"]}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"type":"string","items":{"$ref":"#/components/schemas/LabelSortOrder"}}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of labels per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested labels are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<Label>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Label"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/spaces/<id>/labels?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested space or the space was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:space:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:space:confluence"]}],"x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}],"x-atlassian-connect-scope":"READ"}},"/spaces/{id}/custom-content":{"get":{"tags":["Custom Content"],"operationId":"getCustomContentByTypeInSpace","summary":"Get custom content by type in space","description":"Returns all custom content for a given type within a given space. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the custom content and the corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the space for which custom content should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"type","in":"query","required":true,"description":"The type of custom content being requested. See: https://developer.atlassian.com/cloud/confluence/custom-content/ for additional details on custom content.","schema":{"type":"string"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of pages per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}},{"name":"body-format","in":"query","description":"The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.\n\nNote: If the custom content body type is `storage`, the `storage` and `atlas_doc_format` body formats are able to be returned. If the custom content body type is `raw`, only the `raw` body format is able to be returned.","schema":{"$ref":"#/components/schemas/CustomContentBodyRepresentation"}}],"responses":{"200":{"description":"Returned if the requested custom content is returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<CustomContent>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/CustomContentBulk"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/spaces/{id}/custom-content?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the space is not found. Returned if the type of custom content is not found. Note, this is distinct from the type being present, but no instances of the type, which would be a 200 with empty results."}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:custom-content:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:custom-content:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/spaces/{id}/operations":{"get":{"tags":["Operation"],"operationId":"getSpaceOperations","summary":"Get permitted operations for space","description":"Returns the permitted operations on specific space.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the space for which operations should be returned.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested operations are returned.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PermittedOperationsResponse"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspace or the space was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:space:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:space:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":true}]}},"/spaces/{id}/pages":{"get":{"tags":["Page"],"operationId":"getPagesInSpace","summary":"Get pages in space","description":"Returns all pages in a space. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission) and 'View' permission for the space.\nOnly pages that the user has permission to view will be returned.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the space for which pages should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"depth","in":"query","required":false,"description":"Filter the results to pages at the root level of the space or to all pages in the space.","schema":{"type":"string","default":"all","enum":["all","root"]}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/PageSortOrder"}},{"name":"status","in":"query","required":false,"description":"Filter the results to pages based on their status. By default, `current` and `archived` are used.","schema":{"type":"array","items":{"type":"string","enum":["current","archived","deleted","trashed"]}}},{"name":"title","in":"query","required":false,"description":"Filter the results to pages based on their title.","schema":{"type":"string"}},{"name":"body-format","in":"query","description":"The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.","schema":{"$ref":"#/components/schemas/PrimaryBodyRepresentation"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of pages per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested pages are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<Page>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/PageBulk"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/spaces/<id>/pages?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified space or the space was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/spaces/{space-id}/properties":{"get":{"tags":["Space Properties"],"operationId":"getSpaceProperties","summary":"Get space properties in space","description":"Returns all properties for the given space. Space properties are a key-value storage associated with a space.\nThe limit parameter specifies the maximum number of results returned in a single response. Use the `link` response header\nto paginate through additional results.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission) and 'View' permission for the space.","parameters":[{"name":"space-id","in":"path","required":true,"description":"The ID of the space for which space properties should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"key","in":"query","required":false,"description":"The key of the space property to retrieve. This should be used when a user knows the key of their property, but needs to retrieve the id for use in other methods.","schema":{"type":"string"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of pages per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested space properties are returned. `results` may be empty if no results were found.","content":{"application/json":{"schema":{"title":"MultiEntityResult<SpaceProperty>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/SpaceProperty"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string","description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/spaces/<id>/properties?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified space or the space was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:space:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:space:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":true}]},"post":{"tags":["Space Properties"],"operationId":"createSpaceProperty","summary":"Create space property in space","description":"Creates a new space property.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission) and 'Admin' permission for the space.","parameters":[{"name":"space-id","in":"path","required":true,"description":"The ID of the space for which space properties should be returned.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"description":"The space property to be created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SpacePropertyCreateRequest"}}},"required":true},"responses":{"201":{"description":"Returned if the space property was created successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SpaceProperty"}}},"headers":{"location":{"schema":{"type":"string","description":"Returns the URL at which the space property is retrievable.\n"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified space or the space was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:space:confluence","write:space:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:space:confluence","write:space:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":true}]}},"/spaces/{space-id}/properties/{property-id}":{"get":{"tags":["Space Properties"],"operationId":"getSpacePropertyById","summary":"Get space property by id","description":"Retrieve a space property by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission) and 'View' permission for the space.","parameters":[{"name":"space-id","in":"path","required":true,"description":"The ID of the space the property belongs to.","schema":{"format":"int64","type":"integer"}},{"name":"property-id","in":"path","required":true,"description":"The ID of the property to be retrieved.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the space property was retrieved.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SpaceProperty"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified space or the space was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:space:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:space:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":true}]},"put":{"tags":["Space Properties"],"operationId":"updateSpacePropertyById","summary":"Update space property by id","description":"Update a space property by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission) and 'Admin' permission for the space.","parameters":[{"name":"space-id","in":"path","required":true,"description":"The ID of the space the property belongs to.","schema":{"format":"int64","type":"integer"}},{"name":"property-id","in":"path","required":true,"description":"The ID of the property to be updated.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"description":"The space property to be updated.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SpacePropertyUpdateRequest"}}},"required":true},"responses":{"200":{"description":"Returned if the space property was updated successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SpaceProperty"}}},"headers":{"location":{"schema":{"type":"string","description":"Returns the URL at which the space property is retrievable.\n"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified space or the space was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:space:confluence","write:space:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:space:confluence","write:space:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":true}]},"delete":{"tags":["Space Properties"],"operationId":"deleteSpacePropertyById","summary":"Delete space property by id","description":"Deletes a space property by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission) and 'Admin' permission for the space.","parameters":[{"name":"space-id","in":"path","required":true,"description":"The ID of the space the property belongs to.","schema":{"format":"int64","type":"integer"}},{"name":"property-id","in":"path","required":true,"description":"The ID of the property to be deleted.","schema":{"format":"int64","type":"integer"}}],"responses":{"204":{"description":"Returned if the space property was deleted successfully."},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified space or the space was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:space:confluence","write:space:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:space:confluence","write:space:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":true}]}},"/spaces/{id}/permissions":{"get":{"tags":["Space Permissions"],"operationId":"getSpacePermissionsAssignments","summary":"Get space permissions assignments","description":"Returns space permission assignments for a specific space.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the space to be returned.","schema":{"format":"int64","type":"integer"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of assignments to return. If more results exist, use the `Link` response header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested assignments are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<SpacePermissionAssignment>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/SpacePermissionAssignment"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested space permission assignments or the space was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:space:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:space:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":true}]}},"/space-permissions":{"get":{"tags":["Space Permissions","EAP"],"operationId":"getAvailableSpacePermissions","summary":"Get available space permissions","description":"Retrieves the available space permissions.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site.","parameters":[{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of space permissions to return. If more results exist, use the `Link` response header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested space permissions are retrieved.","content":{"application/json":{"schema":{"title":"MultiEntityResult<SpacePermission>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/SpacePermission"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\navailable space permissions.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:space.permission:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:space.permission:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":true}],"x-experimental":true}},"/space-roles":{"get":{"tags":["Space Roles","EAP"],"operationId":"getAvailableSpaceRoles","summary":"Get available space roles","description":"Retrieves the available space roles.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site; if requesting a certain space's roles, permission to view the space.","parameters":[{"name":"space-id","in":"query","required":false,"description":"The space ID for which to filter available space roles; if empty, return all available space roles for the tenant.","schema":{"type":"string"}},{"name":"role-type","in":"query","required":false,"description":"The space role type to filter results by.","schema":{"type":"string"}},{"name":"principal-id","in":"query","required":false,"description":"The principal ID to filter results by. If specified, a principal-type must also be specified. Paired with a `principal-type` of `ACCESS_CLASS`, valid values include [`anonymous-users`, `jsm-project-admins`, `authenticated-users`, `all-licensed-users`, `all-product-admins`]","schema":{"type":"string"}},{"name":"principal-type","in":"query","required":false,"description":"The principal type to filter results by. If specified, a principal-id must also be specified.","schema":{"$ref":"#/components/schemas/PrincipalType"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of space roles to return. If more results exist, use the `Link` response header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested space roles are retrieved.","content":{"application/json":{"schema":{"title":"MultiEntityResult<SpaceRole>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/SpaceRole"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\navailable space roles.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:space.permission:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:space.permission:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":true}],"x-experimental":true}},"/space-roles/{id}":{"get":{"tags":["Space Roles","EAP"],"operationId":"getSpaceRolesById","summary":"Get space role by ID","description":"Retrieves the space role by ID.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the space role to retrieve.","schema":{"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested space role is retrieved.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/SpaceRole"},{"type":"object","properties":{"_links":{"type":"object","properties":{"base":{"type":"string","description":"Base url of the Confluence site."}}}}}]}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspace role.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:space.permission:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:space.permission:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":true}],"x-experimental":true}},"/spaces/{id}/role-assignments":{"get":{"tags":["Space Roles","EAP"],"operationId":"getSpaceRoleAssignments","summary":"Get space role assignments","description":"Retrieves the space role assignments.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the space for which to retrieve assignments.","schema":{"type":"integer"}},{"name":"role-id","in":"query","required":false,"description":"Filters the returned role assignments to the provided role ID.","schema":{"type":"string"}},{"name":"role-type","in":"query","required":false,"description":"Filters the returned role assignments to the provided role type.","schema":{"type":"string"}},{"name":"principal-id","in":"query","required":false,"description":"Filters the returned role assignments to the provided principal id. If specified, a principal-type must also be specified. Paired with a `principal-type` of `ACCESS_CLASS`, valid values include [`anonymous-users`, `jsm-project-admins`, `authenticated-users`, `all-licensed-users`, `all-product-admins`]","schema":{"type":"string"}},{"name":"principal-type","in":"query","required":false,"description":"Filters the returned role assignments to the provided principal type. If specified, a principal-id must also be specified.","schema":{"$ref":"#/components/schemas/PrincipalType"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of space roles to return. If more results exist, use the `Link` response header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested space role assignments are retrieved.","content":{"application/json":{"schema":{"title":"MultiEntityResult<SpaceRoleAssignment>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/SpaceRoleAssignment"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspace or the space was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:space.permission:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:space.permission:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":true}],"x-experimental":true},"post":{"tags":["Space Roles","EAP"],"operationId":"setSpaceRoleAssignments","summary":"Set space role assignments","description":"Sets space role assignments as specified in the payload.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to manage roles in the space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the space for which to retrieve assignments.","schema":{"type":"integer"}}],"requestBody":{"$ref":"#/components/requestBodies/SetSpaceRoleAssignmentRequest"},"responses":{"200":{"description":"Returned if the requested update to space role assignments succeeds in its entirety.","content":{"application/json":{"schema":{"title":"MultiEntityResult<SpaceRoleAssignment>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/SpaceRoleAssignment"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to set roles in the space, or the space was not found.","content":{}},"413":{"description":"Returned if the request is too large in size (over 5 MB).","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["write:space.permission:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["write:space.permission:confluence"]}],"x-atlassian-connect-scope":"SPACE_ADMIN","x-atlassian-data-security-policy":[{"app-access-rule-exempt":true}],"x-experimental":true}},"/pages/{id}/footer-comments":{"get":{"tags":["Comment"],"operationId":"getPageFooterComments","summary":"Get footer comments for page","description":"Returns the root footer comments of specific page. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the page for which footer comments should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"body-format","in":"query","required":false,"description":"The content format type to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.","schema":{"$ref":"#/components/schemas/PrimaryBodyRepresentation"}},{"name":"status","in":"query","description":"Filter the footer comment being retrieved by its status.","schema":{"type":"array","items":{"type":"string","enum":["current","archived","trashed","deleted","historical","draft"]}}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/CommentSortOrder"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of footer comments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested footer comments are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<PageCommentModel>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/PageCommentModel"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/pages/<id>/footer-comments?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested page or the page was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:comment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/pages/{id}/inline-comments":{"get":{"tags":["Comment"],"operationId":"getPageInlineComments","summary":"Get inline comments for page","description":"Returns the root inline comments of specific page. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the page for which inline comments should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"body-format","in":"query","required":false,"description":"The content format type to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.","schema":{"$ref":"#/components/schemas/PrimaryBodyRepresentation"}},{"name":"status","in":"query","required":false,"description":"Filter the inline comment being retrieved by its status.","schema":{"type":"array","items":{"type":"string","enum":["current","archived","trashed","deleted","historical","draft"]}}},{"name":"resolution-status","in":"query","required":false,"description":"Filter the inline comment being retrieved by its resolution status.","schema":{"type":"array","items":{"type":"string","enum":["resolved","open","dangling","reopened"]}}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/CommentSortOrder"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of inline comments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested inline comments are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<PageInlineCommentModel>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/PageInlineCommentModel"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/pages/<id>/inline-comments?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested page or the page was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:comment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/blogposts/{id}/footer-comments":{"get":{"tags":["Comment"],"operationId":"getBlogPostFooterComments","summary":"Get footer comments for blog post","description":"Returns the root footer comments of specific blog post. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the blog post and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the blog post for which footer comments should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"body-format","in":"query","required":false,"description":"The content format type to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.","schema":{"$ref":"#/components/schemas/PrimaryBodyRepresentation"}},{"name":"status","in":"query","description":"Filter the footer comment being retrieved by its status.","schema":{"type":"array","items":{"type":"string","enum":["current","deleted","trashed","historical","draft"]}}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/CommentSortOrder"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of footer comments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested footer comments are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<BlogPostCommentModel>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/BlogPostCommentModel"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/blogposts/<id>/footer-comments?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested blog post or the blog post was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:comment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/blogposts/{id}/inline-comments":{"get":{"tags":["Comment"],"operationId":"getBlogPostInlineComments","summary":"Get inline comments for blog post","description":"Returns the root inline comments of specific blog post. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the blog post and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the blog post for which inline comments should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"body-format","in":"query","required":false,"description":"The content format type to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.","schema":{"$ref":"#/components/schemas/PrimaryBodyRepresentation"}},{"name":"status","in":"query","description":"Filter the inline comment being retrieved by its status.","schema":{"type":"array","items":{"type":"string","enum":["current","deleted","trashed","historical","draft"]}}},{"name":"resolution-status","in":"query","required":false,"description":"Filter the inline comment being retrieved by its resolution status.","schema":{"type":"array","items":{"type":"string","enum":["resolved","open","dangling","reopened"]}}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/CommentSortOrder"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of inline comments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested inline comments are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<BlogPostInlineCommentModel>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/BlogPostInlineCommentModel"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/blogposts/<id>/inline-comments?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested blog post or the blog post was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:comment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/footer-comments":{"get":{"tags":["Comment"],"operationId":"getFooterComments","summary":"Get footer comments","description":"Returns all footer comments. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the container and its corresponding space.","parameters":[{"name":"body-format","in":"query","required":false,"description":"The content format type to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.","schema":{"$ref":"#/components/schemas/PrimaryBodyRepresentation"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/CommentSortOrder"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of footer comments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested footer comments are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<FooterCommentModel>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/FooterCommentModel"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/footer-comments/<id>/children?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:comment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"post":{"tags":["Comment"],"operationId":"createFooterComment","summary":"Create footer comment","description":"Create a footer comment.\n\nThe footer comment can be made against several locations: \n- at the top level (specifying pageId or blogPostId in the request body)\n- as a reply (specifying parentCommentId in the request body)\n- against an attachment (note: this is different than the comments added via the attachment properties page on the UI, which are referred to as version comments)\n- against a custom content\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page or blogpost and its corresponding space. Permission to create comments in the space.","requestBody":{"description":"The footer comment to be created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateFooterCommentModel"}}},"required":true},"responses":{"201":{"description":"Returned if the footer comment is created.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/FooterCommentModel"},{"type":"object","properties":{"_links":{"type":"object","properties":{"base":{"type":"string","description":"Base url of the Confluence site."}}}}}]}}},"headers":{"location":{"schema":{"type":"string"},"description":"Returns the URL at which the created footer comment is retrievable.\n"}}},"400":{"description":"Returned if an invalid request is provided","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- The page, blog post, parent comment, or attachment was not found\n- The calling user does not have permission to view the parent page/blog post\n- The user is forbidden from creating a comment tied to a resource they are allowed to view","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["write:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["write:comment:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/footer-comments/{comment-id}":{"get":{"tags":["Comment"],"operationId":"getFooterCommentById","summary":"Get footer comment by id","description":"Retrieves a footer comment by id\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the container and its corresponding space.","parameters":[{"name":"comment-id","in":"path","required":true,"description":"The ID of the comment to be retrieved.","schema":{"format":"int64","type":"integer"}},{"name":"body-format","in":"query","required":false,"description":"The content format type to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.","schema":{"$ref":"#/components/schemas/PrimaryBodyRepresentationSingle"}},{"name":"version","in":"query","description":"Allows you to retrieve a previously published version. Specify the previous version's number to retrieve its details.","schema":{"type":"integer"}},{"name":"include-properties","in":"query","description":"Includes content properties associated with this footer comment in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-operations","in":"query","description":"Includes operations associated with this footer comment in the response, as defined in the `Operation` object.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-likes","in":"query","description":"Includes likes associated with this footer comment in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-versions","in":"query","description":"Includes versions associated with this footer comment in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-version","in":"query","description":"Includes the current version associated with this footer comment in the response.\nBy default this is included and can be omitted by setting the value to `false`.","schema":{"type":"boolean","default":true}}],"responses":{"200":{"description":"Returned if the footer comment is successfully retrieved.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/FooterCommentModel"},{"type":"object","properties":{"_links":{"type":"object","properties":{"base":{"type":"string","description":"Base url of the Confluence site."}}}}}]}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\ncomment or the comment was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:comment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"put":{"tags":["Comment"],"operationId":"updateFooterComment","summary":"Update footer comment","description":"Update a footer comment. This can be used to update the body text of a comment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page or blogpost and its corresponding space. Permission to create comments in the space.","parameters":[{"name":"comment-id","in":"path","required":true,"description":"The ID of the comment to be retrieved.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"description":"The footer comment to be created","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/UpdateFooterCommentModel"},{"type":"object","properties":{"_links":{"type":"object","properties":{"base":{"type":"string","description":"Base url of the Confluence site."}}}}}]}}},"required":true},"responses":{"200":{"description":"Returned if the footer comment is updated successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FooterCommentModel"}}}},"400":{"description":"Returned if an invalid request is provided","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- The comment was not found\n- The calling user does not have permission to view the comment\n- The user is forbidden from updating a comment tied to a resource they are allowed to view"}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["write:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["write:comment:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"delete":{"tags":["Comment"],"operationId":"deleteFooterComment","summary":"Delete footer comment","description":"Deletes a footer comment. This is a permanent deletion and cannot be reverted.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page or blogpost and its corresponding space. Permission to delete comments in the space.","parameters":[{"name":"comment-id","in":"path","required":true,"description":"The ID of the comment to be retrieved.","schema":{"format":"int64","type":"integer"}}],"responses":{"204":{"description":"Returned if the footer comment is deleted."},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- The comment was not found\n- The calling user does not have permission to view the comment\n- The user is forbidden from deleting a comment tied to a resource they are allowed to view"}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["delete:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["delete:comment:confluence"]}],"x-atlassian-connect-scope":"DELETE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/footer-comments/{id}/children":{"get":{"tags":["Comment"],"operationId":"getFooterCommentChildren","summary":"Get children footer comments","description":"Returns the children footer comments of specific comment. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the parent comment for which footer comment children should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"body-format","in":"query","required":false,"description":"The content format type to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.","schema":{"$ref":"#/components/schemas/PrimaryBodyRepresentation"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/CommentSortOrder"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of footer comments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested footer comments are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<ChildrenCommentModel>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/ChildrenCommentModel"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/footer-comments/<id>/children?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nparent page/blog post or the page/blog post was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:comment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/footer-comments/{id}/likes/count":{"get":{"tags":["Like"],"operationId":"getFooterLikeCount","summary":"Get like count for footer comment","description":"Returns the count of likes of specific footer comment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page/blogpost and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the footer comment for which like count should be returned.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested count is returned.","content":{"application/json":{"schema":{"title":"Integer","type":"object","properties":{"count":{"type":"integer","format":"int64","description":"The count number"}}}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the comment or the comment was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:comment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/footer-comments/{id}/likes/users":{"get":{"tags":["Like"],"operationId":"getFooterLikeUsers","summary":"Get account IDs of likes for footer comment","description":"Returns the account IDs of likes of specific footer comment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page/blogpost and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the footer comment for which like count should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of account IDs per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":0,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested account IDs are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<String>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Like"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/footer-comments/<id>/likes/users?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the comment or the comment was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:comment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/footer-comments/{id}/operations":{"get":{"tags":["Operation"],"operationId":"getFooterCommentOperations","summary":"Get permitted operations for footer comment","description":"Returns the permitted operations on specific footer comment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the parent content of the footer comment and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the footer comment for which operations should be returned.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested operations are returned.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PermittedOperationsResponse"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nparent content of the requested footer comment or the footer comment was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:comment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/footer-comments/{id}/versions":{"get":{"tags":["Version"],"operationId":"getFooterCommentVersions","summary":"Get footer comment versions","description":"Retrieves the versions of the specified footer comment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page or blog post and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the footer comment for which versions should be returned","schema":{"format":"int64","type":"integer"}},{"name":"body-format","in":"query","description":"The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.","schema":{"$ref":"#/components/schemas/PrimaryBodyRepresentation"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of versions per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/VersionSortOrder"}}],"responses":{"200":{"description":"Returned if the requested footer comment versions are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<Version>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/CommentVersion"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/footer-comments/<id>/versions?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the specified page\nor blog post, the footer comment was not found, or the version number does not exist.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:comment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/footer-comments/{id}/versions/{version-number}":{"get":{"tags":["Version"],"operationId":"getFooterCommentVersionDetails","summary":"Get version details for footer comment version","description":"Retrieves version details for the specified footer comment version.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page or blog post and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the footer comment for which version details should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"version-number","in":"path","required":true,"description":"The version number of the footer comment to be returned.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested version details are successfully retrieved.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DetailedVersion"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the specified page\nor blog post, the footer comment was not found, or the version number does not exist.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:comment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/inline-comments":{"get":{"tags":["Comment"],"operationId":"getInlineComments","summary":"Get inline comments","description":"Returns all inline comments. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page and its corresponding space.","parameters":[{"name":"body-format","in":"query","required":false,"description":"The content format type to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.","schema":{"$ref":"#/components/schemas/PrimaryBodyRepresentation"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/CommentSortOrder"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of footer comments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested inline comments are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<InlineCommentModel>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/InlineCommentModel"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/inline-comments/<id>/children?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:comment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"post":{"tags":["Comment"],"operationId":"createInlineComment","summary":"Create inline comment","description":"Create an inline comment. This can be at the top level (specifying pageId or blogPostId in the request body)\nor as a reply (specifying parentCommentId in the request body). Note the inlineCommentProperties object in the\nrequest body is used to select the text the inline comment should be tied to. This is what determines the text \nhighlighting when viewing a page in Confluence.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page or blogpost and its corresponding space. Permission to create comments in the space.","requestBody":{"description":"The inline comment to be created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateInlineCommentModel"}}},"required":true},"responses":{"201":{"description":"Returned if the inline comment is created.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/InlineCommentModel"},{"type":"object","properties":{"_links":{"type":"object","properties":{"base":{"type":"string","description":"Base url of the Confluence site."}}}}}]}}},"headers":{"location":{"schema":{"type":"string"},"description":"Returns the URL at which the created inline comment is retrievable.\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- The page/blog post was not found\n- The calling user does not have permission to view the parent page/blog post\n- The user is forbidden from creating a comment tied to a resource they are allowed to view","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["write:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["write:comment:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/inline-comments/{comment-id}":{"get":{"tags":["Comment"],"operationId":"getInlineCommentById","summary":"Get inline comment by id","description":"Retrieves an inline comment by id\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page or blogpost and its corresponding space.","parameters":[{"name":"comment-id","in":"path","required":true,"description":"The ID of the comment to be retrieved.","schema":{"format":"int64","type":"integer"}},{"name":"body-format","in":"query","required":false,"description":"The content format type to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.","schema":{"$ref":"#/components/schemas/PrimaryBodyRepresentationSingle"}},{"name":"version","in":"query","description":"Allows you to retrieve a previously published version. Specify the previous version's number to retrieve its details.","schema":{"type":"integer"}},{"name":"include-properties","in":"query","description":"Includes content properties associated with this inline comment in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-operations","in":"query","description":"Includes operations associated with this inline comment in the response, as defined in the `Operation` object.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-likes","in":"query","description":"Includes likes associated with this inline comment in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-versions","in":"query","description":"Includes versions associated with this inline comment in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results.","schema":{"type":"boolean","default":false}},{"name":"include-version","in":"query","description":"Includes the current version associated with this inline comment in the response.\nBy default this is included and can be omitted by setting the value to `false`.","schema":{"type":"boolean","default":true}}],"responses":{"200":{"description":"Returned if the inline comment is successfully retrieved.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/InlineCommentModel"},{"type":"object","properties":{"_links":{"type":"object","properties":{"base":{"type":"string","description":"Base url of the Confluence site."}}}}}]}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\ncomment or the comment was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:comment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"put":{"tags":["Comment"],"operationId":"updateInlineComment","summary":"Update inline comment","description":"Update an inline comment. This can be used to update the body text of a comment and/or to resolve the comment\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page or blogpost and its corresponding space. Permission to create comments in the space.","parameters":[{"name":"comment-id","in":"path","required":true,"description":"The ID of the comment to be retrieved.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"description":"The inline comment to be updated","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateInlineCommentModel"}}},"required":true},"responses":{"200":{"description":"Returned if the inline comment is updated successfully.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/InlineCommentModel"},{"type":"object","properties":{"_links":{"type":"object","properties":{"base":{"type":"string","description":"Base url of the Confluence site."}}}}}]}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- The comment was not found\n- The calling user does not have permission to view the comment\n- The user is forbidden from updating a comment tied to a resource they are allowed to view","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["write:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["write:comment:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"delete":{"tags":["Comment"],"operationId":"deleteInlineComment","summary":"Delete inline comment","description":"Deletes an inline comment. This is a permanent deletion and cannot be reverted.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page or blogpost and its corresponding space. Permission to delete comments in the space.","parameters":[{"name":"comment-id","in":"path","required":true,"description":"The ID of the comment to be deleted.","schema":{"format":"int64","type":"integer"}}],"responses":{"204":{"description":"Returned if the inline comment is deleted."},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- The comment was not found\n- The calling user does not have permission to view the comment\n- The user is forbidden from deleting a comment tied to a resource they are allowed to view","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["delete:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["delete:comment:confluence"]}],"x-atlassian-connect-scope":"DELETE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/inline-comments/{id}/children":{"get":{"tags":["Comment"],"operationId":"getInlineCommentChildren","summary":"Get children inline comments","description":"Returns the children inline comments of specific comment. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the parent comment for which inline comment children should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"body-format","in":"query","required":false,"description":"The content format type to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.","schema":{"$ref":"#/components/schemas/PrimaryBodyRepresentation"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/CommentSortOrder"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of footer comments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested footer comments are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<InlineCommentChildrenModel>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/InlineCommentChildrenModel"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/inline-comments/<id>/children?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nparent page/blog post or the page/blog post was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:comment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/inline-comments/{id}/likes/count":{"get":{"tags":["Like"],"operationId":"getInlineLikeCount","summary":"Get like count for inline comment","description":"Returns the count of likes of specific inline comment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page/blogpost and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the inline comment for which like count should be returned.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested count is returned.","content":{"application/json":{"schema":{"title":"Integer","type":"object","properties":{"count":{"type":"integer","format":"int64","description":"The count number"}}}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the comment or the comment was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:comment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/inline-comments/{id}/likes/users":{"get":{"tags":["Like"],"operationId":"getInlineLikeUsers","summary":"Get account IDs of likes for inline comment","description":"Returns the account IDs of likes of specific inline comment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page/blogpost and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the inline comment for which like count should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of account IDs per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":0,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested account IDs are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<String>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Like"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/inline-comments/<id>/likes/users?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the comment or the comment was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:comment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/inline-comments/{id}/operations":{"get":{"tags":["Operation"],"operationId":"getInlineCommentOperations","summary":"Get permitted operations for inline comment","description":"Returns the permitted operations on specific inline comment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the parent content of the inline comment and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the inline comment for which operations should be returned.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested operations are returned.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PermittedOperationsResponse"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nparent content of the requested inline comment or the inline comment was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:comment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/inline-comments/{id}/versions":{"get":{"tags":["Version"],"operationId":"getInlineCommentVersions","summary":"Get inline comment versions","description":"Retrieves the versions of the specified inline comment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page or blog post and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the inline comment for which versions should be returned","schema":{"format":"int64","type":"integer"}},{"name":"body-format","in":"query","description":"The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.","schema":{"$ref":"#/components/schemas/PrimaryBodyRepresentation"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of versions per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/VersionSortOrder"}}],"responses":{"200":{"description":"Returned if the requested inline comment versions are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<Version>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/CommentVersion"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/inline-comments/<id>/versions?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the specified page\nor blog post, the inline comment was not found, or the version number does not exist.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:comment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/inline-comments/{id}/versions/{version-number}":{"get":{"tags":["Version"],"operationId":"getInlineCommentVersionDetails","summary":"Get version details for inline comment version","description":"Retrieves version details for the specified inline comment version.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page or blog post and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the inline comment for which version details should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"version-number","in":"path","required":true,"description":"The version number of the inline comment to be returned.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested version details are successfully retrieved.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DetailedVersion"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the specified page\nor blog post, the inline comment was not found, or the version number does not exist.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:comment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/comments/{comment-id}/properties":{"get":{"tags":["Content Properties"],"operationId":"getCommentContentProperties","summary":"Get content properties for comment","description":"Retrieves Content Properties attached to a specified comment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the comment.","parameters":[{"name":"comment-id","in":"path","required":true,"description":"The ID of the comment for which content properties should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"key","in":"query","required":false,"description":"Filters the response to return a specific content property with matching key (case sensitive).","schema":{"type":"string"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/ContentPropertySortOrder"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of attachments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested content properties are successfully retrieved.","content":{"application/json":{"schema":{"title":"MultiEntityResult<ContentProperty>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/ContentProperty"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/comments/<comment-id>/properties?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified comment or the comment was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:comment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"post":{"tags":["Content Properties"],"operationId":"createCommentProperty","summary":"Create content property for comment","description":"Creates a new content property for a comment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to update the comment.","parameters":[{"name":"comment-id","in":"path","required":true,"description":"The ID of the comment to create a property for.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"description":"The content property to be created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentPropertyCreateRequest"}}},"required":true},"responses":{"200":{"description":"Returned if the content property was created successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentProperty"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified page or the page was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:comment:confluence","write:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:comment:confluence","write:comment:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/comments/{comment-id}/properties/{property-id}":{"get":{"tags":["Content Properties"],"operationId":"getCommentContentPropertiesById","summary":"Get content property for comment by id","description":"Retrieves a specific Content Property by ID that is attached to a specified comment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the comment.","parameters":[{"name":"comment-id","in":"path","required":true,"description":"The ID of the comment for which content properties should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"property-id","in":"path","required":true,"description":"The ID of the content property being requested.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested content property is successfully retrieved.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentProperty"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified comment, the comment was not found, or the property was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:comment:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"put":{"tags":["Content Properties"],"operationId":"updateCommentPropertyById","summary":"Update content property for comment by id","description":"Update a content property for a comment by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the comment.","parameters":[{"name":"comment-id","in":"path","required":true,"description":"The ID of the comment the property belongs to.","schema":{"format":"int64","type":"integer"}},{"name":"property-id","in":"path","required":true,"description":"The ID of the property to be updated.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"description":"The content property to be updated.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentPropertyUpdateRequest"}}},"required":true},"responses":{"200":{"description":"Returned if the content property was updated successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentProperty"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified comment or the comment was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:comment:confluence","write:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:comment:confluence","write:comment:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"delete":{"tags":["Content Properties"],"operationId":"deleteCommentPropertyById","summary":"Delete content property for comment by id","description":"Deletes a content property for a comment by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the comment.","parameters":[{"name":"comment-id","in":"path","required":true,"description":"The ID of the comment the property belongs to.","schema":{"format":"int64","type":"integer"}},{"name":"property-id","in":"path","required":true,"description":"The ID of the property to be deleted.","schema":{"format":"int64","type":"integer"}}],"responses":{"204":{"description":"Returned if the content property was deleted successfully."},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified comment or the comment was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:comment:confluence","write:comment:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:comment:confluence","write:comment:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/tasks":{"get":{"tags":["Task"],"operationId":"getTasks","summary":"Get tasks","description":"Returns all tasks. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nOnly tasks that the user has permission to view will be returned.","parameters":[{"name":"body-format","in":"query","description":"The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.","schema":{"$ref":"#/components/schemas/PrimaryBodyRepresentation"}},{"name":"include-blank-tasks","in":"query","description":"Specifies whether to include blank tasks in the response. Defaults to `true`.","schema":{"type":"boolean"}},{"name":"status","in":"query","description":"Filters on the status of the task.","schema":{"type":"string","enum":["complete","incomplete"]}},{"name":"task-id","in":"query","required":false,"description":"Filters on task ID. Multiple IDs can be specified.","schema":{"type":"array","maxItems":250,"items":{"type":"integer","format":"int64"}}},{"name":"space-id","in":"query","description":"Filters on the space ID of the task. Multiple IDs can be specified.","schema":{"type":"array","maxItems":250,"items":{"type":"integer","format":"int64"}}},{"name":"page-id","in":"query","description":"Filters on the page ID of the task. Multiple IDs can be specified. Note - page and blog post filters can be used in conjunction.","schema":{"type":"array","maxItems":250,"items":{"type":"integer","format":"int64"}}},{"name":"blogpost-id","in":"query","description":"Filters on the blog post ID of the task. Multiple IDs can be specified. Note - page and blog post filters can be used in conjunction.","schema":{"type":"array","maxItems":250,"items":{"type":"integer","format":"int64"}}},{"name":"created-by","in":"query","description":"Filters on the Account ID of the user who created this task. Multiple IDs can be specified.","schema":{"type":"array","maxItems":250,"items":{"type":"string"}}},{"name":"assigned-to","in":"query","description":"Filters on the Account ID of the user to whom this task is assigned. Multiple IDs can be specified.","schema":{"type":"array","maxItems":250,"items":{"type":"string"}}},{"name":"completed-by","in":"query","description":"Filters on the Account ID of the user who completed this task. Multiple IDs can be specified.","schema":{"type":"array","maxItems":250,"items":{"type":"string"}}},{"name":"created-at-from","in":"query","description":"Filters on start of date-time range of task based on creation date (inclusive). Input is epoch time in milliseconds.","schema":{"type":"integer","format":"int64"}},{"name":"created-at-to","in":"query","description":"Filters on end of date-time range of task based on creation date (inclusive). Input is epoch time in milliseconds.","schema":{"type":"integer","format":"int64"}},{"name":"due-at-from","in":"query","description":"Filters on start of date-time range of task based on due date (inclusive). Input is epoch time in milliseconds.","schema":{"type":"integer","format":"int64"}},{"name":"due-at-to","in":"query","description":"Filters on end of date-time range of task based on due date (inclusive). Input is epoch time in milliseconds.","schema":{"type":"integer","format":"int64"}},{"name":"completed-at-from","in":"query","description":"Filters on start of date-time range of task based on completion date (inclusive). Input is epoch time in milliseconds.","schema":{"type":"integer","format":"int64"}},{"name":"completed-at-to","in":"query","description":"Filters on end of date-time range of task based on completion date (inclusive). Input is epoch time in milliseconds.","schema":{"type":"integer","format":"int64"}},{"name":"cursor","in":"query","description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of tasks per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested tasks are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<Task>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Task"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/tasks?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:task:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:task:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/tasks/{id}":{"get":{"tags":["Task"],"operationId":"getTaskById","summary":"Get task by id","description":"Returns a specific task. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the containing page or blog post and its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the task to be returned. If you don't know the task ID, use Get tasks and filter the results.","schema":{"format":"int64","type":"integer"}},{"name":"body-format","in":"query","description":"The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.","schema":{"$ref":"#/components/schemas/PrimaryBodyRepresentation"}}],"responses":{"200":{"description":"Returned if the requested task is returned.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Task"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nrequested task or the task was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:task:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:task:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"put":{"tags":["Task"],"operationId":"updateTask","summary":"Update task","description":"Update a task by id. This endpoint currently only supports updating task status.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the containing page or blog post and view its corresponding space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the task to be updated. If you don't know the task ID, use Get tasks and filter the results.","schema":{"format":"int64","type":"integer"}},{"name":"body-format","in":"query","description":"The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.","schema":{"$ref":"#/components/schemas/PrimaryBodyRepresentation"}}],"requestBody":{"$ref":"#/components/requestBodies/TaskUpdateRequest"},"responses":{"200":{"description":"Returned if the requested task is updated.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Task"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing from the request.","content":{}},"404":{"description":"Returned if:\n- The provided task does not exist\n- The user does not have permissions to view the task\n- The user does not have the needed permissions to update the containing page or blog post in the corresponding space","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["write:task:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["write:task:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/pages/{id}/children":{"get":{"tags":["Children"],"operationId":"getChildPages","summary":"Get child pages","deprecated":true,"description":"Returns all child pages for given page id. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nOnly pages that the user has permission to view will be returned.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the parent page. If you don't know the page ID, use Get pages and filter the results.","schema":{"format":"int64","type":"integer"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of pages per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"type":"string","items":{"$ref":"#/components/schemas/ChildPageSortOrder"}}}],"responses":{"200":{"description":"Returned if the requested child pages are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<ChildPage>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/ChildPage"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/pages/{id}/children?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/custom-content/{id}/children":{"get":{"tags":["Children"],"operationId":"getChildCustomContent","summary":"Get child custom content","description":"Returns all child custom content for given custom content id. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nOnly custom content that the user has permission to view will be returned.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the parent custom content. If you don't know the custom content ID, use Get custom-content and filter the results.","schema":{"format":"int64","type":"integer"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of pages per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"type":"string","items":{"$ref":"#/components/schemas/ChildCustomContentSortOrder"}}}],"responses":{"200":{"description":"Returned if the requested child custom content are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<ChildCustomContent>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/ChildCustomContent"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/custom-content/{id}/children?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:custom-content:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:custom-content:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/pages/{id}/direct-children":{"get":{"tags":["Children"],"operationId":"getPageDirectChildren","summary":"Get direct children of a page","description":"Returns all children for given page id in the content tree. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\nThe following types of content will be returned:\n- Database\n- Embed\n- Folder\n- Page\n- Whiteboard\n\nThis endpoint returns minimal information about each child. To fetch more details, use a related endpoint based on the content type, such\nas:\n\n- [Get database by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-database/#api-databases-id-get)\n- [Get embed by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-smart-link/#api-embeds-id-get)\n- [Get folder by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-folder/#api-folders-id-get)\n- [Get page by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-page/#api-pages-id-get)\n- [Get whiteboard by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-whiteboard/#api-whiteboards-id-get).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nOnly content that the user has permission to view will be returned.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the parent page.","schema":{"format":"int64","type":"integer"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of items per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"type":"string","items":{"$ref":"#/components/schemas/ContentSortOrder"}}}],"responses":{"200":{"description":"Returned if the requested children are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<ChildrenResponse>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/ChildrenResponse"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. Example response header format: <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified page or the page was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:hierarchical-content:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:hierarchical-content:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/pages/{id}/ancestors":{"get":{"tags":["Ancestors"],"operationId":"getPageAncestors","summary":"Get all ancestors of page","description":"Returns all ancestors for a given page by ID in top-to-bottom order (that is, the highest ancestor is the first\nitem in the response payload). The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available by calling this endpoint with the ID of first ancestor in the response payload.\n\nThis endpoint returns minimal information about each ancestor. To fetch more details, use a related endpoint, such\nas [Get page by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-page/#api-pages-id-get).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the page.","schema":{"format":"int64","type":"integer"}},{"name":"limit","in":"query","description":"Maximum number of pages per result to return. If more results exist, call this endpoint with the highest ancestor's ID to fetch the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested ancestors are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<Ancestor>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Ancestor"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified page or the page was not found."}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:content.metadata:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:content.metadata:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/pages/{id}/descendants":{"get":{"tags":["Descendants"],"operationId":"getPageDescendants","summary":"Get descendants of page","description":"Returns descendants in the content tree for a given page by ID in top-to-bottom order (that is, the highest descendant is the first\nitem in the response payload). The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available by calling this endpoint with the cursor in the response payload. There is also a `depth` parameter specifying depth\nof descendants to be fetched.\n\nThe following types of content will be returned:\n- Database\n- Embed\n- Folder\n- Page\n- Whiteboard\n\nThis endpoint returns minimal information about each descendant. To fetch more details, use a related endpoint based on the content type, such\nas:\n\n- [Get database by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-database/#api-databases-id-get)\n- [Get embed by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-smart-link/#api-embeds-id-get)\n- [Get folder by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-folder/#api-folders-id-get)\n- [Get page by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-page/#api-pages-id-get)\n- [Get whiteboard by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-whiteboard/#api-whiteboards-id-get).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nPermission to view the page and its corresponding space","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the page.","schema":{"format":"int64","type":"integer"}},{"name":"limit","in":"query","description":"Maximum number of items per result to return. If more results exist, call the endpoint with the cursor to fetch the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}},{"name":"depth","in":"query","description":"Maximum depth of descendants to return. If more results are required, use the endpoint corresponding to the content type of the deepest descendant to fetch more descendants.","schema":{"format":"int32","default":2,"minimum":1,"maximum":5,"type":"integer"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}}],"responses":{"200":{"description":"Returned if the requested descendants are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<DescendantsResponse>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/DescendantsResponse"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. Example response header format: <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to view the\nspecified page or the page was not found.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:hierarchical-content:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:hierarchical-content:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/users-bulk":{"post":{"tags":["User"],"operationId":"createBulkUserLookup","summary":"Create bulk user lookup using ids","description":"Returns user details for the ids provided in the request body.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nThe user must be able to view user profiles in the Confluence site.","requestBody":{"$ref":"#/components/requestBodies/BulkUsersRequest"},"responses":{"200":{"description":"Returned if the user info is returned for the account IDs. `results` may be empty if no account IDs were found.","content":{"application/json":{"schema":{"title":"MultiEntityResult<User>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/User"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. Example response header format: <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"404":{"description":"Returned if the calling user does not have permission to use Confluence or view user profiles."}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:user:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:user:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":true}]}},"/user/access/check-access-by-email":{"post":{"tags":["User"],"operationId":"checkAccessByEmail","summary":"Check site access for a list of emails","description":"Returns the list of emails from the input list that do not have access to site.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).","requestBody":{"$ref":"#/components/requestBodies/CheckAccessOrInviteByEmailRequest"},"responses":{"200":{"description":"Returns object with list of emails without access to site.","content":{"application/json":{"schema":{"type":"object","properties":{"emailsWithoutAccess":{"type":"array","items":{"type":"string"},"description":"List of emails that do not have access to site."},"invalidEmails":{"type":"array","items":{"type":"string"},"description":"List of invalid emails provided in the request."}}}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to check access for emails on site."},"503":{"description":"Returned if API is disabled on site"}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:configuration:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:configuration:confluence"]}],"x-atlassian-connect-scope":"NONE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":true}],"x-experimental":true}},"/user/access/invite-by-email":{"post":{"tags":["User"],"operationId":"inviteByEmail","summary":"Invite a list of emails to the site","description":"Invite a list of emails to the site.\n\nIgnores all invalid emails and no action is taken for the emails that already have access to the site.\n\n<b>NOTE:</b> This API is asynchronous and may take some time to complete.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).","requestBody":{"$ref":"#/components/requestBodies/CheckAccessOrInviteByEmailRequest"},"responses":{"200":{"description":"Returns object with list of emails without access to site.","content":{}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if the calling user does not have permission to check access for emails on site."},"503":{"description":"Returned if API is disabled on site"}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:configuration:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:configuration:confluence"]}],"x-atlassian-connect-scope":"NONE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":true}],"x-experimental":true}},"/data-policies/metadata":{"get":{"tags":["Data Policies"],"summary":"Get data policy metadata for the workspace","description":"Returns data policy metadata for the workspace.\n\n**[Permissions](#permissions) required:**\nOnly apps can make this request.\nPermission to access the Confluence site ('Can use' global permission).","operationId":"getDataPolicyMetadata","responses":{"200":{"description":"Returned if the request is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DataPolicyMetadata"}}}},"400":{"description":"Returned if the request is not valid."},"401":{"description":"Returned if the authentication credentials are incorrect or missing."}},"deprecated":false,"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:configuration:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:configuration:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":true}],"x-experimental":true}},"/data-policies/spaces":{"get":{"tags":["Data Policies"],"operationId":"getDataPolicySpaces","summary":"Get spaces with data policies","description":"Returns all spaces. The results will be sorted by id ascending. The number of results is limited by the `limit` parameter and\nadditional results (if available) will be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nOnly apps can make this request.\nPermission to access the Confluence site ('Can use' global permission).\nOnly spaces that the app has permission to view will be returned.","parameters":[{"name":"ids","in":"query","required":false,"description":"Filter the results to spaces based on their IDs. Multiple IDs can be specified as a comma-separated list.","schema":{"type":"array","maxItems":250,"items":{"type":"integer","format":"int64"}}},{"name":"keys","in":"query","required":false,"description":"Filter the results to spaces based on their keys. Multiple keys can be specified as a comma-separated list.","schema":{"type":"array","maxItems":250,"items":{"type":"string"}}},{"name":"sort","in":"query","required":false,"description":"Used to sort the result by a particular field.","schema":{"$ref":"#/components/schemas/SpaceSortOrder"}},{"name":"cursor","in":"query","required":false,"description":"Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Maximum number of spaces per result to return. If more results exist, use the `Link` response header to retrieve a relative URL that will return the next set of results.","schema":{"format":"int32","default":25,"minimum":1,"maximum":250,"type":"integer"}}],"responses":{"200":{"description":"Returned if the requested spaces are returned.","content":{"application/json":{"schema":{"title":"MultiEntityResult<DataPolicySpace>","type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/DataPolicySpace"}},"_links":{"$ref":"#/components/schemas/MultiEntityLinks"}}}}},"headers":{"Link":{"schema":{"type":"string"},"description":"This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. \nFor example, rel=\"next\" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/spaces?cursor=<opaque cursor token>>; rel=\"next\", <https://site.atlassian.net/wiki>; rel=\"base\"`\n"}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:space:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:space:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":true}],"x-experimental":true}},"/classification-levels":{"get":{"tags":["Classification Level"],"operationId":"getClassificationLevels","summary":"Get list of classification levels","description":"Returns a list of [classification levels](https://developer.atlassian.com/cloud/admin/dlp/rest/intro/#Classification%20level) \navailable.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission).","responses":{"200":{"description":"Returned if classifications levels are returned.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ClassificationLevel"}}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- Classification levels do not exist\n- Site's edition does not have entitlement(s) for [data classification](https://support.atlassian.com/security-and-access-policies/docs/what-is-data-classification/)\n- The calling user does not have permissions to access the Confluence site\n"}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:configuration:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:configuration:confluence"]}],"x-atlassian-connect-scope":"READ"}},"/spaces/{id}/classification-level/default":{"get":{"tags":["Classification Level"],"operationId":"getSpaceDefaultClassificationLevel","summary":"Get space default classification level","description":"Returns the [default classification level](https://support.atlassian.com/security-and-access-policies/docs/what-is-a-default-classification-level/) \nfor a specific space.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission) and permission to view the space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the space for which default classification level should be returned.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested default classification level for a space is returned.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ClassificationLevel"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- Default classification level is not applied to the space\n- Site's edition does not have entitlement(s) for [data classification](https://support.atlassian.com/security-and-access-policies/docs/what-is-data-classification/)\n- The calling user does not have permission to view the specified space or the space was not found","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:space:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:space:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"put":{"tags":["Classification Level"],"operationId":"putSpaceDefaultClassificationLevel","summary":"Update space default classification level","description":"Update the [default classification level](https://support.atlassian.com/security-and-access-policies/docs/what-is-a-default-classification-level/) \nfor a specific space.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission) and 'Admin' permission for the space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the space for which default classification level should be updated.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"$ref":"#/components/requestBodies/SpaceDefaultClassificationLevelUpdateRequest"},"responses":{"204":{"description":"Returned if the default classification level was successfully updated.","content":{}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- Site's edition does not have entitlement(s) for [data classification](https://support.atlassian.com/security-and-access-policies/docs/what-is-data-classification/)\n- The calling user does not have permission to view the specified space or the space was not found","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:space:confluence","write:space:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:space:confluence","write:space:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"delete":{"tags":["Classification Level"],"operationId":"deleteSpaceDefaultClassificationLevel","summary":"Delete space default classification level","description":"Returns the [default classification level](https://support.atlassian.com/security-and-access-policies/docs/what-is-a-default-classification-level/) \nfor a specific space.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission) and 'Admin' permission for the space.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the space for which default classification level should be deleted.","schema":{"format":"int64","type":"integer"}}],"responses":{"204":{"description":"Returned if the default classification level was successfully deleted.","content":{}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- Site's edition does not have entitlement(s) for [data classification](https://support.atlassian.com/security-and-access-policies/docs/what-is-data-classification/)\n- The calling user does not have permission to view the specified space or the space was not found","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:space:confluence","write:space:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:space:confluence","write:space:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/pages/{id}/classification-level":{"get":{"tags":["Classification Level"],"operationId":"getPageClassificationLevel","summary":"Get page classification level","description":"Returns the [classification level](https://developer.atlassian.com/cloud/admin/dlp/rest/intro/#Classification%20level)\nfor a specific page.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission) and permission to view the page.\n'Permission to edit the page is required if trying to view classification level for a draft.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the page for which classification level should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"status","in":"query","required":false,"description":"Status of page from which classification level will fetched.","schema":{"type":"string","default":"current","enum":["current","draft","archived"]}}],"responses":{"200":{"description":"Returned if the requested classification level for a page is returned.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ClassificationLevel"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- Page does not have a classification level applied\n- Site's edition does not have entitlement(s) for [data classification](https://support.atlassian.com/security-and-access-policies/docs/what-is-data-classification/)\n- The calling user does not have permission to view the specified page or the page was not found\n- The calling user does not have permission to edit the specified page when trying to fetch classification level for a draft","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence","write:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence","write:page:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"put":{"tags":["Classification Level"],"operationId":"putPageClassificationLevel","summary":"Update page classification level","description":"Updates the [classification level](https://developer.atlassian.com/cloud/admin/dlp/rest/intro/#Classification%20level)\nfor a specific page.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission) and permission to edit the page.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the page for which classification level should be updated.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"$ref":"#/components/requestBodies/ContentClassificationLevelUpdateRequest"},"responses":{"204":{"description":"Returned if the classification level was successfully updated."},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- Site's edition does not have entitlement(s) for [data classification](https://support.atlassian.com/security-and-access-policies/docs/what-is-data-classification/)\n- The calling user does not have permission to edit the specified page or the page was not found","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["write:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["write:page:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/pages/{id}/classification-level/reset":{"post":{"tags":["Classification Level"],"operationId":"postPageClassificationLevel","summary":"Reset page classification level","description":"Resets the [classification level](https://developer.atlassian.com/cloud/admin/dlp/rest/intro/#Classification%20level)\nfor a specific page for the space \n[default classification level](https://support.atlassian.com/security-and-access-policies/docs/what-is-a-default-classification-level/).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission) and permission to view the page.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the page for which classification level should be updated.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"$ref":"#/components/requestBodies/ContentClassificationLevelDeleteRequest"},"responses":{"204":{"description":"Returned if the classification level was successfully reset."},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- Site's edition does not have entitlement(s) for [data classification](https://support.atlassian.com/security-and-access-policies/docs/what-is-data-classification/)\n- The calling user does not have permission to edit the specified page or the page was not found"}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["write:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["write:page:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/blogposts/{id}/classification-level":{"get":{"tags":["Classification Level"],"operationId":"getBlogPostClassificationLevel","summary":"Get blog post classification level","description":"Returns the [classification level](https://developer.atlassian.com/cloud/admin/dlp/rest/intro/#Classification%20level)\nfor a specific blog post.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission) and permission to view the blog post.\n'Permission to edit the blog post is required if trying to view classification level for a draft.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the blog post for which classification level should be returned.","schema":{"format":"int64","type":"integer"}},{"name":"status","in":"query","required":false,"description":"Status of blog post from which classification level will fetched.","schema":{"type":"string","default":"current","enum":["current","draft","archived"]}}],"responses":{"200":{"description":"Returned if the requested classification level for a blog post is returned.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ClassificationLevel"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- Blog post does not have a classification level applied\n- Site's edition does not have entitlement(s) for [data classification](https://support.atlassian.com/security-and-access-policies/docs/what-is-data-classification/)\n- The calling user does not have permission to view the specified blog post or the blog post was not found\n- The calling user does not have permission to edit the specified blog post when trying to fetch classification level for a draft","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:page:confluence","write:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:page:confluence","write:page:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"put":{"tags":["Classification Level"],"operationId":"putBlogPostClassificationLevel","summary":"Update blog post classification level","description":"Updates the [classification level](https://developer.atlassian.com/cloud/admin/dlp/rest/intro/#Classification%20level)\nfor a specific blog post.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission) and permission to edit the blog post.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the blog post for which classification level should be updated.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"$ref":"#/components/requestBodies/ContentClassificationLevelUpdateRequest"},"responses":{"204":{"description":"Returned if the classification level was successfully updated."},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- Site's edition does not have entitlement(s) for [data classification](https://support.atlassian.com/security-and-access-policies/docs/what-is-data-classification/)\n- The calling user does not have permission to edit the specified blog post or the blog post was not found","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["write:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["write:page:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/blogposts/{id}/classification-level/reset":{"post":{"tags":["Classification Level"],"operationId":"postBlogPostClassificationLevel","summary":"Reset blog post classification level","description":"Resets the [classification level](https://developer.atlassian.com/cloud/admin/dlp/rest/intro/#Classification%20level)\nfor a specific blog post for the space  \n[default classification level](https://support.atlassian.com/security-and-access-policies/docs/what-is-a-default-classification-level/).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission) and permission to view the blog post.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the blog post for which classification level should be updated.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"$ref":"#/components/requestBodies/ContentClassificationLevelDeleteRequest"},"responses":{"204":{"description":"Returned if the classification level was successfully reset."},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- Site's edition does not have entitlement(s) for [data classification](https://support.atlassian.com/security-and-access-policies/docs/what-is-data-classification/)\n- The calling user does not have permission to edit the specified blog post or the blog post was not found"}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["write:page:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["write:page:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/whiteboards/{id}/classification-level":{"get":{"tags":["Classification Level"],"operationId":"getWhiteboardClassificationLevel","summary":"Get whiteboard classification level","description":"Returns the [classification level](https://developer.atlassian.com/cloud/admin/dlp/rest/intro/#Classification%20level)\nfor a specific whiteboard.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission) and permission to view the whiteboard.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the whiteboard for which classification level should be returned.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested classification level for a whiteboard is returned.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ClassificationLevel"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- Whiteboard does not have a classification level applied\n- Site's edition does not have entitlement(s) for [data classification](https://support.atlassian.com/security-and-access-policies/docs/what-is-data-classification/)\n- The calling user does not have permission to view the specified whiteboard, or the whiteboard was not found","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:whiteboard:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:whiteboard:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"put":{"tags":["Classification Level"],"operationId":"putWhiteboardClassificationLevel","summary":"Update whiteboard classification level","description":"Updates the [classification level](https://developer.atlassian.com/cloud/admin/dlp/rest/intro/#Classification%20level)\nfor a specific whiteboard.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission) and permission to edit the whiteboard.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the whiteboard for which classification level should be updated.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"$ref":"#/components/requestBodies/LiveEditContentClassificationLevelUpdateRequest"},"responses":{"204":{"description":"Returned if the classification level was successfully updated."},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- Site's edition does not have entitlement(s) for [data classification](https://support.atlassian.com/security-and-access-policies/docs/what-is-data-classification/)\n- The calling user does not have permission to edit the specified whiteboard\n- The whiteboard or classification level was not found","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["write:whiteboard:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["write:whiteboard:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/whiteboards/{id}/classification-level/reset":{"post":{"tags":["Classification Level"],"operationId":"postWhiteboardClassificationLevel","summary":"Reset whiteboard classification level","description":"Resets the [classification level](https://developer.atlassian.com/cloud/admin/dlp/rest/intro/#Classification%20level)\nfor a specific whiteboard for the space \n[default classification level](https://support.atlassian.com/security-and-access-policies/docs/what-is-a-default-classification-level/).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission) and permission to view the whiteboard.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the whiteboard for which classification level should be updated.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"$ref":"#/components/requestBodies/LiveEditContentClassificationLevelResetRequest"},"responses":{"204":{"description":"Returned if the classification level was successfully reset."},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- Site's edition does not have entitlement(s) for [data classification](https://support.atlassian.com/security-and-access-policies/docs/what-is-data-classification/)\n- The calling user does not have permission to edit the specified whiteboard, or the whiteboard was not found"}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["write:whiteboard:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["write:whiteboard:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/databases/{id}/classification-level":{"get":{"tags":["Classification Level"],"operationId":"getDatabaseClassificationLevel","summary":"Get database classification level","description":"Returns the [classification level](https://developer.atlassian.com/cloud/admin/dlp/rest/intro/#Classification%20level)\nfor a specific database.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission) and permission to view the database.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the database for which classification level should be returned.","schema":{"format":"int64","type":"integer"}}],"responses":{"200":{"description":"Returned if the requested classification level for a database is returned.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ClassificationLevel"}}}},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- Database does not have a classification level applied\n- Site's edition does not have entitlement(s) for [data classification](https://support.atlassian.com/security-and-access-policies/docs/what-is-data-classification/)\n- The calling user does not have permission to view the specified database, or the database was not found","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["read:database:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["read:database:confluence"]}],"x-atlassian-connect-scope":"READ","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]},"put":{"tags":["Classification Level"],"operationId":"putDatabaseClassificationLevel","summary":"Update database classification level","description":"Updates the [classification level](https://developer.atlassian.com/cloud/admin/dlp/rest/intro/#Classification%20level)\nfor a specific database.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission) and permission to edit the database.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the database for which classification level should be updated.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"$ref":"#/components/requestBodies/LiveEditContentClassificationLevelUpdateRequest"},"responses":{"204":{"description":"Returned if the classification level was successfully updated."},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- Site's edition does not have entitlement(s) for [data classification](https://support.atlassian.com/security-and-access-policies/docs/what-is-data-classification/)\n- The calling user does not have permission to edit the specified database\n- The database or the classification level was not found","content":{}}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["write:database:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["write:database:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}},"/databases/{id}/classification-level/reset":{"post":{"tags":["Classification Level"],"operationId":"postDatabaseClassificationLevel","summary":"Reset database classification level","description":"Resets the [classification level](https://developer.atlassian.com/cloud/admin/dlp/rest/intro/#Classification%20level)\nfor a specific database for the space \n[default classification level](https://support.atlassian.com/security-and-access-policies/docs/what-is-a-default-classification-level/).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission) and permission to view the database.","parameters":[{"name":"id","in":"path","required":true,"description":"The ID of the database for which classification level should be updated.","schema":{"format":"int64","type":"integer"}}],"requestBody":{"$ref":"#/components/requestBodies/LiveEditContentClassificationLevelResetRequest"},"responses":{"204":{"description":"Returned if the classification level was successfully reset."},"400":{"description":"Returned if an invalid request is provided.","content":{}},"401":{"description":"Returned if the authentication credentials are incorrect or missing\nfrom the request.","content":{}},"404":{"description":"Returned if:\n- Site's edition does not have entitlement(s) for [data classification](https://support.atlassian.com/security-and-access-policies/docs/what-is-data-classification/)\n- The calling user does not have permission to edit the specified database, or the database was not found"}},"security":[{"basicAuth":[]},{"oAuthDefinitions":["write:database:confluence"]}],"x-atlassian-oauth2-scopes":[{"scheme":"oAuthDefinitions","state":"Current","scopes":["write:database:confluence"]}],"x-atlassian-connect-scope":"WRITE","x-atlassian-data-security-policy":[{"app-access-rule-exempt":false}]}}},"components":{"requestBodies":{"AdminKeyRequest":{"required":false,"content":{"application/json":{"schema":{"type":"object","properties":{"durationInMinutes":{"type":"integer","format":"int32","description":"The requested duration of admin key access in minutes, up to a maximum of 60 minutes, after which the issued admin key will automatically expire.","example":60}}}}}},"BlogPostCreateRequest":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["spaceId"],"properties":{"spaceId":{"type":"string","description":"ID of the space"},"status":{"enum":["current","draft"],"type":"string","description":"The status of the blog post, specifies if the blog post will be created as a new blog post or a draft"},"title":{"type":"string","description":"Title of the blog post, required if creating non-draft."},"body":{"oneOf":[{"$ref":"#/components/schemas/BlogPostBodyWrite"},{"$ref":"#/components/schemas/BlogPostNestedBodyWrite"}]},"createdAt":{"type":"string","description":"Created date of the blog post in the format of \"yyyy-MM-ddTHH:mm:ss.SSSZ\"."}}}}}},"BlogPostUpdateRequest":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["id","status","title","body","version"],"properties":{"id":{"type":"string","description":"Id of the blog post."},"status":{"enum":["current","draft"],"type":"string","description":"The updated status of the blog post.\n\nNote, if you change the status of a blog post from 'current' to 'draft' and it has an existing draft, the existing draft will be deleted in favor of the updated draft.\nAdditionally, this endpoint can be used to restore a 'trashed' or 'deleted' blog post to 'current' status. For restoration, blog post contents will not be updated and only the blog post status will be changed."},"title":{"type":"string","description":"Title of the blog post."},"spaceId":{"type":"string","description":"ID of the containing space.\n\nThis currently **does not support moving the blog post to a different space**."},"body":{"oneOf":[{"$ref":"#/components/schemas/BlogPostBodyWrite"},{"$ref":"#/components/schemas/BlogPostNestedBodyWrite"}]},"version":{"type":"object","properties":{"number":{"format":"int32","type":"integer","description":"The new version number of the updated blog post. \nSet this to the current version number plus one, unless you are updating the status to 'draft' which requires a version number of 1.\n\nIf you don't know the current version number, use Get blog post by id."},"message":{"type":"string","description":"An optional message to be stored with the version."}}},"createdAt":{"type":"string","description":"Created date of the blog post in the format of \"yyyy-MM-ddTHH:mm:ss.SSSZ\"."}}}}}},"ContentIdToContentTypeRequest":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["contentIds"],"properties":{"contentIds":{"description":"The content ids to convert. They may be provided as strings or numbers.","type":"array","maxItems":100,"items":{"anyOf":[{"type":"string"},{"type":"number"}]}}}}}}},"CustomContentCreateRequest":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["body","title","type"],"properties":{"type":{"type":"string","description":"Type of custom content."},"status":{"enum":["current","draft"],"type":"string","description":"The status of the custom content. Defaults to `current` when status not provided."},"spaceId":{"type":"string","description":"ID of the containing space."},"pageId":{"type":"string","description":"ID of the containing page."},"blogPostId":{"type":"string","description":"ID of the containing Blog Post."},"customContentId":{"type":"string","description":"ID of the containing custom content."},"title":{"type":"string","description":"Title of the custom content."},"body":{"oneOf":[{"$ref":"#/components/schemas/CustomContentBodyWrite"},{"$ref":"#/components/schemas/CustomContentNestedBodyWrite"}]}}}}}},"CustomContentUpdateRequest":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["body","id","status","title","type","version"],"properties":{"id":{"type":"string","description":"Id of custom content."},"type":{"type":"string","description":"Type of custom content."},"status":{"enum":["current"],"type":"string","description":"The status of the custom content."},"spaceId":{"type":"string","description":"ID of the containing space (must be the same as the spaceId of the space the custom content was created in)."},"pageId":{"type":"string","description":"ID of the containing page."},"blogPostId":{"type":"string","description":"ID of the containing Blog Post."},"customContentId":{"type":"string","description":"ID of the containing custom content."},"title":{"type":"string","description":"Title of the custom content."},"body":{"oneOf":[{"$ref":"#/components/schemas/CustomContentBodyWrite"},{"$ref":"#/components/schemas/CustomContentNestedBodyWrite"}]},"version":{"type":"object","properties":{"number":{"format":"int32","type":"integer","description":"The version number, must be incremented by one."},"message":{"type":"string","description":"An optional message to be stored with the version."}}}}}}}},"PageCreateRequest":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["spaceId"],"properties":{"spaceId":{"type":"string","description":"ID of the space."},"status":{"enum":["current","draft"],"type":"string","description":"The status of the page, published or draft."},"title":{"type":"string","description":"Title of the page, required if page status is not draft."},"parentId":{"type":"string","description":"The parent content ID of the page. If the `root-level` query parameter is set to false and a value is \nnot supplied for this parameter, then the space homepage's ID will be used. If the `root-level` query \nparameter is set to true, then a value may not be supplied for this parameter."},"body":{"oneOf":[{"$ref":"#/components/schemas/PageBodyWrite"},{"$ref":"#/components/schemas/PageNestedBodyWrite"}]},"subtype":{"enum":["live"],"type":"string","description":"The subtype of the page. Provide the subtype live to create a live doc or no subtype to create a page."}}}}}},"PageUpdateRequest":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["id","status","title","body","version"],"properties":{"id":{"type":"string","description":"Id of the page."},"status":{"enum":["current","draft"],"type":"string","description":"The updated status of the page.\n\nNote, if you change the status of a page from 'current' to 'draft' and it has an existing draft, the existing draft will be deleted in favor of the updated draft.\nAdditionally, this endpoint can be used to restore a 'trashed' or 'deleted' page to 'current' status. For restoration, page contents will not be updated and only the page status will be changed."},"title":{"type":"string","description":"Title of the page."},"spaceId":{"format":"string","description":"ID of the containing space.\n\nThis currently **does not support moving the page to a different space**."},"parentId":{"format":"string","description":"ID of the parent content.\n\nThis allows the page to be moved under a different parent within the same space."},"ownerId":{"format":"string","description":"Account ID of the page owner.\n\nThis allows page ownership to be transferred to another user."},"body":{"oneOf":[{"$ref":"#/components/schemas/PageBodyWrite"},{"$ref":"#/components/schemas/PageNestedBodyWrite"}]},"version":{"type":"object","properties":{"number":{"format":"int32","type":"integer","description":"The new version of the updated page. \nSet this to the current version number plus one, unless you are updating the status to 'draft' which requires a version number of 1.\n\nIf you don't know the current version number, use Get page by id."},"message":{"type":"string","description":"An optional message to be stored with the version."}}}}}}}},"PageTitleUpdateRequest":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["status","title"],"properties":{"status":{"enum":["current","draft"],"type":"string","description":"The status of the page, current or draft."},"title":{"type":"string","description":"The updated title for the page"}}}}}},"WhiteboardCreateRequest":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["spaceId"],"properties":{"spaceId":{"type":"string","description":"ID of the space."},"title":{"type":"string","description":"Title of the whiteboard."},"parentId":{"type":"string","description":"The parent content ID of the whiteboard."},"templateKey":{"type":"string","description":"Providing a template key will add that template to the new whiteboard.","enum":["2x2-prioritization","4ls-retro","annual-calendar","brainwriting","concept-map","crazy-8s","daily-sync","disruptive-brainstorm","dot-voting","elevator-pitch","flow-chart","gap-analysis","ice-breakers","incident-postmortem","journey-mapping-kit","kanban-board","lean-coffee","network-of-teams","org-chart","pi-planning","prioritization","prioritization-experiment","product-roadmap","product-vision-board","rice","sailboat-retro","service-blueprint","simple-retrospective","sprint-planning","sticky-note-pack","swimlanes","team-formation-guide","timeline","timeline-workflow","user-story-map","workflow","vision-board","venn-diagram","storyboard","action-plan","root-cause-analysis","executive-summary","stakeholder-mapping","annual-calendar-2025-2026","health-monitor","okr-planning","swot-analysis","poker-planning","fishbone-diagram","risk-assessment","bounded-context","hopes-and-fears","swimlane-vertical"]},"locale":{"type":"string","description":"If templateKey is provided, locale will decide which language the template will be created with. If locale is omitted, the user's locale will be used.","enum":["de-DE","cs-CZ","ko-KR","fr-FR","it-IT","ja-JP","nl-NL","nb-NO","da-DK","sv-SE","fi-FI","ru-RU","pl-PL","tr-TR","hu-HU","en-GB","en-US","pt-BR","zh-CN","zh-TW","es-ES"]}}}}}},"DatabaseCreateRequest":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["spaceId"],"properties":{"spaceId":{"type":"string","description":"ID of the space."},"title":{"type":"string","description":"Title of the database."},"parentId":{"type":"string","description":"The parent content ID of the database."}}}}}},"SmartLinkCreateRequest":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["spaceId"],"properties":{"spaceId":{"type":"string","description":"ID of the space."},"title":{"type":"string","description":"Title of the Smart Link in the content tree."},"parentId":{"type":"string","description":"The parent content ID of the Smart Link in the content tree."},"embedUrl":{"type":"string","description":"The URL that the Smart Link in the content tree should be populated with."}}}}}},"FolderCreateRequest":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["spaceId"],"properties":{"spaceId":{"type":"string","description":"ID of the space."},"title":{"type":"string","description":"Title of the folder."},"parentId":{"type":"string","description":"The parent content ID of the folder."}}}}}},"TaskUpdateRequest":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["status"],"properties":{"id":{"type":"string","description":"ID of the task."},"localId":{"type":"string","description":"Local ID of the task. This ID is local to the corresponding page or blog post."},"spaceId":{"type":"string","description":"ID of the space the task is in."},"pageId":{"type":"string","description":"ID of the page the task is in."},"blogPostId":{"type":"string","description":"ID of the blog post the task is in."},"status":{"enum":["complete","incomplete"],"type":"string","description":"Status of the task."},"createdBy":{"type":"string","description":"Account ID of the user who created this task."},"assignedTo":{"type":"string","description":"Account ID of the user to whom this task is assigned."},"completedBy":{"type":"string","description":"Account ID of the user who completed this task."},"createdAt":{"type":"string","format":"date-time","description":"Date and time when the task was created. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\"."},"updatedAt":{"type":"string","format":"date-time","description":"Date and time when the task was updated. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\"."},"dueAt":{"type":"string","format":"date-time","description":"Date and time when the task is due. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\"."},"completedAt":{"type":"string","format":"date-time","description":"Date and time when the task was completed. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\"."}}}}}},"CheckAccessOrInviteByEmailRequest":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["emails"],"properties":{"emails":{"nullable":false,"description":"List of emails to check access to site.","type":"array","minItems":1,"maxItems":100,"items":{"type":"string"}}}}}}},"BulkUsersRequest":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["accountIds"],"properties":{"accountIds":{"nullable":false,"description":"List of accountIds to retrieve user info for.","type":"array","minItems":1,"maxItems":250,"items":{"type":"string"}}}}}}},"SetSpaceRoleAssignmentRequest":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["principal"],"properties":{"principal":{"$ref":"#/components/schemas/Principal"},"roleId":{"type":"string","description":"The role to which the principal is assigned."}}}}}},"SpaceCreateRequest":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["name"],"properties":{"name":{"type":"string","description":"The name of the space to be created."},"key":{"type":"string","description":"The key for the new space. See [Space Keys](https://support.atlassian.com/confluence-cloud/docs/create-a-space/). If the key property is not provided, the alias property is required to be used instead."},"alias":{"type":"string","description":"This field will be used as the new identifier for the space in confluence page URLs. If the alias property is not provided, the key property is required to be used instead. Maximum 255 alphanumeric characters in length."},"description":{"type":"object","description":"The description of the new/updated space. Note, only the 'plain' representation is currently supported.","properties":{"value":{"type":"string","description":"The space description."},"representation":{"type":"string","description":"The format of the description."}}},"roleAssignments":{"type":"object","description":"The role assignments for the new space. If none are provided, the Default Space Roles are applied. If roles are provided, the space is created with exactly the provided set of roles. A private space is created if only the creator is assigned to a role and it’s the Admin role. At least one Admin role assignment must be specified.","properties":{"principal":{"$ref":"#/components/schemas/Principal"},"roleId":{"type":"string","description":"The role to which the principal is assigned."}}}}}}}},"SpaceDefaultClassificationLevelUpdateRequest":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["id"],"properties":{"id":{"type":"string","description":"The ID of the classification level."}}}}}},"ContentClassificationLevelUpdateRequest":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["id","status"],"properties":{"id":{"type":"string","description":"The ID of the classification level."},"status":{"enum":["current","draft"],"type":"string","description":"Status of the content."}}}}}},"ContentClassificationLevelDeleteRequest":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["status"],"properties":{"status":{"enum":["current","draft"],"type":"string","description":"Status of the content."}}}}}},"LiveEditContentClassificationLevelUpdateRequest":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["id","status"],"properties":{"id":{"type":"string","description":"The ID of the classification level."},"status":{"enum":["current"],"type":"string","description":"Status of the content."}}}}}},"LiveEditContentClassificationLevelResetRequest":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["status"],"properties":{"status":{"enum":["current"],"type":"string","description":"Status of the content."}}}}}}},"schemas":{"AdminKeyResponse":{"type":"object","properties":{"accountId":{"type":"string","description":"User identifier."},"expirationTime":{"type":"string","format":"date-time","description":"Timestamp in UTC that represents when the admin key will expire. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\"."}}},"AttachmentSingle":{"type":"object","properties":{"id":{"type":"string","description":"ID of the attachment."},"status":{"$ref":"#/components/schemas/ContentStatus"},"title":{"type":"string","description":"Title of the comment."},"createdAt":{"type":"string","format":"date-time","description":"Date and time when the attachment was created. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\"."},"pageId":{"type":"string","description":"ID of the containing page.\n\nNote: This is only returned if the attachment has a container that is a page."},"blogPostId":{"type":"string","description":"ID of the containing blog post.\n\nNote: This is only returned if the attachment has a container that is a blog post."},"customContentId":{"type":"string","description":"ID of the containing custom content.\n\nNote: This is only returned if the attachment has a container that is custom content."},"mediaType":{"type":"string","description":"Media Type for the attachment."},"mediaTypeDescription":{"type":"string","description":"Media Type description for the attachment."},"comment":{"type":"string","description":"Comment for the attachment."},"fileId":{"type":"string","description":"File ID of the attachment. This is the ID referenced in `atlas_doc_format` bodies and is distinct from the attachment ID."},"fileSize":{"format":"int64","type":"integer","description":"File size of the attachment."},"webuiLink":{"type":"string","description":"WebUI link of the attachment."},"downloadLink":{"type":"string","description":"Download link of the attachment."},"version":{"$ref":"#/components/schemas/Version"},"labels":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Label"}},"meta":{"$ref":"#/components/schemas/OptionalFieldMeta"},"_links":{"$ref":"#/components/schemas/OptionalFieldLinks"}}},"properties":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/ContentProperty"}},"meta":{"$ref":"#/components/schemas/OptionalFieldMeta"},"_links":{"$ref":"#/components/schemas/OptionalFieldLinks"}}},"operations":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Operation"}},"meta":{"$ref":"#/components/schemas/OptionalFieldMeta"},"_links":{"$ref":"#/components/schemas/OptionalFieldLinks"}}},"versions":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Version"}},"meta":{"$ref":"#/components/schemas/OptionalFieldMeta"},"_links":{"$ref":"#/components/schemas/OptionalFieldLinks"}}},"_links":{"$ref":"#/components/schemas/AttachmentLinks"}}},"AttachmentBulk":{"type":"object","properties":{"id":{"type":"string","description":"ID of the attachment."},"status":{"$ref":"#/components/schemas/ContentStatus"},"title":{"type":"string","description":"Title of the comment."},"createdAt":{"type":"string","format":"date-time","description":"Date and time when the attachment was created. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\"."},"pageId":{"type":"string","description":"ID of the containing page.\n\nNote: This is only returned if the attachment has a container that is a page."},"blogPostId":{"type":"string","description":"ID of the containing blog post.\n\nNote: This is only returned if the attachment has a container that is a blog post."},"customContentId":{"type":"string","description":"ID of the containing custom content.\n\nNote: This is only returned if the attachment has a container that is custom content."},"mediaType":{"type":"string","description":"Media Type for the attachment."},"mediaTypeDescription":{"type":"string","description":"Media Type description for the attachment."},"comment":{"type":"string","description":"Comment for the attachment."},"fileId":{"type":"string","description":"File ID of the attachment. This is the ID referenced in `atlas_doc_format` bodies and is distinct from the attachment ID."},"fileSize":{"format":"int64","type":"integer","description":"File size of the attachment."},"webuiLink":{"type":"string","description":"WebUI link of the attachment."},"downloadLink":{"type":"string","description":"Download link of the attachment."},"version":{"$ref":"#/components/schemas/Version"},"_links":{"$ref":"#/components/schemas/AttachmentLinks"}}},"BlogPostSingle":{"type":"object","properties":{"id":{"type":"string","description":"ID of the blog post."},"status":{"$ref":"#/components/schemas/BlogPostContentStatus"},"title":{"type":"string","description":"Title of the blog post."},"spaceId":{"type":"string","description":"ID of the space the blog post is in."},"authorId":{"type":"string","description":"The account ID of the user who created this blog post originally."},"createdAt":{"type":"string","format":"date-time","description":"Date and time when the blog post was created. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\"."},"version":{"$ref":"#/components/schemas/Version"},"body":{"$ref":"#/components/schemas/BodySingle"},"labels":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Label"}},"meta":{"$ref":"#/components/schemas/OptionalFieldMeta"},"_links":{"$ref":"#/components/schemas/OptionalFieldLinks"}}},"properties":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/ContentProperty"}},"meta":{"$ref":"#/components/schemas/OptionalFieldMeta"},"_links":{"$ref":"#/components/schemas/OptionalFieldLinks"}}},"operations":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Operation"}},"meta":{"$ref":"#/components/schemas/OptionalFieldMeta"},"_links":{"$ref":"#/components/schemas/OptionalFieldLinks"}}},"likes":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Like"}},"meta":{"$ref":"#/components/schemas/OptionalFieldMeta"},"_links":{"$ref":"#/components/schemas/OptionalFieldLinks"}}},"versions":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Version"}},"meta":{"$ref":"#/components/schemas/OptionalFieldMeta"},"_links":{"$ref":"#/components/schemas/OptionalFieldLinks"}}},"isFavoritedByCurrentUser":{"type":"boolean","description":"Whether the blog post has been favorited by the current user."},"_links":{"$ref":"#/components/schemas/AbstractPageLinks"}}},"BlogPostBulk":{"type":"object","properties":{"id":{"type":"string","description":"ID of the blog post."},"status":{"$ref":"#/components/schemas/BlogPostContentStatus"},"title":{"type":"string","description":"Title of the blog post."},"spaceId":{"type":"string","description":"ID of the space the blog post is in."},"authorId":{"type":"string","description":"The account ID of the user who created this blog post originally."},"createdAt":{"type":"string","format":"date-time","description":"Date and time when the blog post was created. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\"."},"version":{"$ref":"#/components/schemas/Version"},"body":{"$ref":"#/components/schemas/BodyBulk"},"_links":{"$ref":"#/components/schemas/AbstractPageLinks"}}},"TaskBodySingle":{"type":"object","description":"Contains fields for each representation type requested.","properties":{"storage":{"$ref":"#/components/schemas/BodyType"},"atlas_doc_format":{"$ref":"#/components/schemas/BodyType"}}},"BodySingle":{"type":"object","description":"Contains fields for each representation type requested.","properties":{"storage":{"$ref":"#/components/schemas/BodyType"},"atlas_doc_format":{"$ref":"#/components/schemas/BodyType"},"view":{"$ref":"#/components/schemas/BodyType"}}},"BodyBulk":{"type":"object","description":"Contains fields for each representation type requested.","properties":{"storage":{"$ref":"#/components/schemas/BodyType"},"atlas_doc_format":{"$ref":"#/components/schemas/BodyType"}}},"BodyType":{"type":"object","properties":{"representation":{"type":"string","description":"Type of content representation used for the value field."},"value":{"type":"string","description":"Body of the content, in the format found in the representation field."}}},"PrimaryBodyRepresentation":{"enum":["storage","atlas_doc_format"],"type":"string","description":"The primary formats a body can be represented as. A subset of BodyRepresentation. These formats are the only allowed formats in certain use cases."},"PrimaryBodyRepresentationSingle":{"enum":["storage","atlas_doc_format","view","export_view","anonymous_export_view","styled_view","editor"],"type":"string","description":"The primary formats a body can be represented as. A subset of BodyRepresentation. These formats are the only allowed formats in certain use cases."},"CustomContentBodyRepresentation":{"enum":["raw","storage","atlas_doc_format"],"type":"string","description":"The formats a custom content body can be represented as. A subset of BodyRepresentation."},"CustomContentBodyRepresentationSingle":{"enum":["raw","storage","atlas_doc_format","view","export_view","anonymous_export_view"],"type":"string","description":"The formats a custom content body can be represented as. A subset of BodyRepresentation."},"SpaceDescriptionBodyRepresentation":{"enum":["plain","view"],"type":"string","description":"The formats a space description can be represented as. A subset of BodyRepresentation."},"ContentIdToContentTypeResponse":{"type":"object","properties":{"results":{"type":"object","description":"JSON object containing all requested content ids as keys and their associated content types as the values.\nDuplicate content ids in the request will be returned under a single key in the response. For built-in content\ntypes, the enumerations are as specified. Custom content ids will be mapped to their associated type.","additionalProperties":{"anyOf":[{"type":"string","description":"Built in content types","enum":["page","blogpost","attachment","footer-comment","inline-comment"]},{"type":"string","description":"Custom content types"}]}}}},"ContentStatus":{"enum":["current","draft","archived","historical","trashed","deleted","any"],"type":"string","description":"The status of the content."},"BlogPostContentStatus":{"enum":["current","draft","historical","trashed","deleted","any"],"type":"string","description":"The status of the content."},"OnlyArchivedAndCurrentContentStatus":{"enum":["current","archived"],"type":"string","description":"The status of the content."},"ContentProperty":{"type":"object","properties":{"id":{"type":"string","description":"ID of the property"},"key":{"type":"string","description":"Key of the property"},"value":{"description":"Value of the property. Must be a valid JSON value."},"version":{"$ref":"#/components/schemas/Version"}}},"ContentPropertyCreateRequest":{"type":"object","properties":{"key":{"type":"string","description":"Key of the content property"},"value":{"description":"Value of the content property."}}},"ContentPropertyUpdateRequest":{"type":"object","properties":{"key":{"type":"string","description":"Key of the content property"},"value":{"description":"Value of the content property."},"version":{"type":"object","description":"New version number and associated message","properties":{"number":{"type":"integer","format":"int32","description":"Version number of the new version. Should be 1 more than the current version number."},"message":{"type":"string","description":"Message to be associated with the new version."}}}}},"CustomContentSingle":{"type":"object","properties":{"id":{"type":"string","description":"ID of the custom content."},"type":{"type":"string","description":"The type of custom content."},"status":{"$ref":"#/components/schemas/ContentStatus"},"title":{"type":"string","description":"Title of the custom content."},"spaceId":{"type":"string","description":"ID of the space the custom content is in.\n\nNote: This is always returned, regardless of if the custom content has a container that is a space."},"pageId":{"type":"string","description":"ID of the containing page.\n\nNote: This is only returned if the custom content has a container that is a page."},"blogPostId":{"type":"string","description":"ID of the containing blog post.\n\nNote: This is only returned if the custom content has a container that is a blog post."},"customContentId":{"type":"string","description":"ID of the containing custom content.\n\nNote: This is only returned if the custom content has a container that is custom content."},"authorId":{"type":"string","description":"The account ID of the user who created this custom content originally."},"createdAt":{"type":"string","format":"date-time","description":"Date and time when the custom content was created. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\"."},"version":{"$ref":"#/components/schemas/Version"},"labels":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Label"}},"meta":{"$ref":"#/components/schemas/OptionalFieldMeta"},"_links":{"$ref":"#/components/schemas/OptionalFieldLinks"}}},"properties":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/ContentProperty"}},"meta":{"$ref":"#/components/schemas/OptionalFieldMeta"},"_links":{"$ref":"#/components/schemas/OptionalFieldLinks"}}},"operations":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Operation"}},"meta":{"$ref":"#/components/schemas/OptionalFieldMeta"},"_links":{"$ref":"#/components/schemas/OptionalFieldLinks"}}},"versions":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Version"}},"meta":{"$ref":"#/components/schemas/OptionalFieldMeta"},"_links":{"$ref":"#/components/schemas/OptionalFieldLinks"}}},"body":{"$ref":"#/components/schemas/CustomContentBodySingle"},"_links":{"$ref":"#/components/schemas/CustomContentLinks"}}},"CustomContentBulk":{"type":"object","properties":{"id":{"type":"string","description":"ID of the custom content."},"type":{"type":"string","description":"The type of custom content."},"status":{"$ref":"#/components/schemas/ContentStatus"},"title":{"type":"string","description":"Title of the custom content."},"spaceId":{"type":"string","description":"ID of the space the custom content is in.\n\nNote: This is always returned, regardless of if the custom content has a container that is a space."},"pageId":{"type":"string","description":"ID of the containing page.\n\nNote: This is only returned if the custom content has a container that is a page."},"blogPostId":{"type":"string","description":"ID of the containing blog post.\n\nNote: This is only returned if the custom content has a container that is a blog post."},"customContentId":{"type":"string","description":"ID of the containing custom content.\n\nNote: This is only returned if the custom content has a container that is custom content."},"authorId":{"type":"string","description":"The account ID of the user who created this custom content originally."},"createdAt":{"type":"string","format":"date-time","description":"Date and time when the custom content was created. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\"."},"version":{"$ref":"#/components/schemas/Version"},"body":{"$ref":"#/components/schemas/CustomContentBodyBulk"},"_links":{"$ref":"#/components/schemas/CustomContentLinks"}}},"CustomContentBodySingle":{"type":"object","description":"Contains fields for each representation type requested.","properties":{"raw":{"$ref":"#/components/schemas/BodyType"},"storage":{"$ref":"#/components/schemas/BodyType"},"atlas_doc_format":{"$ref":"#/components/schemas/BodyType"},"view":{"$ref":"#/components/schemas/BodyType"}}},"CustomContentBodyBulk":{"type":"object","description":"Contains fields for each representation type requested.","properties":{"raw":{"$ref":"#/components/schemas/BodyType"},"storage":{"$ref":"#/components/schemas/BodyType"},"atlas_doc_format":{"$ref":"#/components/schemas/BodyType"}}},"DetailedVersion":{"type":"object","properties":{"number":{"format":"int32","type":"integer","description":"The current version number."},"authorId":{"type":"string","description":"The account ID of the user who created this version."},"message":{"type":"string","description":"Message associated with the current version."},"createdAt":{"type":"string","format":"date-time","description":"Date and time when the version was created. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\"."},"minorEdit":{"type":"boolean","description":"Describes if this version is a minor version. Email notifications and activity stream updates are not created for minor versions."},"contentTypeModified":{"type":"boolean","description":"Describes if the content type is modified in this version (e.g. page to blog)"},"collaborators":{"type":"array","description":"The account IDs of users that collaborated on this version.","items":{"type":"string"}},"prevVersion":{"format":"int32","type":"integer","description":"The version number of the version prior to this current content update."},"nextVersion":{"format":"int32","type":"integer","description":"The version number of the version after this current content update."}}},"Label":{"type":"object","properties":{"id":{"type":"string","description":"ID of the label."},"name":{"type":"string","description":"Name of the label."},"prefix":{"type":"string","description":"Prefix of the label."}}},"Like":{"type":"object","properties":{"accountId":{"type":"string","description":"Account ID."}}},"Operation":{"type":"object","properties":{"operation":{"description":"The type of operation.","type":"string"},"targetType":{"description":"The type of entity the operation type targets.","type":"string"}}},"PermittedOperationsResponse":{"description":"The list of operations permitted on entity.","type":"object","properties":{"operations":{"type":"array","items":{"$ref":"#/components/schemas/Operation"}}}},"PageSingle":{"type":"object","properties":{"id":{"type":"string","description":"ID of the page."},"status":{"$ref":"#/components/schemas/ContentStatus"},"title":{"type":"string","description":"Title of the page."},"spaceId":{"type":"string","description":"ID of the space the page is in."},"parentId":{"type":"string","description":"ID of the parent page, or null if there is no parent page."},"parentType":{"$ref":"#/components/schemas/ParentContentType"},"position":{"format":"int32","type":"integer","nullable":true,"description":"Position of child page within the given parent page tree."},"authorId":{"type":"string","description":"The account ID of the user who created this page originally."},"ownerId":{"type":"string","nullable":true,"description":"The account ID of the user who owns this page."},"lastOwnerId":{"type":"string","nullable":true,"description":"The account ID of the user who owned this page previously, or null if there is no previous owner."},"createdAt":{"type":"string","format":"date-time","description":"Date and time when the page was created. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\"."},"version":{"$ref":"#/components/schemas/Version"},"body":{"$ref":"#/components/schemas/BodySingle"},"labels":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Label"}},"meta":{"$ref":"#/components/schemas/OptionalFieldMeta"},"_links":{"$ref":"#/components/schemas/OptionalFieldLinks"}}},"properties":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/ContentProperty"}},"meta":{"$ref":"#/components/schemas/OptionalFieldMeta"},"_links":{"$ref":"#/components/schemas/OptionalFieldLinks"}}},"operations":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Operation"}},"meta":{"$ref":"#/components/schemas/OptionalFieldMeta"},"_links":{"$ref":"#/components/schemas/OptionalFieldLinks"}}},"likes":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Like"}},"meta":{"$ref":"#/components/schemas/OptionalFieldMeta"},"_links":{"$ref":"#/components/schemas/OptionalFieldLinks"}}},"versions":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Version"}},"meta":{"$ref":"#/components/schemas/OptionalFieldMeta"},"_links":{"$ref":"#/components/schemas/OptionalFieldLinks"}}},"isFavoritedByCurrentUser":{"type":"boolean","description":"Whether the page has been favorited by the current user."},"_links":{"$ref":"#/components/schemas/AbstractPageLinks"}}},"PageBulk":{"type":"object","properties":{"id":{"type":"string","description":"ID of the page."},"status":{"$ref":"#/components/schemas/ContentStatus"},"title":{"type":"string","description":"Title of the page."},"spaceId":{"type":"string","description":"ID of the space the page is in."},"parentId":{"type":"string","description":"ID of the parent page, or null if there is no parent page."},"parentType":{"$ref":"#/components/schemas/ParentContentType"},"position":{"format":"int32","type":"integer","nullable":true,"description":"Position of child page within the given parent page tree."},"authorId":{"type":"string","description":"The account ID of the user who created this page originally."},"ownerId":{"type":"string","nullable":true,"description":"The account ID of the user who owns this page."},"lastOwnerId":{"type":"string","nullable":true,"description":"The account ID of the user who owned this page previously, or null if there is no previous owner."},"subtype":{"type":"string","nullable":true,"description":"The subtype of the page."},"createdAt":{"type":"string","format":"date-time","description":"Date and time when the page was created. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\"."},"version":{"$ref":"#/components/schemas/Version"},"body":{"$ref":"#/components/schemas/BodyBulk"},"_links":{"$ref":"#/components/schemas/AbstractPageLinks"}}},"ParentContentType":{"type":"string","enum":["page","whiteboard","database","embed","folder"],"description":"Content type of the parent, or null if there is no parent."},"PageBodyWrite":{"type":"object","properties":{"representation":{"enum":["storage","atlas_doc_format","wiki"],"type":"string","description":"Type of content representation used for the value field."},"value":{"type":"string","description":"Body of the page, in the format found in the representation field."}}},"PageNestedBodyWrite":{"type":"object","description":"Body of the page. Only one body format should be specified as the property\nfor this object, e.g. `storage`.","properties":{"storage":{"$ref":"#/components/schemas/PageBodyWrite"},"atlas_doc_format":{"$ref":"#/components/schemas/PageBodyWrite"},"wiki":{"$ref":"#/components/schemas/PageBodyWrite"}}},"BlogPostBodyWrite":{"type":"object","properties":{"representation":{"enum":["storage","atlas_doc_format","wiki"],"type":"string","description":"Type of content representation used for the value field."},"value":{"type":"string","description":"Body of the blog post, in the format found in the representation field."}}},"BlogPostNestedBodyWrite":{"type":"object","description":"Body of the blog post. Only one body format should be specified as the property\nfor this object, e.g. `storage`.","properties":{"storage":{"$ref":"#/components/schemas/BlogPostBodyWrite"},"atlas_doc_format":{"$ref":"#/components/schemas/BlogPostBodyWrite"},"wiki":{"$ref":"#/components/schemas/BlogPostBodyWrite"}}},"CommentBodyWrite":{"type":"object","properties":{"representation":{"enum":["storage","atlas_doc_format","wiki"],"type":"string","description":"Type of content representation used for the value field."},"value":{"type":"string","description":"Body of the comment, in the format found in the representation field."}}},"CommentNestedBodyWrite":{"type":"object","description":"Body of the comment. Only one body format should be specified as the property\nfor this object, e.g. `storage`.","properties":{"storage":{"$ref":"#/components/schemas/CommentBodyWrite"},"atlas_doc_format":{"$ref":"#/components/schemas/CommentBodyWrite"},"wiki":{"$ref":"#/components/schemas/CommentBodyWrite"}}},"CustomContentBodyWrite":{"type":"object","properties":{"representation":{"enum":["storage","atlas_doc_format","raw"],"type":"string","description":"Type of content representation used for the value field."},"value":{"type":"string","description":"Body of the custom content, in the format found in the representation field."}}},"CustomContentNestedBodyWrite":{"type":"object","description":"Body of the custom content. Only one body format should be specified as the property\nfor this object, e.g. `storage`.","properties":{"storage":{"$ref":"#/components/schemas/CustomContentBodyWrite"},"atlas_doc_format":{"$ref":"#/components/schemas/CustomContentBodyWrite"},"raw":{"$ref":"#/components/schemas/CustomContentBodyWrite"}}},"ChildPage":{"type":"object","properties":{"id":{"type":"string","description":"ID of the page."},"status":{"$ref":"#/components/schemas/OnlyArchivedAndCurrentContentStatus"},"title":{"type":"string","description":"Title of the page."},"spaceId":{"type":"string","description":"ID of the space the page is in."},"childPosition":{"format":"int32","type":"integer","nullable":true,"description":"Position of child page within the given parent page tree."}}},"ChildCustomContent":{"type":"object","properties":{"id":{"type":"string","description":"ID of the child custom content."},"status":{"$ref":"#/components/schemas/OnlyArchivedAndCurrentContentStatus"},"title":{"type":"string","description":"Title of the custom content."},"type":{"type":"string","description":"Custom content type."},"spaceId":{"type":"string","description":"ID of the space the custom content is in."}}},"ChildrenResponse":{"type":"object","properties":{"id":{"type":"string","description":"ID of the child content."},"status":{"$ref":"#/components/schemas/OnlyArchivedAndCurrentContentStatus"},"title":{"type":"string","description":"Title of the child content."},"type":{"type":"string","description":"Hierarchical content type (database/embed/folder/page/whiteboard)."},"spaceId":{"type":"string","description":"ID of the space the content is in."},"childPosition":{"format":"int32","type":"integer","nullable":true,"description":"Numerical value indicating position of the content relative to its siblings (with the same parentId) within the content tree.\nIf the content is sorted by childPosition, it will reflect the default content ordering within the content tree."}}},"DescendantsResponse":{"type":"object","properties":{"id":{"type":"string","description":"ID of the descendant."},"status":{"$ref":"#/components/schemas/OnlyArchivedAndCurrentContentStatus"},"title":{"type":"string","description":"Title of the descendant."},"type":{"type":"string","description":"Hierarchical content type (database/embed/folder/page/whiteboard)."},"parentId":{"type":"string","description":"ID of the parent content."},"depth":{"format":"int32","type":"integer","description":"Depth of the descendant in the content tree relative to the content specified in the request."},"childPosition":{"format":"int32","type":"integer","nullable":true,"description":"Numerical value indicating position of the content relative to its siblings (with the same parentId) within the content tree.\nIf the content is sorted by childPosition, it will reflect the default content ordering within the content tree."}}},"WhiteboardSingle":{"type":"object","properties":{"id":{"type":"string","description":"ID of the whiteboard."},"type":{"type":"string","description":"The content type of the object."},"status":{"$ref":"#/components/schemas/ContentStatus"},"title":{"type":"string","description":"Title of the whiteboard."},"parentId":{"type":"string","description":"ID of the parent content, or null if there is no parent content."},"parentType":{"$ref":"#/components/schemas/ParentContentType"},"position":{"format":"int32","type":"integer","nullable":true,"description":"Position of the whiteboard within the given parent page tree."},"authorId":{"type":"string","description":"The account ID of the user who created this whiteboard originally."},"ownerId":{"type":"string","description":"The account ID of the user who owns this whiteboard."},"createdAt":{"type":"string","format":"date-time","description":"Date and time when the whiteboard was created. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\"."},"version":{"$ref":"#/components/schemas/Version"},"_links":{"$ref":"#/components/schemas/WhiteboardLinks"}}},"DatabaseSingle":{"type":"object","properties":{"id":{"type":"string","description":"ID of the database."},"type":{"type":"string","description":"The content type of the object."},"status":{"$ref":"#/components/schemas/ContentStatus"},"title":{"type":"string","description":"Title of the database."},"parentId":{"type":"string","description":"ID of the parent content, or null if there is no parent content."},"parentType":{"$ref":"#/components/schemas/ParentContentType"},"position":{"format":"int32","type":"integer","nullable":true,"description":"Position of the database within the given parent page tree."},"authorId":{"type":"string","description":"The account ID of the user who created this database originally."},"ownerId":{"type":"string","description":"The account ID of the user who owns this database."},"createdAt":{"type":"string","format":"date-time","description":"Date and time when the database was created. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\"."},"version":{"$ref":"#/components/schemas/Version"},"_links":{"$ref":"#/components/schemas/DatabaseLinks"}}},"SmartLinkSingle":{"type":"object","properties":{"id":{"type":"string","description":"ID of the Smart Link in the content tree."},"type":{"type":"string","description":"The content type of the object."},"status":{"$ref":"#/components/schemas/ContentStatus"},"title":{"type":"string","description":"Title of the Smart Link in the content tree."},"parentId":{"type":"string","description":"ID of the parent content, or null if there is no parent content."},"parentType":{"$ref":"#/components/schemas/ParentContentType"},"position":{"format":"int32","type":"integer","nullable":true,"description":"Position of the Smart Link within the given parent page tree."},"authorId":{"type":"string","description":"The account ID of the user who created this Smart Link in the content tree originally."},"ownerId":{"type":"string","description":"The account ID of the user who owns this Smart Link in the content tree."},"createdAt":{"type":"string","format":"date-time","description":"Date and time when the Smart Link in the content tree was created. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\"."},"embedUrl":{"type":"string","description":"The embedded URL of the Smart Link. If the Smart Link does not have an embedded URL, this property will not be included in the response."},"version":{"$ref":"#/components/schemas/Version"},"_links":{"$ref":"#/components/schemas/SmartLinkLinks"}}},"FolderSingle":{"type":"object","properties":{"id":{"type":"string","description":"ID of the folder."},"type":{"type":"string","description":"The content type of the object."},"status":{"$ref":"#/components/schemas/ContentStatus"},"title":{"type":"string","description":"Title of the folder."},"parentId":{"type":"string","description":"ID of the parent content, or null if there is no parent content."},"parentType":{"$ref":"#/components/schemas/ParentContentType"},"position":{"format":"int32","type":"integer","nullable":true,"description":"Position of the folder within the given parent page tree."},"authorId":{"type":"string","description":"The account ID of the user who created this folder."},"ownerId":{"type":"string","description":"The account ID of the user who owns this folder."},"createdAt":{"type":"string","format":"date-time","description":"Date and time when the folder was created. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\"."},"version":{"$ref":"#/components/schemas/Version"},"_links":{"$ref":"#/components/schemas/FolderLinks"}}},"Ancestor":{"type":"object","properties":{"id":{"type":"string","description":"ID of the ancestor"},"type":{"$ref":"#/components/schemas/AncestorType"}}},"AncestorType":{"enum":["page","whiteboard","database","embed","folder"],"type":"string","description":"The type of ancestor."},"SpaceSingle":{"type":"object","properties":{"id":{"type":"string","description":"ID of the space."},"key":{"type":"string","description":"Key of the space."},"name":{"type":"string","description":"Name of the space."},"type":{"$ref":"#/components/schemas/SpaceType"},"status":{"$ref":"#/components/schemas/SpaceStatus"},"authorId":{"type":"string","description":"The account ID of the user who created this space originally."},"createdAt":{"type":"string","format":"date-time","description":"Date and time when the space was created. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\"."},"homepageId":{"type":"string","description":"ID of the space's homepage."},"description":{"$ref":"#/components/schemas/SpaceDescription"},"icon":{"$ref":"#/components/schemas/SpaceIcon"},"labels":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Label"}},"meta":{"$ref":"#/components/schemas/OptionalFieldMeta"},"_links":{"$ref":"#/components/schemas/OptionalFieldLinks"}}},"properties":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/SpaceProperty"}},"meta":{"$ref":"#/components/schemas/OptionalFieldMeta"},"_links":{"$ref":"#/components/schemas/OptionalFieldLinks"}}},"operations":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Operation"}},"meta":{"$ref":"#/components/schemas/OptionalFieldMeta"},"_links":{"$ref":"#/components/schemas/OptionalFieldLinks"}}},"permissions":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/SpacePermissionAssignment"}},"meta":{"$ref":"#/components/schemas/OptionalFieldMeta"},"_links":{"$ref":"#/components/schemas/OptionalFieldLinks"}}},"_links":{"$ref":"#/components/schemas/SpaceLinks"}}},"SpaceBulk":{"type":"object","properties":{"id":{"type":"string","description":"ID of the space."},"key":{"type":"string","description":"Key of the space."},"name":{"type":"string","description":"Name of the space."},"type":{"$ref":"#/components/schemas/SpaceType"},"status":{"$ref":"#/components/schemas/SpaceStatus"},"authorId":{"type":"string","description":"The account ID of the user who created this space originally."},"createdAt":{"type":"string","format":"date-time","description":"Date and time when the space was created. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\"."},"homepageId":{"type":"string","description":"ID of the space's homepage."},"description":{"$ref":"#/components/schemas/SpaceDescription"},"icon":{"$ref":"#/components/schemas/SpaceIcon"},"_links":{"$ref":"#/components/schemas/SpaceLinks"}}},"SpaceDescription":{"type":"object","description":"Contains fields for each representation type requested.","properties":{"plain":{"$ref":"#/components/schemas/BodyType"},"view":{"$ref":"#/components/schemas/BodyType"}}},"SpaceIcon":{"type":"object","description":"The icon of the space","properties":{"path":{"type":"string","description":"The path (relative to base URL) at which the space's icon can be retrieved. The format should be like `/wiki/download/...` or `/wiki/aa-avatar/...`"},"apiDownloadLink":{"type":"string","description":"The path (relative to base URL) that can be used to retrieve a link to download the space icon. 3LO apps should use this link instead of the value provided\nin the `path` property to retrieve the icon.\n\nCurrently this field is only returned for `global` spaces and not `personal` spaces.\n"}}},"SpacePermission":{"type":"object","properties":{"id":{"type":"string","description":"The identifier for the space permission."},"displayName":{"type":"string","description":"The display name for the space permission."},"description":{"type":"string","description":"Describes the space permission’s usage."},"requiredPermissionIds":{"type":"array","items":{"type":"string"},"description":"The permissions required for this permission to be enabled."}}},"SpacePermissionAssignment":{"type":"object","properties":{"id":{"type":"string","description":"ID of the space permission."},"principal":{"type":"object","description":"The entity the space permissions corresponds to.","properties":{"type":{"enum":["user","group","role"],"type":"string"},"id":{"type":"string","description":"ID of the entity."}}},"operation":{"type":"object","description":"The operation the space permission corresponds to.","properties":{"key":{"enum":["use","create","read","update","delete","copy","move","export","purge","purge_version","administer","restore","create_space","restrict_content","archive"],"type":"string","description":"The type of operation."},"targetType":{"enum":["page","blogpost","comment","attachment","whiteboard","database","embed","folder","space","application","userProfile"],"type":"string","description":"The type of entity the operation type targets."}}}}},"SpaceRole":{"type":"object","properties":{"id":{"type":"string","description":"The identifier for the space role."},"type":{"$ref":"#/components/schemas/RoleType"},"displayName":{"type":"string","description":"The display name for the space role."},"description":{"type":"string","description":"The description for the space role’s usage."},"spacePermissions":{"type":"array","items":{"type":"string"},"description":"The space permissions the space role is comprised of."}}},"SpaceRoleAssignment":{"type":"object","properties":{"principal":{"$ref":"#/components/schemas/Principal"},"roleId":{"type":"string","description":"The role to which the principal is assigned."}}},"Principal":{"type":"object","description":"The principal of the role assignment.","properties":{"principalType":{"$ref":"#/components/schemas/PrincipalType"},"principalId":{"type":"string","description":"The principal ID."}}},"PrincipalType":{"type":"string","description":"The principal type.","enum":["USER","GROUP","ACCESS_CLASS"]},"RoleType":{"type":"string","description":"The role type.","enum":["SYSTEM","CUSTOM"]},"SpaceProperty":{"type":"object","properties":{"id":{"type":"string","description":"ID of the space property."},"key":{"type":"string","description":"Key of the space property."},"value":{"description":"Value of the space property."},"createdAt":{"type":"string","format":"date-time","description":"RFC3339 compliant date time at which the property was created."},"createdBy":{"type":"string","description":"Atlassian account ID of the user that created the space property."},"version":{"type":"object","properties":{"createdAt":{"type":"string","format":"date-time","description":"RFC3339 compliant date time at which the property's current version was created."},"createdBy":{"type":"string","description":"Atlassian account ID of the user that created the space property's current version."},"message":{"type":"string","description":"Message associated with the current version."},"number":{"type":"integer","format":"int32","description":"The space property's current version number."}}}}},"SpacePropertyCreateRequest":{"type":"object","properties":{"key":{"type":"string","description":"Key of the space property"},"value":{"description":"Value of the space property."}}},"SpacePropertyUpdateRequest":{"type":"object","properties":{"key":{"type":"string","description":"Key of the space property"},"value":{"description":"Value of the space property."},"version":{"type":"object","description":"New version number and associated message","properties":{"number":{"type":"integer","format":"int32","description":"Version number of the new version. Should be 1 more than the current version number."},"message":{"type":"string","description":"Message to be associated with the new version."}}}}},"SpaceType":{"enum":["global","collaboration","knowledge_base","personal"],"type":"string","description":"The type of space."},"SpaceStatus":{"enum":["current","archived"],"type":"string","description":"The status of the space."},"Task":{"type":"object","properties":{"id":{"type":"string","description":"ID of the task."},"localId":{"type":"string","description":"Local ID of the task. This ID is local to the corresponding page or blog post."},"spaceId":{"type":"string","description":"ID of the space the task is in."},"pageId":{"type":"string","description":"ID of the page the task is in."},"blogPostId":{"type":"string","description":"ID of the blog post the task is in."},"status":{"enum":["complete","incomplete"],"type":"string","description":"Status of the task."},"body":{"$ref":"#/components/schemas/TaskBodySingle"},"createdBy":{"type":"string","description":"Account ID of the user who created this task."},"assignedTo":{"type":"string","description":"Account ID of the user to whom this task is assigned."},"completedBy":{"type":"string","description":"Account ID of the user who completed this task."},"createdAt":{"type":"string","format":"date-time","description":"Date and time when the task was created. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\"."},"updatedAt":{"type":"string","format":"date-time","description":"Date and time when the task was updated. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\"."},"dueAt":{"type":"string","format":"date-time","description":"Date and time when the task is due. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\"."},"completedAt":{"type":"string","format":"date-time","description":"Date and time when the task was completed. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\"."}}},"AccountType":{"enum":["atlassian","app","customer","unknown"],"type":"string","description":"The account type of the user."},"AccountStatus":{"enum":["active","inactive","closed","unknown"],"type":"string","description":"The account status of the user."},"Icon":{"required":["path","isDefault"],"type":"object","nullable":true,"properties":{"path":{"type":"string"},"isDefault":{"type":"boolean"}},"description":"This object represents an icon. If used as a profilePicture, this may be returned as null, depending on the user's privacy setting."},"User":{"type":"object","properties":{"displayName":{"type":"string","description":"Display name of the user."},"timeZone":{"type":"string","description":"Time zone of the user. Depending on the user's privacy\nsetting, this may return null."},"personalSpaceId":{"type":"string","description":"Space ID of the user's personal space. Returns null, if no personal space for the user."},"isExternalCollaborator":{"type":"boolean","description":"Whether the user is an external collaborator."},"accountStatus":{"$ref":"#/components/schemas/AccountStatus"},"accountId":{"type":"string","description":"Account ID of the user."},"email":{"type":"string","description":"The email address of the user. Depending on the user's privacy setting, this may return an empty string."},"accountType":{"$ref":"#/components/schemas/AccountType"},"publicName":{"type":"string","description":"Public name of the user."},"profilePicture":{"$ref":"#/components/schemas/Icon"}}},"Version":{"type":"object","properties":{"createdAt":{"type":"string","format":"date-time","description":"Date and time when the version was created. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\"."},"message":{"type":"string","description":"Message associated with the current version."},"number":{"format":"int32","type":"integer","description":"The version number."},"minorEdit":{"type":"boolean","description":"Describes if this version is a minor version. Email notifications and activity stream updates are not created for minor versions."},"authorId":{"type":"string","description":"The account ID of the user who created this version."}}},"AttachmentVersion":{"type":"object","properties":{"createdAt":{"type":"string","format":"date-time","description":"Date and time when the version was created. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\"."},"message":{"type":"string","description":"Message associated with the current version."},"number":{"format":"int32","type":"integer","description":"The version number."},"minorEdit":{"type":"boolean","description":"Describes if this version is a minor version. Email notifications and activity stream updates are not created for minor versions."},"authorId":{"type":"string","description":"The account ID of the user who created this version."},"attachment":{"$ref":"#/components/schemas/VersionedEntity"}}},"BlogPostVersion":{"type":"object","properties":{"createdAt":{"type":"string","format":"date-time","description":"Date and time when the version was created. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\"."},"message":{"type":"string","description":"Message associated with the current version."},"number":{"format":"int32","type":"integer","description":"The version number."},"minorEdit":{"type":"boolean","description":"Describes if this version is a minor version. Email notifications and activity stream updates are not created for minor versions."},"authorId":{"type":"string","description":"The account ID of the user who created this version."},"blogpost":{"$ref":"#/components/schemas/VersionedEntity"}}},"PageVersion":{"type":"object","properties":{"createdAt":{"type":"string","format":"date-time","description":"Date and time when the version was created. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\"."},"message":{"type":"string","description":"Message associated with the current version."},"number":{"format":"int32","type":"integer","description":"The version number."},"minorEdit":{"type":"boolean","description":"Describes if this version is a minor version. Email notifications and activity stream updates are not created for minor versions."},"authorId":{"type":"string","description":"The account ID of the user who created this version."},"page":{"$ref":"#/components/schemas/VersionedEntity"}}},"CustomContentVersion":{"type":"object","properties":{"createdAt":{"type":"string","format":"date-time","description":"Date and time when the version was created. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\"."},"message":{"type":"string","description":"Message associated with the current version."},"number":{"format":"int32","type":"integer","description":"The version number."},"minorEdit":{"type":"boolean","description":"Describes if this version is a minor version. Email notifications and activity stream updates are not created for minor versions."},"authorId":{"type":"string","description":"The account ID of the user who created this version."},"custom":{"$ref":"#/components/schemas/VersionedEntity"}}},"CommentVersion":{"type":"object","properties":{"createdAt":{"type":"string","format":"date-time","description":"Date and time when the version was created. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\"."},"message":{"type":"string","description":"Message associated with the current version."},"number":{"format":"int32","type":"integer","description":"The version number."},"minorEdit":{"type":"boolean","description":"Describes if this version is a minor version. Email notifications and activity stream updates are not created for minor versions."},"authorId":{"type":"string","description":"The account ID of the user who created this version."},"comment":{"$ref":"#/components/schemas/VersionedEntity"}}},"VersionedEntity":{"type":"object","properties":{"title":{"type":"string","description":"Title of the entity."},"id":{"type":"string","description":"ID of the entity."},"body":{"$ref":"#/components/schemas/BodyBulk"}}},"AttachmentSortOrder":{"enum":["created-date","-created-date","modified-date","-modified-date"],"type":"string","description":"The sort fields for attachments. The default sort direction is ascending. To sort in descending order, append a `-` character before the sort field. For example, `fieldName` or `-fieldName`."},"BlogPostSortOrder":{"enum":["id","-id","created-date","-created-date","modified-date","-modified-date"],"type":"string","description":"The sort fields for blog posts. The default sort direction is ascending. To sort in descending order, append a `-` character before the sort field. For example, `fieldName` or `-fieldName`."},"CommentSortOrder":{"enum":["created-date","-created-date","modified-date","-modified-date"],"type":"string","description":"The sort fields for comments. The default sort direction is ascending. To sort in descending order, append a `-` character before the sort field. For example, `fieldName` or `-fieldName`."},"ContentPropertySortOrder":{"type":"string","description":"The sort fields for content properties. The default sort direction is ascending. To sort in descending order, append a `-` character before the sort field. For example, `fieldName` or `-fieldName`.","enum":["key","-key"]},"ContentSortOrder":{"enum":["created-date","-created-date","id","-id","modified-date","-modified-date","child-position","-child-position","title","-title"],"type":"string","description":"The sort fields for hierarchical content types. The default sort direction is ascending. To sort in descending order, append a `-` character before the sort field. For example, `fieldName` or `-fieldName`."},"LabelSortOrder":{"enum":["created-date","-created-date","id","-id","name","-name"],"type":"string","description":"The sort fields for labels. The default sort direction is ascending. To sort in descending order, append a `-` character before the sort field. For example, `fieldName` or `-fieldName`."},"ChildPageSortOrder":{"enum":["created-date","-created-date","id","-id","child-position","-child-position","modified-date","-modified-date"],"type":"string","description":"The sort fields for child pages. The default sort direction is ascending by child-position. To sort in descending order, append a `-` character before the sort field. For example, `fieldName` or `-fieldName`."},"ChildCustomContentSortOrder":{"enum":["created-date","-created-date","id","-id","modified-date","-modified-date"],"type":"string","description":"The sort fields for child custom content. The default sort direction is ascending by id. To sort in descending order, append a `-` character before the sort field. For example, `fieldName` or `-fieldName`."},"CustomContentSortOrder":{"enum":["id","-id","created-date","-created-date","modified-date","-modified-date","title","-title"],"type":"string","description":"The sort fields for custom content. The default sort direction is ascending. To sort in descending order, append a `-` character before the sort field. For example, `fieldName` or `-fieldName`."},"PageSortOrder":{"enum":["id","-id","created-date","-created-date","modified-date","-modified-date","title","-title"],"type":"string","description":"The sort fields for pages. The default sort direction is ascending. To sort in descending order, append a `-` character before the sort field. For example, `fieldName` or `-fieldName`."},"SpaceSortOrder":{"enum":["id","-id","key","-key","name","-name"],"type":"string","description":"The sort fields for spaces. The default sort direction is ascending. To sort in descending order, append a `-` character before the sort field. For example, `fieldName` or `-fieldName`."},"VersionSortOrder":{"enum":["modified-date","-modified-date"],"type":"string","description":"The sort fields for versions. The default sort direction is ascending. To sort in descending order, append a `-` character before the sort field. For example, `fieldName` or `-fieldName`."},"InlineCommentResolutionStatus":{"enum":["open","reopened","resolved","dangling"],"type":"string","description":"Inline comment resolution status"},"InlineCommentProperties":{"type":"object","properties":{"inlineMarkerRef":{"type":"string","description":"Property value used to reference the highlighted element in DOM."},"inlineOriginalSelection":{"type":"string","description":"Text that is highlighted."},"inline-marker-ref":{"type":"string","deprecated":true,"description":"Deprecated, use `inlineMarkerRef` instead."},"inline-original-selection":{"type":"string","deprecated":true,"description":"Deprecated, use `inlineOriginalSelection` instead."}}},"PageCommentModel":{"type":"object","properties":{"id":{"type":"string","description":"ID of the comment."},"status":{"$ref":"#/components/schemas/ContentStatus"},"title":{"type":"string","description":"Title of the comment."},"pageId":{"type":"string","description":"ID of the page the comment is in."},"version":{"$ref":"#/components/schemas/Version"},"body":{"$ref":"#/components/schemas/BodyBulk"},"_links":{"$ref":"#/components/schemas/CommentLinks"}}},"PageInlineCommentModel":{"type":"object","properties":{"id":{"type":"string","description":"ID of the comment."},"status":{"$ref":"#/components/schemas/ContentStatus"},"title":{"type":"string","description":"Title of the comment."},"pageId":{"type":"string","description":"ID of the page the comment is in."},"version":{"$ref":"#/components/schemas/Version"},"body":{"$ref":"#/components/schemas/BodyBulk"},"resolutionStatus":{"$ref":"#/components/schemas/InlineCommentResolutionStatus"},"properties":{"$ref":"#/components/schemas/InlineCommentProperties"},"_links":{"$ref":"#/components/schemas/CommentLinks"}}},"BlogPostCommentModel":{"type":"object","properties":{"id":{"type":"string","description":"ID of the comment."},"status":{"$ref":"#/components/schemas/ContentStatus"},"title":{"type":"string","description":"Title of the comment."},"blogPostId":{"type":"string","description":"ID of the blog post the comment is in."},"version":{"$ref":"#/components/schemas/Version"},"body":{"$ref":"#/components/schemas/BodyBulk"},"_links":{"$ref":"#/components/schemas/CommentLinks"}}},"BlogPostInlineCommentModel":{"type":"object","properties":{"id":{"type":"string","description":"ID of the comment."},"status":{"$ref":"#/components/schemas/ContentStatus"},"title":{"type":"string","description":"Title of the comment."},"blogPostId":{"type":"string","description":"ID of the blog post the comment is in."},"version":{"$ref":"#/components/schemas/Version"},"body":{"$ref":"#/components/schemas/BodyBulk"},"resolutionStatus":{"$ref":"#/components/schemas/InlineCommentResolutionStatus"},"properties":{"$ref":"#/components/schemas/InlineCommentProperties"},"_links":{"$ref":"#/components/schemas/CommentLinks"}}},"ChildrenCommentModel":{"type":"object","properties":{"id":{"type":"string","description":"ID of the comment."},"status":{"$ref":"#/components/schemas/ContentStatus"},"title":{"type":"string","description":"Title of the comment."},"parentCommentId":{"type":"string","description":"ID of the parent comment the child comment is in."},"version":{"$ref":"#/components/schemas/Version"},"body":{"$ref":"#/components/schemas/BodyBulk"},"_links":{"$ref":"#/components/schemas/CommentLinks"}}},"InlineCommentChildrenModel":{"type":"object","properties":{"id":{"type":"string","description":"ID of the comment."},"status":{"$ref":"#/components/schemas/ContentStatus"},"title":{"type":"string","description":"Title of the comment."},"parentCommentId":{"type":"string","description":"ID of the parent comment the child comment is in."},"version":{"$ref":"#/components/schemas/Version"},"body":{"$ref":"#/components/schemas/BodyBulk"},"resolutionStatus":{"$ref":"#/components/schemas/InlineCommentResolutionStatus"},"properties":{"$ref":"#/components/schemas/InlineCommentProperties"},"_links":{"$ref":"#/components/schemas/CommentLinks"}}},"AttachmentCommentModel":{"type":"object","properties":{"id":{"type":"string","description":"ID of the comment."},"status":{"$ref":"#/components/schemas/ContentStatus"},"title":{"type":"string","description":"Title of the comment."},"attachmentId":{"type":"string","description":"ID of the attachment containing the comment."},"version":{"$ref":"#/components/schemas/Version"},"body":{"$ref":"#/components/schemas/BodySingle"},"_links":{"$ref":"#/components/schemas/CommentLinks"}}},"CustomContentCommentModel":{"type":"object","properties":{"id":{"type":"string","description":"ID of the comment."},"status":{"$ref":"#/components/schemas/ContentStatus"},"title":{"type":"string","description":"Title of the comment."},"customContentId":{"type":"string","description":"ID of the custom content containing the comment."},"version":{"$ref":"#/components/schemas/Version"},"body":{"$ref":"#/components/schemas/BodySingle"},"_links":{"$ref":"#/components/schemas/CommentLinks"}}},"FooterCommentModel":{"type":"object","properties":{"id":{"type":"string","description":"ID of the comment."},"status":{"$ref":"#/components/schemas/ContentStatus"},"title":{"type":"string","description":"Title of the comment."},"blogPostId":{"type":"string","description":"ID of the blog post containing the comment if the comment is on a blog post."},"pageId":{"type":"string","description":"ID of the page containing the comment if the comment is on a page."},"attachmentId":{"type":"string","description":"ID of the attachment containing the comment if the comment is on an attachment."},"customContentId":{"type":"string","description":"ID of the custom content containing the comment if the comment is on a custom content."},"parentCommentId":{"type":"string","description":"ID of the parent comment if the comment is a reply."},"version":{"$ref":"#/components/schemas/Version"},"properties":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/ContentProperty"}},"meta":{"$ref":"#/components/schemas/OptionalFieldMeta"},"_links":{"$ref":"#/components/schemas/OptionalFieldLinks"}}},"operations":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Operation"}},"meta":{"$ref":"#/components/schemas/OptionalFieldMeta"},"_links":{"$ref":"#/components/schemas/OptionalFieldLinks"}}},"likes":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Like"}},"meta":{"$ref":"#/components/schemas/OptionalFieldMeta"},"_links":{"$ref":"#/components/schemas/OptionalFieldLinks"}}},"versions":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Version"}},"meta":{"$ref":"#/components/schemas/OptionalFieldMeta"},"_links":{"$ref":"#/components/schemas/OptionalFieldLinks"}}},"body":{"$ref":"#/components/schemas/BodySingle"},"_links":{"$ref":"#/components/schemas/CommentLinks"}}},"InlineCommentModel":{"type":"object","properties":{"id":{"type":"string","description":"ID of the comment."},"status":{"$ref":"#/components/schemas/ContentStatus"},"title":{"type":"string","description":"Title of the comment."},"blogPostId":{"type":"string","description":"ID of the blog post containing the comment if the comment is on a blog post."},"pageId":{"type":"string","description":"ID of the page containing the comment if the comment is on a page."},"parentCommentId":{"type":"string","description":"ID of the parent comment if the comment is a reply."},"version":{"$ref":"#/components/schemas/Version"},"body":{"$ref":"#/components/schemas/BodySingle"},"resolutionLastModifierId":{"type":"string","description":"Atlassian Account ID of last person who modified the resolve state of the comment. Null until comment is resolved or reopened."},"resolutionLastModifiedAt":{"type":"string","format":"date-time","description":"Timestamp of the last modification to the comment's resolution status. Null until comment is resolved or reopened."},"resolutionStatus":{"$ref":"#/components/schemas/InlineCommentResolutionStatus"},"properties":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/ContentProperty"}},"meta":{"$ref":"#/components/schemas/OptionalFieldMeta"},"_links":{"$ref":"#/components/schemas/OptionalFieldLinks"},"inlineMarkerRef":{"type":"string","description":"Property value used to reference the highlighted element in DOM."},"inlineOriginalSelection":{"type":"string","description":"Text that is highlighted."},"inline-marker-ref":{"type":"string","deprecated":true,"description":"Deprecated, use `inlineMarkerRef` instead."},"inline-original-selection":{"type":"string","deprecated":true,"description":"Deprecated, use `inlineOriginalSelection` instead."}}},"operations":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Operation"}},"meta":{"$ref":"#/components/schemas/OptionalFieldMeta"},"_links":{"$ref":"#/components/schemas/OptionalFieldLinks"}}},"likes":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Like"}},"meta":{"$ref":"#/components/schemas/OptionalFieldMeta"},"_links":{"$ref":"#/components/schemas/OptionalFieldLinks"}}},"versions":{"type":"object","properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Version"}},"meta":{"$ref":"#/components/schemas/OptionalFieldMeta"},"_links":{"$ref":"#/components/schemas/OptionalFieldLinks"}}},"_links":{"$ref":"#/components/schemas/CommentLinks"}}},"CreateFooterCommentModel":{"type":"object","properties":{"blogPostId":{"type":"string","description":"ID of the containing blog post, if intending to create a top level footer comment. Do not provide if creating a reply."},"pageId":{"type":"string","description":"ID of the containing page, if intending to create a top level footer comment. Do not provide if creating a reply."},"parentCommentId":{"type":"string","description":"ID of the parent comment, if intending to create a reply. Do not provide if creating a top level comment."},"attachmentId":{"type":"string","description":"ID of the attachment, if intending to create a comment against an attachment."},"customContentId":{"type":"string","description":"ID of the custom content, if intending to create a comment against a custom content."},"body":{"oneOf":[{"$ref":"#/components/schemas/CommentBodyWrite"},{"$ref":"#/components/schemas/CommentNestedBodyWrite"}]}}},"CreateInlineCommentModel":{"type":"object","properties":{"blogPostId":{"type":"string","description":"ID of the containing blog post, if intending to create a top level footer comment. Do not provide if creating a reply."},"pageId":{"type":"string","description":"ID of the containing page, if intending to create a top level footer comment. Do not provide if creating a reply."},"parentCommentId":{"type":"string","description":"ID of the parent comment, if intending to create a reply. Do not provide if creating a top level comment."},"body":{"oneOf":[{"$ref":"#/components/schemas/CommentBodyWrite"},{"$ref":"#/components/schemas/CommentNestedBodyWrite"}]},"inlineCommentProperties":{"type":"object","description":"Object describing the text to highlight on the page/blog post. Only applicable for top level inline comments (not replies) and required in that case.","properties":{"textSelection":{"type":"string","description":"The text to highlight"},"textSelectionMatchCount":{"type":"integer","description":"The number of matches for the selected text on the page (should be strictly greater than textSelectionMatchIndex)"},"textSelectionMatchIndex":{"type":"integer","description":"The match index to highlight. This is zero-based. E.g. if you have 3 occurrences of \"hello world\" on a page \nand you want to highlight the second occurrence, you should pass 1 for textSelectionMatchIndex and 3 for textSelectionMatchCount."}}}}},"UpdateFooterCommentModel":{"type":"object","properties":{"version":{"type":"object","properties":{"number":{"type":"integer","description":"Number of new version. Should be 1 higher than current version of the comment."},"message":{"type":"string","description":"Optional message store for the new version."}}},"body":{"oneOf":[{"$ref":"#/components/schemas/CommentBodyWrite"},{"$ref":"#/components/schemas/CommentNestedBodyWrite"}]}}},"UpdateInlineCommentModel":{"type":"object","properties":{"version":{"type":"object","properties":{"number":{"type":"integer","description":"Number of new version. Should be 1 higher than current version of the comment."},"message":{"type":"string","description":"Optional message store for the new version."}}},"body":{"oneOf":[{"$ref":"#/components/schemas/CommentBodyWrite"},{"$ref":"#/components/schemas/CommentNestedBodyWrite"}]},"resolved":{"type":"boolean","description":"Resolved state of the comment. Set to true to resolve the comment, set to false to reopen it. If\nmatching the existing state (i.e. true -> resolved or false -> open/reopened) , no change will occur. A dangling\ncomment cannot be updated."}}},"AbstractPageLinks":{"type":"object","properties":{"webui":{"type":"string","description":"Web UI link of the content."},"editui":{"type":"string","description":"Edit UI link of the content."},"tinyui":{"type":"string","description":"Web UI link of the content."}}},"AttachmentLinks":{"type":"object","properties":{"webui":{"type":"string","description":"Web UI link of the content."},"download":{"type":"string","description":"Download link of the content."}}},"CustomContentLinks":{"type":"object","properties":{"webui":{"type":"string","description":"Web UI link of the content."}}},"CommentLinks":{"type":"object","properties":{"webui":{"type":"string","description":"Web UI link of the content."}}},"DatabaseLinks":{"type":"object","properties":{"webui":{"type":"string","description":"Web UI link of the content."}}},"FolderLinks":{"type":"object","properties":{"webui":{"type":"string","description":"Web UI link of the content."}}},"SmartLinkLinks":{"type":"object","properties":{"webui":{"type":"string","description":"Web UI link of the content."}}},"SpaceLinks":{"type":"object","properties":{"webui":{"type":"string","description":"Web UI link of the space."}}},"WhiteboardLinks":{"type":"object","properties":{"webui":{"type":"string","description":"Web UI link of the content."},"editui":{"type":"string","description":"Edit UI link of the content."}}},"DataPolicyMetadata":{"type":"object","properties":{"anyContentBlocked":{"type":"boolean","description":"Whether the workspace contains any content blocked for (inaccessible to) the requesting client application.","readOnly":true}},"additionalProperties":false,"description":"Details about data policies.","xml":{"name":"datapolicy"}},"DataPolicySpace":{"type":"object","properties":{"id":{"type":"string","description":"ID of the space."},"key":{"type":"string","description":"Key of the space."},"name":{"type":"string","description":"Name of the space."},"description":{"$ref":"#/components/schemas/SpaceDescription"},"dataPolicy":{"type":"object","properties":{"anyContentBlocked":{"type":"boolean","description":"Whether the space contains any content blocked for (inaccessible to) the requesting client application.","readOnly":true}}},"icon":{"$ref":"#/components/schemas/SpaceIcon"},"_links":{"$ref":"#/components/schemas/SpaceLinks"}}},"OptionalFieldMeta":{"type":"object","properties":{"hasMore":{"type":"boolean","description":"Indicates if there are more available results that can be fetched."},"cursor":{"type":"string","description":"A token that can be used in the query parameter of the endpoint returned in the `_links` property to retrieve the next set of results."}}},"OptionalFieldLinks":{"type":"object","properties":{"self":{"type":"string","description":"A relative URL that can be used to fetch results beyond what this include parameter retrieves."}}},"MultiEntityLinks":{"type":"object","properties":{"next":{"type":"string","description":"Used for pagination. Contains the relative URL for the next set of results, using a cursor query parameter.\nThis property will not be present if there is no additional data available."},"base":{"type":"string","description":"Base url of the Confluence site."}}},"ClassificationLevel":{"title":"ClassificationLevel","type":"object","description":"A unit of [data classification](https://support.atlassian.com/security-and-access-policies/docs/what-is-data-classification/) defined by an organiation. \nA classification level may be associated with specific storage and handling requirements or expectations.","properties":{"id":{"type":"string","description":"The ID of the classification level."},"status":{"type":"object","description":"The status of the classification level.","$ref":"#/components/schemas/ClassificationLevelStatus"},"order":{"type":"number","description":"The order of the classification level object."},"name":{"type":"string","description":"The name of the classification level object."},"description":{"type":"string","description":"The description of the classification level object."},"guideline":{"type":"string","description":"The guideline of the classification level object."},"color":{"type":"object","description":"The color of the classification level object.","$ref":"#/components/schemas/ClassificationLevelColor"}}},"ClassificationLevelColor":{"type":"string","enum":["RED","RED_BOLD","ORANGE","YELLOW","GREEN","BLUE","NAVY","TEAL","PURPLE","GREY","LIME"]},"ClassificationLevelStatus":{"type":"string","enum":["DRAFT","PUBLISHED","ARCHIVED"]}},"securitySchemes":{"basicAuth":{"type":"http","description":"You can access this resource via basic auth.","scheme":"basic"},"oAuthDefinitions":{"type":"oauth2","description":"This API uses OAuth 2 with the authorizationCode grant flow.","flows":{"authorizationCode":{"authorizationUrl":"https://auth.atlassian.com/authorize","tokenUrl":"https://auth.atlassian.com/oauth/token","scopes":{"read:page:confluence":"View pages and blogposts and their properties.","read:space:confluence":"View spaces and their properties.","read:attachment:confluence":"View attachments and their properties.","read:comment:confluence":"View comments and their properties.","read:custom-content:confluence":"View custom content and their properties.","read:task:confluence":"View tasks.","read:whiteboard:confluence":"View whiteboards and their properties.","read:database:confluence":"View databases and their properties.","read:embed:confluence":"View Smart Links in the content tree and their properties.","read:folder:confluence":"View folders and their properties.","read:hierarchical-content:confluence":"View children and descendants in the content tree.","write:space:confluence":"Create and update spaces and their properties.","write:page:confluence":"Create and update pages and blog posts and their properties.","write:comment:confluence":"Create and update comments and their properties.","write:custom-content:confluence":"Create and update custom content and their properties.","write:whiteboard:confluence":"Create and update whiteboards and their properties.","write:database:confluence":"Create and update databases and their properties.","write:embed:confluence":"Create and update Smart Links in the content tree and their properties.","write:folder:confluence":"Create and update folders and their properties.","delete:custom-content:confluence":"Delete custom content.","delete:page:confluence":"Delete pages and blog posts.","delete:comment:confluence":"Delete comments.","delete:whiteboard:confluence":"Delete whiteboards.","delete:database:confluence":"Delete databases.","delete:embed:confluence":"Delete Smart Links in the content tree.","delete:folder:confluence":"Delete folders."}}}}}},"x-atlassian-narrative":{"documents":[{"title":"About","anchor":"about","body":"This is the reference for the Confluence Cloud REST API v2, with definitions and performance intended to be an improvement over v1. You can click on the meatball menu in the upper right to download the spec or Postman collection."},{"title":"Authentication and authorization","anchor":"auth","body":"**Authentication:** If you are building a Cloud app, authentication is implemented via JWT or Oauth 2.0, depending on what you're building (see [Authentication for apps](https://developer.atlassian.com/cloud/confluence/authentication-for-apps/)). Otherwise, if you are authenticating directly against the REST API, the REST API supports basic auth (see [Basic auth for REST APIs](https://developer.atlassian.com/cloud/confluence/basic-auth-for-rest-apis/)).\n\n**Authorization:** If you are building a Cloud app, authorization can be implemented by [scopes](https://developer.atlassian.com/cloud/confluence/scopes/) or by [OAuth 2.0 user impersonation](https://developer.atlassian.com/cloud/confluence/oauth-2-jwt-bearer-tokens-for-apps). Otherwise, if you are making calls directly against the REST API, authorization is based on the user used in the authentication process.\n\nSee [Security overview](https://developer.atlassian.com/cloud/confluence/security-overview/) for more details on authentication and authorization."},{"title":"Using the REST API","anchor":"using","body":"**Pagination:** The Confluence REST API v2 uses cursor-based pagination: a method that returns a response with multiple objects can only return a limited number at one time. This limits the size of responses and conserves server resources.\n\nUse the 'limit' and 'cursor' parameters on endpoints that return multiple objects to work with pagination. First, make a request with your desired limit in the 'limit' parameter, then observe the `Link` header in the response. If there are additional entities to be retrieved, the `next` URL in the `Link` header will allow you to retrieve the next set of results. This relative URL will also be available under the `_links.next` property of paginated responses. \n\nFor example, the following request will return 5 page objects (if there are 5 present in the target site).\n```\nGET /wiki/api/v2/pages?limit=5\n```\n\nIf there are additional pages available, the `Link` header will look like:\n```\n</wiki/api/v2/pages?limit=5&cursor=<cursor token>>; rel=\"next\"\n```\nThe URL within the `Link` header will allow you to access the next 5 pages, while the `rel=\"next\"` denotes that the URL refers to the \"next\" set of pages. Relations for a single URL are separated by semicolons (;) and URLs are separated by commas (,)\nIf there are no related URLs, the `Link` header will not be present in the response and neither will the `next` property for `_links` in the response body."}]}}
