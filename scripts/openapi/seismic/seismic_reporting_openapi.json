{
  "openapi": "3.0.1",
  "info": {
    "title": "Reporting (v2)",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api.seismic.com/reporting/v2"
    }
  ],
  "paths": {
    "/adminImpersonationSessions": {
      "get": {
        "tags": [
          "Activity History"
        ],
        "summary": "Admin Impersonation Sessions",
        "description": "This model holds every admin impersonation session including details on the admin impersonated, the user doing the impersonation, and time of the impersonation.",
        "operationId": "Reporting-AdminImpersonationSessionsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "sessionStartedAtTime",
            "in": "query",
            "description": "Only include records that have sessionStartedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "sessionEndedAtTime",
            "in": "query",
            "description": "Only include records that have sessionEndedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminImpersonationSessions"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "adminImpersonationUserId": "752980e3-84d1-1d7e-71f3-af177723c4dd",
                    "impersonateeUserId": "e964c69f-3800-45d2-c49c-4fa570ef9b4f",
                    "sessionStartedAt": "2025-01-01T00:00:00.000Z",
                    "sessionEndedAt": "2025-01-01T00:00:00.000Z",
                    "durationSeconds": 1,
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "adminImpersonationUserName": "test adminImpersonationUserName",
                    "impersonateeUserName": "test impersonateeUserName"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "adminImpersonationUserId": "752980e3-84d1-1d7e-71f3-af177723c4dd",
                    "impersonateeUserId": "e964c69f-3800-45d2-c49c-4fa570ef9b4f",
                    "sessionStartedAt": "2025-01-01T00:00:00.000Z",
                    "sessionEndedAt": "2025-01-01T00:00:00.000Z",
                    "durationSeconds": 1,
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "adminImpersonationUserName": "test adminImpersonationUserName",
                    "impersonateeUserName": "test impersonateeUserName"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/contentUsageHistory": {
      "get": {
        "tags": [
          "Activity History"
        ],
        "summary": "Content Usage History",
        "description": "Provides data on users usage/deliveries of content in all areas of the product except Content Manager. The goal of this data is to gain an understanding of what content is being used, where it is being used, and how it is being taken out of the system.",
        "operationId": "Reporting-ContentUsageHistoryGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtStartTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtEndTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentUsageHistory"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "action": "Livesend",
                    "actionType": "Built-in",
                    "application": "test application",
                    "contentId": "7052bb92-43e5-79bb-3c6c-ea86f42a2efa",
                    "contentVersionId": "679461df-a4b0-0e69-3d47-a7e93c662268",
                    "contentProfileId": "40dee8dc-fa54-8b04-e45d-eabea250480e",
                    "contentProfileName": "test contentProfileName",
                    "contextId": "0066A000002701IQAQ",
                    "contextName": "Callahan Workforce Mobility",
                    "contextType": "Opportunity",
                    "contextSystemType": "Salesforce",
                    "instanceName": "Extended Efficiency for CPG",
                    "isBoundDelivery": true,
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "livesendLinkContentId": "9543f5aa-7ec9-97ca-b769-748e23722880",
                    "livesendLinkId": "1d42f6ca-ed7d-a5ea-52cf-cdb76329c8f7",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "productArea": "NewsCenter",
                    "totalPages": 2,
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userUsername": "jmktg@silvertower.com",
                    "workspaceContentId": "c1148391-355f-aa7d-fa20-1d6b273181cd",
                    "workspaceContentVersionId": "4b887fdf-e2aa-3e83-b9e5-c8b5fef334d9",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "interactionId": "9984bbdd-4648-cef2-7d7f-036b8fb88e1e"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "action": "Livesend",
                    "actionType": "Built-in",
                    "application": "test application",
                    "contentId": "7052bb92-43e5-79bb-3c6c-ea86f42a2efa",
                    "contentVersionId": "679461df-a4b0-0e69-3d47-a7e93c662268",
                    "contentProfileId": "40dee8dc-fa54-8b04-e45d-eabea250480e",
                    "contentProfileName": "test contentProfileName",
                    "contextId": "0066A000002701IQAQ",
                    "contextName": "Callahan Workforce Mobility",
                    "contextType": "Opportunity",
                    "contextSystemType": "Salesforce",
                    "instanceName": "Extended Efficiency for CPG",
                    "isBoundDelivery": true,
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "livesendLinkContentId": "9543f5aa-7ec9-97ca-b769-748e23722880",
                    "livesendLinkId": "1d42f6ca-ed7d-a5ea-52cf-cdb76329c8f7",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "productArea": "NewsCenter",
                    "totalPages": 2,
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userUsername": "jmktg@silvertower.com",
                    "workspaceContentId": "c1148391-355f-aa7d-fa20-1d6b273181cd",
                    "workspaceContentVersionId": "4b887fdf-e2aa-3e83-b9e5-c8b5fef334d9",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "interactionId": "9984bbdd-4648-cef2-7d7f-036b8fb88e1e"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/contentViewHistory": {
      "get": {
        "tags": [
          "Activity History"
        ],
        "summary": "Content View History",
        "description": "Provides data on users views of content in all areas of the product except Content Manager. The goal of this data is to gain an understanding of what content is being viewed, where it is being viewed.",
        "operationId": "Reporting-ContentViewHistoryGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtStartTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtEndTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentViewHistory"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "action": "View",
                    "application": "test application",
                    "contentId": "7052bb92-43e5-79bb-3c6c-ea86f42a2efa",
                    "contentVersionId": "679461df-a4b0-0e69-3d47-a7e93c662268",
                    "contentProfileId": "40dee8dc-fa54-8b04-e45d-eabea250480e",
                    "contentProfileName": "test contentProfileName",
                    "contextId": "0066A000002701IQAQ",
                    "contextName": "Callahan Workforce Mobility",
                    "contextType": "Opportunity",
                    "contextSystemType": "Salesforce",
                    "instanceName": "CP150 Product Overview",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "productArea": "NewsCenter",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userUsername": "jmktg@silvertower.com",
                    "workspaceContentId": "c1148391-355f-aa7d-fa20-1d6b273181cd",
                    "workspaceContentVersionId": "4b887fdf-e2aa-3e83-b9e5-c8b5fef334d9",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "action": "View",
                    "application": "test application",
                    "contentId": "7052bb92-43e5-79bb-3c6c-ea86f42a2efa",
                    "contentVersionId": "679461df-a4b0-0e69-3d47-a7e93c662268",
                    "contentProfileId": "40dee8dc-fa54-8b04-e45d-eabea250480e",
                    "contentProfileName": "test contentProfileName",
                    "contextId": "0066A000002701IQAQ",
                    "contextName": "Callahan Workforce Mobility",
                    "contextType": "Opportunity",
                    "contextSystemType": "Salesforce",
                    "instanceName": "CP150 Product Overview",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "productArea": "NewsCenter",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userUsername": "jmktg@silvertower.com",
                    "workspaceContentId": "c1148391-355f-aa7d-fa20-1d6b273181cd",
                    "workspaceContentVersionId": "4b887fdf-e2aa-3e83-b9e5-c8b5fef334d9",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/dailyActiveUsers": {
      "get": {
        "tags": [
          "Activity History"
        ],
        "summary": "Daily Active Users",
        "description": "Any user who hits an authenticated page, any time in the day or uses any authenticated services (an API call or integrated services that leverages Seismic, would also count) or has any Seismic interaction in a day, but does not include Engagement that can occur outside Seismic platform. Each row represents each day where a user was active in the system.",
        "operationId": "Reporting-DailyActiveUsersGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "dateStart",
            "in": "query",
            "description": "Only include records that have date values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "dateEnd",
            "in": "query",
            "description": "Only include records that have date values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DailyActiveUsers"
                  }
                },
                "example": [
                  {
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "username": "jmktg@silvertower.com",
                    "date": "2025-01-01T00:00:00.000Z",
                    "includesLessonlyActivity": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "username": "jmktg@silvertower.com",
                    "date": "2025-01-01T00:00:00.000Z",
                    "includesLessonlyActivity": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/distributionApprovalWorkflows": {
      "get": {
        "tags": [
          "Activity History"
        ],
        "summary": "Distribution Approval Workflows",
        "description": "This model holds all distribution approval workflow and the current step status.",
        "operationId": "Reporting-DistributionApprovalWorkflowsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "systemModifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have systemModifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "systemModifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have systemModifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "startedAtStartTime",
            "in": "query",
            "description": "Only include records that have startedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "startedAtEndTime",
            "in": "query",
            "description": "Only include records that have startedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DistributionApprovalWorkflows"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "interactionGroupId": "c481f1af-6dcc-6016-1cd8-ec21ba60d217",
                    "engagementUrl": "test engagementUrl",
                    "startedAt": "2025-01-01T00:00:00.000Z",
                    "endedAt": "2025-01-01T00:00:00.000Z",
                    "name": "test name",
                    "totalSteps": 2,
                    "activeStepOrder": 2,
                    "durationSeconds": 2,
                    "status": "Approved",
                    "isDistributionApproved": true,
                    "systemModifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "interactionGroupId": "c481f1af-6dcc-6016-1cd8-ec21ba60d217",
                    "engagementUrl": "test engagementUrl",
                    "startedAt": "2025-01-01T00:00:00.000Z",
                    "endedAt": "2025-01-01T00:00:00.000Z",
                    "name": "test name",
                    "totalSteps": 2,
                    "activeStepOrder": 2,
                    "durationSeconds": 2,
                    "status": "Approved",
                    "isDistributionApproved": true,
                    "systemModifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/distributionApprovalWorkflowStepsHistory": {
      "get": {
        "tags": [
          "Activity History"
        ],
        "summary": "Distribution Approval Workflow Steps History",
        "description": "This model is a history of distribution approval workflow step statuses.",
        "operationId": "Reporting-DistributionApprovalWorkflowStepsHistoryGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "systemModifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have systemModifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "systemModifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have systemModifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "startedAtStartTime",
            "in": "query",
            "description": "Only include records that have startedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "startedAtEndTime",
            "in": "query",
            "description": "Only include records that have startedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DistributionApprovalWorkflowStepsHistory"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "stepId": "74193da2-4950-790a-1a7d-dc3c21cf5a26",
                    "name": "test name",
                    "workflowid": "9e1d05bb-1285-0095-a259-91bef50e6973",
                    "workflowName": "test workflowName",
                    "status": "Approved",
                    "isRevoked": true,
                    "startedAt": "2025-01-01T00:00:00.000Z",
                    "endedAt": "2025-01-01T00:00:00.000Z",
                    "durationSeconds": 2,
                    "stepOrder": 2,
                    "isLatest": true,
                    "comment": "test comment",
                    "reviewerUserId": "f34a9a83-973e-1dbd-f26b-3eee725b42bb",
                    "reviewerUsername": "test reviewerUsername",
                    "interactionGroupId": "c481f1af-6dcc-6016-1cd8-ec21ba60d217",
                    "systemModifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "stepId": "74193da2-4950-790a-1a7d-dc3c21cf5a26",
                    "name": "test name",
                    "workflowid": "9e1d05bb-1285-0095-a259-91bef50e6973",
                    "workflowName": "test workflowName",
                    "status": "Approved",
                    "isRevoked": true,
                    "startedAt": "2025-01-01T00:00:00.000Z",
                    "endedAt": "2025-01-01T00:00:00.000Z",
                    "durationSeconds": 2,
                    "stepOrder": 2,
                    "isLatest": true,
                    "comment": "test comment",
                    "reviewerUserId": "f34a9a83-973e-1dbd-f26b-3eee725b42bb",
                    "reviewerUsername": "test reviewerUsername",
                    "interactionGroupId": "c481f1af-6dcc-6016-1cd8-ec21ba60d217",
                    "systemModifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/interactionContexts": {
      "get": {
        "tags": [
          "Activity History"
        ],
        "summary": "Interaction Contexts",
        "description": "This model holds details of the interaction context including the name and the system associated with the interaction.",
        "operationId": "Reporting-InteractionContextsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InteractionContexts"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "interactionId": "9984bbdd-4648-cef2-7d7f-036b8fb88e1e",
                    "systemType": "Salesforce",
                    "systemId": "271a9d08-8184-6eb8-8212-37f8e98e6de7",
                    "contextType": "Opportunity",
                    "contextId": "0066A000002701IQAQ",
                    "contextSourceType": "ambient",
                    "contextSource": "seismic-attribution",
                    "udmContextId": "bb4cd575-7e75-cfc2-586e-c05ac14cfa3f",
                    "udmContextHistoryId": "1dbd2170-ad02-f9e7-5636-eb3e07d6cf9b",
                    "isDeleted": true,
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "interactionRecipientId": "c55c2aef-f31c-d7c3-a3bb-8e4cf87c45ea",
                    "contextName": "Callahan Workforce Mobility",
                    "contextEmail": "callahan.tommyboy@gmail.com",
                    "systemName": "Brainshark, Lessonly, seismic-1b-dev-ed, 00Db0000000dYJNEA2"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "interactionId": "9984bbdd-4648-cef2-7d7f-036b8fb88e1e",
                    "systemType": "Salesforce",
                    "systemId": "271a9d08-8184-6eb8-8212-37f8e98e6de7",
                    "contextType": "Opportunity",
                    "contextId": "0066A000002701IQAQ",
                    "contextSourceType": "ambient",
                    "contextSource": "seismic-attribution",
                    "udmContextId": "bb4cd575-7e75-cfc2-586e-c05ac14cfa3f",
                    "udmContextHistoryId": "1dbd2170-ad02-f9e7-5636-eb3e07d6cf9b",
                    "isDeleted": true,
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "interactionRecipientId": "c55c2aef-f31c-d7c3-a3bb-8e4cf87c45ea",
                    "contextName": "Callahan Workforce Mobility",
                    "contextEmail": "callahan.tommyboy@gmail.com",
                    "systemName": "Brainshark, Lessonly, seismic-1b-dev-ed, 00Db0000000dYJNEA2"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/interactionRecipients": {
      "get": {
        "tags": [
          "Activity History"
        ],
        "summary": "Interaction Recipients",
        "description": "This model holds recipient details to an interaction and the associated delivery of a LiveSend Link or Print Order.",
        "operationId": "Reporting-InteractionRecipientsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InteractionRecipients"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "interactionId": "9984bbdd-4648-cef2-7d7f-036b8fb88e1e",
                    "internalUserId": "3dbff8bd-b9cd-b9d3-6ef7-da3907aa96d4",
                    "isInternalUser": true,
                    "email": "jmktg@silvertower.com",
                    "emailDomain": "silvertower.com",
                    "phoneNumber": "123-456-7890",
                    "recipientType": "bcc",
                    "firstName": "Joe",
                    "lastName": "Marketing",
                    "fullName": "Joe Marketing",
                    "country": "USA",
                    "state": "CA",
                    "city": "San Diego",
                    "postalCode": 92130,
                    "street": "El Camino Real",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "interactionId": "9984bbdd-4648-cef2-7d7f-036b8fb88e1e",
                    "internalUserId": "3dbff8bd-b9cd-b9d3-6ef7-da3907aa96d4",
                    "isInternalUser": true,
                    "email": "jmktg@silvertower.com",
                    "emailDomain": "silvertower.com",
                    "phoneNumber": "123-456-7890",
                    "recipientType": "bcc",
                    "firstName": "Joe",
                    "lastName": "Marketing",
                    "fullName": "Joe Marketing",
                    "country": "USA",
                    "state": "CA",
                    "city": "San Diego",
                    "postalCode": 92130,
                    "street": "El Camino Real",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/notificationFrequencySettings": {
      "get": {
        "tags": [
          "Activity History"
        ],
        "summary": "Notification Frequency Settings",
        "description": "This model identifies the default tenant notification settings and the users which have a different setting for a notification type.",
        "operationId": "Reporting-NotificationFrequencySettingsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationFrequencySettings"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userFullName": "test userFullName",
                    "type": "user-frequency",
                    "productArea": "test productArea",
                    "activityTrigger": "test activityTrigger",
                    "channel": "test channel",
                    "frequency": "daily",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userFullName": "test userFullName",
                    "type": "user-frequency",
                    "productArea": "test productArea",
                    "activityTrigger": "test activityTrigger",
                    "channel": "test channel",
                    "frequency": "daily",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/notificationStatus": {
      "get": {
        "tags": [
          "Activity History"
        ],
        "summary": "Notification Status",
        "description": "This model holds details on each notification sent to a user and whether the notification was read.",
        "operationId": "Reporting-NotificationStatusGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationStatus"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userFullName": "test userFullName",
                    "productArea": "test productArea",
                    "activityTrigger": "test activityTrigger",
                    "channel": "test channel",
                    "digestId": "e6d2e68e-7ea6-3709-6623-1a511d48acab",
                    "sentTime": "2025-01-01T00:00:00.000Z",
                    "isRead": true,
                    "firstReadTime": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userFullName": "test userFullName",
                    "productArea": "test productArea",
                    "activityTrigger": "test activityTrigger",
                    "channel": "test channel",
                    "digestId": "e6d2e68e-7ea6-3709-6623-1a511d48acab",
                    "sentTime": "2025-01-01T00:00:00.000Z",
                    "isRead": true,
                    "firstReadTime": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/userActivity": {
      "get": {
        "tags": [
          "Activity History"
        ],
        "summary": "User Activity",
        "description": "User Activity is the center of the Seismic Reporting Model and therefore associates a variety of product activity to specific content, LiveSend Links, Generated LiveDocs, and other types of products. User Activity rows are defined by the action with each action capable of being aggregated to the actionCategory bucket they belong to. These action and actionCategory definitions are documented here - https://docs.seismic.com/bundle/product_areas_and_features/page/user_activity_action_definitions.html",
        "operationId": "Reporting-UserActivityGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtStartTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtEndTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserActivity"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "action": "View",
                    "actionCategory": "Content Discussion",
                    "actionType": "Built-in",
                    "application": "test application",
                    "contentId": "7052bb92-43e5-79bb-3c6c-ea86f42a2efa",
                    "contentVersionId": "679461df-a4b0-0e69-3d47-a7e93c662268",
                    "contentProfileId": "40dee8dc-fa54-8b04-e45d-eabea250480e",
                    "contentProfileName": "test contentProfileName",
                    "contextId": "0066A000002701IQAQ",
                    "contextName": "Callahan Workforce Mobility",
                    "contextType": "Opportunity",
                    "contextSystemType": "Salesforce",
                    "instanceName": "CP150 Product Overview",
                    "isBoundDelivery": true,
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "livesendLinkContentId": "9543f5aa-7ec9-97ca-b769-748e23722880",
                    "livesendLinkId": "1d42f6ca-ed7d-a5ea-52cf-cdb76329c8f7",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "productArea": "Admin",
                    "totalPages": 1,
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userUsername": "jmktg@silvertower.com",
                    "workspaceContentId": "c1148391-355f-aa7d-fa20-1d6b273181cd",
                    "workspaceContentVersionId": "4b887fdf-e2aa-3e83-b9e5-c8b5fef334d9",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "interactionId": "9984bbdd-4648-cef2-7d7f-036b8fb88e1e",
                    "interactionGroupId": "c481f1af-6dcc-6016-1cd8-ec21ba60d217",
                    "isBlastInteractionGroup": true,
                    "searchClickId": "b3da0d55-e69e-3047-f7b6-dc474bd787a8",
                    "searchCycleId": "f5c88b66-843b-6c91-8ef8-77d0a8fa3580",
                    "searchHistoryId": "047bd307-c73a-1aeb-e77d-699b76f5c72e",
                    "generatedLivedocId": "57064c26-54cb-61a9-69f6-b95577684da1",
                    "contentAskExpertsId": "94c90695-eade-c20c-3363-d814ede82c6b",
                    "contentReviewId": "47ecab7a-af41-6e45-e01d-4ca0c80b8b92",
                    "isEngagementUserInternal": true,
                    "engagementUserEmail": "callahan.tommyboy@gmail.com",
                    "livesendCommentId": "6c348b47-0ab0-4888-f52d-4b8b894aba34",
                    "livesendViewingSessionId": "9e263052-d599-f265-5587-3ab3c4bae1f6",
                    "livesendContentViewingSessionId": "f9573d29-ce13-d601-8031-9739191d5887",
                    "livesendReactionId": "5a950246-5601-0301-7c78-5f1d32f76be1",
                    "learningProgressId": "7607357e-f651-5b84-6c78-8af14e4c464c",
                    "socialShareId": "0357f83e-3dfe-a0b4-81cb-3b8efe595a4f",
                    "textMessageId": "5a318a1b-e122-5587-e34e-bafc3b1a485b",
                    "skillAssessmentId": "d030b052-9194-21de-9756-25ef0d44c2f1",
                    "contentInsertInstanceId": "2993365b-f77e-2929-924d-3daf96b14299",
                    "meetingId": "d19fab44-f794-7357-f991-941da06dd9d3",
                    "digitalSalesRoomId": "771cc52a-7510-5b00-fd57-5ea91ab59f0d",
                    "digitalSalesRoomViewingSessionsId": "1002d1e0-0a8a-2bab-485e-9cb2fec5705f",
                    "learningStatusId": "7892b73a-34f5-1616-b3ca-221a37b7c324",
                    "channelId": "a4e0df33-2e2d-6d75-645d-6779e9f952ba",
                    "postId": "f50df173-89e2-affa-f503-45b514062c0e",
                    "postContentId": "327a1375-1da3-0713-72e8-2cdf4b433a3b",
                    "announcementId": "322f8f33-de53-93b6-3d0a-e02718a6f14e",
                    "pageClickId": "4df7b7c9-a446-74a7-6af6-8a810cdd2a56"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "action": "View",
                    "actionCategory": "Content Discussion",
                    "actionType": "Built-in",
                    "application": "test application",
                    "contentId": "7052bb92-43e5-79bb-3c6c-ea86f42a2efa",
                    "contentVersionId": "679461df-a4b0-0e69-3d47-a7e93c662268",
                    "contentProfileId": "40dee8dc-fa54-8b04-e45d-eabea250480e",
                    "contentProfileName": "test contentProfileName",
                    "contextId": "0066A000002701IQAQ",
                    "contextName": "Callahan Workforce Mobility",
                    "contextType": "Opportunity",
                    "contextSystemType": "Salesforce",
                    "instanceName": "CP150 Product Overview",
                    "isBoundDelivery": true,
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "livesendLinkContentId": "9543f5aa-7ec9-97ca-b769-748e23722880",
                    "livesendLinkId": "1d42f6ca-ed7d-a5ea-52cf-cdb76329c8f7",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "productArea": "Admin",
                    "totalPages": 1,
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userUsername": "jmktg@silvertower.com",
                    "workspaceContentId": "c1148391-355f-aa7d-fa20-1d6b273181cd",
                    "workspaceContentVersionId": "4b887fdf-e2aa-3e83-b9e5-c8b5fef334d9",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "interactionId": "9984bbdd-4648-cef2-7d7f-036b8fb88e1e",
                    "interactionGroupId": "c481f1af-6dcc-6016-1cd8-ec21ba60d217",
                    "isBlastInteractionGroup": true,
                    "searchClickId": "b3da0d55-e69e-3047-f7b6-dc474bd787a8",
                    "searchCycleId": "f5c88b66-843b-6c91-8ef8-77d0a8fa3580",
                    "searchHistoryId": "047bd307-c73a-1aeb-e77d-699b76f5c72e",
                    "generatedLivedocId": "57064c26-54cb-61a9-69f6-b95577684da1",
                    "contentAskExpertsId": "94c90695-eade-c20c-3363-d814ede82c6b",
                    "contentReviewId": "47ecab7a-af41-6e45-e01d-4ca0c80b8b92",
                    "isEngagementUserInternal": true,
                    "engagementUserEmail": "callahan.tommyboy@gmail.com",
                    "livesendCommentId": "6c348b47-0ab0-4888-f52d-4b8b894aba34",
                    "livesendViewingSessionId": "9e263052-d599-f265-5587-3ab3c4bae1f6",
                    "livesendContentViewingSessionId": "f9573d29-ce13-d601-8031-9739191d5887",
                    "livesendReactionId": "5a950246-5601-0301-7c78-5f1d32f76be1",
                    "learningProgressId": "7607357e-f651-5b84-6c78-8af14e4c464c",
                    "socialShareId": "0357f83e-3dfe-a0b4-81cb-3b8efe595a4f",
                    "textMessageId": "5a318a1b-e122-5587-e34e-bafc3b1a485b",
                    "skillAssessmentId": "d030b052-9194-21de-9756-25ef0d44c2f1",
                    "contentInsertInstanceId": "2993365b-f77e-2929-924d-3daf96b14299",
                    "meetingId": "d19fab44-f794-7357-f991-941da06dd9d3",
                    "digitalSalesRoomId": "771cc52a-7510-5b00-fd57-5ea91ab59f0d",
                    "digitalSalesRoomViewingSessionsId": "1002d1e0-0a8a-2bab-485e-9cb2fec5705f",
                    "learningStatusId": "7892b73a-34f5-1616-b3ca-221a37b7c324",
                    "channelId": "a4e0df33-2e2d-6d75-645d-6779e9f952ba",
                    "postId": "f50df173-89e2-affa-f503-45b514062c0e",
                    "postContentId": "327a1375-1da3-0713-72e8-2cdf4b433a3b",
                    "announcementId": "322f8f33-de53-93b6-3d0a-e02718a6f14e",
                    "pageClickId": "4df7b7c9-a446-74a7-6af6-8a810cdd2a56"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/virusScanAuditLog": {
      "get": {
        "tags": [
          "Activity History"
        ],
        "summary": "Virus Scan Audit Log",
        "description": "Log that shows history of all uploaded contents within Content Manager, WorkSpace etc. that has detected a virus or were not scanned.",
        "operationId": "Reporting-VirusScanAuditLogGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "occurredAtStartTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtEndTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VirusScanAuditLog"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "fileExtension": "test fileExtension",
                    "fileName": "test fileName",
                    "hasVirus": true,
                    "wasNotScanned": true,
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "productArea": "ContentManager",
                    "email": "test email",
                    "userName": "test userName"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "fileExtension": "test fileExtension",
                    "fileName": "test fileName",
                    "hasVirus": true,
                    "wasNotScanned": true,
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "productArea": "ContentManager",
                    "email": "test email",
                    "userName": "test userName"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/aiActivity": {
      "get": {
        "tags": [
          "AI"
        ],
        "summary": "Ai Activity",
        "description": "This model utlines a record of user activity on Aura features.",
        "operationId": "Reporting-AiActivityGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "occurredAtStartTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtEndTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AiActivity"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userName": "test userName",
                    "aiGeneratedTextId": "4f34dfa4-0f9e-4470-a06e-607e2a336f1f",
                    "useCase": "test useCase",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "creditType": "test creditType",
                    "creditsUsed": 3
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userName": "test userName",
                    "aiGeneratedTextId": "4f34dfa4-0f9e-4470-a06e-607e2a336f1f",
                    "useCase": "test useCase",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "creditType": "test creditType",
                    "creditsUsed": 3
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/aiGeneratedText": {
      "get": {
        "tags": [
          "AI"
        ],
        "summary": "Ai Generated Text",
        "description": "This model holds records of generated content in response to a given request when a user chooses to interact with any of the AI features in Seismic. A request may generate more than one call and response per user workflow.",
        "operationId": "Reporting-AiGeneratedTextGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "occurredAtStartTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtEndTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AiGeneratedText"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userName": "test userName",
                    "email": "test email",
                    "useCase": "test useCase",
                    "flowRequestId": "test flowRequestId",
                    "aiModel": "test aiModel",
                    "aiModelProvider": "test aiModelProvider",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "isAuraCopilotFeature": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userName": "test userName",
                    "email": "test email",
                    "useCase": "test useCase",
                    "flowRequestId": "test flowRequestId",
                    "aiModel": "test aiModel",
                    "aiModelProvider": "test aiModelProvider",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "isAuraCopilotFeature": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/aiGeneratedTextUserFeedback": {
      "get": {
        "tags": [
          "AI"
        ],
        "summary": "Ai Generated Text User Feedback",
        "description": "This model holds a feedback response connected with some generated content fragment",
        "operationId": "Reporting-AiGeneratedTextUserFeedbackGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "submittedAtStartTime",
            "in": "query",
            "description": "Only include records that have submittedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "submittedAtEndTime",
            "in": "query",
            "description": "Only include records that have submittedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AiGeneratedTextUserFeedback"
                  }
                },
                "example": [
                  {
                    "feedbackId": "cbd4daaf-d1d2-73b6-20d2-af35e4d84629",
                    "aiGeneratedTextId": "4f34dfa4-0f9e-4470-a06e-607e2a336f1f",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userName": "test userName",
                    "email": "test email",
                    "submittedAt": "2025-01-01T00:00:00.000Z",
                    "score": 4,
                    "scoreType": "test scoreType",
                    "feedback": "test feedback"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "feedbackId": "cbd4daaf-d1d2-73b6-20d2-af35e4d84629",
                    "aiGeneratedTextId": "4f34dfa4-0f9e-4470-a06e-607e2a336f1f",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userName": "test userName",
                    "email": "test email",
                    "submittedAt": "2025-01-01T00:00:00.000Z",
                    "score": 4,
                    "scoreType": "test scoreType",
                    "feedback": "test feedback"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/aiSuggestedContentProperties": {
      "get": {
        "tags": [
          "AI"
        ],
        "summary": "Ai Suggested Content Properties",
        "description": "This model holds suggested content properties from AIML.",
        "operationId": "Reporting-AiSuggestedContentPropertiesGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AiSuggestedContentProperties"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "suggestedContentPropertyId": "fd63a1e3-4c77-2408-5e4d-4313f09be574",
                    "suggestedContentPropertyValueId": "8e3385f2-9900-135c-d965-242533e55ba6",
                    "suggestedContentPropertyValue": "test suggestedContentPropertyValue",
                    "score": 4,
                    "isDeclined": true,
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "suggestedContentPropertyId": "fd63a1e3-4c77-2408-5e4d-4313f09be574",
                    "suggestedContentPropertyValueId": "8e3385f2-9900-135c-d965-242533e55ba6",
                    "suggestedContentPropertyValue": "test suggestedContentPropertyValue",
                    "score": 4,
                    "isDeclined": true,
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/copilotForSalesDsrRecommendations": {
      "get": {
        "tags": [
          "AI"
        ],
        "summary": "Copilot For Sales Dsr Recommendations",
        "description": "This model represents any queried or created DSR using the sales copilot integrations.",
        "operationId": "Reporting-CopilotForSalesDsrRecommendationsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "occurredAtStartTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtEndTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CopilotForSalesDsrRecommendations"
                  }
                },
                "example": [
                  {
                    "Id": "e8a60a49-cc56-08f2-a054-389e47ce0d06",
                    "operationType": "Create",
                    "totalDsrCount": 1,
                    "digitalSalesRoomId": "771cc52a-7510-5b00-fd57-5ea91ab59f0d",
                    "interactionId": "9984bbdd-4648-cef2-7d7f-036b8fb88e1e",
                    "crmEngagementStatus": "test crmEngagementStatus",
                    "contextId": "79dd338b-414a-22f2-3131-2d5b8393fb2e",
                    "contextType": "test contextType",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "username": "test username",
                    "occurredAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "Id": "e8a60a49-cc56-08f2-a054-389e47ce0d06",
                    "operationType": "Create",
                    "totalDsrCount": 1,
                    "digitalSalesRoomId": "771cc52a-7510-5b00-fd57-5ea91ab59f0d",
                    "interactionId": "9984bbdd-4648-cef2-7d7f-036b8fb88e1e",
                    "crmEngagementStatus": "test crmEngagementStatus",
                    "contextId": "79dd338b-414a-22f2-3131-2d5b8393fb2e",
                    "contextType": "test contextType",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "username": "test username",
                    "occurredAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/copilotForSalesRecommendations": {
      "get": {
        "tags": [
          "AI"
        ],
        "summary": "Copilot For Sales Recommendations",
        "description": "This model contains a record of all recommendations for meetings or emails that Seismic has provided to your instance of Copilot for Sales.",
        "operationId": "Reporting-CopilotForSalesRecommendationsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "occurredAtStartTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtEndTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CopilotForSalesRecommendations"
                  }
                },
                "example": [
                  {
                    "Id": "e8a60a49-cc56-08f2-a054-389e47ce0d06",
                    "msftUserId": "test msftUserId",
                    "totalRecommendationsCount": 1,
                    "externalRecommendationCount": 1,
                    "internalRecommendationCount": 1,
                    "operationType": "Meeting",
                    "recommendationContext": "ReplyToInquiry",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "username": "test username",
                    "occurredAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "Id": "e8a60a49-cc56-08f2-a054-389e47ce0d06",
                    "msftUserId": "test msftUserId",
                    "totalRecommendationsCount": 1,
                    "externalRecommendationCount": 1,
                    "internalRecommendationCount": 1,
                    "operationType": "Meeting",
                    "recommendationContext": "ReplyToInquiry",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "username": "test username",
                    "occurredAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/announcements": {
      "get": {
        "tags": [
          "Channels"
        ],
        "summary": "Announcements",
        "description": "Provides a list of announcements. Each row represents a single announcement.",
        "operationId": "Reporting-AnnouncementsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Announcements"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "announcementName": "test announcementName",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "announcementName": "test announcementName",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/channels": {
      "get": {
        "tags": [
          "Channels"
        ],
        "summary": "Channels",
        "description": "Provides a list of channels.  Each row represents a single channel.",
        "operationId": "Reporting-ChannelsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Channels"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "channelName": "test channelName",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "channelName": "test channelName",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/posts": {
      "get": {
        "tags": [
          "Channels"
        ],
        "summary": "Posts",
        "description": "Provides a list of posts in channels.  Each row represents a single post in one channel.",
        "operationId": "Reporting-PostsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Posts"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "postName": "test postName",
                    "channelId": "a4e0df33-2e2d-6d75-645d-6779e9f952ba",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "postName": "test postName",
                    "channelId": "a4e0df33-2e2d-6d75-645d-6779e9f952ba",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/postContents": {
      "get": {
        "tags": [
          "Channels"
        ],
        "summary": "Post Contents",
        "description": "Provides a list of contents uploaded in Channel posts.  Each row represents a single content uploaded inside channel posts.",
        "operationId": "Reporting-PostContentsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PostContents"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "postContentName": "test postContentName",
                    "postContentType": "test postContentType",
                    "postContentFormat": "test postContentFormat",
                    "createdAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "postContentName": "test postContentName",
                    "postContentType": "test postContentType",
                    "postContentFormat": "test postContentFormat",
                    "createdAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/contents": {
      "get": {
        "tags": [
          "Contents"
        ],
        "summary": "Contents",
        "description": "This is a generalized version of a union of Library Contents and WorkSpace Contents which is often useful when doing reporting. An item in this table can have both a WorkSpaceContentId and a LibraryContentId if the content originated from the Library and was saved to WorkSpace.",
        "operationId": "Reporting-ContentsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contents"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "instanceName": "My Hello World Copy",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "normalizedName": "Hello World",
                    "originRepository": "Library",
                    "repository": "WorkSpace",
                    "workspaceContentId": "c1148391-355f-aa7d-fa20-1d6b273181cd",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "originApplication": "Seismic for PowerPoint",
                    "format": "url",
                    "isDeleted": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "instanceName": "My Hello World Copy",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "normalizedName": "Hello World",
                    "originRepository": "Library",
                    "repository": "WorkSpace",
                    "workspaceContentId": "c1148391-355f-aa7d-fa20-1d6b273181cd",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "originApplication": "Seismic for PowerPoint",
                    "format": "url",
                    "isDeleted": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/contentActivities": {
      "get": {
        "tags": [
          "Contents"
        ],
        "summary": "Content Activities",
        "description": "Information of activities taken within Content Manager on Library Contents and Library Content Versions.",
        "operationId": "Reporting-ContentActivitiesGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtStartTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtEndTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentActivities"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userName": "test userName",
                    "actionCategory": "test actionCategory",
                    "action": "test action",
                    "instanceName": "test instanceName",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "productArea": "test productArea",
                    "application": "test application",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userName": "test userName",
                    "actionCategory": "test actionCategory",
                    "action": "test action",
                    "instanceName": "test instanceName",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "productArea": "test productArea",
                    "application": "test application",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/contentAskExperts": {
      "get": {
        "tags": [
          "Contents"
        ],
        "summary": "Content Ask Experts",
        "description": "Details of the Ask the Expert feature including specific questions and answers. Each row represents a question and answer asked on a piece of content.",
        "operationId": "Reporting-ContentAskExpertsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "questionAtStartTime",
            "in": "query",
            "description": "Only include records that have questionAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "questionAtEndTime",
            "in": "query",
            "description": "Only include records that have questionAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentAskExperts"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "questionBy": "827d5f11-7669-edcf-4dbc-1075844bfd24",
                    "questionAt": "2025-01-01T00:00:00.000Z",
                    "question": "test question",
                    "answeredBy": "1d6372b0-442e-8501-5e3e-d2455b7758e2",
                    "answeredAt": "2025-01-01T00:00:00.000Z",
                    "answer": "test answer",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "questionBy": "827d5f11-7669-edcf-4dbc-1075844bfd24",
                    "questionAt": "2025-01-01T00:00:00.000Z",
                    "question": "test question",
                    "answeredBy": "1d6372b0-442e-8501-5e3e-d2455b7758e2",
                    "answeredAt": "2025-01-01T00:00:00.000Z",
                    "answer": "test answer",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/contentInsertInstances": {
      "get": {
        "tags": [
          "Contents"
        ],
        "summary": "Content Insert Instances",
        "description": "The Seismic for Slides content model that holds each instance of the Seismic content that was inserted using the application.",
        "operationId": "Reporting-ContentInsertInstancesGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtStartTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtEndTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentInsertInstances"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "contentInsertInstanceGroupId": "70e815c5-4d1f-2749-81bf-1dc8abfbee3f",
                    "contentVersionId": "679461df-a4b0-0e69-3d47-a7e93c662268",
                    "repository": "test repository",
                    "contentProfileId": "40dee8dc-fa54-8b04-e45d-eabea250480e",
                    "contentProfileName": "test contentProfileName",
                    "userID": "70955c58-30dc-ed34-5179-4d2fc0cb2488",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "contentInsertInstanceGroupId": "70e815c5-4d1f-2749-81bf-1dc8abfbee3f",
                    "contentVersionId": "679461df-a4b0-0e69-3d47-a7e93c662268",
                    "repository": "test repository",
                    "contentProfileId": "40dee8dc-fa54-8b04-e45d-eabea250480e",
                    "contentProfileName": "test contentProfileName",
                    "userID": "70955c58-30dc-ed34-5179-4d2fc0cb2488",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/contentPages": {
      "get": {
        "tags": [
          "Contents"
        ],
        "summary": "Content Pages",
        "description": "List of all pages in a piece of barcoded content in Library and Workspace. E.g. a page in a PDF file or a slide in a PowerPoint file. This table also shows the page's ancestry (where it originated from) as well as a traceback to the nearest Library parent. The ancestry information helps understanding Library content usage.",
        "operationId": "Reporting-ContentPagesGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "occurredAtStartTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtEndTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentPages"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "pageIndex": 1,
                    "contentId": "7052bb92-43e5-79bb-3c6c-ea86f42a2efa",
                    "contentVersionId": "679461df-a4b0-0e69-3d47-a7e93c662268",
                    "repository": "Workspace",
                    "parentPageId": "4dcddadf-f87c-c960-21c5-9713535098a9",
                    "parentPageIndex": 1,
                    "parentContentId": "fa0c9544-388a-baeb-0453-513221fdf585",
                    "parentContentVersionId": "d889f009-ce42-6f39-c2be-0ccdce84aff3",
                    "parentRepository": "Workspace",
                    "originLibraryContentPageId": "b72c5282-8259-72c0-db77-b41d61081c27",
                    "originLibraryContentPageIndex": 1,
                    "originLibraryContentId": "59e7c96a-6c6c-8320-050a-f30e79ab9f52",
                    "originLibraryContentVersionId": "8c7bed24-ca39-e951-8886-79fceeb82f6f",
                    "parents": "",
                    "occurredAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "pageIndex": 1,
                    "contentId": "7052bb92-43e5-79bb-3c6c-ea86f42a2efa",
                    "contentVersionId": "679461df-a4b0-0e69-3d47-a7e93c662268",
                    "repository": "Workspace",
                    "parentPageId": "4dcddadf-f87c-c960-21c5-9713535098a9",
                    "parentPageIndex": 1,
                    "parentContentId": "fa0c9544-388a-baeb-0453-513221fdf585",
                    "parentContentVersionId": "d889f009-ce42-6f39-c2be-0ccdce84aff3",
                    "parentRepository": "Workspace",
                    "originLibraryContentPageId": "b72c5282-8259-72c0-db77-b41d61081c27",
                    "originLibraryContentPageIndex": 1,
                    "originLibraryContentId": "59e7c96a-6c6c-8320-050a-f30e79ab9f52",
                    "originLibraryContentVersionId": "8c7bed24-ca39-e951-8886-79fceeb82f6f",
                    "parents": "",
                    "occurredAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/contentReviews": {
      "get": {
        "tags": [
          "Contents"
        ],
        "summary": "Content Reviews",
        "description": "Details around activity and use of the content ratings and review feature.",
        "operationId": "Reporting-ContentReviewsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtStartTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtEndTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentReviews"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "rating": 0,
                    "starRating": "☆☆☆☆☆",
                    "title": "This is the best, but I don't like stars!",
                    "reviewContent": "test reviewContent",
                    "positivity": "Negative"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "rating": 0,
                    "starRating": "☆☆☆☆☆",
                    "title": "This is the best, but I don't like stars!",
                    "reviewContent": "test reviewContent",
                    "positivity": "Negative"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/contentSlideInsertInstances": {
      "get": {
        "tags": [
          "Contents"
        ],
        "summary": "Content Slide Insert Instances",
        "description": "This model holds details of the specific content slides that was inserted using the Seismic for Slides application.",
        "operationId": "Reporting-ContentSlideInsertInstancesGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtStartTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtEndTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentSlideInsertInstances"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "contentInsertInstanceId": "2993365b-f77e-2929-924d-3daf96b14299",
                    "slideId": "d9bb4f82-24a6-5ed1-c323-f8d414d7faed",
                    "slidePosition": 1,
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "thumbnailImageUrl": "test thumbnailImageUrl"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "contentInsertInstanceId": "2993365b-f77e-2929-924d-3daf96b14299",
                    "slideId": "d9bb4f82-24a6-5ed1-c323-f8d414d7faed",
                    "slidePosition": 1,
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "thumbnailImageUrl": "test thumbnailImageUrl"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/contentVersions": {
      "get": {
        "tags": [
          "Contents"
        ],
        "summary": "Content Versions",
        "description": "This is a generalized version of a union of Library Content Versions and WorkSpace Content Versions which is often useful when doing reporting. An item in this table can have both a WorkSpaceContentVersionId and a LibraryContentVersionId if the content originated from the Library and was saved to WorkSpace.",
        "operationId": "Reporting-ContentVersionsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentVersions"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "workspaceContentVersionId": "4b887fdf-e2aa-3e83-b9e5-c8b5fef334d9",
                    "contentId": "7052bb92-43e5-79bb-3c6c-ea86f42a2efa",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "workspaceContentId": "c1148391-355f-aa7d-fa20-1d6b273181cd",
                    "isLatestVersion": true,
                    "repository": "WorkSpace",
                    "name": "Extended Efficiency for CPG",
                    "thumbnailImageUrl": "https://tenant.seismic.com/Resource/Image.ashx?imageid=te94683d8-5cfc-4c4c-ac53-c0bf4e271b53",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "createdAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "workspaceContentVersionId": "4b887fdf-e2aa-3e83-b9e5-c8b5fef334d9",
                    "contentId": "7052bb92-43e5-79bb-3c6c-ea86f42a2efa",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "workspaceContentId": "c1148391-355f-aa7d-fa20-1d6b273181cd",
                    "isLatestVersion": true,
                    "repository": "WorkSpace",
                    "name": "Extended Efficiency for CPG",
                    "thumbnailImageUrl": "https://tenant.seismic.com/Resource/Image.ashx?imageid=te94683d8-5cfc-4c4c-ac53-c0bf4e271b53",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "createdAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/customProperties": {
      "get": {
        "tags": [
          "Contents"
        ],
        "summary": "Custom Properties",
        "description": "Provides a list of custom property names in the tenant. This model does not include custom property values.",
        "operationId": "Reporting-CustomPropertiesGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomProperties"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "name": "test name",
                    "type": "Date",
                    "helperText": "test helperText",
                    "editState": "Editable",
                    "listOrder": 2,
                    "hasDomainOfValues": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "name": "test name",
                    "type": "Date",
                    "helperText": "test helperText",
                    "editState": "Editable",
                    "listOrder": 2,
                    "hasDomainOfValues": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/customPropertyAssignments": {
      "get": {
        "tags": [
          "Contents"
        ],
        "summary": "Custom Property Assignments",
        "description": "Provides a list of content, planner, or task properties and the list of values for each custom property.",
        "operationId": "Reporting-CustomPropertyAssignmentsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "customPropertyId",
            "in": "query",
            "description": "Only include records that have customPropertyId values equal to this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomPropertyAssignments"
                  }
                },
                "example": [
                  {
                    "customPropertyId": "b6ce634b-247c-7bd1-fde0-4db0a78c38ad",
                    "customPropertyName": "As of Date",
                    "objectId": "60b2b216-9800-ac7f-cb26-0b9d39df1269",
                    "objectType": "content",
                    "customPropertyValue": "test customPropertyValue",
                    "isRequired": true,
                    "isRequiredForPublish": true,
                    "teamsiteId": "1bed6858-b624-3ec9-8610-13c14258785f",
                    "teamsiteName": "test teamsiteName"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "customPropertyId": "b6ce634b-247c-7bd1-fde0-4db0a78c38ad",
                    "customPropertyName": "As of Date",
                    "objectId": "60b2b216-9800-ac7f-cb26-0b9d39df1269",
                    "objectType": "content",
                    "customPropertyValue": "test customPropertyValue",
                    "isRequired": true,
                    "isRequiredForPublish": true,
                    "teamsiteId": "1bed6858-b624-3ec9-8610-13c14258785f",
                    "teamsiteName": "test teamsiteName"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/meetings": {
      "get": {
        "tags": [
          "Contents"
        ],
        "summary": "Meetings",
        "description": "Meetings that have started and ended with details of the host, type, and occurrence.",
        "operationId": "Reporting-MeetingsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "startedAtStartTime",
            "in": "query",
            "description": "Only include records that have startedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "startedAtEndTime",
            "in": "query",
            "description": "Only include records that have startedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "endedAtStartTime",
            "in": "query",
            "description": "Only include records that have endedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "endedAtEndTime",
            "in": "query",
            "description": "Only include records that have endedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Meetings"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "name": "test name",
                    "type": "Presenter",
                    "externalMeetingId": "1a9c37a7-70e4-5b3d-38bc-5c6063ead9c2",
                    "externalMeetingType": "test externalMeetingType",
                    "startedAt": "2025-01-01T00:00:00.000Z",
                    "endedAt": "2025-01-01T00:00:00.000Z",
                    "durationSeconds": 1,
                    "hostId": "f97a28b0-0519-e0d3-0c68-a79567174436",
                    "hostUserName": "test hostUserName",
                    "prepFirstActivityAt": "2025-01-01T00:00:00.000Z",
                    "prepLastActivityAt": "2025-01-01T00:00:00.000Z",
                    "agendaCharacters": 1,
                    "generalNotesCharacters": 1,
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "name": "test name",
                    "type": "Presenter",
                    "externalMeetingId": "1a9c37a7-70e4-5b3d-38bc-5c6063ead9c2",
                    "externalMeetingType": "test externalMeetingType",
                    "startedAt": "2025-01-01T00:00:00.000Z",
                    "endedAt": "2025-01-01T00:00:00.000Z",
                    "durationSeconds": 1,
                    "hostId": "f97a28b0-0519-e0d3-0c68-a79567174436",
                    "hostUserName": "test hostUserName",
                    "prepFirstActivityAt": "2025-01-01T00:00:00.000Z",
                    "prepLastActivityAt": "2025-01-01T00:00:00.000Z",
                    "agendaCharacters": 1,
                    "generalNotesCharacters": 1,
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/meetingAgendaUpdates": {
      "get": {
        "tags": [
          "Contents"
        ],
        "summary": "Meeting Agenda Updates",
        "description": "Model that details the users who have updated the meeting agenda before the meeting occurs.",
        "operationId": "Reporting-MeetingAgendaUpdatesGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtStartTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtEndTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MeetingAgendaUpdates"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "meetingId": "d19fab44-f794-7357-f991-941da06dd9d3",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userName": "test userName",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "agendaCharacters": 1,
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "meetingId": "d19fab44-f794-7357-f991-941da06dd9d3",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userName": "test userName",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "agendaCharacters": 1,
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/meetingContentPagePresentations": {
      "get": {
        "tags": [
          "Contents"
        ],
        "summary": "Meeting Content Page Presentations",
        "description": "Details of the pages within the contents presented in a meeting.",
        "operationId": "Reporting-MeetingContentPagePresentationsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "startedAtStartTime",
            "in": "query",
            "description": "Only include records that have startedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "startedAtEndTime",
            "in": "query",
            "description": "Only include records that have startedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "endedAtStartTime",
            "in": "query",
            "description": "Only include records that have endedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "endedAtEndTime",
            "in": "query",
            "description": "Only include records that have endedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MeetingContentPagePresentations"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "meetingContentPresentationId": "32189e22-fd26-106e-24fa-2614b54b0a58",
                    "startedAt": "2025-01-01T00:00:00.000Z",
                    "endedAt": "2025-01-01T00:00:00.000Z",
                    "durationSeconds": 1,
                    "barcode": "test barcode",
                    "pageIndex": 1,
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "meetingContentPresentationId": "32189e22-fd26-106e-24fa-2614b54b0a58",
                    "startedAt": "2025-01-01T00:00:00.000Z",
                    "endedAt": "2025-01-01T00:00:00.000Z",
                    "durationSeconds": 1,
                    "barcode": "test barcode",
                    "pageIndex": 1,
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/meetingContentPresentations": {
      "get": {
        "tags": [
          "Contents"
        ],
        "summary": "Meeting Content Presentations",
        "description": "Details of the content presented in a meeting. Rows without presentation timestamps signify the content was included in the meeting but never presented.",
        "operationId": "Reporting-MeetingContentPresentationsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "startedAtStartTime",
            "in": "query",
            "description": "Only include records that have startedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "startedAtEndTime",
            "in": "query",
            "description": "Only include records that have startedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "endedAtStartTime",
            "in": "query",
            "description": "Only include records that have endedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "endedAtEndTime",
            "in": "query",
            "description": "Only include records that have endedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MeetingContentPresentations"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "meetingId": "d19fab44-f794-7357-f991-941da06dd9d3",
                    "contentId": "7052bb92-43e5-79bb-3c6c-ea86f42a2efa",
                    "contentVersionId": "679461df-a4b0-0e69-3d47-a7e93c662268",
                    "name": "Extended Efficiency for CPG",
                    "repository": "WorkSpace",
                    "startedAt": "2025-01-01T00:00:00.000Z",
                    "endedAt": "2025-01-01T00:00:00.000Z",
                    "durationSeconds": 1,
                    "presentedById": "93b3f70c-c9ad-b079-bc9d-f66604904e78",
                    "presentedByUserName": "test presentedByUserName",
                    "presentedByIsInternalUser": true,
                    "presentationType": "Screen Share",
                    "totalPages": 1,
                    "isUploadedFromLocal": true,
                    "personalizationMethod": "test personalizationMethod",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "meetingId": "d19fab44-f794-7357-f991-941da06dd9d3",
                    "contentId": "7052bb92-43e5-79bb-3c6c-ea86f42a2efa",
                    "contentVersionId": "679461df-a4b0-0e69-3d47-a7e93c662268",
                    "name": "Extended Efficiency for CPG",
                    "repository": "WorkSpace",
                    "startedAt": "2025-01-01T00:00:00.000Z",
                    "endedAt": "2025-01-01T00:00:00.000Z",
                    "durationSeconds": 1,
                    "presentedById": "93b3f70c-c9ad-b079-bc9d-f66604904e78",
                    "presentedByUserName": "test presentedByUserName",
                    "presentedByIsInternalUser": true,
                    "presentationType": "Screen Share",
                    "totalPages": 1,
                    "isUploadedFromLocal": true,
                    "personalizationMethod": "test personalizationMethod",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/meetingGeneralNotesUpdates": {
      "get": {
        "tags": [
          "Contents"
        ],
        "summary": "Meeting General Notes Updates",
        "description": "Model that details the users who have updated the meeting general notes.",
        "operationId": "Reporting-MeetingGeneralNotesUpdatesGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtStartTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtEndTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MeetingGeneralNotesUpdates"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "meetingId": "d19fab44-f794-7357-f991-941da06dd9d3",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userName": "test userName",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "generalNotesCharacters": 1,
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "meetingId": "d19fab44-f794-7357-f991-941da06dd9d3",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userName": "test userName",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "generalNotesCharacters": 1,
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/meetingKeywords": {
      "get": {
        "tags": [
          "Contents"
        ],
        "summary": "Meeting Keywords",
        "description": "Details of keywords spoken in a meeting including the associated speaker and topic data.",
        "operationId": "Reporting-MeetingKeywordsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "startedAtStartTime",
            "in": "query",
            "description": "Only include records that have startedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "startedAtEndTime",
            "in": "query",
            "description": "Only include records that have startedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "endedAtStartTime",
            "in": "query",
            "description": "Only include records that have endedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "endedAtEndTime",
            "in": "query",
            "description": "Only include records that have endedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MeetingKeywords"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "meetingId": "d19fab44-f794-7357-f991-941da06dd9d3",
                    "meetingParticipantDisplayName": "test meetingParticipantDisplayName",
                    "meetingParticipantDisplayIdentification": "test meetingParticipantDisplayIdentification",
                    "keyword": "test keyword",
                    "topic": "test topic",
                    "startedAt": "2025-01-01T00:00:00.000Z",
                    "endedAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "meetingId": "d19fab44-f794-7357-f991-941da06dd9d3",
                    "meetingParticipantDisplayName": "test meetingParticipantDisplayName",
                    "meetingParticipantDisplayIdentification": "test meetingParticipantDisplayIdentification",
                    "keyword": "test keyword",
                    "topic": "test topic",
                    "startedAt": "2025-01-01T00:00:00.000Z",
                    "endedAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/meetingParticipants": {
      "get": {
        "tags": [
          "Contents"
        ],
        "summary": "Meeting Participants",
        "description": "Details of the all participants in a meeting including fields detailing the amount of participation when applicable.",
        "operationId": "Reporting-MeetingParticipantsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MeetingParticipants"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "meetingId": "d19fab44-f794-7357-f991-941da06dd9d3",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userName": "test userName",
                    "engagementUserEmailAddress": "test engagementUserEmailAddress",
                    "engagementUserEmailDomain": "test engagementUserEmailDomain",
                    "engagementUserPhoneNumber": "test engagementUserPhoneNumber",
                    "displayName": "test displayName",
                    "externalMeetingUserIdentification": "test externalMeetingUserIdentification",
                    "isInternalUser": true,
                    "memberType": "Owner",
                    "talkTimeSeconds": 1,
                    "listenTimeSeconds": 1,
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "meetingId": "d19fab44-f794-7357-f991-941da06dd9d3",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userName": "test userName",
                    "engagementUserEmailAddress": "test engagementUserEmailAddress",
                    "engagementUserEmailDomain": "test engagementUserEmailDomain",
                    "engagementUserPhoneNumber": "test engagementUserPhoneNumber",
                    "displayName": "test displayName",
                    "externalMeetingUserIdentification": "test externalMeetingUserIdentification",
                    "isInternalUser": true,
                    "memberType": "Owner",
                    "talkTimeSeconds": 1,
                    "listenTimeSeconds": 1,
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/meetingQuestions": {
      "get": {
        "tags": [
          "Contents"
        ],
        "summary": "Meeting Questions",
        "description": "Details of the questions asked during a meeting and as well as the associated topic of the question.",
        "operationId": "Reporting-MeetingQuestionsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "startedAtStartTime",
            "in": "query",
            "description": "Only include records that have startedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "startedAtEndTime",
            "in": "query",
            "description": "Only include records that have startedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "endedAtStartTime",
            "in": "query",
            "description": "Only include records that have endedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "endedAtEndTime",
            "in": "query",
            "description": "Only include records that have endedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MeetingQuestions"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "meetingId": "d19fab44-f794-7357-f991-941da06dd9d3",
                    "question": "test question",
                    "topic": "test topic",
                    "speakerId": "a37cc404-d8dd-1869-d7f3-2795cf755e7a",
                    "speaker": "test speaker",
                    "startedAt": "2025-01-01T00:00:00.000Z",
                    "endedAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "meetingId": "d19fab44-f794-7357-f991-941da06dd9d3",
                    "question": "test question",
                    "topic": "test topic",
                    "speakerId": "a37cc404-d8dd-1869-d7f3-2795cf755e7a",
                    "speaker": "test speaker",
                    "startedAt": "2025-01-01T00:00:00.000Z",
                    "endedAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/meetingTrackers": {
      "get": {
        "tags": [
          "Contents"
        ],
        "summary": "Meeting Trackers",
        "description": "Details of the trackers and topics that have been mentioned in the duration of a meeting.",
        "operationId": "Reporting-MeetingTrackersGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "startedAtStartTime",
            "in": "query",
            "description": "Only include records that have startedAt values greater than or equal to this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "startedAtEndTime",
            "in": "query",
            "description": "Only include records that have startedAt values less than or equal to this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "endedAtStartTime",
            "in": "query",
            "description": "Only include records that have endedAt values greater than or equal to this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "endedAtEndTime",
            "in": "query",
            "description": "Only include records that have endedAt values less than or equal to this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MeetingTrackers"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "meetingId": "d19fab44-f794-7357-f991-941da06dd9d3",
                    "tracker": "test tracker",
                    "topic": "test topic",
                    "aggMentions": 1,
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "meetingId": "d19fab44-f794-7357-f991-941da06dd9d3",
                    "tracker": "test tracker",
                    "topic": "test topic",
                    "aggMentions": 1,
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/pageClicks": {
      "get": {
        "tags": [
          "Contents"
        ],
        "summary": "Page Clicks",
        "description": "Tells the page the seller was on and when they clicked into something that navigated them away from the page.",
        "operationId": "Reporting-PageClicksGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "occurredAtStartTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtEndTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PageClicks"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "username": "jmktg@silvertower.com",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "productArea": "test productArea",
                    "application": "test application",
                    "actionType": "test actionType",
                    "action": "Page Click",
                    "pageType": "Home Page",
                    "pageContentId": "873ecaf4-97ea-ecd6-57c4-5397c0926ef3",
                    "pageContentVersionId": "41736613-a10d-9dea-d404-de0bead13868",
                    "clickType": "Content",
                    "targetContentId": "596134ef-c5f9-eb91-a760-9fdfa51fc590",
                    "targetContentVersionId": "51a29a77-7197-8128-8881-632babda2c76",
                    "targetUrl": "test targetUrl",
                    "isSuccessfulClick": true,
                    "widgetId": "8ca78972-a809-3162-2ed5-e9ab498a854b",
                    "widgetTitle": "test widgetTitle",
                    "widgetType": "test widgetType",
                    "widgetSubType": "test widgetSubType",
                    "widgetRowIndex": 1,
                    "widgetColumnIndex": 1,
                    "widgetCount": 1
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "username": "jmktg@silvertower.com",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "productArea": "test productArea",
                    "application": "test application",
                    "actionType": "test actionType",
                    "action": "Page Click",
                    "pageType": "Home Page",
                    "pageContentId": "873ecaf4-97ea-ecd6-57c4-5397c0926ef3",
                    "pageContentVersionId": "41736613-a10d-9dea-d404-de0bead13868",
                    "clickType": "Content",
                    "targetContentId": "596134ef-c5f9-eb91-a760-9fdfa51fc590",
                    "targetContentVersionId": "51a29a77-7197-8128-8881-632babda2c76",
                    "targetUrl": "test targetUrl",
                    "isSuccessfulClick": true,
                    "widgetId": "8ca78972-a809-3162-2ed5-e9ab498a854b",
                    "widgetTitle": "test widgetTitle",
                    "widgetType": "test widgetType",
                    "widgetSubType": "test widgetSubType",
                    "widgetRowIndex": 1,
                    "widgetColumnIndex": 1,
                    "widgetCount": 1
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/pageContentHistory": {
      "get": {
        "tags": [
          "Contents"
        ],
        "summary": "Page Content History",
        "description": "All associations between a Page and its child Content. This model is only usable in combination with the Users models PageOwners and AssociatedSeismicContentOwners in LiveInsights. PageContentHistory does not connect and should not be used in combination with other models in LiveInsights.",
        "operationId": "Reporting-PageContentHistoryGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PageContentHistory"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "associatedObjectId": "4a3a8118-3ce0-db6e-9a05-baf6bbb75019",
                    "associatedObjectName": "test associatedObjectName",
                    "associatedObjectType": "test associatedObjectType",
                    "associatedSeismicContentId": "eda37285-8186-2ccf-e81e-8f29252b1c6f",
                    "associatedSeismicContentVersionId": "d3a96dea-5232-fa73-b695-db73477a5839",
                    "associatedLessonlyId": "4c17bfc4-cd24-8565-605f-fe618bce52d5",
                    "lastSeenOnPageAt": "2025-01-01T00:00:00.000Z",
                    "firstSeenOnPageAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "hadStaticAssociation": true,
                    "hadDynamicAssociation": true,
                    "pageName": "test pageName",
                    "pageOwnerId": "c339cfcc-bc4d-c1bc-f62d-288e5ec5c740",
                    "associatedSeismicContentOwnerId": "67ae4a3e-da5c-2f85-ee86-735b45a24b65",
                    "associatedObjectViews": 1,
                    "associatedObjectUsage": 1,
                    "associatedObjectLiveSends": 1,
                    "associatedObjectUsers": 1,
                    "isMinFirstSeenOnPageAt": true,
                    "isMaxLastSeenOnPageAt": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "associatedObjectId": "4a3a8118-3ce0-db6e-9a05-baf6bbb75019",
                    "associatedObjectName": "test associatedObjectName",
                    "associatedObjectType": "test associatedObjectType",
                    "associatedSeismicContentId": "eda37285-8186-2ccf-e81e-8f29252b1c6f",
                    "associatedSeismicContentVersionId": "d3a96dea-5232-fa73-b695-db73477a5839",
                    "associatedLessonlyId": "4c17bfc4-cd24-8565-605f-fe618bce52d5",
                    "lastSeenOnPageAt": "2025-01-01T00:00:00.000Z",
                    "firstSeenOnPageAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "hadStaticAssociation": true,
                    "hadDynamicAssociation": true,
                    "pageName": "test pageName",
                    "pageOwnerId": "c339cfcc-bc4d-c1bc-f62d-288e5ec5c740",
                    "associatedSeismicContentOwnerId": "67ae4a3e-da5c-2f85-ee86-735b45a24b65",
                    "associatedObjectViews": 1,
                    "associatedObjectUsage": 1,
                    "associatedObjectLiveSends": 1,
                    "associatedObjectUsers": 1,
                    "isMinFirstSeenOnPageAt": true,
                    "isMaxLastSeenOnPageAt": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/watermarks": {
      "get": {
        "tags": [
          "Contents"
        ],
        "summary": "Watermarks",
        "description": "Views or Downloads where a watermark was included.",
        "operationId": "Reporting-WatermarksGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Watermarks"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "productArea": "DocCenter",
                    "application": "test application",
                    "contentRepository": "doccenter",
                    "contentVersionId": "679461df-a4b0-0e69-3d47-a7e93c662268",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "interactionId": "9984bbdd-4648-cef2-7d7f-036b8fb88e1e",
                    "watermarkTemplateText": "test watermarkTemplateText",
                    "watermarkRuleFilterText": "test watermarkRuleFilterText",
                    "watermarkType": "view",
                    "watermarkRawText": "test watermarkRawText",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "productArea": "DocCenter",
                    "application": "test application",
                    "contentRepository": "doccenter",
                    "contentVersionId": "679461df-a4b0-0e69-3d47-a7e93c662268",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "interactionId": "9984bbdd-4648-cef2-7d7f-036b8fb88e1e",
                    "watermarkTemplateText": "test watermarkTemplateText",
                    "watermarkRuleFilterText": "test watermarkRuleFilterText",
                    "watermarkType": "view",
                    "watermarkRawText": "test watermarkRawText",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/emails": {
      "get": {
        "tags": [
          "Emails"
        ],
        "summary": "Emails",
        "description": "Provides data about emails sent within the platform including details about each interaction.",
        "operationId": "Reporting-EmailsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Emails"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "interactionId": "9984bbdd-4648-cef2-7d7f-036b8fb88e1e",
                    "subject": "This is my blast DSR",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "status": "sent",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "firstOpenedAt": "2025-01-01T00:00:00.000Z",
                    "interactionGroupId": "test interactionGroupId",
                    "interactionGroupName": "DSR for Send Separate",
                    "isDeleted": true,
                    "emailImpersonationUserId": "9ec912c7-f467-e30e-70d2-0f4e16a7cd0f",
                    "sentAsBlast": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "interactionId": "9984bbdd-4648-cef2-7d7f-036b8fb88e1e",
                    "subject": "This is my blast DSR",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "status": "sent",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "firstOpenedAt": "2025-01-01T00:00:00.000Z",
                    "interactionGroupId": "test interactionGroupId",
                    "interactionGroupName": "DSR for Send Separate",
                    "isDeleted": true,
                    "emailImpersonationUserId": "9ec912c7-f467-e30e-70d2-0f4e16a7cd0f",
                    "sentAsBlast": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/emailTemplateInstances": {
      "get": {
        "tags": [
          "Emails"
        ],
        "summary": "Email Template Instances",
        "description": "Provides data about the template associated with a given email. This model includes details on instances of both seller created and marketing created templates.",
        "operationId": "Reporting-EmailTemplateInstancesGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailTemplateInstances"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "emailId": "174f95fc-d469-2284-9448-f47704671d4e",
                    "emailTemplateId": "c90ae10f-6113-0ec8-70b1-08462560139a",
                    "emailTemplateLibraryContentId": "cd379489-12d9-9a73-e3df-e5638fe96983",
                    "emailTemplateLibraryContentVersionId": "4795036c-dfa6-f15c-1afd-5f01d3e4ebaf",
                    "position": 1,
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "isReadOnly": true,
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "name": "All the Emails in the World give you [something]",
                    "emailTemplateContentProfileId": "9d080e51-c638-14c8-23b1-5519a9de81de",
                    "isSenderCreated": true,
                    "isClickedDelivery": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "emailId": "174f95fc-d469-2284-9448-f47704671d4e",
                    "emailTemplateId": "c90ae10f-6113-0ec8-70b1-08462560139a",
                    "emailTemplateLibraryContentId": "cd379489-12d9-9a73-e3df-e5638fe96983",
                    "emailTemplateLibraryContentVersionId": "4795036c-dfa6-f15c-1afd-5f01d3e4ebaf",
                    "position": 1,
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "isReadOnly": true,
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "name": "All the Emails in the World give you [something]",
                    "emailTemplateContentProfileId": "9d080e51-c638-14c8-23b1-5519a9de81de",
                    "isSenderCreated": true,
                    "isClickedDelivery": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/emailTemplateSectionSelections": {
      "get": {
        "tags": [
          "Emails"
        ],
        "summary": "Email Template Section Selections",
        "description": "Provides data about each of the sections used on an email template instance to create an email.",
        "operationId": "Reporting-EmailTemplateSectionSelectionsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailTemplateSectionSelections"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "emailId": "174f95fc-d469-2284-9448-f47704671d4e",
                    "emailTemplateInstanceId": "b3cb593b-121b-6664-0b9f-d1a2a3ca5eb7",
                    "sectionName": "untitiled",
                    "sectionType": "Subject",
                    "optionName": "untitled",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "isReadOnly": true,
                    "isChangedFromDefault": true,
                    "isSharedTemplateComponentReadOnly": true,
                    "sharedTemplateComponentLibraryContentId": "33df0e6f-51d1-1613-9e3a-245672138e74",
                    "sharedTemplateComponentLibraryContentVersionId": "a64251d3-5458-a7fd-f528-b1e7a775aa01",
                    "sharedTemplateComponentTeamsiteId": "09ed242e-3143-430d-6d08-5896f7c4bdd0",
                    "createdAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "emailId": "174f95fc-d469-2284-9448-f47704671d4e",
                    "emailTemplateInstanceId": "b3cb593b-121b-6664-0b9f-d1a2a3ca5eb7",
                    "sectionName": "untitiled",
                    "sectionType": "Subject",
                    "optionName": "untitled",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "isReadOnly": true,
                    "isChangedFromDefault": true,
                    "isSharedTemplateComponentReadOnly": true,
                    "sharedTemplateComponentLibraryContentId": "33df0e6f-51d1-1613-9e3a-245672138e74",
                    "sharedTemplateComponentLibraryContentVersionId": "a64251d3-5458-a7fd-f528-b1e7a775aa01",
                    "sharedTemplateComponentTeamsiteId": "09ed242e-3143-430d-6d08-5896f7c4bdd0",
                    "createdAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/emailTemplateStaticImages": {
      "get": {
        "tags": [
          "Emails"
        ],
        "summary": "Email Template Static Images",
        "description": "Provides data about each of the static images used on an email template instance to create an email.",
        "operationId": "Reporting-EmailTemplateStaticImagesGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailTemplateStaticImages"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "emailTemplateInstanceId": "b3cb593b-121b-6664-0b9f-d1a2a3ca5eb7",
                    "repository": "DocCenter",
                    "contentId": "7052bb92-43e5-79bb-3c6c-ea86f42a2efa",
                    "contentVersionId": "679461df-a4b0-0e69-3d47-a7e93c662268",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "workspaceContentId": "c1148391-355f-aa7d-fa20-1d6b273181cd",
                    "workspaceContentVersionId": "4b887fdf-e2aa-3e83-b9e5-c8b5fef334d9",
                    "contentProfileId": "40dee8dc-fa54-8b04-e45d-eabea250480e",
                    "contentProfileName": "test contentProfileName",
                    "instanceName": "test instanceName",
                    "targetUrl": "test targetUrl",
                    "alternativeText": "test alternativeText",
                    "alignment": "Left align - No wrap",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "emailTemplateInstanceId": "b3cb593b-121b-6664-0b9f-d1a2a3ca5eb7",
                    "repository": "DocCenter",
                    "contentId": "7052bb92-43e5-79bb-3c6c-ea86f42a2efa",
                    "contentVersionId": "679461df-a4b0-0e69-3d47-a7e93c662268",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "workspaceContentId": "c1148391-355f-aa7d-fa20-1d6b273181cd",
                    "workspaceContentVersionId": "4b887fdf-e2aa-3e83-b9e5-c8b5fef334d9",
                    "contentProfileId": "40dee8dc-fa54-8b04-e45d-eabea250480e",
                    "contentProfileName": "test contentProfileName",
                    "instanceName": "test instanceName",
                    "targetUrl": "test targetUrl",
                    "alternativeText": "test alternativeText",
                    "alignment": "Left align - No wrap",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/emailTemplateVariableValues": {
      "get": {
        "tags": [
          "Emails"
        ],
        "summary": "Email Template Variable Values",
        "description": "Provides data on the inputs used on each email template while creating an email.",
        "operationId": "Reporting-EmailTemplateVariableValuesGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailTemplateVariableValues"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "emailId": "174f95fc-d469-2284-9448-f47704671d4e",
                    "emailTemplateInstanceId": "b3cb593b-121b-6664-0b9f-d1a2a3ca5eb7",
                    "sectionName": "untitled",
                    "placeholderText": "Recipient.Name",
                    "value": "DEBBIE FELLOW DATA NERD",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "sectionSelectionId": "0d5d4414-81bd-10c1-44c0-f0e046cf3ec7",
                    "variableType": "system",
                    "createdAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "emailId": "174f95fc-d469-2284-9448-f47704671d4e",
                    "emailTemplateInstanceId": "b3cb593b-121b-6664-0b9f-d1a2a3ca5eb7",
                    "sectionName": "untitled",
                    "placeholderText": "Recipient.Name",
                    "value": "DEBBIE FELLOW DATA NERD",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "sectionSelectionId": "0d5d4414-81bd-10c1-44c0-f0e046cf3ec7",
                    "variableType": "system",
                    "createdAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/answers": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Answers",
        "description": "Contains information on answers learners have given to questions within lessons.",
        "operationId": "Reporting-AnswersGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Answers"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "questionId": "e6156369-fc3f-7c9f-8f2d-30e32036d58c",
                    "sourceProgressId": "29cd82aa-7c77-3b00-d624-7bdea9ac2bbb",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userName": "test userName",
                    "correctAnswer": "test correctAnswer",
                    "givenAnswer": "test givenAnswer",
                    "graderId": "5af5dd9e-8933-0417-954e-f024d0961d5a",
                    "isCorrect": true,
                    "isGradable": true,
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "questionId": "e6156369-fc3f-7c9f-8f2d-30e32036d58c",
                    "sourceProgressId": "29cd82aa-7c77-3b00-d624-7bdea9ac2bbb",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userName": "test userName",
                    "correctAnswer": "test correctAnswer",
                    "givenAnswer": "test givenAnswer",
                    "graderId": "5af5dd9e-8933-0417-954e-f024d0961d5a",
                    "isCorrect": true,
                    "isGradable": true,
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/assignments": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Assignments",
        "description": "Contains details on lesson and path assignments.",
        "operationId": "Reporting-AssignmentsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Assignments"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "assignableId": "bc1d43a7-cf86-0d95-f70b-ef32e3289f7c",
                    "dueAt": "2025-01-01T00:00:00.000Z",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "reassignedAt": "2025-01-01T00:00:00.000Z",
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "assignorId": "6757d86e-7578-ba39-68d1-5f3fe6c77bb2",
                    "assignableType": "Path",
                    "isDeleted": true,
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "assignableId": "bc1d43a7-cf86-0d95-f70b-ef32e3289f7c",
                    "dueAt": "2025-01-01T00:00:00.000Z",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "reassignedAt": "2025-01-01T00:00:00.000Z",
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "assignorId": "6757d86e-7578-ba39-68d1-5f3fe6c77bb2",
                    "assignableType": "Path",
                    "isDeleted": true,
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/customUserFields": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Custom User Fields",
        "description": "Contains information on any custom user fields that have been configured in the account.",
        "operationId": "Reporting-CustomUserFieldsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomUserFields"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "name": "test name",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "name": "test name",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/customUserFieldValues": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Custom User Field Values",
        "description": "Lists the users with custom fields and the values within those custom fields.",
        "operationId": "Reporting-CustomUserFieldValuesGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomUserFieldValues"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "customUserFieldId": "ba0335a7-7358-845e-8aee-948880cee7ea",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "value": "test value",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "customUserFieldId": "ba0335a7-7358-845e-8aee-948880cee7ea",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "value": "test value",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/feedbackCriteria": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Feedback Criteria",
        "description": "Offers insight into Learning practice feedback criteria and the feedback scores learners have been given on their practice scenarios.",
        "operationId": "Reporting-FeedbackCriteriaGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FeedbackCriteria"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "answerId": "de192b6f-fc0c-a420-9d5b-52d51dc1129e",
                    "isAnswered": true,
                    "questionId": "e6156369-fc3f-7c9f-8f2d-30e32036d58c",
                    "score": 1,
                    "isDeleted": true,
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "criterionName": "test criterionName",
                    "criterionDescription": "test criterionDescription",
                    "criterionType": "CustomCriterion",
                    "criterionCreatorId": "8e9862dd-6767-3dbc-845f-76aacaf83b56"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "answerId": "de192b6f-fc0c-a420-9d5b-52d51dc1129e",
                    "isAnswered": true,
                    "questionId": "e6156369-fc3f-7c9f-8f2d-30e32036d58c",
                    "score": 1,
                    "isDeleted": true,
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "criterionName": "test criterionName",
                    "criterionDescription": "test criterionDescription",
                    "criterionType": "CustomCriterion",
                    "criterionCreatorId": "8e9862dd-6767-3dbc-845f-76aacaf83b56"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/instructorLedTrainingEvents": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Instructor Led Training Events",
        "description": "Model that contains the session details associated with each instructor led training event.",
        "operationId": "Reporting-InstructorLedTrainingEventsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "userModifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have userModifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "userModifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have userModifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InstructorLedTrainingEvents"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "name": "test name",
                    "description": "test description",
                    "rsvpType": "single session",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "userModifiedAt": "2025-01-01T00:00:00.000Z",
                    "creatorName": "test creatorName",
                    "isArchived": true,
                    "isDeleted": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "name": "test name",
                    "description": "test description",
                    "rsvpType": "single session",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "userModifiedAt": "2025-01-01T00:00:00.000Z",
                    "creatorName": "test creatorName",
                    "isArchived": true,
                    "isDeleted": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/instructorLedTrainingEventAttendance": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Instructor Led Training Event Attendance",
        "description": "Model that contains the attendance details associated with each instructor led training event session.",
        "operationId": "Reporting-InstructorLedTrainingEventAttendanceGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "invitedAtStartTime",
            "in": "query",
            "description": "Only include records that have invitedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "invitedAtEndTime",
            "in": "query",
            "description": "Only include records that have invitedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "userModifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have userModifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "userModifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have userModifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InstructorLedTrainingEventAttendance"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "sessionId": "6e6e6fd0-2891-39a2-3b73-58ff70124550",
                    "invitedAt": "2025-01-01T00:00:00.000Z",
                    "userModifiedAt": "2025-01-01T00:00:00.000Z",
                    "rsvpStatus": "test rsvpStatus",
                    "attendanceStatus": "test attendanceStatus",
                    "isDeleted": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "sessionId": "6e6e6fd0-2891-39a2-3b73-58ff70124550",
                    "invitedAt": "2025-01-01T00:00:00.000Z",
                    "userModifiedAt": "2025-01-01T00:00:00.000Z",
                    "rsvpStatus": "test rsvpStatus",
                    "attendanceStatus": "test attendanceStatus",
                    "isDeleted": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/instructorLedTrainingEventContentAssignments": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Instructor Led Training Event Content Assignments",
        "description": "Model that contains details on the post-event content associated with a session and event.",
        "operationId": "Reporting-InstructorLedTrainingEventContentAssignmentsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "assignedAtStartTime",
            "in": "query",
            "description": "Only include records that have assignedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "assignedAtEndTime",
            "in": "query",
            "description": "Only include records that have assignedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "userModifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have userModifieddAt values greater than or equal to this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "userModifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have userModifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InstructorLedTrainingEventContentAssignments"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "sessionId": "6e6e6fd0-2891-39a2-3b73-58ff70124550",
                    "contentId": "7052bb92-43e5-79bb-3c6c-ea86f42a2efa",
                    "contentType": "test contentType",
                    "assignedAt": "2025-01-01T00:00:00.000Z",
                    "userModifiedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "sessionId": "6e6e6fd0-2891-39a2-3b73-58ff70124550",
                    "contentId": "7052bb92-43e5-79bb-3c6c-ea86f42a2efa",
                    "contentType": "test contentType",
                    "assignedAt": "2025-01-01T00:00:00.000Z",
                    "userModifiedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/instructorLedTrainingEventSessions": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Instructor Led Training Event Sessions",
        "description": "Provides a list of groups for each user. A user in N groups would produce N rows in this table. A user in no groups would not be present in this table.",
        "operationId": "Reporting-InstructorLedTrainingEventSessionsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "userModifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have userModifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "userModifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have userModifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "startDateStartTime",
            "in": "query",
            "description": "Only include records that have startDate values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "startDateEndTime",
            "in": "query",
            "description": "Only include records that have startDate values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "endDateStartTime",
            "in": "query",
            "description": "Only include records that have endDate values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "endDateEndTime",
            "in": "query",
            "description": "Only include records that have endDate values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InstructorLedTrainingEventSessions"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "eventId": "b54dcc53-d743-69a5-e51c-1d76ac6f278e",
                    "sessionName": "test sessionName",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "userModifiedAt": "2025-01-01T00:00:00.000Z",
                    "startDate": "2025-01-01T00:00:00.000Z",
                    "endDate": "2025-01-01T00:00:00.000Z",
                    "timeZone": "test timeZone",
                    "instructorName": "test instructorName",
                    "instructorId": "d23f5be7-65fa-1186-931f-15e2c9da098f",
                    "registrationCap": 1,
                    "inPersonLocation": "test inPersonLocation",
                    "videoConference": "test videoConference",
                    "isArchived": true,
                    "isDeleted": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "eventId": "b54dcc53-d743-69a5-e51c-1d76ac6f278e",
                    "sessionName": "test sessionName",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "userModifiedAt": "2025-01-01T00:00:00.000Z",
                    "startDate": "2025-01-01T00:00:00.000Z",
                    "endDate": "2025-01-01T00:00:00.000Z",
                    "timeZone": "test timeZone",
                    "instructorName": "test instructorName",
                    "instructorId": "d23f5be7-65fa-1186-931f-15e2c9da098f",
                    "registrationCap": 1,
                    "inPersonLocation": "test inPersonLocation",
                    "videoConference": "test videoConference",
                    "isArchived": true,
                    "isDeleted": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/learningJourneys": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Learning Journeys",
        "description": "Lists all Learning Journeys in the account and their respective properties.",
        "operationId": "Reporting-LearningJourneysGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "publishedAtStartTime",
            "in": "query",
            "description": "Only include records that have publishedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "publishedAtEndTime",
            "in": "query",
            "description": "Only include records that have publishedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "deletedAtStartTime",
            "in": "query",
            "description": "Only include records that have deletedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "deletedAtEndTime",
            "in": "query",
            "description": "Only include records that have deletedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LearningJourneys"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "title": "test title",
                    "description": "test description",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "modifiedBy": "c83cd391-495e-5939-8a99-da31359e09c4",
                    "status": "draft",
                    "publishedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true,
                    "deletedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "title": "test title",
                    "description": "test description",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "modifiedBy": "c83cd391-495e-5939-8a99-da31359e09c4",
                    "status": "draft",
                    "publishedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true,
                    "deletedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/learningJourneySteps": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Learning Journey Steps",
        "description": "Lists the steps contained in each step of a each Learning Journey.",
        "operationId": "Reporting-LearningJourneyStepsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LearningJourneySteps"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "learningJourneyId": "aac69729-fe1c-38fe-5674-51bfe1125fb7",
                    "lessonId": "4cb8b3d8-ccdf-7309-ed77-ed82afa7af35",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "pathId": "aff2ddd7-e515-de26-cbe6-10c7b0a3cf21",
                    "instructorLedTrainingEventId": "2a8a0991-cd63-8de5-0e42-deab20c3233c",
                    "taskId": "9740fc52-a9b1-4b1d-693a-9a5f4eae7b3c",
                    "stepOrder": 1,
                    "isDeleted": true,
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "learningJourneyId": "aac69729-fe1c-38fe-5674-51bfe1125fb7",
                    "lessonId": "4cb8b3d8-ccdf-7309-ed77-ed82afa7af35",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "pathId": "aff2ddd7-e515-de26-cbe6-10c7b0a3cf21",
                    "instructorLedTrainingEventId": "2a8a0991-cd63-8de5-0e42-deab20c3233c",
                    "taskId": "9740fc52-a9b1-4b1d-693a-9a5f4eae7b3c",
                    "stepOrder": 1,
                    "isDeleted": true,
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/learningJourneyTasks": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Learning Journey Tasks",
        "description": "Lists the tasks that exist in learning Journeys and their associated details.",
        "operationId": "Reporting-LearningJourneyTasksGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LearningJourneyTasks"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "title": "test title",
                    "description": "test description",
                    "isDeleted": true,
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "title": "test title",
                    "description": "test description",
                    "isDeleted": true,
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/learningProgress": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Learning Progress",
        "description": "Contains details on both lesson and path progresses and their completion statuses.",
        "operationId": "Reporting-LearningProgressGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LearningProgress"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "sourceProgressId": "29cd82aa-7c77-3b00-d624-7bdea9ac2bbb",
                    "learningProgressType": "Path",
                    "lessonId": "4cb8b3d8-ccdf-7309-ed77-ed82afa7af35",
                    "pathId": "aff2ddd7-e515-de26-cbe6-10c7b0a3cf21",
                    "learningJourneyId": "aac69729-fe1c-38fe-5674-51bfe1125fb7",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userName": "test userName",
                    "score": 3,
                    "lessonTitle": "test lessonTitle",
                    "pathTitle": "test pathTitle",
                    "journeyTitle": "test journeyTitle",
                    "title": "test title",
                    "startedAt": "2025-01-01T00:00:00.000Z",
                    "completedAt": "2025-01-01T00:00:00.000Z",
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true,
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "progressStatus": "Complete",
                    "overdueStatus": "Overdue",
                    "detailedStatus": "test detailedStatus",
                    "isLatest": true,
                    "lessonVersionId": "70970085-e671-05ac-cbed-94c33ea62980",
                    "isGradePending": true,
                    "isAwaitingReassignment": true,
                    "totalLearningJourneyObjectCount": 1,
                    "completedLearningJourneyObjectCount": 1,
                    "source": 1,
                    "sourceDescription": "test sourceDescription",
                    "gradedAt": "2025-01-01T00:00:00.000Z",
                    "timeSpent": 1,
                    "views": 1,
                    "viewsAfterCompletion": 1,
                    "graderId": "5af5dd9e-8933-0417-954e-f024d0961d5a",
                    "assignmentId": "c77ec6b5-56c5-d516-1a26-b1afddb83027",
                    "dueAt": "2025-01-01T00:00:00.000Z",
                    "assignedOrVoluntary": "Assigned",
                    "assignmentSource": "Path",
                    "isPathProgressOutOfDate": true,
                    "totalLessonCount": 1,
                    "completedLessonCount": 1,
                    "completionRate": 3,
                    "isInheritedAssignment": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "sourceProgressId": "29cd82aa-7c77-3b00-d624-7bdea9ac2bbb",
                    "learningProgressType": "Path",
                    "lessonId": "4cb8b3d8-ccdf-7309-ed77-ed82afa7af35",
                    "pathId": "aff2ddd7-e515-de26-cbe6-10c7b0a3cf21",
                    "learningJourneyId": "aac69729-fe1c-38fe-5674-51bfe1125fb7",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userName": "test userName",
                    "score": 3,
                    "lessonTitle": "test lessonTitle",
                    "pathTitle": "test pathTitle",
                    "journeyTitle": "test journeyTitle",
                    "title": "test title",
                    "startedAt": "2025-01-01T00:00:00.000Z",
                    "completedAt": "2025-01-01T00:00:00.000Z",
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true,
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "progressStatus": "Complete",
                    "overdueStatus": "Overdue",
                    "detailedStatus": "test detailedStatus",
                    "isLatest": true,
                    "lessonVersionId": "70970085-e671-05ac-cbed-94c33ea62980",
                    "isGradePending": true,
                    "isAwaitingReassignment": true,
                    "totalLearningJourneyObjectCount": 1,
                    "completedLearningJourneyObjectCount": 1,
                    "source": 1,
                    "sourceDescription": "test sourceDescription",
                    "gradedAt": "2025-01-01T00:00:00.000Z",
                    "timeSpent": 1,
                    "views": 1,
                    "viewsAfterCompletion": 1,
                    "graderId": "5af5dd9e-8933-0417-954e-f024d0961d5a",
                    "assignmentId": "c77ec6b5-56c5-d516-1a26-b1afddb83027",
                    "dueAt": "2025-01-01T00:00:00.000Z",
                    "assignedOrVoluntary": "Assigned",
                    "assignmentSource": "Path",
                    "isPathProgressOutOfDate": true,
                    "totalLessonCount": 1,
                    "completedLessonCount": 1,
                    "completionRate": 3,
                    "isInheritedAssignment": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/learningStatuses": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Learning Statuses",
        "description": "A model to hold the latest statuses of learning products and the center of the learning data model.",
        "operationId": "Reporting-LearningStatusesGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtStartTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtEndTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LearningStatuses"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userName": "test userName",
                    "learningProduct": "test learningProduct",
                    "status": "test status",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "isOverdue": true,
                    "isAssigned": true,
                    "isGraded": true,
                    "isLatest": true,
                    "title": "test title",
                    "eventName": "test eventName",
                    "eventSessionName": "test eventSessionName",
                    "learningProgressId": "7607357e-f651-5b84-6c78-8af14e4c464c",
                    "lessonId": "4cb8b3d8-ccdf-7309-ed77-ed82afa7af35",
                    "lessonVersionId": "70970085-e671-05ac-cbed-94c33ea62980",
                    "pathId": "aff2ddd7-e515-de26-cbe6-10c7b0a3cf21",
                    "learningJourneyId": "aac69729-fe1c-38fe-5674-51bfe1125fb7",
                    "learningJourneyStepId": "89ca7aed-ee21-00a5-afe6-4c397f1a134a",
                    "sourceProgressId": "29cd82aa-7c77-3b00-d624-7bdea9ac2bbb",
                    "assignmentId": "c77ec6b5-56c5-d516-1a26-b1afddb83027",
                    "instructorLedTrainingEventId": "2a8a0991-cd63-8de5-0e42-deab20c3233c",
                    "instructorLedTrainingEventSessionId": "20747b18-f727-74ba-6025-a0d7fd2ef017",
                    "skillAssessmentRequestName": "test skillAssessmentRequestName",
                    "skillRequestId": "0400c624-91dc-8d20-d143-88271deea0ad",
                    "skillReviewId": "a88251ee-3507-4a7f-abdc-bd80756d83be",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userName": "test userName",
                    "learningProduct": "test learningProduct",
                    "status": "test status",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "isOverdue": true,
                    "isAssigned": true,
                    "isGraded": true,
                    "isLatest": true,
                    "title": "test title",
                    "eventName": "test eventName",
                    "eventSessionName": "test eventSessionName",
                    "learningProgressId": "7607357e-f651-5b84-6c78-8af14e4c464c",
                    "lessonId": "4cb8b3d8-ccdf-7309-ed77-ed82afa7af35",
                    "lessonVersionId": "70970085-e671-05ac-cbed-94c33ea62980",
                    "pathId": "aff2ddd7-e515-de26-cbe6-10c7b0a3cf21",
                    "learningJourneyId": "aac69729-fe1c-38fe-5674-51bfe1125fb7",
                    "learningJourneyStepId": "89ca7aed-ee21-00a5-afe6-4c397f1a134a",
                    "sourceProgressId": "29cd82aa-7c77-3b00-d624-7bdea9ac2bbb",
                    "assignmentId": "c77ec6b5-56c5-d516-1a26-b1afddb83027",
                    "instructorLedTrainingEventId": "2a8a0991-cd63-8de5-0e42-deab20c3233c",
                    "instructorLedTrainingEventSessionId": "20747b18-f727-74ba-6025-a0d7fd2ef017",
                    "skillAssessmentRequestName": "test skillAssessmentRequestName",
                    "skillRequestId": "0400c624-91dc-8d20-d143-88271deea0ad",
                    "skillReviewId": "a88251ee-3507-4a7f-abdc-bd80756d83be",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/lessons": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Lessons",
        "description": "Provides detail into all Lessons in the account, their details and their status.",
        "operationId": "Reporting-LessonsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lessons"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "creatorId": "aafd5d92-f6e7-88bd-9645-2369ec42f2ab",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "modifierId": "46173023-b349-0b3e-c420-f6f64a4b56b4",
                    "description": "test description",
                    "archivedAt": "2025-01-01T00:00:00.000Z",
                    "archivedByUserId": "9e7814f6-f739-6faf-f021-55f3b9d87b59",
                    "isDeleted": true,
                    "isArchived": true,
                    "estimatedSecondsToComplete": 1,
                    "workspaceId": "699bd7ee-8be8-196b-eb0f-840ab8262891",
                    "workspaceName": "test workspaceName",
                    "lessonVersionId": "70970085-e671-05ac-cbed-94c33ea62980",
                    "retakeScore": 3,
                    "title": "test title",
                    "state": "Draft",
                    "positiveRatings": 1,
                    "negativeRatings": 1,
                    "skippedRatings": 1,
                    "contentId": "7052bb92-43e5-79bb-3c6c-ea86f42a2efa",
                    "teamsiteId": "1bed6858-b624-3ec9-8610-13c14258785f"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "creatorId": "aafd5d92-f6e7-88bd-9645-2369ec42f2ab",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "modifierId": "46173023-b349-0b3e-c420-f6f64a4b56b4",
                    "description": "test description",
                    "archivedAt": "2025-01-01T00:00:00.000Z",
                    "archivedByUserId": "9e7814f6-f739-6faf-f021-55f3b9d87b59",
                    "isDeleted": true,
                    "isArchived": true,
                    "estimatedSecondsToComplete": 1,
                    "workspaceId": "699bd7ee-8be8-196b-eb0f-840ab8262891",
                    "workspaceName": "test workspaceName",
                    "lessonVersionId": "70970085-e671-05ac-cbed-94c33ea62980",
                    "retakeScore": 3,
                    "title": "test title",
                    "state": "Draft",
                    "positiveRatings": 1,
                    "negativeRatings": 1,
                    "skippedRatings": 1,
                    "contentId": "7052bb92-43e5-79bb-3c6c-ea86f42a2efa",
                    "teamsiteId": "1bed6858-b624-3ec9-8610-13c14258785f"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/lessonTags": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Lesson Tags",
        "description": "Lists all tags that have been created in the platform and the lessons that have been tagged.",
        "operationId": "Reporting-LessonTagsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LessonTags"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "lessonId": "4cb8b3d8-ccdf-7309-ed77-ed82afa7af35",
                    "tagName": "test tagName",
                    "libraryVisibilityStatus": "test libraryVisibilityStatus",
                    "description": "test description",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true,
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "lessonId": "4cb8b3d8-ccdf-7309-ed77-ed82afa7af35",
                    "tagName": "test tagName",
                    "libraryVisibilityStatus": "test libraryVisibilityStatus",
                    "description": "test description",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true,
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/lessonVersions": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Lesson Versions",
        "description": "Contains information on prior versions of lessons and the details of each past version.",
        "operationId": "Reporting-LessonVersionsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LessonVersions"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "version": 1,
                    "lessonId": "4cb8b3d8-ccdf-7309-ed77-ed82afa7af35",
                    "creatorId": "aafd5d92-f6e7-88bd-9645-2369ec42f2ab",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "description": "test description",
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true,
                    "estimatedSecondsToComplete": 1,
                    "workspaceId": "699bd7ee-8be8-196b-eb0f-840ab8262891",
                    "retakeScore": 3,
                    "title": "test title",
                    "isValidVersion": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "version": 1,
                    "lessonId": "4cb8b3d8-ccdf-7309-ed77-ed82afa7af35",
                    "creatorId": "aafd5d92-f6e7-88bd-9645-2369ec42f2ab",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "description": "test description",
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true,
                    "estimatedSecondsToComplete": 1,
                    "workspaceId": "699bd7ee-8be8-196b-eb0f-840ab8262891",
                    "retakeScore": 3,
                    "title": "test title",
                    "isValidVersion": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/paths": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Paths",
        "description": "Lists all lesson paths within the account and their respective details.",
        "operationId": "Reporting-PathsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Paths"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "title": "test title",
                    "description": "test description",
                    "creatorId": "aafd5d92-f6e7-88bd-9645-2369ec42f2ab",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "modifierId": "46173023-b349-0b3e-c420-f6f64a4b56b4",
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true,
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "archivedAt": "2025-01-01T00:00:00.000Z",
                    "archivedByUserId": "9e7814f6-f739-6faf-f021-55f3b9d87b59",
                    "isArchived": true,
                    "publishedat": "2025-01-01T00:00:00.000Z",
                    "publisherId": "f5468469-2b0d-2c89-ed7e-ca3925885872",
                    "workspaceId": "699bd7ee-8be8-196b-eb0f-840ab8262891",
                    "workspaceName": "test workspaceName",
                    "certificationId": "ac0e9c29-ef30-e253-7a3c-8c8f6fa9f199",
                    "isCertification": true,
                    "estimatedSecondsToComplete": 1
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "title": "test title",
                    "description": "test description",
                    "creatorId": "aafd5d92-f6e7-88bd-9645-2369ec42f2ab",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "modifierId": "46173023-b349-0b3e-c420-f6f64a4b56b4",
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true,
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "archivedAt": "2025-01-01T00:00:00.000Z",
                    "archivedByUserId": "9e7814f6-f739-6faf-f021-55f3b9d87b59",
                    "isArchived": true,
                    "publishedat": "2025-01-01T00:00:00.000Z",
                    "publisherId": "f5468469-2b0d-2c89-ed7e-ca3925885872",
                    "workspaceId": "699bd7ee-8be8-196b-eb0f-840ab8262891",
                    "workspaceName": "test workspaceName",
                    "certificationId": "ac0e9c29-ef30-e253-7a3c-8c8f6fa9f199",
                    "isCertification": true,
                    "estimatedSecondsToComplete": 1
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/pathContents": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Path Contents",
        "description": "Lists the elements that make up each path within the Learning account.",
        "operationId": "Reporting-PathContentsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "pathCreatedAtStartTime",
            "in": "query",
            "description": "Only include records that have pathCreatedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "pathCreatedAtEndTime",
            "in": "query",
            "description": "Only include records that have pathCreatedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "pathModifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have pathModifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "pathModifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have pathModifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PathContents"
                  }
                },
                "example": [
                  {
                    "lessonId": "4cb8b3d8-ccdf-7309-ed77-ed82afa7af35",
                    "lessonTitle": "test lessonTitle",
                    "lessonDescription": "test lessonDescription",
                    "pathId": "aff2ddd7-e515-de26-cbe6-10c7b0a3cf21",
                    "pathTitle": "test pathTitle",
                    "pathDescription": "test pathDescription",
                    "pathCreatedAt": "2025-01-01T00:00:00.000Z",
                    "pathCreatorId": "1d0e8a8e-eb44-6872-e1ac-823334be4090",
                    "pathCreatorFullName": "Joe Marketing",
                    "pathModifiedAt": "2025-01-01T00:00:00.000Z",
                    "pathModifierId": "bbf37b3d-91e0-b6c6-93b7-c13ab2556dbf",
                    "pathModifierFullName": "Joe Marketing",
                    "pathTagList": "Employees, Product, Sales"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "lessonId": "4cb8b3d8-ccdf-7309-ed77-ed82afa7af35",
                    "lessonTitle": "test lessonTitle",
                    "lessonDescription": "test lessonDescription",
                    "pathId": "aff2ddd7-e515-de26-cbe6-10c7b0a3cf21",
                    "pathTitle": "test pathTitle",
                    "pathDescription": "test pathDescription",
                    "pathCreatedAt": "2025-01-01T00:00:00.000Z",
                    "pathCreatorId": "1d0e8a8e-eb44-6872-e1ac-823334be4090",
                    "pathCreatorFullName": "Joe Marketing",
                    "pathModifiedAt": "2025-01-01T00:00:00.000Z",
                    "pathModifierId": "bbf37b3d-91e0-b6c6-93b7-c13ab2556dbf",
                    "pathModifierFullName": "Joe Marketing",
                    "pathTagList": "Employees, Product, Sales"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/pathTags": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Path Tags",
        "description": "Lists all tags that have been created in the platform and the paths that have been tagged.",
        "operationId": "Reporting-PathTagsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PathTags"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "pathId": "aff2ddd7-e515-de26-cbe6-10c7b0a3cf21",
                    "tagName": "test tagName",
                    "libraryVisibilityStatus": "test libraryVisibilityStatus",
                    "description": "test description",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true,
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "pathId": "aff2ddd7-e515-de26-cbe6-10c7b0a3cf21",
                    "tagName": "test tagName",
                    "libraryVisibilityStatus": "test libraryVisibilityStatus",
                    "description": "test description",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true,
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/proficiencyLevels": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Proficiency Levels",
        "description": "Contains details about the proficiency levels set to be used across the company. Proficiency levels are set company-wide by an Admin user and are used to standardize the measurement of the competency of a Learner in a given skill that is specific to their role.",
        "operationId": "Reporting-ProficiencyLevelsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProficiencyLevels"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "companyId": "7d0ceade-949a-288c-5ab7-1b0f301e92aa",
                    "ratingDefinitionsKey": "test ratingDefinitionsKey",
                    "ratingDefinitionsName": "test ratingDefinitionsName",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "updatedAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "companyId": "7d0ceade-949a-288c-5ab7-1b0f301e92aa",
                    "ratingDefinitionsKey": "test ratingDefinitionsKey",
                    "ratingDefinitionsName": "test ratingDefinitionsName",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "updatedAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/questions": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Questions",
        "description": "Contains information on questions that have been created and added to lessons.",
        "operationId": "Reporting-QuestionsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Questions"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "subject": "test subject",
                    "rawChoices": "test rawChoices",
                    "isRequired": true,
                    "isGradable": true,
                    "isPractice": true,
                    "type": "FreeResponse",
                    "lessonId": "4cb8b3d8-ccdf-7309-ed77-ed82afa7af35",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "subject": "test subject",
                    "rawChoices": "test rawChoices",
                    "isRequired": true,
                    "isGradable": true,
                    "isPractice": true,
                    "type": "FreeResponse",
                    "lessonId": "4cb8b3d8-ccdf-7309-ed77-ed82afa7af35",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/skills": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Skills",
        "description": "Contains the skills and supporting details that exist within the Skills Library.",
        "operationId": "Reporting-SkillsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Skills"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "companyId": "7d0ceade-949a-288c-5ab7-1b0f301e92aa",
                    "name": "test name",
                    "description": "test description",
                    "skillCategoryId": "2532db42-25ec-d328-c2a4-af64fb65edb8",
                    "skillCategoryName": "test skillCategoryName",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "updatedAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "companyId": "7d0ceade-949a-288c-5ab7-1b0f301e92aa",
                    "name": "test name",
                    "description": "test description",
                    "skillCategoryId": "2532db42-25ec-d328-c2a4-af64fb65edb8",
                    "skillCategoryName": "test skillCategoryName",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "updatedAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/skillAssessments": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Skill Assessments",
        "description": "Contains Skill and Assessment information for a User.",
        "operationId": "Reporting-SkillAssessmentsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SkillAssessments"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "skillName": "test skillName",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userName": "test userName",
                    "assessmentId": "6de48c87-8911-766b-ae5b-5e73240b1971",
                    "type": "Skill Observation",
                    "evaluatorId": "770cb3a2-2d6a-4bca-ff51-efc819c499ee",
                    "rating": 2,
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "isShared": true,
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "skillName": "test skillName",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userName": "test userName",
                    "assessmentId": "6de48c87-8911-766b-ae5b-5e73240b1971",
                    "type": "Skill Observation",
                    "evaluatorId": "770cb3a2-2d6a-4bca-ff51-efc819c499ee",
                    "rating": 2,
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "isShared": true,
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/skillProfiles": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Skill Profiles",
        "description": "Contains each Skills Profile that exists.",
        "operationId": "Reporting-SkillProfilesGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SkillProfiles"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "companyId": "7d0ceade-949a-288c-5ab7-1b0f301e92aa",
                    "title": "test title",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "updatedAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "isPublished": true,
                    "isDeleted": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "companyId": "7d0ceade-949a-288c-5ab7-1b0f301e92aa",
                    "title": "test title",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "updatedAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "isPublished": true,
                    "isDeleted": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/skillProfileDetails": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Skill Profile Details",
        "description": "Contains the details for each Skills Profile.",
        "operationId": "Reporting-SkillProfileDetailsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SkillProfileDetails"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "companyId": "7d0ceade-949a-288c-5ab7-1b0f301e92aa",
                    "skillProfileId": "9230d3af-4fb0-48d8-7b28-65dda637b60d",
                    "skillProfileName": "test skillProfileName",
                    "skillId": "cc97d85a-ae37-ed4a-b6b2-553cec2c19b4",
                    "skillCategoryName": "test skillCategoryName",
                    "skillName": "test skillName",
                    "skillDescription": "test skillDescription",
                    "proficiencyLevelName": "test proficiencyLevelName",
                    "proficiencyLevelBehaviors": "test proficiencyLevelBehaviors",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "updatedAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "companyId": "7d0ceade-949a-288c-5ab7-1b0f301e92aa",
                    "skillProfileId": "9230d3af-4fb0-48d8-7b28-65dda637b60d",
                    "skillProfileName": "test skillProfileName",
                    "skillId": "cc97d85a-ae37-ed4a-b6b2-553cec2c19b4",
                    "skillCategoryName": "test skillCategoryName",
                    "skillName": "test skillName",
                    "skillDescription": "test skillDescription",
                    "proficiencyLevelName": "test proficiencyLevelName",
                    "proficiencyLevelBehaviors": "test proficiencyLevelBehaviors",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "updatedAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/skillRatings": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Skill Ratings",
        "description": "Contains details about the skill ratings captured from each individual skill assessment (review).",
        "operationId": "Reporting-SkillRatingsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SkillRatings"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "reviewId": "88aae48a-cec2-3ff4-34e2-9bff30f1d80f",
                    "ratableType": "test ratableType",
                    "ratableId": "164abd37-7377-bb39-93f2-4c4b4484d819",
                    "isSkipped": true,
                    "rating": 1,
                    "scale": 1,
                    "ratingPercentage": 4,
                    "comment": "test comment",
                    "benchmark": 1,
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "reviewId": "88aae48a-cec2-3ff4-34e2-9bff30f1d80f",
                    "ratableType": "test ratableType",
                    "ratableId": "164abd37-7377-bb39-93f2-4c4b4484d819",
                    "isSkipped": true,
                    "rating": 1,
                    "scale": 1,
                    "ratingPercentage": 4,
                    "comment": "test comment",
                    "benchmark": 1,
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/skillRequests": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Skill Requests",
        "description": "Contains details about the skill assessment requests and review types that have been sent out to users for completion.",
        "operationId": "Reporting-SkillRequestsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SkillRequests"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "name": "test name",
                    "description": "test description",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "reviewTypes": "test reviewTypes",
                    "isPublished": true,
                    "isRatingRequired": true,
                    "dueDate": "2025-01-01T00:00:00.000Z",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "scheduledAt": "2025-01-01T00:00:00.000Z",
                    "isScheduled": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "name": "test name",
                    "description": "test description",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "reviewTypes": "test reviewTypes",
                    "isPublished": true,
                    "isRatingRequired": true,
                    "dueDate": "2025-01-01T00:00:00.000Z",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "scheduledAt": "2025-01-01T00:00:00.000Z",
                    "isScheduled": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/skillReviews": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Skill Reviews",
        "description": "Contains details about the individual reviews (skill assessments) that are created from the assessment request.",
        "operationId": "Reporting-SkillReviewsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "startedAtStartTime",
            "in": "query",
            "description": "Only include records that have startedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "startedAtEndTime",
            "in": "query",
            "description": "Only include records that have startedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "completedAtStartTime",
            "in": "query",
            "description": "Only include records that have completedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "completedAtEndTime",
            "in": "query",
            "description": "Only include records that have completedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "dueDateStartTime",
            "in": "query",
            "description": "Only include records that have dueDate values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "dueDateEndTime",
            "in": "query",
            "description": "Only include records that have dueDate values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SkillReviews"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "requestId": "34f60f51-e4fc-ee07-a176-3854519fd3ce",
                    "type": "self",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "reviewerId": "dd53a15e-e20e-d415-230e-2a2db6dfacc8",
                    "skillProfileId": "9230d3af-4fb0-48d8-7b28-65dda637b60d",
                    "isPublished": true,
                    "dueDate": "2025-01-01T00:00:00.000Z",
                    "startedAt": "2025-01-01T00:00:00.000Z",
                    "completedAt": "2025-01-01T00:00:00.000Z",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "requestId": "34f60f51-e4fc-ee07-a176-3854519fd3ce",
                    "type": "self",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "reviewerId": "dd53a15e-e20e-d415-230e-2a2db6dfacc8",
                    "skillProfileId": "9230d3af-4fb0-48d8-7b28-65dda637b60d",
                    "isPublished": true,
                    "dueDate": "2025-01-01T00:00:00.000Z",
                    "startedAt": "2025-01-01T00:00:00.000Z",
                    "completedAt": "2025-01-01T00:00:00.000Z",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/skillTags": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Skill Tags",
        "description": "Contains the skill tags in use and identifies the tagged content.",
        "operationId": "Reporting-SkillTagsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SkillTags"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "companyId": "7d0ceade-949a-288c-5ab7-1b0f301e92aa",
                    "skillId": "cc97d85a-ae37-ed4a-b6b2-553cec2c19b4",
                    "taggableId": "98c2b2a1-40ca-65cb-ea69-f95f4673de18",
                    "taggableType": "Lesson",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "updatedAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "companyId": "7d0ceade-949a-288c-5ab7-1b0f301e92aa",
                    "skillId": "cc97d85a-ae37-ed4a-b6b2-553cec2c19b4",
                    "taggableId": "98c2b2a1-40ca-65cb-ea69-f95f4673de18",
                    "taggableType": "Lesson",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "updatedAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/skillUserProfiles": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Skill User Profiles",
        "description": "Contains the user ids and skill profile ids.",
        "operationId": "Reporting-SkillUserProfilesGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SkillUserProfiles"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "skillProfileId": "9230d3af-4fb0-48d8-7b28-65dda637b60d",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "updatedAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "skillProfileId": "9230d3af-4fb0-48d8-7b28-65dda637b60d",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "updatedAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/trainingGroups": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Training Groups",
        "description": "Lists all user groups in the platform and their respective details. This table will contain only groups created in Seismic Learning.",
        "operationId": "Reporting-TrainingGroupsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrainingGroups"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "name": "Sales Engineers"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "name": "Sales Engineers"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/trainingGroupMembers": {
      "get": {
        "tags": [
          "Learning"
        ],
        "summary": "Training Group Members",
        "description": "Provides details on users who are members of a group and the groups that they are a part of.",
        "operationId": "Reporting-TrainingGroupMembersGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrainingGroupMembers"
                  }
                },
                "example": [
                  {
                    "groupId": "8825db47-1b33-53be-0c80-dd001fc60aed",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "groupName": "Product Management"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "groupId": "8825db47-1b33-53be-0c80-dd001fc60aed",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "groupName": "Product Management"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/contentProfiles": {
      "get": {
        "tags": [
          "Library Contents"
        ],
        "summary": "Content Profiles",
        "description": "A list of content profiles and NewsCenter channels that exist in Seismic.",
        "operationId": "Reporting-ContentProfilesGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentProfiles"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "versionId": "79850777-4438-05f4-4914-7a07c16f92c3",
                    "isPredictiveOnly": true,
                    "isPublished": true,
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "name": "Customer & Market Intelligence",
                    "teamsiteId": "1bed6858-b624-3ec9-8610-13c14258785f",
                    "type": "ChannelProfile",
                    "isDeleted": true,
                    "isStagingProfile": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "versionId": "79850777-4438-05f4-4914-7a07c16f92c3",
                    "isPredictiveOnly": true,
                    "isPublished": true,
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "name": "Customer & Market Intelligence",
                    "teamsiteId": "1bed6858-b624-3ec9-8610-13c14258785f",
                    "type": "ChannelProfile",
                    "isDeleted": true,
                    "isStagingProfile": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/contentProfileAssignments": {
      "get": {
        "tags": [
          "Library Contents"
        ],
        "summary": "Content Profile Assignments",
        "description": "A list of profiles that each Library content is available in, including both DocCenter and NewsCenter profiles. Each row represents a published Library content being available in a given content profile.",
        "operationId": "Reporting-ContentProfileAssignmentsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "contentProfileId",
            "in": "query",
            "description": "Only include records that have contentProfileId values equal to this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "contentLastPublishedDateStartTime",
            "in": "query",
            "description": "Only include records that have contentLastPublishedDate values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "contentLastPublishedDateEndTime",
            "in": "query",
            "description": "Only include records that have contentLastPublishedDate values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentProfileAssignments"
                  }
                },
                "example": [
                  {
                    "contentProfileId": "40dee8dc-fa54-8b04-e45d-eabea250480e",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "contentProfileVersionId": "fbd801e5-e4b5-4c31-7ce6-017b4f61520b",
                    "isPredictiveOnly": true,
                    "isPublished": true,
                    "contentProfileName": "Customer Success Management",
                    "contentProfileType": "ContentProfile",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "addToProfileAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true,
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "contentStatus": "Published",
                    "contentLastPublishedDate": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "contentProfileId": "40dee8dc-fa54-8b04-e45d-eabea250480e",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "contentProfileVersionId": "fbd801e5-e4b5-4c31-7ce6-017b4f61520b",
                    "isPredictiveOnly": true,
                    "isPublished": true,
                    "contentProfileName": "Customer Success Management",
                    "contentProfileType": "ContentProfile",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "addToProfileAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true,
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "contentStatus": "Published",
                    "contentLastPublishedDate": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/contentProfileAssignmentsHistory": {
      "get": {
        "tags": [
          "Library Contents"
        ],
        "summary": "Content Profile Assignments History",
        "description": "A list of profiles that each library content was once available in (including both DocCenter and NewsCenter profiles) but no longer available now. Each row represents a historical published library content available in a given content profile.",
        "operationId": "Reporting-ContentProfileAssignmentsHistoryGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "contentProfileId",
            "in": "query",
            "description": "Only include records that have contentProfileId values equal to this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "contentLastPublishedDateStartTime",
            "in": "query",
            "description": "Only include records that have contentLastPublishedDate values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "contentLastPublishedDateEndTime",
            "in": "query",
            "description": "Only include records that have contentLastPublishedDate values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentProfileAssignmentsHistory"
                  }
                },
                "example": [
                  {
                    "contentProfileId": "40dee8dc-fa54-8b04-e45d-eabea250480e",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "contentProfileVersionId": "fbd801e5-e4b5-4c31-7ce6-017b4f61520b",
                    "isPredictiveOnly": true,
                    "isPublished": true,
                    "contentProfileName": "Customer Success Management",
                    "contentProfileType": "ContentProfile",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "addToProfileAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true,
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "contentStatus": "Published",
                    "contentLastPublishedDate": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "contentProfileId": "40dee8dc-fa54-8b04-e45d-eabea250480e",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "contentProfileVersionId": "fbd801e5-e4b5-4c31-7ce6-017b4f61520b",
                    "isPredictiveOnly": true,
                    "isPublished": true,
                    "contentProfileName": "Customer Success Management",
                    "contentProfileType": "ContentProfile",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "addToProfileAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true,
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "contentStatus": "Published",
                    "contentLastPublishedDate": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/contentProperties": {
      "get": {
        "tags": [
          "Library Contents"
        ],
        "summary": "Content Properties",
        "description": "Provides a list of content property names in the tenant, but does not include property values. Within LiveInsights, you will find each content property name has its own model named \"CP - [property name]\". Use these CP models for filterings or groupings of LiveInsights widgets.",
        "operationId": "Reporting-ContentPropertiesGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentProperties"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "hasDomainOfValues": true,
                    "isRequired": true,
                    "listOrder": 1,
                    "name": "Buyer Journey Stage",
                    "teamsiteId": "1bed6858-b624-3ec9-8610-13c14258785f",
                    "type": "multi-value"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "hasDomainOfValues": true,
                    "isRequired": true,
                    "listOrder": 1,
                    "name": "Buyer Journey Stage",
                    "teamsiteId": "1bed6858-b624-3ec9-8610-13c14258785f",
                    "type": "multi-value"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/contentPropertyAssignments": {
      "get": {
        "tags": [
          "Library Contents"
        ],
        "summary": "Content Property Assignments",
        "description": "Provides a list of properties and their values for each Library content. There will be one row in this table for each property value on a piece of content. A Library content tagged with 2 single value properties and 1 multi-value property with 3 values would produce 2 + 3 = 5 rows in this table. A Library content with no property values assigned will not be present in this table. Each row represents a single value of a single property on a Library content.",
        "operationId": "Reporting-ContentPropertyAssignmentsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "contentPropertyId",
            "in": "query",
            "description": "Only include records that have contentPropertyId values equal to this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentPropertyAssignments"
                  }
                },
                "example": [
                  {
                    "contentPropertyId": "945c7d53-0615-c0d3-1427-97bfdd7b7e1f",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "contentPropertyName": "As of Date",
                    "contentPropertyType": "date",
                    "contentPropertyValue": "10/1/2021",
                    "contentPropertyValueBoolean": true,
                    "contentPropertyValueDatetime": "2021-10-01T00:00:00.000Z",
                    "contentPropertyValueInteger": 1,
                    "contentPropertyValueFloat": 4
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "contentPropertyId": "945c7d53-0615-c0d3-1427-97bfdd7b7e1f",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "contentPropertyName": "As of Date",
                    "contentPropertyType": "date",
                    "contentPropertyValue": "10/1/2021",
                    "contentPropertyValueBoolean": true,
                    "contentPropertyValueDatetime": "2021-10-01T00:00:00.000Z",
                    "contentPropertyValueInteger": 1,
                    "contentPropertyValueFloat": 4
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/customContents": {
      "get": {
        "tags": [
          "Library Contents"
        ],
        "summary": "Custom Contents",
        "description": "This dimensional table associates schemas to a content instance. New rows are triggered when a user creates a new content from a schema. Rows update when a user updates existing custom content. Rows are deleted when a user deletes the content.",
        "operationId": "Reporting-CustomContentsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomContents"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "customContentTypeId": "36de2a65-d060-7f4c-b1c9-7ce67d680ef3",
                    "customContentTypeVersionId": "test customContentTypeVersionId",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "customContentTypeId": "36de2a65-d060-7f4c-b1c9-7ce67d680ef3",
                    "customContentTypeVersionId": "test customContentTypeVersionId",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/customContentTypes": {
      "get": {
        "tags": [
          "Library Contents"
        ],
        "summary": "Custom Content Types",
        "description": "This dimension table shows the user-defined custom content types. New rows are triggered when a user creates a new custom content type. Rows update when a user updates an existing custom content type. Rows are not deleted.",
        "operationId": "Reporting-CustomContentTypesGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "userModifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have userModifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "usersModifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have userModifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomContentTypes"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "versionId": "79850777-4438-05f4-4914-7a07c16f92c3",
                    "versionTag": "v1.0",
                    "name": "test name",
                    "description": "test description",
                    "status": "Active",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "userModifiedAt": "2025-01-01T00:00:00.000Z",
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "versionId": "79850777-4438-05f4-4914-7a07c16f92c3",
                    "versionTag": "v1.0",
                    "name": "test name",
                    "description": "test description",
                    "status": "Active",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "userModifiedAt": "2025-01-01T00:00:00.000Z",
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/customContentTypeFields": {
      "get": {
        "tags": [
          "Library Contents"
        ],
        "summary": "Custom Content Type Fields",
        "description": "This table shows the user-defined form schema fields. New rows are triggered when a user creates a new custom content type field. Rows update when a user updates an existing custom content type field. Rows are deleted when a user deletes a custom content type field.",
        "operationId": "Reporting-CustomContentTypeFieldsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomContentTypeFields"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "customContentTypeId": "36de2a65-d060-7f4c-b1c9-7ce67d680ef3",
                    "name": "test name",
                    "description": "test description",
                    "fieldType": "Attachment",
                    "isOptional": true,
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "customContentTypeId": "36de2a65-d060-7f4c-b1c9-7ce67d680ef3",
                    "name": "test name",
                    "description": "test description",
                    "fieldType": "Attachment",
                    "isOptional": true,
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/digitalSalesRoomTemplates": {
      "get": {
        "tags": [
          "Library Contents"
        ],
        "summary": "Digital Sales Room Templates",
        "description": "A list of all the Digital Sales Room Templates that marketers have created in the Seismic Library (Content Manager). Digital Sales Room Templates are considered a specific type of Library Content.",
        "operationId": "Reporting-DigitalSalesRoomTemplatesGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DigitalSalesRoomTemplates"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "name": "test name",
                    "version": "test version",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true,
                    "isPublished": true,
                    "publishedVersionExpiresAt": "2025-01-01T00:00:00.000Z",
                    "latestVersionCreatedAt": "2025-01-01T00:00:00.000Z",
                    "latestVersionCreatedBy": "5264b600-0e03-3783-b9f6-dad0acd5b78a",
                    "latestVersionCreatedByUserName": "test latestVersionCreatedByUserName",
                    "latestVersionId": "01371850-9de5-c61d-24a9-e60914766958",
                    "libraryUrl": "test libraryUrl",
                    "userModifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "name": "test name",
                    "version": "test version",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true,
                    "isPublished": true,
                    "publishedVersionExpiresAt": "2025-01-01T00:00:00.000Z",
                    "latestVersionCreatedAt": "2025-01-01T00:00:00.000Z",
                    "latestVersionCreatedBy": "5264b600-0e03-3783-b9f6-dad0acd5b78a",
                    "latestVersionCreatedByUserName": "test latestVersionCreatedByUserName",
                    "latestVersionId": "01371850-9de5-c61d-24a9-e60914766958",
                    "libraryUrl": "test libraryUrl",
                    "userModifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/digitalSalesRoomTemplateVersions": {
      "get": {
        "tags": [
          "Library Contents"
        ],
        "summary": "Digital Sales Room Template Versions",
        "description": "A list all the Digital Sales Room Template versions that marketers have created in the Seismic Library (Content Manager). Digital Sales Room Template Versions are considered a specific type of Library Content Versions.",
        "operationId": "Reporting-DigitalSalesRoomTemplateVersionsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DigitalSalesRoomTemplateVersions"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "createdByUsername": "test createdByUsername",
                    "expiresAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true,
                    "isPublished": true,
                    "digitalSalesRoomTemplateId": "4225d5c4-2df2-a622-2686-e82dc8b05745",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "name": "test name",
                    "version": "test version"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "createdByUsername": "test createdByUsername",
                    "expiresAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true,
                    "isPublished": true,
                    "digitalSalesRoomTemplateId": "4225d5c4-2df2-a622-2686-e82dc8b05745",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "name": "test name",
                    "version": "test version"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/externalContentDetails": {
      "get": {
        "tags": [
          "Library Contents"
        ],
        "summary": "External Content Details",
        "description": "This model holds records of external content and the external content basic information such as external source, external id, and sync setting information.",
        "operationId": "Reporting-ExternalContentDetailsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "syncTimeStampStartTime",
            "in": "query",
            "description": "Only include records that have syncTimeStamp values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "syncTimeStampEndTime",
            "in": "query",
            "description": "Only include records that have syncTimeStamp values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExternalContentDetails"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "originType": "test originType",
                    "externalId": "c9d3a932-b1a4-9444-99e1-82e90d04fcc9",
                    "externalURL": "test externalURL",
                    "isDeleted": true,
                    "isAutoUpdated": true,
                    "isAutoPublished": true,
                    "syncOwnerId": "6de2eba0-250b-9e9b-fe0f-ee7f6262461c",
                    "syncOwnerUserName": "test syncOwnerUserName",
                    "syncTimeStamp": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "originType": "test originType",
                    "externalId": "c9d3a932-b1a4-9444-99e1-82e90d04fcc9",
                    "externalURL": "test externalURL",
                    "isDeleted": true,
                    "isAutoUpdated": true,
                    "isAutoPublished": true,
                    "syncOwnerId": "6de2eba0-250b-9e9b-fe0f-ee7f6262461c",
                    "syncOwnerUserName": "test syncOwnerUserName",
                    "syncTimeStamp": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/favoriteStatus": {
      "get": {
        "tags": [
          "Library Contents"
        ],
        "summary": "Favorite Status",
        "description": "A list of contents that users have favorited.",
        "operationId": "Reporting-FavoriteStatusGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "occurredAtStartTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtEndTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FavoriteStatus"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userFullName": "test userFullName",
                    "contentId": "7052bb92-43e5-79bb-3c6c-ea86f42a2efa",
                    "contentName": "test contentName"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userFullName": "test userFullName",
                    "contentId": "7052bb92-43e5-79bb-3c6c-ea86f42a2efa",
                    "contentName": "test contentName"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/followStatus": {
      "get": {
        "tags": [
          "Library Contents"
        ],
        "summary": "Follow Status",
        "description": "The objects that are followed by a user",
        "operationId": "Reporting-FollowStatusGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "occurredAtStartTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtEndTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FollowStatus"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userFullName": "test userFullName",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "followedObject": "content",
                    "contentId": "7052bb92-43e5-79bb-3c6c-ea86f42a2efa",
                    "contentName": "test contentName",
                    "contentOwnerId": "ff7837c7-abad-f204-a130-5b4b8c71b139",
                    "contentOwnerUsername": "jmktg@silvertower.com",
                    "contentOwnerEmail": "jmktg@silvertower.com",
                    "teamsiteName": "SilverTower",
                    "folderId": "861dab4c-1129-d117-35a1-af1e50a77f68",
                    "folderName": "test folderName",
                    "profileId": "c61b7855-671d-83ee-e3fa-2452d1fb240d",
                    "profileName": "test profileName"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userFullName": "test userFullName",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "followedObject": "content",
                    "contentId": "7052bb92-43e5-79bb-3c6c-ea86f42a2efa",
                    "contentName": "test contentName",
                    "contentOwnerId": "ff7837c7-abad-f204-a130-5b4b8c71b139",
                    "contentOwnerUsername": "jmktg@silvertower.com",
                    "contentOwnerEmail": "jmktg@silvertower.com",
                    "teamsiteName": "SilverTower",
                    "folderId": "861dab4c-1129-d117-35a1-af1e50a77f68",
                    "folderName": "test folderName",
                    "profileId": "c61b7855-671d-83ee-e3fa-2452d1fb240d",
                    "profileName": "test profileName"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/libraryContents": {
      "get": {
        "tags": [
          "Library Contents"
        ],
        "summary": "Library Contents",
        "description": "Provides a list of content in the Content Manager Library. Given the complex nature of documents in the Library, some of the information associated with document versions is presented based on common conventions.  Each row represents a single document in the Library. In order to get a precise representation of these contents, you can reference the Library Content Versions model.",
        "operationId": "Reporting-LibraryContentsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "lastModifiedStartTime",
            "in": "query",
            "description": "Only include records that have lastModified values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "lastModifiedEndTime",
            "in": "query",
            "description": "Only include records that have lastModified values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LibraryContents"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "name": "CP150 Architecture",
                    "version": 1,
                    "latestVersion": 1,
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "type": "URL",
                    "format": "url",
                    "isCheckedOut": true,
                    "isDeleted": true,
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "deletedByUserId": "ca3aa07f-3324-1c9a-6db4-97d4a5e5fb01",
                    "deletedByUserName": "test deletedByUserName",
                    "isPublished": true,
                    "isAvailableInProfile": true,
                    "publishedVersionExpiresAt": "2025-01-01T00:00:00.000Z",
                    "latestLibraryContentVersionCreatedAt": "2025-01-01T00:00:00.000Z",
                    "latestLibraryContentVersionCreatedBy": "e8bb03c3-998e-dec7-d905-e6cd15c81d7c",
                    "latestLibraryContentVersionCreatedByUsername": "test latestLibraryContentVersionCreatedByUsername",
                    "latestLibraryContentVersionId": "1a9ed293-76b9-ad54-7499-5adf1e5a5272",
                    "latestLibraryContentVersionSize": 514634,
                    "latestLibraryContentVersionStatus": "Published",
                    "latestLibraryContentVersionExpiresAt": "2025-01-01T00:00:00.000Z",
                    "libraryUrl": "/library.aspx#/Content/f4ede9a5-e7f0-4b38-b144-a96c02a91d35",
                    "docCenterUrl": "/Link/Content/DCf4ede9a5-e7f0-4b38-b144-a96c02a91d35",
                    "newsCenterUrl": "test newsCenterUrl",
                    "ownerId": "774fabb0-b691-1e0b-8ea0-1057b77873b0",
                    "ownerUsername": "jmktg@silvertower.com",
                    "ownerEmail": "jmktg@silvertower.com",
                    "teamsiteId": "1bed6858-b624-3ec9-8610-13c14258785f",
                    "teamsiteName": "SilverTower",
                    "previewImageId": "e92719a7-e715-4a24-8e62-9f885698195e",
                    "previewImageUrl": "https://tenant.seismic.com/Resource/Image.ashx?imageid=e92719a7-e715-4a24-8e62-9f885698195e",
                    "thumbnailImageId": "4963e141-b0f8-a388-4619-9c394a0167ae",
                    "thumbnailImageUrl": "test thumbnailImageUrl",
                    "description": "test description",
                    "shortId": "D000001",
                    "parentFolderLibraryContentId": "21096446-59b9-5de4-3da4-7803147b0d6d",
                    "libraryPath": "test libraryPath",
                    "hasPlannerAssociations": true,
                    "hasProgramAssociations": true,
                    "associatedProgramLibraryContentId": "7f8a1193-0de2-4fec-f0a6-32f0268f9989",
                    "originType": "test originType",
                    "lastModified": "2025-01-01T00:00:00.000Z",
                    "contentStatus": "Published",
                    "publishedVersionId": "1b7319d6-872f-c045-6f2d-acffc0ab596f",
                    "publishedAt": "2025-01-01T00:00:00.000Z",
                    "publishedByUserId": "fcfb9826-f4c8-ad57-d958-e3bf8ede4663",
                    "publishedByUsername": "test publishedByUsername",
                    "addLibraryContentToProfileAt": "2025-01-01T00:00:00.000Z",
                    "unpublishedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "name": "CP150 Architecture",
                    "version": 1,
                    "latestVersion": 1,
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "type": "URL",
                    "format": "url",
                    "isCheckedOut": true,
                    "isDeleted": true,
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "deletedByUserId": "ca3aa07f-3324-1c9a-6db4-97d4a5e5fb01",
                    "deletedByUserName": "test deletedByUserName",
                    "isPublished": true,
                    "isAvailableInProfile": true,
                    "publishedVersionExpiresAt": "2025-01-01T00:00:00.000Z",
                    "latestLibraryContentVersionCreatedAt": "2025-01-01T00:00:00.000Z",
                    "latestLibraryContentVersionCreatedBy": "e8bb03c3-998e-dec7-d905-e6cd15c81d7c",
                    "latestLibraryContentVersionCreatedByUsername": "test latestLibraryContentVersionCreatedByUsername",
                    "latestLibraryContentVersionId": "1a9ed293-76b9-ad54-7499-5adf1e5a5272",
                    "latestLibraryContentVersionSize": 514634,
                    "latestLibraryContentVersionStatus": "Published",
                    "latestLibraryContentVersionExpiresAt": "2025-01-01T00:00:00.000Z",
                    "libraryUrl": "/library.aspx#/Content/f4ede9a5-e7f0-4b38-b144-a96c02a91d35",
                    "docCenterUrl": "/Link/Content/DCf4ede9a5-e7f0-4b38-b144-a96c02a91d35",
                    "newsCenterUrl": "test newsCenterUrl",
                    "ownerId": "774fabb0-b691-1e0b-8ea0-1057b77873b0",
                    "ownerUsername": "jmktg@silvertower.com",
                    "ownerEmail": "jmktg@silvertower.com",
                    "teamsiteId": "1bed6858-b624-3ec9-8610-13c14258785f",
                    "teamsiteName": "SilverTower",
                    "previewImageId": "e92719a7-e715-4a24-8e62-9f885698195e",
                    "previewImageUrl": "https://tenant.seismic.com/Resource/Image.ashx?imageid=e92719a7-e715-4a24-8e62-9f885698195e",
                    "thumbnailImageId": "4963e141-b0f8-a388-4619-9c394a0167ae",
                    "thumbnailImageUrl": "test thumbnailImageUrl",
                    "description": "test description",
                    "shortId": "D000001",
                    "parentFolderLibraryContentId": "21096446-59b9-5de4-3da4-7803147b0d6d",
                    "libraryPath": "test libraryPath",
                    "hasPlannerAssociations": true,
                    "hasProgramAssociations": true,
                    "associatedProgramLibraryContentId": "7f8a1193-0de2-4fec-f0a6-32f0268f9989",
                    "originType": "test originType",
                    "lastModified": "2025-01-01T00:00:00.000Z",
                    "contentStatus": "Published",
                    "publishedVersionId": "1b7319d6-872f-c045-6f2d-acffc0ab596f",
                    "publishedAt": "2025-01-01T00:00:00.000Z",
                    "publishedByUserId": "fcfb9826-f4c8-ad57-d958-e3bf8ede4663",
                    "publishedByUsername": "test publishedByUsername",
                    "addLibraryContentToProfileAt": "2025-01-01T00:00:00.000Z",
                    "unpublishedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/libraryContentExpertAssociations": {
      "get": {
        "tags": [
          "Library Contents"
        ],
        "summary": "Library Content Expert Associations",
        "description": "The Library content expert association model which holds the relationships between Library contents and experts.",
        "operationId": "Reporting-LibraryContentExpertAssociationsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LibraryContentExpertAssociations"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "contentExpertId": "f90085e2-4d7e-f4cd-40a0-48295d5e9e75",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "contentExpertId": "f90085e2-4d7e-f4cd-40a0-48295d5e9e75",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/libraryContentVersions": {
      "get": {
        "tags": [
          "Library Contents"
        ],
        "summary": "Library Content Versions",
        "description": "Provides a list of Library content versions across all teamsites in the tenant.",
        "operationId": "Reporting-LibraryContentVersionsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LibraryContentVersions"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "createdByUsername": "test createdByUsername",
                    "expiresAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true,
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "deletedByUserId": "ca3aa07f-3324-1c9a-6db4-97d4a5e5fb01",
                    "deletedByUserName": "test deletedByUserName",
                    "isPublished": true,
                    "isAvailableInProfile": true,
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "name": "My Cool PPTX",
                    "previewImageId": "2c5a1756-979b-47af-b83f-9df13a2af795",
                    "previewImageUrl": "https://tenant.seismic.com/Resource/Image.ashx?imageid=2c5a1756-979b-47af-b83f-9df13a2af795",
                    "thumbnailImageId": "e92719a7-e715-4a24-8e62-9f885698195e",
                    "thumbnailImageUrl": "https://tenant.seismic.com/Resource/Image.ashx?imageid=e92719a7-e715-4a24-8e62-9f885698195e",
                    "size": 5416152,
                    "version": 1,
                    "versionStatus": "Published",
                    "teamsiteId": "1bed6858-b624-3ec9-8610-13c14258785f",
                    "uploadedAt": "2025-01-01T00:00:00.000Z",
                    "publishedAt": "2025-01-01T00:00:00.000Z",
                    "publishedByUserId": "fcfb9826-f4c8-ad57-d958-e3bf8ede4663",
                    "unpublishedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "createdByUsername": "test createdByUsername",
                    "expiresAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true,
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "deletedByUserId": "ca3aa07f-3324-1c9a-6db4-97d4a5e5fb01",
                    "deletedByUserName": "test deletedByUserName",
                    "isPublished": true,
                    "isAvailableInProfile": true,
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "name": "My Cool PPTX",
                    "previewImageId": "2c5a1756-979b-47af-b83f-9df13a2af795",
                    "previewImageUrl": "https://tenant.seismic.com/Resource/Image.ashx?imageid=2c5a1756-979b-47af-b83f-9df13a2af795",
                    "thumbnailImageId": "e92719a7-e715-4a24-8e62-9f885698195e",
                    "thumbnailImageUrl": "https://tenant.seismic.com/Resource/Image.ashx?imageid=e92719a7-e715-4a24-8e62-9f885698195e",
                    "size": 5416152,
                    "version": 1,
                    "versionStatus": "Published",
                    "teamsiteId": "1bed6858-b624-3ec9-8610-13c14258785f",
                    "uploadedAt": "2025-01-01T00:00:00.000Z",
                    "publishedAt": "2025-01-01T00:00:00.000Z",
                    "publishedByUserId": "fcfb9826-f4c8-ad57-d958-e3bf8ede4663",
                    "unpublishedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/programs": {
      "get": {
        "tags": [
          "Library Contents"
        ],
        "summary": "Programs",
        "description": "A program is a container for the purpose of organizing tasks and content, and exist outside and across Teamsites. Content lives in Teamsite Content Managers but are surfaced in programs by being associated either with specific tasks or the program in general.",
        "operationId": "Reporting-ProgramsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "systemModifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have systemModifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "systemModifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have systemModifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "userModifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have userModifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "userModifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have userModifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Programs"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "title": "test title",
                    "description": "test description",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "createdByUsername": "test createdByUsername",
                    "systemModifiedAt": "2025-01-01T00:00:00.000Z",
                    "userModifiedAt": "2025-01-01T00:00:00.000Z",
                    "modifiedBy": "c83cd391-495e-5939-8a99-da31359e09c4",
                    "modifiedByUsername": "test modifiedByUsername",
                    "programManagerId": "1b821069-4cba-f234-3ca4-ed5412e4a347",
                    "programManagerUsername": "test programManagerUsername",
                    "plannedStartDate": "2025-01-01T00:00:00.000Z",
                    "plannedEndDate": "2025-01-01T00:00:00.000Z",
                    "plannedDurationDays": 1,
                    "actualStartDate": "2025-01-01T00:00:00.000Z",
                    "actualEndDate": "2025-01-01T00:00:00.000Z",
                    "actualDurationDays": 1,
                    "isOverdue": true,
                    "templateId": "1fa30032-5dc0-e9a4-d5a0-465c36822e2f",
                    "copyFromId": "0cb4c41e-eaae-82fe-2e9b-2eb955c3a6eb",
                    "creationMethod": "New",
                    "isDeleted": true,
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "shortId": "b57ad6cd-ccb1-4e97-0eaf-e3571976fba9",
                    "programAudience": "test programAudience",
                    "programArchived": true,
                    "programLaunchDate": "2025-01-01T00:00:00.000Z",
                    "programOnboardingGroup": "test programOnboardingGroup",
                    "programOutcomeKpiFirst": "test programOutcomeKpiFirst",
                    "programOutcomeKpiSecond": "test programOutcomeKpiSecond",
                    "programOutcomeKpiThird": "test programOutcomeKpiThird",
                    "programType": "test programType",
                    "programTopics": "test programTopics",
                    "programTrackers": "test programTrackers"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "title": "test title",
                    "description": "test description",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "createdByUsername": "test createdByUsername",
                    "systemModifiedAt": "2025-01-01T00:00:00.000Z",
                    "userModifiedAt": "2025-01-01T00:00:00.000Z",
                    "modifiedBy": "c83cd391-495e-5939-8a99-da31359e09c4",
                    "modifiedByUsername": "test modifiedByUsername",
                    "programManagerId": "1b821069-4cba-f234-3ca4-ed5412e4a347",
                    "programManagerUsername": "test programManagerUsername",
                    "plannedStartDate": "2025-01-01T00:00:00.000Z",
                    "plannedEndDate": "2025-01-01T00:00:00.000Z",
                    "plannedDurationDays": 1,
                    "actualStartDate": "2025-01-01T00:00:00.000Z",
                    "actualEndDate": "2025-01-01T00:00:00.000Z",
                    "actualDurationDays": 1,
                    "isOverdue": true,
                    "templateId": "1fa30032-5dc0-e9a4-d5a0-465c36822e2f",
                    "copyFromId": "0cb4c41e-eaae-82fe-2e9b-2eb955c3a6eb",
                    "creationMethod": "New",
                    "isDeleted": true,
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "shortId": "b57ad6cd-ccb1-4e97-0eaf-e3571976fba9",
                    "programAudience": "test programAudience",
                    "programArchived": true,
                    "programLaunchDate": "2025-01-01T00:00:00.000Z",
                    "programOnboardingGroup": "test programOnboardingGroup",
                    "programOutcomeKpiFirst": "test programOutcomeKpiFirst",
                    "programOutcomeKpiSecond": "test programOutcomeKpiSecond",
                    "programOutcomeKpiThird": "test programOutcomeKpiThird",
                    "programType": "test programType",
                    "programTopics": "test programTopics",
                    "programTrackers": "test programTrackers"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/programAssociations": {
      "get": {
        "tags": [
          "Library Contents"
        ],
        "summary": "Program Associations",
        "description": "This model represents the current state of a unique combination of content/task/program where any one of the three can be null.",
        "operationId": "Reporting-ProgramAssociationsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramAssociations"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "taskId": "9740fc52-a9b1-4b1d-693a-9a5f4eae7b3c",
                    "programId": "e7713abf-dccd-8875-fea0-ba70124ab275",
                    "taskShortId": "8c46248f-683e-2468-d75a-371d3a046a16"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "taskId": "9740fc52-a9b1-4b1d-693a-9a5f4eae7b3c",
                    "programId": "e7713abf-dccd-8875-fea0-ba70124ab275",
                    "taskShortId": "8c46248f-683e-2468-d75a-371d3a046a16"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/programDates": {
      "get": {
        "tags": [
          "Library Contents"
        ],
        "summary": "Program Dates",
        "description": "Provides a list of dates and associated date types for programs.",
        "operationId": "Reporting-ProgramDatesGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramDates"
                  }
                },
                "example": [
                  {
                    "programId": "e7713abf-dccd-8875-fea0-ba70124ab275",
                    "dateType": "test dateType",
                    "programDate": "2025-01-01T00:00:00.000Z",
                    "programShortId": "864a0ea1-0398-f8d1-1506-5a766709f663"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "programId": "e7713abf-dccd-8875-fea0-ba70124ab275",
                    "dateType": "test dateType",
                    "programDate": "2025-01-01T00:00:00.000Z",
                    "programShortId": "864a0ea1-0398-f8d1-1506-5a766709f663"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/programItems": {
      "get": {
        "tags": [
          "Library Contents"
        ],
        "summary": "Program Items",
        "description": "Program Items currently consists of task and request program item types. This model consolidates programTasks and programRequests at a high-level view.",
        "operationId": "Reporting-ProgramItemsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "systemModifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have systemModifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "systemModifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have systemModifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "userModifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have userModifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "userModifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have userModifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramItems"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "title": "test title",
                    "status": "test status",
                    "priority": "test priority",
                    "rank": "test rank",
                    "type": "test type",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "systemModifiedAt": "2025-01-01T00:00:00.000Z",
                    "userModifiedAt": "2025-01-01T00:00:00.000Z",
                    "plannedStartDate": "2025-01-01T00:00:00.000Z",
                    "plannedDueDate": "2025-01-01T00:00:00.000Z",
                    "plannedDurationDays": 1,
                    "actualStartDate": "2025-01-01T00:00:00.000Z",
                    "actualCompletedDate": "2025-01-01T00:00:00.000Z",
                    "actualDurationDays": 1,
                    "isOverdue": true,
                    "isDeleted": true,
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "shortId": "b57ad6cd-ccb1-4e97-0eaf-e3571976fba9"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "title": "test title",
                    "status": "test status",
                    "priority": "test priority",
                    "rank": "test rank",
                    "type": "test type",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "systemModifiedAt": "2025-01-01T00:00:00.000Z",
                    "userModifiedAt": "2025-01-01T00:00:00.000Z",
                    "plannedStartDate": "2025-01-01T00:00:00.000Z",
                    "plannedDueDate": "2025-01-01T00:00:00.000Z",
                    "plannedDurationDays": 1,
                    "actualStartDate": "2025-01-01T00:00:00.000Z",
                    "actualCompletedDate": "2025-01-01T00:00:00.000Z",
                    "actualDurationDays": 1,
                    "isOverdue": true,
                    "isDeleted": true,
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "shortId": "b57ad6cd-ccb1-4e97-0eaf-e3571976fba9"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/programRequests": {
      "get": {
        "tags": [
          "Library Contents"
        ],
        "summary": "Program Requests",
        "description": "Requests are a work unit within the programs app that are similar to tasks but have their own distinct statuses in the workflow.",
        "operationId": "Reporting-ProgramRequestsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "systemModifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have systemModifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "systemModifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have systemModifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "userModifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have userModifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "userModifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have userModifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramRequests"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "title": "test title",
                    "status": "test status",
                    "priority": "test priority",
                    "rank": "test rank",
                    "note": "test note",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "createdByUsername": "test createdByUsername",
                    "systemModifiedAt": "2025-01-01T00:00:00.000Z",
                    "userModifiedAt": "2025-01-01T00:00:00.000Z",
                    "modifiedBy": "c83cd391-495e-5939-8a99-da31359e09c4",
                    "modifiedByUsername": "test modifiedByUsername",
                    "requestorId": "b12bfbb1-9d85-fa16-d4c9-663e34e4fb0f",
                    "requestorUsername": "test requestorUsername",
                    "assigneeId": "1593ebb8-3015-92f3-b9ee-9f65afdca79e",
                    "assigneeUsername": "test assigneeUsername",
                    "plannedStartDate": "2025-01-01T00:00:00.000Z",
                    "plannedDueDate": "2025-01-01T00:00:00.000Z",
                    "plannedDurationDays": 1,
                    "isOverdue": true,
                    "programId": "e7713abf-dccd-8875-fea0-ba70124ab275",
                    "isDeleted": true,
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "shortId": "b57ad6cd-ccb1-4e97-0eaf-e3571976fba9"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "title": "test title",
                    "status": "test status",
                    "priority": "test priority",
                    "rank": "test rank",
                    "note": "test note",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "createdByUsername": "test createdByUsername",
                    "systemModifiedAt": "2025-01-01T00:00:00.000Z",
                    "userModifiedAt": "2025-01-01T00:00:00.000Z",
                    "modifiedBy": "c83cd391-495e-5939-8a99-da31359e09c4",
                    "modifiedByUsername": "test modifiedByUsername",
                    "requestorId": "b12bfbb1-9d85-fa16-d4c9-663e34e4fb0f",
                    "requestorUsername": "test requestorUsername",
                    "assigneeId": "1593ebb8-3015-92f3-b9ee-9f65afdca79e",
                    "assigneeUsername": "test assigneeUsername",
                    "plannedStartDate": "2025-01-01T00:00:00.000Z",
                    "plannedDueDate": "2025-01-01T00:00:00.000Z",
                    "plannedDurationDays": 1,
                    "isOverdue": true,
                    "programId": "e7713abf-dccd-8875-fea0-ba70124ab275",
                    "isDeleted": true,
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "shortId": "b57ad6cd-ccb1-4e97-0eaf-e3571976fba9"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/programRequestDates": {
      "get": {
        "tags": [
          "Library Contents"
        ],
        "summary": "Program Request Dates",
        "description": "Provides a list of dates and associated date types for requests created in Programs.",
        "operationId": "Reporting-ProgramRequestDatesGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramRequestDates"
                  }
                },
                "example": [
                  {
                    "requestId": "34f60f51-e4fc-ee07-a176-3854519fd3ce",
                    "requestDate": "2025-01-01T00:00:00.000Z",
                    "dateType": "test dateType",
                    "requestShortId": "df36e6b7-4ac9-d2fa-445f-a8180ed5ff1e"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "requestId": "34f60f51-e4fc-ee07-a176-3854519fd3ce",
                    "requestDate": "2025-01-01T00:00:00.000Z",
                    "dateType": "test dateType",
                    "requestShortId": "df36e6b7-4ac9-d2fa-445f-a8180ed5ff1e"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/programTasks": {
      "get": {
        "tags": [
          "Library Contents"
        ],
        "summary": "Program Tasks",
        "description": "Tasks are organized into programs, but can be created from other places in the UI. Tasks, like programs, live across and outside of Teamsites at the tenant level, but can be connected to content in any Teamsite’s Library. Tasks are assignable to premium users and can be added to a program.",
        "operationId": "Reporting-ProgramTasksGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "systemModifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have systemModifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "systemModifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have systemModifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "userModifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have userModifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "userModifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have userModifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramTasks"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "title": "test title",
                    "description": "test description",
                    "status": "test status",
                    "priority": "test priority",
                    "rank": "test rank",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "createdByUsername": "test createdByUsername",
                    "systemModifiedAt": "2025-01-01T00:00:00.000Z",
                    "userModifiedAt": "2025-01-01T00:00:00.000Z",
                    "modifiedBy": "c83cd391-495e-5939-8a99-da31359e09c4",
                    "modifiedByUsername": "test modifiedByUsername",
                    "requestorId": "b12bfbb1-9d85-fa16-d4c9-663e34e4fb0f",
                    "requestorUsername": "test requestorUsername",
                    "assigneeId": "1593ebb8-3015-92f3-b9ee-9f65afdca79e",
                    "assigneeUsername": "test assigneeUsername",
                    "plannedStartDate": "2025-01-01T00:00:00.000Z",
                    "plannedDueDate": "2025-01-01T00:00:00.000Z",
                    "plannedDurationDays": 1,
                    "actualStartDate": "2025-01-01T00:00:00.000Z",
                    "actualCompletedDate": "2025-01-01T00:00:00.000Z",
                    "actualDurationDays": 1,
                    "isOverdue": true,
                    "isFromProgramTemplate": true,
                    "copyFromId": "0cb4c41e-eaae-82fe-2e9b-2eb955c3a6eb",
                    "programId": "e7713abf-dccd-8875-fea0-ba70124ab275",
                    "isDeleted": true,
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "shortId": "b57ad6cd-ccb1-4e97-0eaf-e3571976fba9"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "title": "test title",
                    "description": "test description",
                    "status": "test status",
                    "priority": "test priority",
                    "rank": "test rank",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "createdByUsername": "test createdByUsername",
                    "systemModifiedAt": "2025-01-01T00:00:00.000Z",
                    "userModifiedAt": "2025-01-01T00:00:00.000Z",
                    "modifiedBy": "c83cd391-495e-5939-8a99-da31359e09c4",
                    "modifiedByUsername": "test modifiedByUsername",
                    "requestorId": "b12bfbb1-9d85-fa16-d4c9-663e34e4fb0f",
                    "requestorUsername": "test requestorUsername",
                    "assigneeId": "1593ebb8-3015-92f3-b9ee-9f65afdca79e",
                    "assigneeUsername": "test assigneeUsername",
                    "plannedStartDate": "2025-01-01T00:00:00.000Z",
                    "plannedDueDate": "2025-01-01T00:00:00.000Z",
                    "plannedDurationDays": 1,
                    "actualStartDate": "2025-01-01T00:00:00.000Z",
                    "actualCompletedDate": "2025-01-01T00:00:00.000Z",
                    "actualDurationDays": 1,
                    "isOverdue": true,
                    "isFromProgramTemplate": true,
                    "copyFromId": "0cb4c41e-eaae-82fe-2e9b-2eb955c3a6eb",
                    "programId": "e7713abf-dccd-8875-fea0-ba70124ab275",
                    "isDeleted": true,
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "shortId": "b57ad6cd-ccb1-4e97-0eaf-e3571976fba9"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/programTaskDates": {
      "get": {
        "tags": [
          "Library Contents"
        ],
        "summary": "Program Task Dates",
        "description": "Provides a list of dates and associated date types for tasks created in Programs.",
        "operationId": "Reporting-ProgramTaskDatesGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramTaskDates"
                  }
                },
                "example": [
                  {
                    "taskId": "9740fc52-a9b1-4b1d-693a-9a5f4eae7b3c",
                    "dateType": "test dateType",
                    "taskDate": "2025-01-01T00:00:00.000Z",
                    "taskShortId": "8c46248f-683e-2468-d75a-371d3a046a16"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "taskId": "9740fc52-a9b1-4b1d-693a-9a5f4eae7b3c",
                    "dateType": "test dateType",
                    "taskDate": "2025-01-01T00:00:00.000Z",
                    "taskShortId": "8c46248f-683e-2468-d75a-371d3a046a16"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/publishingApprovalWorkflows": {
      "get": {
        "tags": [
          "Library Contents"
        ],
        "summary": "Publishing Approval Workflows",
        "description": "This model holds Library Content Publishing Workflow information like start and end date, step count, step order, and the content info which workflow is submitted on.",
        "operationId": "Reporting-PublishingApprovalWorkflowsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "systemModifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have systemModifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "systemModifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have systemModifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "startedAtStartTime",
            "in": "query",
            "description": "Only include records that have startedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "startedAtEndTime",
            "in": "query",
            "description": "Only include records that have startedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PublishingApprovalWorkflows"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "contentId": "7052bb92-43e5-79bb-3c6c-ea86f42a2efa",
                    "contentVersionId": "679461df-a4b0-0e69-3d47-a7e93c662268",
                    "name": "test name",
                    "activeStepOrder": 2,
                    "durationSeconds": 2,
                    "startedAt": "2025-01-01T00:00:00.000Z",
                    "endedAt": "2025-01-01T00:00:00.000Z",
                    "isVersionApproved": true,
                    "isVersionRejected": true,
                    "status": "Approved",
                    "totalSteps": 2,
                    "contentLibraryURL": "test contentLibraryURL",
                    "contentName": "test contentName",
                    "systemModifiedAt": "2025-01-01T00:00:00.000Z",
                    "submitterId": "02057121-45dc-3067-8b0a-0c8d9a37740d",
                    "submitterUsername": "test submitterUsername",
                    "submitWithAcknowledgements": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "contentId": "7052bb92-43e5-79bb-3c6c-ea86f42a2efa",
                    "contentVersionId": "679461df-a4b0-0e69-3d47-a7e93c662268",
                    "name": "test name",
                    "activeStepOrder": 2,
                    "durationSeconds": 2,
                    "startedAt": "2025-01-01T00:00:00.000Z",
                    "endedAt": "2025-01-01T00:00:00.000Z",
                    "isVersionApproved": true,
                    "isVersionRejected": true,
                    "status": "Approved",
                    "totalSteps": 2,
                    "contentLibraryURL": "test contentLibraryURL",
                    "contentName": "test contentName",
                    "systemModifiedAt": "2025-01-01T00:00:00.000Z",
                    "submitterId": "02057121-45dc-3067-8b0a-0c8d9a37740d",
                    "submitterUsername": "test submitterUsername",
                    "submitWithAcknowledgements": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/publishingApprovalWorkflowAcknowledgements": {
      "get": {
        "tags": [
          "Library Contents"
        ],
        "summary": "Publishing Approval Workflow Acknowledgements",
        "description": "This model holds acknowledgement assignment data. A workflow instance can have multiple acknowledgements assignments on workflow submission.",
        "operationId": "Reporting-PublishingApprovalWorkflowAcknowledgementsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "systemModifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have systemModifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "systemModifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have systemModifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PublishingApprovalWorkflowAcknowledgements"
                  }
                },
                "example": [
                  {
                    "workflowId": "b941aac3-2bdc-4f79-3000-d6f70abf8bae",
                    "acknowledgementId": "367e99ba-3c0d-e3e5-3e89-36c061a52b64",
                    "acknowledgementName": "test acknowledgementName",
                    "acknowledgementTitle": "test acknowledgementTitle",
                    "acknowledgementMessage": "test acknowledgementMessage",
                    "systemModifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "workflowId": "b941aac3-2bdc-4f79-3000-d6f70abf8bae",
                    "acknowledgementId": "367e99ba-3c0d-e3e5-3e89-36c061a52b64",
                    "acknowledgementName": "test acknowledgementName",
                    "acknowledgementTitle": "test acknowledgementTitle",
                    "acknowledgementMessage": "test acknowledgementMessage",
                    "systemModifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/publishingApprovalWorkflowStepsHistory": {
      "get": {
        "tags": [
          "Library Contents"
        ],
        "summary": "Publishing Approval Workflow Steps History",
        "description": "This model holds history of Library Content Publishing Workflow steps. It contains workflow information, start and end date of a step, the reviewer info, and the content info which workflow is submitted on.",
        "operationId": "Reporting-PublishingApprovalWorkflowStepsHistoryGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "systemModifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have systemModifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "systemModifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have systemModifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "startedAtStartTime",
            "in": "query",
            "description": "Only include records that have startedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "startedAtEndTime",
            "in": "query",
            "description": "Only include records that have startedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PublishingApprovalWorkflowStepsHistory"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "durationSeconds": 2,
                    "comment": "test comment",
                    "startedAt": "2025-01-01T00:00:00.000Z",
                    "endedAt": "2025-01-01T00:00:00.000Z",
                    "isLatest": true,
                    "isRevoked": true,
                    "name": "test name",
                    "approverUserId": "95ed7106-10c2-0fb3-3704-62c497665053",
                    "approverUsername": "test approverUsername",
                    "status": "Approved",
                    "stepOrder": 2,
                    "systemModifiedAt": "2025-01-01T00:00:00.000Z",
                    "contentVersionId": "679461df-a4b0-0e69-3d47-a7e93c662268",
                    "workflowid": "9e1d05bb-1285-0095-a259-91bef50e6973",
                    "workflowName": "test workflowName"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "durationSeconds": 2,
                    "comment": "test comment",
                    "startedAt": "2025-01-01T00:00:00.000Z",
                    "endedAt": "2025-01-01T00:00:00.000Z",
                    "isLatest": true,
                    "isRevoked": true,
                    "name": "test name",
                    "approverUserId": "95ed7106-10c2-0fb3-3704-62c497665053",
                    "approverUsername": "test approverUsername",
                    "status": "Approved",
                    "stepOrder": 2,
                    "systemModifiedAt": "2025-01-01T00:00:00.000Z",
                    "contentVersionId": "679461df-a4b0-0e69-3d47-a7e93c662268",
                    "workflowid": "9e1d05bb-1285-0095-a259-91bef50e6973",
                    "workflowName": "test workflowName"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/teamsites": {
      "get": {
        "tags": [
          "Library Contents"
        ],
        "summary": "Teamsites",
        "description": "Provides the list of Teamsites in the tenant.",
        "operationId": "Reporting-TeamsitesGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "isDeleted",
            "in": "query",
            "description": "Only include records that have isDeleted values equal to this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Teamsites"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "name": "West Coast Sales",
                    "isDeleted": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "name": "West Coast Sales",
                    "isDeleted": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/generatedLivedocs": {
      "get": {
        "tags": [
          "LiveDocs"
        ],
        "summary": "Generated Livedocs",
        "description": "Provides the list of LiveDoc generations that have occurred. This includes generations from all applications (Web, Salesforce, iOS, etc..) and all product areas DocCenter, NewsCenter, WorkSpace, ContentManager, PPT Plugin, etc.. Each row represents a single generation of a LiveDoc by a particular user.",
        "operationId": "Reporting-GeneratedLivedocsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeneratedLivedocs"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "contentId": "7052bb92-43e5-79bb-3c6c-ea86f42a2efa",
                    "contentVersionId": "679461df-a4b0-0e69-3d47-a7e93c662268",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "workspaceContentId": "c1148391-355f-aa7d-fa20-1d6b273181cd",
                    "workspaceContentVersionId": "4b887fdf-e2aa-3e83-b9e5-c8b5fef334d9",
                    "contentProfileId": "40dee8dc-fa54-8b04-e45d-eabea250480e",
                    "contentProfileName": "test contentProfileName",
                    "libraryContentName": "test libraryContentName",
                    "instanceName": "test instanceName",
                    "normalizedName": "test normalizedName",
                    "processingTimeSecs": 3.14,
                    "previewImageId": "d351ba6b-0459-dd2f-a6a6-4d0ac4db0e44",
                    "previewImageUrl": "test previewImageUrl",
                    "thumbnailImageId": "4963e141-b0f8-a388-4619-9c394a0167ae",
                    "thumbnailImageUrl": "test thumbnailImageUrl",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "flow": "livedoc",
                    "application": "test application",
                    "productArea": "ContentManager"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "contentId": "7052bb92-43e5-79bb-3c6c-ea86f42a2efa",
                    "contentVersionId": "679461df-a4b0-0e69-3d47-a7e93c662268",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "workspaceContentId": "c1148391-355f-aa7d-fa20-1d6b273181cd",
                    "workspaceContentVersionId": "4b887fdf-e2aa-3e83-b9e5-c8b5fef334d9",
                    "contentProfileId": "40dee8dc-fa54-8b04-e45d-eabea250480e",
                    "contentProfileName": "test contentProfileName",
                    "libraryContentName": "test libraryContentName",
                    "instanceName": "test instanceName",
                    "normalizedName": "test normalizedName",
                    "processingTimeSecs": 3.14,
                    "previewImageId": "d351ba6b-0459-dd2f-a6a6-4d0ac4db0e44",
                    "previewImageUrl": "test previewImageUrl",
                    "thumbnailImageId": "4963e141-b0f8-a388-4619-9c394a0167ae",
                    "thumbnailImageUrl": "test thumbnailImageUrl",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "flow": "livedoc",
                    "application": "test application",
                    "productArea": "ContentManager"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/generatedLivedocComponents": {
      "get": {
        "tags": [
          "LiveDocs"
        ],
        "summary": "Generated Livedoc Components",
        "description": "The list of components included in a generated LiveDoc including external content, dynamic content, slide references, and any LiveDoc component such as a table or chart.  Each row represents a component included in a particular LiveDoc generation. If a given Library content is included in a generated LiveDoc multiple times, it will be represented by multiple rows.",
        "operationId": "Reporting-GeneratedLivedocComponentsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeneratedLivedocComponents"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "format": "pptx",
                    "componentType": "Slide",
                    "generatedLivedocId": "57064c26-54cb-61a9-69f6-b95577684da1",
                    "insertMethod": "Dynamic",
                    "insertSource": "Library",
                    "insertStatus": "Success",
                    "contentId": "7052bb92-43e5-79bb-3c6c-ea86f42a2efa",
                    "contentVersionId": "679461df-a4b0-0e69-3d47-a7e93c662268",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "workspaceContentId": "c1148391-355f-aa7d-fa20-1d6b273181cd",
                    "workspaceContentVersionId": "4b887fdf-e2aa-3e83-b9e5-c8b5fef334d9",
                    "contentProfileId": "40dee8dc-fa54-8b04-e45d-eabea250480e",
                    "contentProfileName": "test contentProfileName",
                    "libraryContentName": "Market Leaders",
                    "instanceName": "Market Leaders",
                    "normalizedName": "Market Leaders",
                    "parentComponentId": "c6643687-61ff-bf97-20c6-ee47641698f4",
                    "thumbnailImageId": "4963e141-b0f8-a388-4619-9c394a0167ae",
                    "thumbnailImageUrl": "test thumbnailImageUrl",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "format": "pptx",
                    "componentType": "Slide",
                    "generatedLivedocId": "57064c26-54cb-61a9-69f6-b95577684da1",
                    "insertMethod": "Dynamic",
                    "insertSource": "Library",
                    "insertStatus": "Success",
                    "contentId": "7052bb92-43e5-79bb-3c6c-ea86f42a2efa",
                    "contentVersionId": "679461df-a4b0-0e69-3d47-a7e93c662268",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "workspaceContentId": "c1148391-355f-aa7d-fa20-1d6b273181cd",
                    "workspaceContentVersionId": "4b887fdf-e2aa-3e83-b9e5-c8b5fef334d9",
                    "contentProfileId": "40dee8dc-fa54-8b04-e45d-eabea250480e",
                    "contentProfileName": "test contentProfileName",
                    "libraryContentName": "Market Leaders",
                    "instanceName": "Market Leaders",
                    "normalizedName": "Market Leaders",
                    "parentComponentId": "c6643687-61ff-bf97-20c6-ee47641698f4",
                    "thumbnailImageId": "4963e141-b0f8-a388-4619-9c394a0167ae",
                    "thumbnailImageUrl": "test thumbnailImageUrl",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/generatedLivedocFields": {
      "get": {
        "tags": [
          "LiveDocs"
        ],
        "summary": "Generated Livedoc Fields",
        "description": "Provides all of the fields and values from the \"Tracked Fields\" that are set on the LiveDoc template from each LiveDoc generation.  Each row provides the field name and field value of the tracked variable from a particular LiveDoc generation.",
        "operationId": "Reporting-GeneratedLivedocFieldsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeneratedLivedocFields"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "generatedLivedocId": "57064c26-54cb-61a9-69f6-b95577684da1",
                    "fieldType": "String",
                    "fieldName": "Contact",
                    "fieldValue": "tommy boy",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "generatedLivedocId": "57064c26-54cb-61a9-69f6-b95577684da1",
                    "fieldType": "String",
                    "fieldName": "Contact",
                    "fieldValue": "tommy boy",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/generatedLivedocOutputFormats": {
      "get": {
        "tags": [
          "LiveDocs"
        ],
        "summary": "Generated Livedoc Output Formats",
        "description": "A list of output formats/files generated for a given generated LiveDoc. Each row represents a given output provided from a given generated LiveDoc. If a LiveDoc produces multiple outputs, there will be more than one row in this table for the generatedLiveDocId.",
        "operationId": "Reporting-GeneratedLivedocOutputFormatsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeneratedLivedocOutputFormats"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "generatedLivedocId": "57064c26-54cb-61a9-69f6-b95577684da1",
                    "format": "pptx",
                    "name": "Hello World",
                    "fileName": "Hello World.pptx",
                    "imageDpi": 200,
                    "hasClearNotes": true,
                    "outputLayout": "Note Pages",
                    "compatibility": null,
                    "hasOwnerPassword": true,
                    "hasOpenPassword": true,
                    "hasOwnerOptions": true,
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "size": 1
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "generatedLivedocId": "57064c26-54cb-61a9-69f6-b95577684da1",
                    "format": "pptx",
                    "name": "Hello World",
                    "fileName": "Hello World.pptx",
                    "imageDpi": 200,
                    "hasClearNotes": true,
                    "outputLayout": "Note Pages",
                    "compatibility": null,
                    "hasOwnerPassword": true,
                    "hasOpenPassword": true,
                    "hasOwnerOptions": true,
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "size": 1
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/generatedLivedocSlides": {
      "get": {
        "tags": [
          "LiveDocs"
        ],
        "summary": "Generated Livedoc Slides",
        "description": "A list of slides in each LiveDoc generation including global unique identifier for each slide.",
        "operationId": "Reporting-GeneratedLivedocSlidesGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeneratedLivedocSlides"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "generatedLivedocId": "57064c26-54cb-61a9-69f6-b95577684da1",
                    "pageShortId": "S00602",
                    "parentComponentId": "c6643687-61ff-bf97-20c6-ee47641698f4",
                    "position": 1,
                    "title": "Cover Slide",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "originContentRepository": "library",
                    "originContentId": "1420bfd7-4cda-144f-c7a0-f56f3fab7646",
                    "originContentVersionId": "99bf8927-130b-ebcc-dd0e-a2f8522c2255",
                    "originContentPageIndex": 1,
                    "insertMethod": "Shared",
                    "thumbnailImageUrl": "test thumbnailImageUrl"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "generatedLivedocId": "57064c26-54cb-61a9-69f6-b95577684da1",
                    "pageShortId": "S00602",
                    "parentComponentId": "c6643687-61ff-bf97-20c6-ee47641698f4",
                    "position": 1,
                    "title": "Cover Slide",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "originContentRepository": "library",
                    "originContentId": "1420bfd7-4cda-144f-c7a0-f56f3fab7646",
                    "originContentVersionId": "99bf8927-130b-ebcc-dd0e-a2f8522c2255",
                    "originContentPageIndex": 1,
                    "insertMethod": "Shared",
                    "thumbnailImageUrl": "test thumbnailImageUrl"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/livedocCustomContentDataSourceRetrieveDataRequests": {
      "get": {
        "tags": [
          "LiveDocs"
        ],
        "summary": "Livedoc Custom Content Data Source Retrieve Data Requests",
        "description": "This model contains LiveDoc DataSource retrieved custom content data information including records of the DataSource information each time retrieve custom content type DataSource data and records of the custom content instances used each time retrieve custom content type DataSource data.",
        "operationId": "Reporting-LivedocCustomContentDataSourceRetrieveDataRequestsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "requestTimeStartTime",
            "in": "query",
            "description": "Only include records that have requestTime values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "requestTimeEndTime",
            "in": "query",
            "description": "Only include records that have requestTime values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LivedocCustomContentDataSourceRetrieveDataRequests"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "region": "test region",
                    "requestTime": "2025-01-01T00:00:00.000Z",
                    "dataSourceLibraryContentId": "5569f9a6-51fb-c782-041d-5e9e77ba801b",
                    "dataSourceLibraryContentVersionId": "b4a878fb-2485-857f-518e-35d87f18e099",
                    "dataSourceLibraryContentName": "test dataSourceLibraryContentName",
                    "customContentId": "e47471b5-e750-570d-7be9-eca427a8b8ed",
                    "customContentName": "test customContentName",
                    "customContentVersion": 1,
                    "customContentTypeName": "test customContentTypeName",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "region": "test region",
                    "requestTime": "2025-01-01T00:00:00.000Z",
                    "dataSourceLibraryContentId": "5569f9a6-51fb-c782-041d-5e9e77ba801b",
                    "dataSourceLibraryContentVersionId": "b4a878fb-2485-857f-518e-35d87f18e099",
                    "dataSourceLibraryContentName": "test dataSourceLibraryContentName",
                    "customContentId": "e47471b5-e750-570d-7be9-eca427a8b8ed",
                    "customContentName": "test customContentName",
                    "customContentVersion": 1,
                    "customContentTypeName": "test customContentTypeName",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/livedocDataSourceInfo": {
      "get": {
        "tags": [
          "LiveDocs"
        ],
        "summary": "Livedoc Data Source Info",
        "description": "This model contains LiveDoc DataSource retrieved data request details.",
        "operationId": "Reporting-LivedocDataSourceInfoGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "systemModifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have systemModifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "systemModifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have systemModifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LivedocDataSourceInfo"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "libraryContentName": "test libraryContentName",
                    "libraryContentType": "Custom content",
                    "libraryContentVersion": 1,
                    "teamsiteId": "1bed6858-b624-3ec9-8610-13c14258785f",
                    "isReturnOneRow": true,
                    "salesforceVersion": "test salesforceVersion",
                    "salesforceBaseObject": "test salesforceBaseObject",
                    "isDeleted": true,
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "lastModified": "2025-01-01T00:00:00.000Z",
                    "lastModifiedBy": "0abfa2de-736d-6b8d-8828-a9d4289d41bb",
                    "systemModifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "libraryContentName": "test libraryContentName",
                    "libraryContentType": "Custom content",
                    "libraryContentVersion": 1,
                    "teamsiteId": "1bed6858-b624-3ec9-8610-13c14258785f",
                    "isReturnOneRow": true,
                    "salesforceVersion": "test salesforceVersion",
                    "salesforceBaseObject": "test salesforceBaseObject",
                    "isDeleted": true,
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "lastModified": "2025-01-01T00:00:00.000Z",
                    "lastModifiedBy": "0abfa2de-736d-6b8d-8828-a9d4289d41bb",
                    "systemModifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/livedocDataSourceRetrieveDataRequests": {
      "get": {
        "tags": [
          "LiveDocs"
        ],
        "summary": "Livedoc Data Source Retrieve Data Requests",
        "description": "This model contains the Data Source information used by LiveDoc to help answer questions such as - Which LiveDoc DataSource of which tenant of which region on which time has retrieved data? Who passed what data, requested what method to retrieve data? How long complete request, and what response during retrieve data?",
        "operationId": "Reporting-LivedocDataSourceRetrieveDataRequestsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "requestTimeStartTime",
            "in": "query",
            "description": "Only include records that have requestTime values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "requestTimeEndTime",
            "in": "query",
            "description": "Only include records that have requestTime values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LivedocDataSourceRetrieveDataRequests"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "region": "test region",
                    "requestTime": "2025-01-01T00:00:00.000Z",
                    "duration": 1230,
                    "dataSourceLibraryContentId": "5569f9a6-51fb-c782-041d-5e9e77ba801b",
                    "dataSourceLibraryContentVersionId": "b4a878fb-2485-857f-518e-35d87f18e099",
                    "dataSourceLibraryContentName": "test dataSourceLibraryContentName",
                    "dataSourceLibraryContentType": "Custom content",
                    "dataSourceLibraryContentVersion": 1,
                    "responseStatus": true,
                    "isSeismicCertificate": true,
                    "certificateId": "89f83a71-1e35-323f-536a-a730676089ad",
                    "certificateThumbprint": "test certificateThumbprint",
                    "tokenIsSeismicCertificate": true,
                    "tokenCertificateId": "117ec595-995f-03ce-c420-9ed32e0489d0",
                    "tokenCertificateThumbprint": "test tokenCertificateThumbprint",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "region": "test region",
                    "requestTime": "2025-01-01T00:00:00.000Z",
                    "duration": 1230,
                    "dataSourceLibraryContentId": "5569f9a6-51fb-c782-041d-5e9e77ba801b",
                    "dataSourceLibraryContentVersionId": "b4a878fb-2485-857f-518e-35d87f18e099",
                    "dataSourceLibraryContentName": "test dataSourceLibraryContentName",
                    "dataSourceLibraryContentType": "Custom content",
                    "dataSourceLibraryContentVersion": 1,
                    "responseStatus": true,
                    "isSeismicCertificate": true,
                    "certificateId": "89f83a71-1e35-323f-536a-a730676089ad",
                    "certificateThumbprint": "test certificateThumbprint",
                    "tokenIsSeismicCertificate": true,
                    "tokenCertificateId": "117ec595-995f-03ce-c420-9ed32e0489d0",
                    "tokenCertificateThumbprint": "test tokenCertificateThumbprint",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/livedocGlobalVariableRequests": {
      "get": {
        "tags": [
          "LiveDocs"
        ],
        "summary": "Livedoc Global Variable Requests",
        "description": "This model contains the Global Variable information created for LiveDocs and helps answer questions such as - When and where was a variable created/updated/deleted? Who created/updated/deleted variable?",
        "operationId": "Reporting-LivedocGlobalVariableRequestsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "requestTimeStartTime",
            "in": "query",
            "description": "Only include records that have requestTime values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "requestTimeEndTime",
            "in": "query",
            "description": "Only include records that have requestTime values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LivedocGlobalVariableRequests"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "region": "test region",
                    "requestType": "Custom content",
                    "requestTime": "2025-01-01T00:00:00.000Z",
                    "variableType": "Custom content",
                    "variableOutputDataType": "test variableOutputDataType",
                    "variableFormat": "test variableFormat",
                    "variableVersion": 1,
                    "operatorId": "test operatorId",
                    "operatorName": "test operatorName",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "region": "test region",
                    "requestType": "Custom content",
                    "requestTime": "2025-01-01T00:00:00.000Z",
                    "variableType": "Custom content",
                    "variableOutputDataType": "test variableOutputDataType",
                    "variableFormat": "test variableFormat",
                    "variableVersion": 1,
                    "operatorId": "test operatorId",
                    "operatorName": "test operatorName",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/digitalSalesRooms": {
      "get": {
        "tags": [
          "Livesend"
        ],
        "summary": "Digital Sales Rooms",
        "description": "A list of all the Digital Sales Rooms that sellers have created.",
        "operationId": "Reporting-DigitalSalesRoomsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DigitalSalesRooms"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "name": "test name",
                    "digitalSalesRoomTemplateId": "4225d5c4-2df2-a622-2686-e82dc8b05745",
                    "digitalSalesRoomTemplateVersionId": "6ee19b7a-32ce-42ab-23ff-ea5969855c3a",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "createdByUsername": "test createdByUsername",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "userModifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "name": "test name",
                    "digitalSalesRoomTemplateId": "4225d5c4-2df2-a622-2686-e82dc8b05745",
                    "digitalSalesRoomTemplateVersionId": "6ee19b7a-32ce-42ab-23ff-ea5969855c3a",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "createdByUsername": "test createdByUsername",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "userModifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/digitalSalesRoomViewingSessions": {
      "get": {
        "tags": [
          "Livesend"
        ],
        "summary": "Digital Sales Room Viewing Sessions",
        "description": "Provides the list of viewing sessions by DSR recipients including the datetime that the session started and ended. Each row represents a single session in a DSR link from a single user in a single browser tab.",
        "operationId": "Reporting-DigitalSalesRoomViewingSessionsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "sessionStartedAtTime",
            "in": "query",
            "description": "Only include records that have sessionStartedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "sessionEndedAtTime",
            "in": "query",
            "description": "Only include records that have sessionEndedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DigitalSalesRoomViewingSessions"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "digitalSalesRoomId": "771cc52a-7510-5b00-fd57-5ea91ab59f0d",
                    "roomDurationSeconds": 1,
                    "engagementUserEmail": "test engagementUserEmail",
                    "isEngagementUserInternal": true,
                    "sessionStartedAt": "2025-01-01T00:00:00.000Z",
                    "sessionEndedAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "city": "test city",
                    "state": "test state",
                    "country": "test country",
                    "ipAddress": "test ipAddress",
                    "geolocationLatitude": 4,
                    "geoLocationLongitude": 4,
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "digitalSalesRoomId": "771cc52a-7510-5b00-fd57-5ea91ab59f0d",
                    "roomDurationSeconds": 1,
                    "engagementUserEmail": "test engagementUserEmail",
                    "isEngagementUserInternal": true,
                    "sessionStartedAt": "2025-01-01T00:00:00.000Z",
                    "sessionEndedAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "city": "test city",
                    "state": "test state",
                    "country": "test country",
                    "ipAddress": "test ipAddress",
                    "geolocationLatitude": 4,
                    "geoLocationLongitude": 4,
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/livesendComments": {
      "get": {
        "tags": [
          "Livesend"
        ],
        "summary": "Livesend Comments",
        "description": "This model holds digital room comments and the details of the comment.",
        "operationId": "Reporting-LivesendCommentsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "sessionStartedAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "sessionStartedAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LivesendComments"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "livesendViewingSessionId": "9e263052-d599-f265-5587-3ab3c4bae1f6",
                    "livesendLinkId": "1d42f6ca-ed7d-a5ea-52cf-cdb76329c8f7",
                    "engagementUserEmail": "callahan.tommyboy@gmail.com",
                    "engagementUserName": "test engagementUserName",
                    "isInternalUser": true,
                    "isHidden": true,
                    "isRemoved": true,
                    "hasMentions": true,
                    "hasReactions": true,
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "createdAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "livesendViewingSessionId": "9e263052-d599-f265-5587-3ab3c4bae1f6",
                    "livesendLinkId": "1d42f6ca-ed7d-a5ea-52cf-cdb76329c8f7",
                    "engagementUserEmail": "callahan.tommyboy@gmail.com",
                    "engagementUserName": "test engagementUserName",
                    "isInternalUser": true,
                    "isHidden": true,
                    "isRemoved": true,
                    "hasMentions": true,
                    "hasReactions": true,
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "createdAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/livesendCommentMentions": {
      "get": {
        "tags": [
          "Livesend"
        ],
        "summary": "Livesend Comment Mentions",
        "description": "This model holds digital room mentions, the user mentioned, and the associated comment where the mention took place among other details.",
        "operationId": "Reporting-LivesendCommentMentionsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "sessionStartedAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "sessionStartedAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LivesendCommentMentions"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "livesendCommentId": "6c348b47-0ab0-4888-f52d-4b8b894aba34",
                    "mentionedUserEmail": "callahan.tommyboy@gmail.com",
                    "mentionedLivesendLinkContentId": "de19893d-a17e-3e06-4cb3-01fabb9a1519",
                    "mentionedLivesendLinkContentName": "test mentionedLivesendLinkContentName",
                    "isRemoved": true,
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "createdAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "livesendCommentId": "6c348b47-0ab0-4888-f52d-4b8b894aba34",
                    "mentionedUserEmail": "callahan.tommyboy@gmail.com",
                    "mentionedLivesendLinkContentId": "de19893d-a17e-3e06-4cb3-01fabb9a1519",
                    "mentionedLivesendLinkContentName": "test mentionedLivesendLinkContentName",
                    "isRemoved": true,
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "createdAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/livesendCommentReactions": {
      "get": {
        "tags": [
          "Livesend"
        ],
        "summary": "Livesend Comment Reactions",
        "description": "This model holds digital room reactions, the user who reacted, and the associated comment of the reaction among other details.",
        "operationId": "Reporting-LivesendCommentReactionsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "sessionStartedAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "sessionStartedAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LivesendCommentReactions"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "livesendCommentId": "6c348b47-0ab0-4888-f52d-4b8b894aba34",
                    "reaction": "test reaction",
                    "reactionName": "test reactionName",
                    "engagementUserEmail": "callahan.tommyboy@gmail.com",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "isRemoved": true,
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "livesendCommentId": "6c348b47-0ab0-4888-f52d-4b8b894aba34",
                    "reaction": "test reaction",
                    "reactionName": "test reactionName",
                    "engagementUserEmail": "callahan.tommyboy@gmail.com",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "isRemoved": true,
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/livesendContentViewingSessions": {
      "get": {
        "tags": [
          "Livesend"
        ],
        "summary": "Livesend Content Viewing Sessions",
        "description": "The model contains every view of LiveSend Link contents, the associated LiveSend Link, and the engagement details.",
        "operationId": "Reporting-LivesendContentViewingSessionsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "sessionStartedAtTime",
            "in": "query",
            "description": "Only include records that have sessionStartedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "sessionEndedAtTime",
            "in": "query",
            "description": "Only include records that have sessionEndedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LivesendContentViewingSessions"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "livesendLinkContentId": "9543f5aa-7ec9-97ca-b769-748e23722880",
                    "livesendLinkId": "1d42f6ca-ed7d-a5ea-52cf-cdb76329c8f7",
                    "livesendViewingSessionId": "9e263052-d599-f265-5587-3ab3c4bae1f6",
                    "interactionId": "9984bbdd-4648-cef2-7d7f-036b8fb88e1e",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "engagementUserEmailAddress": "callahan.tommyboy@gmail.com",
                    "isInternalUser": true,
                    "sessionStartedAt": "2025-01-01T00:00:00.000Z",
                    "sessionEndedAt": "2025-01-01T00:00:00.000Z",
                    "durationSeconds": 1
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "livesendLinkContentId": "9543f5aa-7ec9-97ca-b769-748e23722880",
                    "livesendLinkId": "1d42f6ca-ed7d-a5ea-52cf-cdb76329c8f7",
                    "livesendViewingSessionId": "9e263052-d599-f265-5587-3ab3c4bae1f6",
                    "interactionId": "9984bbdd-4648-cef2-7d7f-036b8fb88e1e",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "engagementUserEmailAddress": "callahan.tommyboy@gmail.com",
                    "isInternalUser": true,
                    "sessionStartedAt": "2025-01-01T00:00:00.000Z",
                    "sessionEndedAt": "2025-01-01T00:00:00.000Z",
                    "durationSeconds": 1
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/livesendLinks": {
      "get": {
        "tags": [
          "Livesend"
        ],
        "summary": "Livesend Links",
        "description": "Provides a full inventory of all LiveSend links created by all users from all applications.",
        "operationId": "Reporting-LivesendLinksGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LivesendLinks"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "allowDownload": true,
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "expireAfterView": true,
                    "expiresAt": "2025-01-01T00:00:00.000Z",
                    "isSeparateSend": true,
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "notificationMode": "Summary",
                    "hasPassword": true,
                    "urlPath": "MTkeyPLUSSIGNGEtQHfkyQUXupDEJ7E___qIX8Uk7Mu___64KCsAGn1jbtKyPPLUSSIGNPrpOUhU5PLUSSIGNoZzC4XGKziLDeQHcXAvB6HlBF9isRhO2A5ZYA2PXBM7OO3QEQUALSIGN",
                    "isRoomCustomized": true,
                    "isDigitalRoom": true,
                    "loginEnabled": true,
                    "interactionGroupName": "test interactionGroupName",
                    "interactionGroupId": "c481f1af-6dcc-6016-1cd8-ec21ba60d217"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "allowDownload": true,
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "expireAfterView": true,
                    "expiresAt": "2025-01-01T00:00:00.000Z",
                    "isSeparateSend": true,
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "notificationMode": "Summary",
                    "hasPassword": true,
                    "urlPath": "MTkeyPLUSSIGNGEtQHfkyQUXupDEJ7E___qIX8Uk7Mu___64KCsAGn1jbtKyPPLUSSIGNPrpOUhU5PLUSSIGNoZzC4XGKziLDeQHcXAvB6HlBF9isRhO2A5ZYA2PXBM7OO3QEQUALSIGN",
                    "isRoomCustomized": true,
                    "isDigitalRoom": true,
                    "loginEnabled": true,
                    "interactionGroupName": "test interactionGroupName",
                    "interactionGroupId": "c481f1af-6dcc-6016-1cd8-ec21ba60d217"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/livesendLinkContents": {
      "get": {
        "tags": [
          "Livesend"
        ],
        "summary": "Livesend Link Contents",
        "description": "Provides a list of content contained in LiveSend Links.",
        "operationId": "Reporting-LivesendLinkContentsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LivesendLinkContents"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "livesendLinkId": "1d42f6ca-ed7d-a5ea-52cf-cdb76329c8f7",
                    "name": "Extended Efficiency for CPG",
                    "totalPages": 4,
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true,
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "interactionGroupId": "c481f1af-6dcc-6016-1cd8-ec21ba60d217",
                    "wasViewed": true,
                    "numberOfSessions": 1,
                    "livesendLinkMeetingContentId": "058b819b-4318-0920-5325-1752a864ff5a"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "livesendLinkId": "1d42f6ca-ed7d-a5ea-52cf-cdb76329c8f7",
                    "name": "Extended Efficiency for CPG",
                    "totalPages": 4,
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true,
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "interactionGroupId": "c481f1af-6dcc-6016-1cd8-ec21ba60d217",
                    "wasViewed": true,
                    "numberOfSessions": 1,
                    "livesendLinkMeetingContentId": "058b819b-4318-0920-5325-1752a864ff5a"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/livesendLinkMeetingContents": {
      "get": {
        "tags": [
          "Livesend"
        ],
        "summary": "Livesend Link Meeting Contents",
        "description": "Provides a list of meeting contents contained in LiveSend Links, such as meeting recordings, meeting clips.",
        "operationId": "Reporting-LivesendLinkMeetingContentsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LivesendLinkMeetingContents"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "name": "test name",
                    "meetingClipId": "28f10efd-6834-b677-86bc-b81840cd09c3",
                    "meetingRecordingId": "2d286158-91ea-7889-234c-a070d1f8b674",
                    "meetingId": "d19fab44-f794-7357-f991-941da06dd9d3",
                    "type": "test type",
                    "livesendLinkId": "1d42f6ca-ed7d-a5ea-52cf-cdb76329c8f7",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true,
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "interactionGroupId": "c481f1af-6dcc-6016-1cd8-ec21ba60d217",
                    "wasViewed": true,
                    "numberOfSessions": 1
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "name": "test name",
                    "meetingClipId": "28f10efd-6834-b677-86bc-b81840cd09c3",
                    "meetingRecordingId": "2d286158-91ea-7889-234c-a070d1f8b674",
                    "meetingId": "d19fab44-f794-7357-f991-941da06dd9d3",
                    "type": "test type",
                    "livesendLinkId": "1d42f6ca-ed7d-a5ea-52cf-cdb76329c8f7",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "isDeleted": true,
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "interactionGroupId": "c481f1af-6dcc-6016-1cd8-ec21ba60d217",
                    "wasViewed": true,
                    "numberOfSessions": 1
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/livesendLinkMembers": {
      "get": {
        "tags": [
          "Livesend"
        ],
        "summary": "Livesend Link Members",
        "description": "Provides a list of email recipients for each LiveSend link. For links created with Generate LiveSend Link there are no members. Each row represents a recipient of a given link where the link is identified by LiveSendLinkId.",
        "operationId": "Reporting-LivesendLinkMembersGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LivesendLinkMembers"
                  }
                },
                "example": [
                  {
                    "externalUserId": "5c5e5ed7-63cc-a104-b220-632a1c95b093",
                    "livesendLinkId": "1d42f6ca-ed7d-a5ea-52cf-cdb76329c8f7",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "email": "callahan.tommyboy@gmail.com",
                    "internalUserId": "3dbff8bd-b9cd-b9d3-6ef7-da3907aa96d4",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "isInternalUser": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "externalUserId": "5c5e5ed7-63cc-a104-b220-632a1c95b093",
                    "livesendLinkId": "1d42f6ca-ed7d-a5ea-52cf-cdb76329c8f7",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "email": "callahan.tommyboy@gmail.com",
                    "internalUserId": "3dbff8bd-b9cd-b9d3-6ef7-da3907aa96d4",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "isInternalUser": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/livesendPageViews": {
      "get": {
        "tags": [
          "Livesend"
        ],
        "summary": "Livesend Page Views",
        "description": "Provides a timeline of page views for all LiveSend content viewed. Pages are numbered 1-N. URLs, Video, and other non-paged content are considered to be a 1 page document. Each row represents a view of a particular page in a particular LiveSend content at a particular moment in time.",
        "operationId": "Reporting-LivesendPageViewsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtStartTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtEndTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LivesendPageViews"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "duration": 1230,
                    "livesendLinkContentId": "9543f5aa-7ec9-97ca-b769-748e23722880",
                    "livesendViewingSessionId": "9e263052-d599-f265-5587-3ab3c4bae1f6",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "pageIndex": 1,
                    "sessionEndedAt": "2025-01-01T00:00:00.000Z",
                    "sessionStartedAt": "2025-01-01T00:00:00.000Z",
                    "livesendContentViewingSessionId": "f9573d29-ce13-d601-8031-9739191d5887"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "duration": 1230,
                    "livesendLinkContentId": "9543f5aa-7ec9-97ca-b769-748e23722880",
                    "livesendViewingSessionId": "9e263052-d599-f265-5587-3ab3c4bae1f6",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "pageIndex": 1,
                    "sessionEndedAt": "2025-01-01T00:00:00.000Z",
                    "sessionStartedAt": "2025-01-01T00:00:00.000Z",
                    "livesendContentViewingSessionId": "f9573d29-ce13-d601-8031-9739191d5887"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/livesendViewingSessions": {
      "get": {
        "tags": [
          "Livesend"
        ],
        "summary": "Livesend Viewing Sessions",
        "description": "Provides the list of viewing sessions by LiveSend recipients including the datetime that the session started and ended. Each row represents a single session in a LiveSend link from a single user in a single browser tab.",
        "operationId": "Reporting-LivesendViewingSessionsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "sessionStartedAtTime",
            "in": "query",
            "description": "Only include records that have sessionStartedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "sessionEndedAtTime",
            "in": "query",
            "description": "Only include records that have sessionEndedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LivesendViewingSessions"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "livesendLinkId": "1d42f6ca-ed7d-a5ea-52cf-cdb76329c8f7",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "sessionEndedAt": "2025-01-01T00:00:00.000Z",
                    "sessionStartedAt": "2025-01-01T00:00:00.000Z",
                    "roomDurationSeconds": 2,
                    "userWasLoggedIn": true,
                    "userLoginType": "test userLoginType",
                    "geolocationLatitude": 32.709999084472656,
                    "geolocationLongitude": 117.16000366210938,
                    "ipAddress": "127.0.0.1",
                    "city": "San Diego",
                    "state": "CA",
                    "country": "USA",
                    "engagementUserEmail": "callahan.tommyboy@gmail.com",
                    "isInternalUser": true,
                    "interactionId": "9984bbdd-4648-cef2-7d7f-036b8fb88e1e",
                    "interactionGroupId": "c481f1af-6dcc-6016-1cd8-ec21ba60d217",
                    "totalContentViewingDurationSeconds": 1230
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "livesendLinkId": "1d42f6ca-ed7d-a5ea-52cf-cdb76329c8f7",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "sessionEndedAt": "2025-01-01T00:00:00.000Z",
                    "sessionStartedAt": "2025-01-01T00:00:00.000Z",
                    "roomDurationSeconds": 2,
                    "userWasLoggedIn": true,
                    "userLoginType": "test userLoginType",
                    "geolocationLatitude": 32.709999084472656,
                    "geolocationLongitude": 117.16000366210938,
                    "ipAddress": "127.0.0.1",
                    "city": "San Diego",
                    "state": "CA",
                    "country": "USA",
                    "engagementUserEmail": "callahan.tommyboy@gmail.com",
                    "isInternalUser": true,
                    "interactionId": "9984bbdd-4648-cef2-7d7f-036b8fb88e1e",
                    "interactionGroupId": "c481f1af-6dcc-6016-1cd8-ec21ba60d217",
                    "totalContentViewingDurationSeconds": 1230
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/microappScreens": {
      "get": {
        "tags": [
          "Livesend"
        ],
        "summary": "Microapp Screens",
        "description": "Details on the screen-level views of microapp content occurring within a LiveSend Viewing Session.",
        "operationId": "Reporting-MicroappScreensGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MicroappScreens"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "name": "test name",
                    "layout": "test layout",
                    "orientation": "test orientation",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "libraryContentName": "test libraryContentName",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "screenType": "Page",
                    "thumbnailImageUrl": "test thumbnailImageUrl",
                    "screenIndex": 1,
                    "createdAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "name": "test name",
                    "layout": "test layout",
                    "orientation": "test orientation",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "libraryContentName": "test libraryContentName",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "screenType": "Page",
                    "thumbnailImageUrl": "test thumbnailImageUrl",
                    "screenIndex": 1,
                    "createdAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/microappScreenViews": {
      "get": {
        "tags": [
          "Livesend"
        ],
        "summary": "Microapp Screen Views",
        "description": "Details about the microapp screen that was viewed during a given LiveSend Viewing Session.",
        "operationId": "Reporting-MicroappScreenViewsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtStartTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtEndTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MicroappScreenViews"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "livesendContentViewingSessionId": "f9573d29-ce13-d601-8031-9739191d5887",
                    "livesendLinkContentId": "9543f5aa-7ec9-97ca-b769-748e23722880",
                    "microappScreenId": "a2973ba5-2d98-e46b-e9de-5173321945de",
                    "durationSeconds": 1,
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "sessionStartedAt": "2025-01-01T00:00:00.000Z",
                    "sessionEndedAt": "2025-01-01T00:00:00.000Z",
                    "engagementUserEmailAddress": "callahan.tommyboy@gmail.com",
                    "isInternalUser": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "livesendContentViewingSessionId": "f9573d29-ce13-d601-8031-9739191d5887",
                    "livesendLinkContentId": "9543f5aa-7ec9-97ca-b769-748e23722880",
                    "microappScreenId": "a2973ba5-2d98-e46b-e9de-5173321945de",
                    "durationSeconds": 1,
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "sessionStartedAt": "2025-01-01T00:00:00.000Z",
                    "sessionEndedAt": "2025-01-01T00:00:00.000Z",
                    "engagementUserEmailAddress": "callahan.tommyboy@gmail.com",
                    "isInternalUser": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/searchClicks": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search Clicks",
        "description": "Provides data on searches which resulted in at least one click. Each row represents a content that was clicked from a search result.",
        "operationId": "Reporting-SearchClicksGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtStartTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtEndTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchClicks"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "searchCycleId": "f5c88b66-843b-6c91-8ef8-77d0a8fa3580",
                    "searchHistoryId": "047bd307-c73a-1aeb-e77d-699b76f5c72e",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "clickedUserId": "72a44800-598e-7c7f-fddc-9579c2f2405b",
                    "resultIndex": 1,
                    "pageIndex": 1,
                    "viewMode": "list",
                    "clickType": "view",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "application": "Web",
                    "contentId": "7052bb92-43e5-79bb-3c6c-ea86f42a2efa",
                    "contentVersionId": "679461df-a4b0-0e69-3d47-a7e93c662268",
                    "instanceName": "Platinum Support Program",
                    "normalizedName": "Platinum Support Program",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "workspaceContentId": "c1148391-355f-aa7d-fa20-1d6b273181cd",
                    "workspaceContentVersionId": "4b887fdf-e2aa-3e83-b9e5-c8b5fef334d9",
                    "contentProfileId": "40dee8dc-fa54-8b04-e45d-eabea250480e",
                    "contentProfileName": "Sales News",
                    "externalContentId": "8a977fba-2237-abae-ee11-babd40d1b675",
                    "externalSystemType": "Lessonly",
                    "externalEntityType": "Lesson",
                    "externalContentUrl": "test externalContentUrl"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "searchCycleId": "f5c88b66-843b-6c91-8ef8-77d0a8fa3580",
                    "searchHistoryId": "047bd307-c73a-1aeb-e77d-699b76f5c72e",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "clickedUserId": "72a44800-598e-7c7f-fddc-9579c2f2405b",
                    "resultIndex": 1,
                    "pageIndex": 1,
                    "viewMode": "list",
                    "clickType": "view",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "application": "Web",
                    "contentId": "7052bb92-43e5-79bb-3c6c-ea86f42a2efa",
                    "contentVersionId": "679461df-a4b0-0e69-3d47-a7e93c662268",
                    "instanceName": "Platinum Support Program",
                    "normalizedName": "Platinum Support Program",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "workspaceContentId": "c1148391-355f-aa7d-fa20-1d6b273181cd",
                    "workspaceContentVersionId": "4b887fdf-e2aa-3e83-b9e5-c8b5fef334d9",
                    "contentProfileId": "40dee8dc-fa54-8b04-e45d-eabea250480e",
                    "contentProfileName": "Sales News",
                    "externalContentId": "8a977fba-2237-abae-ee11-babd40d1b675",
                    "externalSystemType": "Lessonly",
                    "externalEntityType": "Lesson",
                    "externalContentUrl": "test externalContentUrl"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/searchClickMatchDetails": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search Click Match Details",
        "description": "Provides data on matched type for each search click in the platform.",
        "operationId": "Reporting-SearchClickMatchDetailsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtStartTime",
            "in": "query",
            "description": "Only include records that have occurredAt values greater than or equal to this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtEndTime",
            "in": "query",
            "description": "Only include records that have occurredAt values less than or equal to this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchClickMatchDetails"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "searchClickId": "b3da0d55-e69e-3047-f7b6-dc474bd787a8",
                    "field": "test field",
                    "fieldType": "built-in",
                    "matchedValue": "test matchedValue",
                    "matchType": "Partial",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "searchClickId": "b3da0d55-e69e-3047-f7b6-dc474bd787a8",
                    "field": "test field",
                    "fieldType": "built-in",
                    "matchedValue": "test matchedValue",
                    "matchType": "Partial",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/searchFacets": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search Facets",
        "description": "Provides details about the content properties or built-in facets used to refine a search. Each row represents a facet or refinement used on a search.",
        "operationId": "Reporting-SearchFacetsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchFacets"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "searchHistoryId": "047bd307-c73a-1aeb-e77d-699b76f5c72e",
                    "searchCycleId": "f5c88b66-843b-6c91-8ef8-77d0a8fa3580",
                    "facetType": "custom",
                    "contentPropertyId": "945c7d53-0615-c0d3-1427-97bfdd7b7e1f",
                    "facetName": "Asset Type",
                    "facetValue": "RFP",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "searchHistoryId": "047bd307-c73a-1aeb-e77d-699b76f5c72e",
                    "searchCycleId": "f5c88b66-843b-6c91-8ef8-77d0a8fa3580",
                    "facetType": "custom",
                    "contentPropertyId": "945c7d53-0615-c0d3-1427-97bfdd7b7e1f",
                    "facetName": "Asset Type",
                    "facetValue": "RFP",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/searchHistory": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search History",
        "description": "Provides data on searches in the platform. Each row represents a user's search. Each change of the keyword as well as each facet change is uniquely identified as a row in this table. Each keyword and its related facet changes are bundled by a single Search Cycle Id. The Search Cycle Id persists until the user enters a new keyword.",
        "operationId": "Reporting-SearchHistoryGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtStartTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtEndTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchHistory"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "activeScope": "doccenter",
                    "application": "test application",
                    "resultCount": 87,
                    "resultCountContentManager": 0,
                    "resultCountControlCenter": 0,
                    "resultCountDocCenter": 17,
                    "resultCountNewsCenter": 64,
                    "resultCountWorkspace": 7,
                    "resultCountSuggestedDoc": 4,
                    "resultCountSuggestedFacet": 4,
                    "resultCountSuggestedFolder": 4,
                    "resultCountSuggestedKeyword": 4,
                    "searchCycleId": "f5c88b66-843b-6c91-8ef8-77d0a8fa3580",
                    "searchTermNormalized": "data",
                    "searchTermRaw": "data",
                    "searchType": "keyword search",
                    "sortBy": "Relevance",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "stepIndex": 1,
                    "stepType": "Initial Search",
                    "wasClicked": true,
                    "facetValues": "test facetValues"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "activeScope": "doccenter",
                    "application": "test application",
                    "resultCount": 87,
                    "resultCountContentManager": 0,
                    "resultCountControlCenter": 0,
                    "resultCountDocCenter": 17,
                    "resultCountNewsCenter": 64,
                    "resultCountWorkspace": 7,
                    "resultCountSuggestedDoc": 4,
                    "resultCountSuggestedFacet": 4,
                    "resultCountSuggestedFolder": 4,
                    "resultCountSuggestedKeyword": 4,
                    "searchCycleId": "f5c88b66-843b-6c91-8ef8-77d0a8fa3580",
                    "searchTermNormalized": "data",
                    "searchTermRaw": "data",
                    "searchType": "keyword search",
                    "sortBy": "Relevance",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "stepIndex": 1,
                    "stepType": "Initial Search",
                    "wasClicked": true,
                    "facetValues": "test facetValues"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/searchWords": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search Words",
        "description": "Provides data on words from searches in the platform. Each row represents an individual word in a user's search. This is a breakout of the Search History provided so that aggregation can be performed on individual search words.",
        "operationId": "Reporting-SearchWordsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtStartTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "occurredAtEndTime",
            "in": "query",
            "description": "Only include records that have occurredAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchWords"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "searchCycleId": "f5c88b66-843b-6c91-8ef8-77d0a8fa3580",
                    "searchHistoryId": "047bd307-c73a-1aeb-e77d-699b76f5c72e",
                    "word": "hello",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "occurredAt": "2025-01-01T00:00:00.000Z",
                    "searchCycleId": "f5c88b66-843b-6c91-8ef8-77d0a8fa3580",
                    "searchHistoryId": "047bd307-c73a-1aeb-e77d-699b76f5c72e",
                    "word": "hello",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/entitlementRoles": {
      "get": {
        "tags": [
          "Users & Groups"
        ],
        "summary": "Entitlement Roles",
        "description": "Roles are named containers that define user access and actions within the Seismic Platform. They combine entitlements and permissions to manage specific features a user can access.",
        "operationId": "Reporting-EntitlementRolesGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntitlementRoles"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "roleName": "test roleName",
                    "isPredefined": true,
                    "roleDescription": "test roleDescription",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "modifiedBy": "c83cd391-495e-5939-8a99-da31359e09c4",
                    "isDeleted": true
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "roleName": "test roleName",
                    "isPredefined": true,
                    "roleDescription": "test roleDescription",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "modifiedBy": "c83cd391-495e-5939-8a99-da31359e09c4",
                    "isDeleted": true
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/externalUsers": {
      "get": {
        "tags": [
          "Users & Groups"
        ],
        "summary": "External Users",
        "description": "This model contains a comprehensive list of external users (the ones that have received emails such as Send by Email or LiveSend from your internal users) and their email addresses. This list will also include internal users who have received emails from internal users. Each email address will only appears once.",
        "operationId": "Reporting-ExternalUsersGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExternalUsers"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "email": "user@company.com",
                    "emailDomain": "company.com",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "email": "user@company.com",
                    "emailDomain": "company.com",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/groups": {
      "get": {
        "tags": [
          "Users & Groups"
        ],
        "summary": "Groups",
        "description": "Lists all user groups in the platform and their respective details. This table will contain both groups created in Seismic Learning and Seismic Content.",
        "operationId": "Reporting-GroupsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Groups"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "name": "Sales Engineers",
                    "type": "Standard",
                    "parentGroupId": "0849cdb2-8101-814c-efb2-8d4995835879"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "name": "Sales Engineers",
                    "type": "Standard",
                    "parentGroupId": "0849cdb2-8101-814c-efb2-8d4995835879"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/groupManagers": {
      "get": {
        "tags": [
          "Users & Groups"
        ],
        "summary": "Group Managers",
        "description": "Lists all users who are managers of a group within the learning platform and the group(s) those users are a manager of.",
        "operationId": "Reporting-GroupManagersGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupManagers"
                  }
                },
                "example": [
                  {
                    "groupId": "8825db47-1b33-53be-0c80-dd001fc60aed",
                    "managerId": "0c2b0036-5b0e-abc0-9cb9-dfc430553cca",
                    "managerUserId": "1353457b-c35e-9d6f-666a-d475302de911",
                    "groupName": "test groupName"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "groupId": "8825db47-1b33-53be-0c80-dd001fc60aed",
                    "managerId": "0c2b0036-5b0e-abc0-9cb9-dfc430553cca",
                    "managerUserId": "1353457b-c35e-9d6f-666a-d475302de911",
                    "groupName": "test groupName"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/groupMembers": {
      "get": {
        "tags": [
          "Users & Groups"
        ],
        "summary": "Group Members",
        "description": "Provides details on users who are members of a group and the groups that they are a part of.",
        "operationId": "Reporting-GroupMembersGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "Only include records that have userId values equal to this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "groupId",
            "in": "query",
            "description": "Only include records that have groupId values equal to this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupMembers"
                  }
                },
                "example": [
                  {
                    "groupId": "8825db47-1b33-53be-0c80-dd001fc60aed",
                    "groupName": "Product Management",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "groupId": "8825db47-1b33-53be-0c80-dd001fc60aed",
                    "groupName": "Product Management",
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/indirectGroupManagers": {
      "get": {
        "tags": [
          "Users & Groups"
        ],
        "summary": "Indirect Group Managers",
        "description": "Lists all users who are managers of a group within the learning platform and the group(s) those users are a manager of.",
        "operationId": "Reporting-IndirectGroupManagersGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "indirectManagerId",
            "in": "query",
            "description": "Only include records that have indirectManagerId values equal to this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "groupId",
            "in": "query",
            "description": "Only include records that have groupId values equal to this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IndirectGroupManagers"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "groupId": "8825db47-1b33-53be-0c80-dd001fc60aed",
                    "groupName": "Product Management",
                    "indirectManagerId": "ad144947-1d41-0970-01bb-0b749d42691f"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "groupId": "8825db47-1b33-53be-0c80-dd001fc60aed",
                    "groupName": "Product Management",
                    "indirectManagerId": "ad144947-1d41-0970-01bb-0b749d42691f"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/indirectGroupMembers": {
      "get": {
        "tags": [
          "Users & Groups"
        ],
        "summary": "Indirect Group Members",
        "description": "Groups have a parent-child relationship. This model provides details on group member association inherited as being part of a child group.",
        "operationId": "Reporting-IndirectGroupMembersGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "indirectUserId",
            "in": "query",
            "description": "Only include records that have indirectUserId values equal to this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "groupId",
            "in": "query",
            "description": "Only include records that have groupId values equal to this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IndirectGroupMembers"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "groupId": "8825db47-1b33-53be-0c80-dd001fc60aed",
                    "groupName": "Product Management",
                    "indirectUserId": "7a85dc55-ee31-df3b-ea5a-09c1024ddd6b"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "groupId": "8825db47-1b33-53be-0c80-dd001fc60aed",
                    "groupName": "Product Management",
                    "indirectUserId": "7a85dc55-ee31-df3b-ea5a-09c1024ddd6b"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/trainingGroupManagers": {
      "get": {
        "tags": [
          "Users & Groups"
        ],
        "summary": "Training Group Managers",
        "description": "Lists all users who are managers of a group within the learning platform and the group(s) those users are a manager of.",
        "operationId": "Reporting-TrainingGroupManagersGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrainingGroupManagers"
                  }
                },
                "example": [
                  {
                    "groupId": "8825db47-1b33-53be-0c80-dd001fc60aed",
                    "managerId": "0c2b0036-5b0e-abc0-9cb9-dfc430553cca",
                    "managerUserId": "1353457b-c35e-9d6f-666a-d475302de911",
                    "groupName": "test groupName"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "groupId": "8825db47-1b33-53be-0c80-dd001fc60aed",
                    "managerId": "0c2b0036-5b0e-abc0-9cb9-dfc430553cca",
                    "managerUserId": "1353457b-c35e-9d6f-666a-d475302de911",
                    "groupName": "test groupName"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users & Groups"
        ],
        "summary": "Users",
        "description": "Provides a list of users in the system, including deleted (deactivated) users.",
        "operationId": "Reporting-UsersGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "userType",
            "in": "query",
            "description": "Filters on valid values for User Type such as premium, business, and partner",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Users"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "groupMembersUserId": "b796e233-639c-8340-c07d-d30541fb76a3",
                    "userPropertyAssignmentsUserId": "75c14343-d835-8b67-0f96-ab448ee723f1",
                    "username": "jmktg@silvertower.com",
                    "email": "jmktg@silvertower.com",
                    "emailDomain": "silvertower.com",
                    "firstName": "Joe",
                    "lastName": "Marketing",
                    "fullName": "Joe Marketing",
                    "address": "test address",
                    "phoneNumber": "test phoneNumber",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "latestActivityDate": "2025-01-01T00:00:00.000Z",
                    "organization": "Marketing",
                    "department": "Client Care",
                    "title": "Chief Demo Guy",
                    "isDeleted": true,
                    "isLocked": true,
                    "isDeactivated": true,
                    "deactivatedAt": "2025-01-01T00:00:00.000Z",
                    "licenseType": "premium",
                    "isSeismicEmployee": true,
                    "isSystemAdmin": true,
                    "defaultContentProfileId": "8b3ec78c-001a-f0a4-3e86-7c0b43245e7a",
                    "defaultContentProfileName": "Enterprise Sales - East",
                    "managerId": "0c2b0036-5b0e-abc0-9cb9-dfc430553cca",
                    "managerName": "test managerName",
                    "hireDate": "2025-01-01T00:00:00.000Z",
                    "location": "test location",
                    "ssoUserId": 1234345,
                    "externalId": "x68vh16i",
                    "isSeismicEnabled": true,
                    "isLessonlyEnabled": true,
                    "businessUnit": "test businessUnit",
                    "languageCode": "test languageCode"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "groupMembersUserId": "b796e233-639c-8340-c07d-d30541fb76a3",
                    "userPropertyAssignmentsUserId": "75c14343-d835-8b67-0f96-ab448ee723f1",
                    "username": "jmktg@silvertower.com",
                    "email": "jmktg@silvertower.com",
                    "emailDomain": "silvertower.com",
                    "firstName": "Joe",
                    "lastName": "Marketing",
                    "fullName": "Joe Marketing",
                    "address": "test address",
                    "phoneNumber": "test phoneNumber",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "deletedAt": "2025-01-01T00:00:00.000Z",
                    "latestActivityDate": "2025-01-01T00:00:00.000Z",
                    "organization": "Marketing",
                    "department": "Client Care",
                    "title": "Chief Demo Guy",
                    "isDeleted": true,
                    "isLocked": true,
                    "isDeactivated": true,
                    "deactivatedAt": "2025-01-01T00:00:00.000Z",
                    "licenseType": "premium",
                    "isSeismicEmployee": true,
                    "isSystemAdmin": true,
                    "defaultContentProfileId": "8b3ec78c-001a-f0a4-3e86-7c0b43245e7a",
                    "defaultContentProfileName": "Enterprise Sales - East",
                    "managerId": "0c2b0036-5b0e-abc0-9cb9-dfc430553cca",
                    "managerName": "test managerName",
                    "hireDate": "2025-01-01T00:00:00.000Z",
                    "location": "test location",
                    "ssoUserId": 1234345,
                    "externalId": "x68vh16i",
                    "isSeismicEnabled": true,
                    "isLessonlyEnabled": true,
                    "businessUnit": "test businessUnit",
                    "languageCode": "test languageCode"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/userEntitlementRoleAssignments": {
      "get": {
        "tags": [
          "Users & Groups"
        ],
        "summary": "User Entitlement Role Assignments",
        "description": "This model holds role assignments. Roles can be assigned to one or more users",
        "operationId": "Reporting-UserEntitlementRoleAssignmentsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "assignedAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values greater than or equal to this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "assignedAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values less than or equal to this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserEntitlementRoleAssignments"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "roleId": "cbf39d9c-73ec-a6aa-066a-cdbba0d1714d",
                    "roleName": "test roleName",
                    "assigneeId": "1593ebb8-3015-92f3-b9ee-9f65afdca79e",
                    "assignedAt": "2025-01-01T00:00:00.000Z",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "roleId": "cbf39d9c-73ec-a6aa-066a-cdbba0d1714d",
                    "roleName": "test roleName",
                    "assigneeId": "1593ebb8-3015-92f3-b9ee-9f65afdca79e",
                    "assignedAt": "2025-01-01T00:00:00.000Z",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/userGroupsList": {
      "get": {
        "tags": [
          "Users & Groups"
        ],
        "summary": "User Groups List",
        "description": "Provides a list of users in the system, including deleted (deactivated) users.",
        "operationId": "Reporting-UserGroupsListGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGroupsList"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "groupNameList": "Employees, Product, Sales"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "groupNameList": "Employees, Product, Sales"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/userProperties": {
      "get": {
        "tags": [
          "Users & Groups"
        ],
        "summary": "User Properties",
        "description": "Provides a list of user property names in the tenant, but does not include property values. Within LiveInsights, you will find each user property name has its own model named \"UP - [property name]\". Use these UP models for filterings or groupings of LiveInsights widgets.",
        "operationId": "Reporting-UserPropertiesGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProperties"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "name": "Region",
                    "type": "string"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "name": "Region",
                    "type": "string"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/userPropertyAssignments": {
      "get": {
        "tags": [
          "Users & Groups"
        ],
        "summary": "User Property Assignments",
        "description": "Provides a list of properties and their values assigned to each user. These correspond to the custom properties assigned to each of your users as defined in the System Administration > User Profile Settings.",
        "operationId": "Reporting-UserPropertyAssignmentsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "userPropertyId",
            "in": "query",
            "description": "Only include records that have userPropertyId values equal to this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserPropertyAssignments"
                  }
                },
                "example": [
                  {
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userPropertyId": "31a477a5-7f32-9508-1177-064e729a22fd",
                    "userPropertyName": "Nickname",
                    "userPropertyType": "string",
                    "userPropertyValue": "Quake",
                    "userPropertyValueBoolean": null,
                    "userPropertyValueDatetime": null,
                    "userPropertyValueInteger": null,
                    "userPropertyValueFloat": null,
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "userId": "08f0448e-079b-186e-a718-eb9ca3d94674",
                    "userPropertyId": "31a477a5-7f32-9508-1177-064e729a22fd",
                    "userPropertyName": "Nickname",
                    "userPropertyType": "string",
                    "userPropertyValue": "Quake",
                    "userPropertyValueBoolean": null,
                    "userPropertyValueDatetime": null,
                    "userPropertyValueInteger": null,
                    "userPropertyValueFloat": null,
                    "modifiedAt": "2025-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/workspaceContents": {
      "get": {
        "tags": [
          "Workspace"
        ],
        "summary": "Workspace Contents",
        "description": "A list of content in WorkSpace for all users. It also includes all \"virtual\" content created by sharing files/folders.",
        "operationId": "Reporting-WorkspaceContentsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkspaceContents"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "isCartContent": true,
                    "isContextualFolderContent": true,
                    "isDeleted": true,
                    "latestWorkspaceContentVersionCreatedAt": "2025-01-01T00:00:00.000Z",
                    "latestWorkspaceContentVersionId": "e79f7f96-da98-176d-1d46-298a67557aaf",
                    "latestWorkspaceContentVersionSize": 2,
                    "originContentProfileId": "7190902a-2362-d150-2d4b-8fbd17269a67",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "materializedPath": "test materializedPath",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "name": "test name",
                    "previewImageId": "d351ba6b-0459-dd2f-a6a6-4d0ac4db0e44",
                    "previewImageUrl": "test previewImageUrl",
                    "thumbnailImageId": "4963e141-b0f8-a388-4619-9c394a0167ae",
                    "thumbnailImageUrl": "test thumbnailImageUrl",
                    "version": 1,
                    "contextId": "0066A000002701IQAQ",
                    "contextName": "Callahan Workforce Mobility",
                    "contextType": "Opportunity",
                    "contextSystemType": "Salesforce",
                    "originApplication": "Seismic for PowerPoint"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "isCartContent": true,
                    "isContextualFolderContent": true,
                    "isDeleted": true,
                    "latestWorkspaceContentVersionCreatedAt": "2025-01-01T00:00:00.000Z",
                    "latestWorkspaceContentVersionId": "e79f7f96-da98-176d-1d46-298a67557aaf",
                    "latestWorkspaceContentVersionSize": 2,
                    "originContentProfileId": "7190902a-2362-d150-2d4b-8fbd17269a67",
                    "libraryContentId": "1c42a4b7-8190-0b48-dee0-5a480028a386",
                    "materializedPath": "test materializedPath",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "name": "test name",
                    "previewImageId": "d351ba6b-0459-dd2f-a6a6-4d0ac4db0e44",
                    "previewImageUrl": "test previewImageUrl",
                    "thumbnailImageId": "4963e141-b0f8-a388-4619-9c394a0167ae",
                    "thumbnailImageUrl": "test thumbnailImageUrl",
                    "version": 1,
                    "contextId": "0066A000002701IQAQ",
                    "contextName": "Callahan Workforce Mobility",
                    "contextType": "Opportunity",
                    "contextSystemType": "Salesforce",
                    "originApplication": "Seismic for PowerPoint"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    },
    "/workspaceContentVersions": {
      "get": {
        "tags": [
          "Workspace"
        ],
        "summary": "Workspace Content Versions",
        "description": "A list of content versions in WorkSpace for all users.",
        "operationId": "Reporting-WorkspaceContentVersionsGet",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "schema": {
              "type": "string",
              "format": "string",
              "default": "1"
            }
          },
          {
            "name": "modifiedAtStartTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "modifiedAtEndTime",
            "in": "query",
            "description": "Only include records that have modifiedAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtStartTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or after this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "createdAtEndTime",
            "in": "query",
            "description": "Only include records that have createdAt values on or before this value",
            "schema": {
              "type": "string",
              "format": "string",
              "default": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format of `application/json` or `text/csv`.",
            "schema": {
              "enum": [
                "application/json",
                "text/csv"
              ],
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkspaceContentVersions"
                  }
                },
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "format": "PPTX",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "name": "Extended Efficiency for CPG",
                    "previewImageId": "706410f8-b75d-4d9c-a9e5-6c15fa2bafca_0_109177",
                    "previewImageUrl": "https://tenant.seismic.com/Resource/Image.ashx?imageid=706410f8-b75d-4d9c-a9e5-6c15fa2bafca_0_109177",
                    "thumbnailImageId": "t706410f8-b75d-4d9c-a9e5-6c15fa2bafca",
                    "thumbnailImageUrl": "https://tenant.seismic.com/Resource/Image.ashx?imageid=t706410f8-b75d-4d9c-a9e5-6c15fa2bafca",
                    "size": 57331,
                    "version": 1,
                    "versionCreationMethod": "Guided Assembly",
                    "workspaceContentId": "c1148391-355f-aa7d-fa20-1d6b273181cd",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "generatedLivedocId": "57064c26-54cb-61a9-69f6-b95577684da1"
                  }
                ]
              },
              "text/csv": {
                "example": [
                  {
                    "id": "74b70bb8-8802-a1fd-f201-890375a60c8f",
                    "createdAt": "2025-01-01T00:00:00.000Z",
                    "createdBy": "57889934-37f5-0314-0689-8d54d4b970dc",
                    "format": "PPTX",
                    "libraryContentVersionId": "aa798baf-091e-c484-e244-1eeac447d3a7",
                    "name": "Extended Efficiency for CPG",
                    "previewImageId": "706410f8-b75d-4d9c-a9e5-6c15fa2bafca_0_109177",
                    "previewImageUrl": "https://tenant.seismic.com/Resource/Image.ashx?imageid=706410f8-b75d-4d9c-a9e5-6c15fa2bafca_0_109177",
                    "thumbnailImageId": "t706410f8-b75d-4d9c-a9e5-6c15fa2bafca",
                    "thumbnailImageUrl": "https://tenant.seismic.com/Resource/Image.ashx?imageid=t706410f8-b75d-4d9c-a9e5-6c15fa2bafca",
                    "size": 57331,
                    "version": 1,
                    "versionCreationMethod": "Guided Assembly",
                    "workspaceContentId": "c1148391-355f-aa7d-fa20-1d6b273181cd",
                    "modifiedAt": "2025-01-01T00:00:00.000Z",
                    "generatedLivedocId": "57064c26-54cb-61a9-69f6-b95577684da1"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerToken": [
              "Bearer "
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AdminImpersonationSessions": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "adminImpersonationUserId": {
            "type": "string"
          },
          "impersonateeUserId": {
            "type": "string"
          },
          "sessionStartedAt": {
            "type": "string",
            "format": "date-time"
          },
          "sessionEndedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationSeconds": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "adminImpersonationUserName": {
            "type": "string"
          },
          "impersonateeUserName": {
            "type": "string"
          }
        }
      },
      "ContentUsageHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "actionType": {
            "type": "string"
          },
          "application": {
            "type": "string"
          },
          "contentId": {
            "type": "string"
          },
          "contentVersionId": {
            "type": "string"
          },
          "contentProfileId": {
            "type": "string",
            "nullable": true
          },
          "contentProfileName": {
            "type": "string",
            "nullable": true
          },
          "contextId": {
            "type": "string",
            "nullable": true
          },
          "contextName": {
            "type": "string",
            "nullable": true
          },
          "contextType": {
            "type": "string",
            "nullable": true
          },
          "contextSystemType": {
            "type": "string",
            "nullable": true
          },
          "instanceName": {
            "type": "string"
          },
          "isBoundDelivery": {
            "type": "boolean"
          },
          "libraryContentId": {
            "type": "string",
            "nullable": true
          },
          "libraryContentVersionId": {
            "type": "string",
            "nullable": true
          },
          "livesendLinkContentId": {
            "type": "string",
            "nullable": true
          },
          "livesendLinkId": {
            "type": "string",
            "nullable": true
          },
          "occurredAt": {
            "type": "string",
            "format": "date-time"
          },
          "productArea": {
            "type": "string"
          },
          "totalPages": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "userId": {
            "type": "string"
          },
          "userUsername": {
            "type": "string"
          },
          "workspaceContentId": {
            "type": "string",
            "nullable": true
          },
          "workspaceContentVersionId": {
            "type": "string",
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "interactionId": {
            "type": "string"
          }
        }
      },
      "ContentViewHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "application": {
            "type": "string"
          },
          "contentId": {
            "type": "string"
          },
          "contentVersionId": {
            "type": "string"
          },
          "contentProfileId": {
            "type": "string",
            "nullable": true
          },
          "contentProfileName": {
            "type": "string",
            "nullable": true
          },
          "contextId": {
            "type": "string",
            "nullable": true
          },
          "contextName": {
            "type": "string",
            "nullable": true
          },
          "contextType": {
            "type": "string",
            "nullable": true
          },
          "contextSystemType": {
            "type": "string",
            "nullable": true
          },
          "instanceName": {
            "type": "string"
          },
          "libraryContentId": {
            "type": "string",
            "nullable": true
          },
          "libraryContentVersionId": {
            "type": "string",
            "nullable": true
          },
          "occurredAt": {
            "type": "string",
            "format": "date-time"
          },
          "productArea": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "userUsername": {
            "type": "string"
          },
          "workspaceContentId": {
            "type": "string",
            "nullable": true
          },
          "workspaceContentVersionId": {
            "type": "string",
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DailyActiveUsers": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "includesLessonlyActivity": {
            "type": "boolean"
          }
        }
      },
      "DistributionApprovalWorkflows": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "interactionGroupId": {
            "type": "string"
          },
          "engagementUrl": {
            "type": "string",
            "nullable": true
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "endedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "totalSteps": {
            "type": "integer",
            "format": "int64"
          },
          "activeStepOrder": {
            "type": "integer",
            "format": "int64"
          },
          "durationSeconds": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "status": {
            "type": "string"
          },
          "isDistributionApproved": {
            "type": "boolean"
          },
          "systemModifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DistributionApprovalWorkflowStepsHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "stepId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "workflowid": {
            "type": "string"
          },
          "workflowName": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "isRevoked": {
            "type": "boolean"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "endedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationSeconds": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "stepOrder": {
            "type": "integer",
            "format": "int64"
          },
          "isLatest": {
            "type": "boolean"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "reviewerUserId": {
            "type": "string",
            "nullable": true
          },
          "reviewerUsername": {
            "type": "string",
            "nullable": true
          },
          "interactionGroupId": {
            "type": "string"
          },
          "systemModifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "InteractionContexts": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "interactionId": {
            "type": "string"
          },
          "systemType": {
            "type": "string"
          },
          "systemId": {
            "type": "string"
          },
          "contextType": {
            "type": "string"
          },
          "contextId": {
            "type": "string"
          },
          "contextSourceType": {
            "type": "string"
          },
          "contextSource": {
            "type": "string"
          },
          "udmContextId": {
            "type": "string",
            "nullable": true
          },
          "udmContextHistoryId": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "interactionRecipientId": {
            "type": "string",
            "nullable": true
          },
          "contextName": {
            "type": "string",
            "nullable": true
          },
          "contextEmail": {
            "type": "string",
            "nullable": true
          },
          "systemName": {
            "type": "string"
          }
        }
      },
      "InteractionRecipients": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "interactionId": {
            "type": "string"
          },
          "internalUserId": {
            "type": "string",
            "nullable": true
          },
          "isInternalUser": {
            "type": "boolean"
          },
          "email": {
            "type": "string"
          },
          "emailDomain": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "recipientType": {
            "type": "string"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "NotificationFrequencySettings": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "userFullName": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string"
          },
          "productArea": {
            "type": "string"
          },
          "activityTrigger": {
            "type": "string"
          },
          "channel": {
            "type": "string"
          },
          "frequency": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "NotificationStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "userFullName": {
            "type": "string"
          },
          "productArea": {
            "type": "string"
          },
          "activityTrigger": {
            "type": "string"
          },
          "channel": {
            "type": "string"
          },
          "digestId": {
            "type": "string"
          },
          "sentTime": {
            "type": "string",
            "format": "date-time"
          },
          "isRead": {
            "type": "boolean"
          },
          "firstReadTime": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserActivity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "actionCategory": {
            "type": "string"
          },
          "actionType": {
            "type": "string"
          },
          "application": {
            "type": "string"
          },
          "contentId": {
            "type": "string",
            "nullable": true
          },
          "contentVersionId": {
            "type": "string",
            "nullable": true
          },
          "contentProfileId": {
            "type": "string",
            "nullable": true
          },
          "contentProfileName": {
            "type": "string",
            "nullable": true
          },
          "contextId": {
            "type": "string",
            "nullable": true
          },
          "contextName": {
            "type": "string",
            "nullable": true
          },
          "contextType": {
            "type": "string",
            "nullable": true
          },
          "contextSystemType": {
            "type": "string",
            "nullable": true
          },
          "instanceName": {
            "type": "string",
            "nullable": true
          },
          "isBoundDelivery": {
            "type": "boolean"
          },
          "libraryContentId": {
            "type": "string",
            "nullable": true
          },
          "libraryContentVersionId": {
            "type": "string",
            "nullable": true
          },
          "livesendLinkContentId": {
            "type": "string",
            "nullable": true
          },
          "livesendLinkId": {
            "type": "string",
            "nullable": true
          },
          "occurredAt": {
            "type": "string",
            "format": "date-time"
          },
          "productArea": {
            "type": "string"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "string"
          },
          "userUsername": {
            "type": "string"
          },
          "workspaceContentId": {
            "type": "string",
            "nullable": true
          },
          "workspaceContentVersionId": {
            "type": "string",
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "interactionId": {
            "type": "string",
            "nullable": true
          },
          "interactionGroupId": {
            "type": "string",
            "nullable": true
          },
          "isBlastInteractionGroup": {
            "type": "boolean",
            "nullable": true
          },
          "searchClickId": {
            "type": "string",
            "nullable": true
          },
          "searchCycleId": {
            "type": "string",
            "nullable": true
          },
          "searchHistoryId": {
            "type": "string",
            "nullable": true
          },
          "generatedLivedocId": {
            "type": "string",
            "nullable": true
          },
          "contentAskExpertsId": {
            "type": "string",
            "nullable": true
          },
          "contentReviewId": {
            "type": "string",
            "nullable": true
          },
          "isEngagementUserInternal": {
            "type": "boolean",
            "nullable": true
          },
          "engagementUserEmail": {
            "type": "string",
            "nullable": true
          },
          "livesendCommentId": {
            "type": "string",
            "nullable": true
          },
          "livesendViewingSessionId": {
            "type": "string",
            "nullable": true
          },
          "livesendContentViewingSessionId": {
            "type": "string",
            "nullable": true
          },
          "livesendReactionId": {
            "type": "string",
            "nullable": true
          },
          "learningProgressId": {
            "type": "string",
            "nullable": true
          },
          "socialShareId": {
            "type": "string",
            "nullable": true
          },
          "textMessageId": {
            "type": "string",
            "nullable": true
          },
          "skillAssessmentId": {
            "type": "string",
            "nullable": true
          },
          "contentInsertInstanceId": {
            "type": "string",
            "nullable": true
          },
          "meetingId": {
            "type": "string",
            "nullable": true
          },
          "digitalSalesRoomId": {
            "type": "string",
            "nullable": true
          },
          "digitalSalesRoomViewingSessionsId": {
            "type": "string",
            "nullable": true
          },
          "learningStatusId": {
            "type": "string",
            "nullable": true
          },
          "channelId": {
            "type": "string",
            "nullable": true
          },
          "postId": {
            "type": "string",
            "nullable": true
          },
          "postContentId": {
            "type": "string",
            "nullable": true
          },
          "announcementId": {
            "type": "string",
            "nullable": true
          },
          "pageClickId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "VirusScanAuditLog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "fileExtension": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "hasVirus": {
            "type": "boolean"
          },
          "wasNotScanned": {
            "type": "boolean"
          },
          "occurredAt": {
            "type": "string",
            "format": "date-time"
          },
          "productArea": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string"
          }
        }
      },
      "AiActivity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "aiGeneratedTextId": {
            "type": "string"
          },
          "useCase": {
            "type": "string"
          },
          "occurredAt": {
            "type": "string",
            "format": "date-time"
          },
          "creditType": {
            "type": "string"
          },
          "creditsUsed": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "AiGeneratedText": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "useCase": {
            "type": "string"
          },
          "flowRequestId": {
            "type": "string"
          },
          "aiModel": {
            "type": "string"
          },
          "aiModelProvider": {
            "type": "string"
          },
          "occurredAt": {
            "type": "string",
            "format": "date-time"
          },
          "isAuraCopilotFeature": {
            "type": "boolean"
          }
        }
      },
      "AiGeneratedTextUserFeedback": {
        "type": "object",
        "properties": {
          "feedbackId": {
            "type": "string"
          },
          "aiGeneratedTextId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "submittedAt": {
            "type": "string",
            "format": "date-time"
          },
          "score": {
            "type": "number",
            "format": "double"
          },
          "scoreType": {
            "type": "string"
          },
          "feedback": {
            "type": "string"
          }
        }
      },
      "AiSuggestedContentProperties": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "suggestedContentPropertyId": {
            "type": "string"
          },
          "suggestedContentPropertyValueId": {
            "type": "string"
          },
          "suggestedContentPropertyValue": {
            "type": "string"
          },
          "score": {
            "type": "number",
            "format": "double"
          },
          "isDeclined": {
            "type": "boolean",
            "nullable": true
          },
          "libraryContentId": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CopilotForSalesDsrRecommendations": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "operationType": {
            "type": "string"
          },
          "totalDsrCount": {
            "type": "integer",
            "format": "int32"
          },
          "digitalSalesRoomId": {
            "type": "string"
          },
          "interactionId": {
            "type": "string"
          },
          "crmEngagementStatus": {
            "type": "string"
          },
          "contextId": {
            "type": "string"
          },
          "contextType": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "occurredAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CopilotForSalesRecommendations": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "msftUserId": {
            "type": "string"
          },
          "totalRecommendationsCount": {
            "type": "integer",
            "format": "int32"
          },
          "externalRecommendationCount": {
            "type": "integer",
            "format": "int32"
          },
          "internalRecommendationCount": {
            "type": "integer",
            "format": "int32"
          },
          "operationType": {
            "type": "string"
          },
          "recommendationContext": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "occurredAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Announcements": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "announcementName": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Channels": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "channelName": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Posts": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "postName": {
            "type": "string"
          },
          "channelId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PostContents": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "postContentName": {
            "type": "string"
          },
          "postContentType": {
            "type": "string"
          },
          "postContentFormat": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Contents": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "instanceName": {
            "type": "string"
          },
          "libraryContentId": {
            "type": "string",
            "nullable": true
          },
          "normalizedName": {
            "type": "string"
          },
          "originRepository": {
            "type": "string"
          },
          "repository": {
            "type": "string"
          },
          "workspaceContentId": {
            "type": "string",
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "originApplication": {
            "type": "string",
            "nullable": true
          },
          "format": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          }
        }
      },
      "ContentActivities": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "actionCategory": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "instanceName": {
            "type": "string"
          },
          "libraryContentId": {
            "type": "string"
          },
          "libraryContentVersionId": {
            "type": "string",
            "nullable": true
          },
          "productArea": {
            "type": "string"
          },
          "application": {
            "type": "string"
          },
          "occurredAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ContentAskExperts": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "libraryContentVersionId": {
            "type": "string"
          },
          "libraryContentId": {
            "type": "string"
          },
          "questionBy": {
            "type": "string"
          },
          "questionAt": {
            "type": "string",
            "format": "date-time"
          },
          "question": {
            "type": "string"
          },
          "answeredBy": {
            "type": "string",
            "nullable": true
          },
          "answeredAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "answer": {
            "type": "string",
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "isDeleted": {
            "type": "boolean"
          }
        }
      },
      "ContentInsertInstances": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "contentInsertInstanceGroupId": {
            "type": "string"
          },
          "contentVersionId": {
            "type": "string"
          },
          "repository": {
            "type": "string"
          },
          "contentProfileId": {
            "type": "string",
            "nullable": true
          },
          "contentProfileName": {
            "type": "string",
            "nullable": true
          },
          "userID": {
            "type": "string"
          },
          "occurredAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ContentPages": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "contentId": {
            "type": "string"
          },
          "contentVersionId": {
            "type": "string"
          },
          "repository": {
            "type": "string"
          },
          "parentPageId": {
            "type": "string",
            "nullable": true
          },
          "parentPageIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentContentId": {
            "type": "string",
            "nullable": true
          },
          "parentContentVersionId": {
            "type": "string",
            "nullable": true
          },
          "parentRepository": {
            "type": "string",
            "nullable": true
          },
          "originLibraryContentPageId": {
            "type": "string",
            "nullable": true
          },
          "originLibraryContentPageIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "originLibraryContentId": {
            "type": "string",
            "nullable": true
          },
          "originLibraryContentVersionId": {
            "type": "string",
            "nullable": true
          },
          "parents": {
            "type": "string",
            "nullable": true
          },
          "occurredAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ContentReviews": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "libraryContentId": {
            "type": "string"
          },
          "libraryContentVersionId": {
            "type": "string"
          },
          "occurredAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "rating": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "starRating": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "reviewContent": {
            "type": "string",
            "nullable": true
          },
          "positivity": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ContentSlideInsertInstances": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "contentInsertInstanceId": {
            "type": "string"
          },
          "slideId": {
            "type": "string"
          },
          "slidePosition": {
            "type": "integer",
            "format": "int32"
          },
          "occurredAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "thumbnailImageUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ContentVersions": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "libraryContentVersionId": {
            "type": "string",
            "nullable": true
          },
          "workspaceContentVersionId": {
            "type": "string",
            "nullable": true
          },
          "contentId": {
            "type": "string"
          },
          "libraryContentId": {
            "type": "string",
            "nullable": true
          },
          "workspaceContentId": {
            "type": "string",
            "nullable": true
          },
          "isLatestVersion": {
            "type": "boolean"
          },
          "repository": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "thumbnailImageUrl": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CustomProperties": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "helperText": {
            "type": "string"
          },
          "editState": {
            "type": "string"
          },
          "listOrder": {
            "type": "integer",
            "format": "int64"
          },
          "hasDomainOfValues": {
            "type": "boolean"
          }
        }
      },
      "CustomPropertyAssignments": {
        "type": "object",
        "properties": {
          "customPropertyId": {
            "type": "string"
          },
          "customPropertyName": {
            "type": "string"
          },
          "objectId": {
            "type": "string"
          },
          "objectType": {
            "type": "string"
          },
          "customPropertyValue": {
            "type": "string"
          },
          "isRequired": {
            "type": "boolean"
          },
          "isRequiredForPublish": {
            "type": "boolean"
          },
          "teamsiteId": {
            "type": "string",
            "nullable": true
          },
          "teamsiteName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Meetings": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "externalMeetingId": {
            "type": "string",
            "nullable": true
          },
          "externalMeetingType": {
            "type": "string",
            "nullable": true
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "endedAt": {
            "type": "string",
            "format": "date-time"
          },
          "durationSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "hostId": {
            "type": "string"
          },
          "hostUserName": {
            "type": "string"
          },
          "prepFirstActivityAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "prepLastActivityAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "agendaCharacters": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "generalNotesCharacters": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "MeetingAgendaUpdates": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "meetingId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "occurredAt": {
            "type": "string",
            "format": "date-time"
          },
          "agendaCharacters": {
            "type": "integer",
            "format": "int32"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "MeetingContentPagePresentations": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "meetingContentPresentationId": {
            "type": "string"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "endedAt": {
            "type": "string",
            "format": "date-time"
          },
          "durationSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "barcode": {
            "type": "string",
            "nullable": true
          },
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "MeetingContentPresentations": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "meetingId": {
            "type": "string"
          },
          "contentId": {
            "type": "string",
            "nullable": true
          },
          "contentVersionId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "repository": {
            "type": "string",
            "nullable": true
          },
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endedAt": {
            "type": "string",
            "format": "date-time"
          },
          "durationSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "presentedById": {
            "type": "string",
            "nullable": true
          },
          "presentedByUserName": {
            "type": "string",
            "nullable": true
          },
          "presentedByIsInternalUser": {
            "type": "boolean"
          },
          "presentationType": {
            "type": "string"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isUploadedFromLocal": {
            "type": "boolean"
          },
          "personalizationMethod": {
            "type": "string",
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "MeetingGeneralNotesUpdates": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "meetingId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "occurredAt": {
            "type": "string",
            "format": "date-time"
          },
          "generalNotesCharacters": {
            "type": "integer",
            "format": "int32"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "MeetingKeywords": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "meetingId": {
            "type": "string"
          },
          "meetingParticipantDisplayName": {
            "type": "string",
            "nullable": true
          },
          "meetingParticipantDisplayIdentification": {
            "type": "string",
            "nullable": true
          },
          "keyword": {
            "type": "string"
          },
          "topic": {
            "type": "string"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "MeetingParticipants": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "meetingId": {
            "type": "string"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "engagementUserEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "engagementUserEmailDomain": {
            "type": "string",
            "nullable": true
          },
          "engagementUserPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "externalMeetingUserIdentification": {
            "type": "string",
            "nullable": true
          },
          "isInternalUser": {
            "type": "boolean"
          },
          "memberType": {
            "type": "string"
          },
          "talkTimeSeconds": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "listenTimeSeconds": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "MeetingQuestions": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "meetingId": {
            "type": "string"
          },
          "question": {
            "type": "string"
          },
          "topic": {
            "type": "string"
          },
          "speakerId": {
            "type": "string"
          },
          "speaker": {
            "type": "string",
            "nullable": true
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "endedAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "MeetingTrackers": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "meetingId": {
            "type": "string"
          },
          "tracker": {
            "type": "string"
          },
          "topic": {
            "type": "string"
          },
          "aggMentions": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PageClicks": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "occurredAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "productArea": {
            "type": "string"
          },
          "application": {
            "type": "string"
          },
          "actionType": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "pageType": {
            "type": "string"
          },
          "pageContentId": {
            "type": "string",
            "nullable": true
          },
          "pageContentVersionId": {
            "type": "string",
            "nullable": true
          },
          "clickType": {
            "type": "string"
          },
          "targetContentId": {
            "type": "string",
            "nullable": true
          },
          "targetContentVersionId": {
            "type": "string",
            "nullable": true
          },
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "isSuccessfulClick": {
            "type": "boolean"
          },
          "widgetId": {
            "type": "string"
          },
          "widgetTitle": {
            "type": "string",
            "nullable": true
          },
          "widgetType": {
            "type": "string"
          },
          "widgetSubType": {
            "type": "string",
            "nullable": true
          },
          "widgetRowIndex": {
            "type": "integer",
            "format": "int32"
          },
          "widgetColumnIndex": {
            "type": "integer",
            "format": "int32"
          },
          "widgetCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PageContentHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "libraryContentId": {
            "type": "string"
          },
          "libraryContentVersionId": {
            "type": "string"
          },
          "associatedObjectId": {
            "type": "string"
          },
          "associatedObjectName": {
            "type": "string"
          },
          "associatedObjectType": {
            "type": "string"
          },
          "associatedSeismicContentId": {
            "type": "string"
          },
          "associatedSeismicContentVersionId": {
            "type": "string"
          },
          "associatedLessonlyId": {
            "type": "string"
          },
          "lastSeenOnPageAt": {
            "type": "string",
            "format": "date-time"
          },
          "firstSeenOnPageAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "hadStaticAssociation": {
            "type": "boolean"
          },
          "hadDynamicAssociation": {
            "type": "boolean"
          },
          "pageName": {
            "type": "string"
          },
          "pageOwnerId": {
            "type": "string"
          },
          "associatedSeismicContentOwnerId": {
            "type": "string"
          },
          "associatedObjectViews": {
            "type": "integer",
            "format": "int32"
          },
          "associatedObjectUsage": {
            "type": "integer",
            "format": "int32"
          },
          "associatedObjectLiveSends": {
            "type": "integer",
            "format": "int32"
          },
          "associatedObjectUsers": {
            "type": "integer",
            "format": "int32"
          },
          "isMinFirstSeenOnPageAt": {
            "type": "boolean"
          },
          "isMaxLastSeenOnPageAt": {
            "type": "boolean"
          }
        }
      },
      "Watermarks": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "productArea": {
            "type": "string"
          },
          "application": {
            "type": "string"
          },
          "contentRepository": {
            "type": "string"
          },
          "contentVersionId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "interactionId": {
            "type": "string"
          },
          "watermarkTemplateText": {
            "type": "string"
          },
          "watermarkRuleFilterText": {
            "type": "string"
          },
          "watermarkType": {
            "type": "string"
          },
          "watermarkRawText": {
            "type": "string"
          },
          "occurredAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Emails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "interactionId": {
            "type": "string"
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "occurredAt": {
            "type": "string",
            "format": "date-time"
          },
          "firstOpenedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "interactionGroupId": {
            "type": "string",
            "nullable": true
          },
          "interactionGroupName": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "emailImpersonationUserId": {
            "type": "string",
            "nullable": true
          },
          "sentAsBlast": {
            "type": "boolean"
          }
        }
      },
      "EmailTemplateInstances": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "emailId": {
            "type": "string"
          },
          "emailTemplateId": {
            "type": "string",
            "nullable": true
          },
          "emailTemplateLibraryContentId": {
            "type": "string",
            "nullable": true
          },
          "emailTemplateLibraryContentVersionId": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "isReadOnly": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "emailTemplateContentProfileId": {
            "type": "string",
            "nullable": true
          },
          "isSenderCreated": {
            "type": "boolean"
          },
          "isClickedDelivery": {
            "type": "boolean"
          }
        }
      },
      "EmailTemplateSectionSelections": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "emailId": {
            "type": "string"
          },
          "emailTemplateInstanceId": {
            "type": "string"
          },
          "sectionName": {
            "type": "string"
          },
          "sectionType": {
            "type": "string"
          },
          "optionName": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "isReadOnly": {
            "type": "boolean"
          },
          "isChangedFromDefault": {
            "type": "boolean"
          },
          "isSharedTemplateComponentReadOnly": {
            "type": "boolean"
          },
          "sharedTemplateComponentLibraryContentId": {
            "type": "string",
            "nullable": true
          },
          "sharedTemplateComponentLibraryContentVersionId": {
            "type": "string",
            "nullable": true
          },
          "sharedTemplateComponentTeamsiteId": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EmailTemplateStaticImages": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "emailTemplateInstanceId": {
            "type": "string"
          },
          "repository": {
            "type": "string"
          },
          "contentId": {
            "type": "string",
            "nullable": true
          },
          "contentVersionId": {
            "type": "string",
            "nullable": true
          },
          "libraryContentId": {
            "type": "string",
            "nullable": true
          },
          "libraryContentVersionId": {
            "type": "string",
            "nullable": true
          },
          "workspaceContentId": {
            "type": "string",
            "nullable": true
          },
          "workspaceContentVersionId": {
            "type": "string",
            "nullable": true
          },
          "contentProfileId": {
            "type": "string",
            "nullable": true
          },
          "contentProfileName": {
            "type": "string",
            "nullable": true
          },
          "instanceName": {
            "type": "string",
            "nullable": true
          },
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "alternativeText": {
            "type": "string",
            "nullable": true
          },
          "alignment": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EmailTemplateVariableValues": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "emailId": {
            "type": "string"
          },
          "emailTemplateInstanceId": {
            "type": "string"
          },
          "sectionName": {
            "type": "string"
          },
          "placeholderText": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "sectionSelectionId": {
            "type": "string"
          },
          "variableType": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Answers": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "questionId": {
            "type": "string"
          },
          "sourceProgressId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "correctAnswer": {
            "type": "string",
            "nullable": true
          },
          "givenAnswer": {
            "type": "string",
            "nullable": true
          },
          "graderId": {
            "type": "string",
            "nullable": true
          },
          "isCorrect": {
            "type": "boolean",
            "nullable": true
          },
          "isGradable": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          }
        }
      },
      "Assignments": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "assignableId": {
            "type": "string"
          },
          "dueAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "reassignedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "assignorId": {
            "type": "string",
            "nullable": true
          },
          "assignableType": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CustomUserFields": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "isDeleted": {
            "type": "boolean"
          }
        }
      },
      "CustomUserFieldValues": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "customUserFieldId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "isDeleted": {
            "type": "boolean"
          }
        }
      },
      "FeedbackCriteria": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "answerId": {
            "type": "string",
            "nullable": true
          },
          "isAnswered": {
            "type": "boolean"
          },
          "questionId": {
            "type": "string"
          },
          "score": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "criterionName": {
            "type": "string"
          },
          "criterionDescription": {
            "type": "string",
            "nullable": true
          },
          "criterionType": {
            "type": "string"
          },
          "criterionCreatorId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "InstructorLedTrainingEvents": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "rsvpType": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "userModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "isArchived": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          }
        }
      },
      "InstructorLedTrainingEventAttendance": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "invitedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "rsvpStatus": {
            "type": "string"
          },
          "attendanceStatus": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean"
          }
        }
      },
      "InstructorLedTrainingEventContentAssignments": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "contentId": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "assignedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "isDeleted": {
            "type": "boolean"
          }
        }
      },
      "InstructorLedTrainingEventSessions": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "eventId": {
            "type": "string"
          },
          "sessionName": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "userModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "timeZone": {
            "type": "string"
          },
          "instructorName": {
            "type": "string",
            "nullable": true
          },
          "instructorId": {
            "type": "string",
            "nullable": true
          },
          "registrationCap": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "inPersonLocation": {
            "type": "string"
          },
          "videoConference": {
            "type": "string",
            "nullable": true
          },
          "isArchived": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          }
        }
      },
      "LearningJourneys": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "libraryContentId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string"
          },
          "publishedAt": {
            "type": "string",
            "format": "date-time"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LearningJourneySteps": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "learningJourneyId": {
            "type": "string"
          },
          "lessonId": {
            "type": "string"
          },
          "libraryContentId": {
            "type": "string"
          },
          "pathId": {
            "type": "string"
          },
          "instructorLedTrainingEventId": {
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "stepOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LearningJourneyTasks": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "LearningProgress": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "sourceProgressId": {
            "type": "string"
          },
          "learningProgressType": {
            "type": "string"
          },
          "lessonId": {
            "type": "string",
            "nullable": true
          },
          "pathId": {
            "type": "string",
            "nullable": true
          },
          "learningJourneyId": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "score": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lessonTitle": {
            "type": "string",
            "nullable": true
          },
          "pathTitle": {
            "type": "string",
            "nullable": true
          },
          "journeyTitle": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "progressStatus": {
            "type": "string"
          },
          "overdueStatus": {
            "type": "string"
          },
          "detailedStatus": {
            "type": "string"
          },
          "isLatest": {
            "type": "boolean"
          },
          "lessonVersionId": {
            "type": "string",
            "nullable": true
          },
          "isGradePending": {
            "type": "boolean",
            "nullable": true
          },
          "isAwaitingReassignment": {
            "type": "boolean"
          },
          "totalLearningJourneyObjectCount": {
            "type": "integer",
            "format": "int32"
          },
          "completedLearningJourneyObjectCount": {
            "type": "integer",
            "format": "int32"
          },
          "source": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sourceDescription": {
            "type": "string",
            "nullable": true
          },
          "gradedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "timeSpent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "views": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "viewsAfterCompletion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "graderId": {
            "type": "string",
            "nullable": true
          },
          "assignmentId": {
            "type": "string",
            "nullable": true
          },
          "dueAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "assignedOrVoluntary": {
            "type": "string"
          },
          "assignmentSource": {
            "type": "string",
            "nullable": true
          },
          "isPathProgressOutOfDate": {
            "type": "boolean",
            "nullable": true
          },
          "totalLessonCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "completedLessonCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "completionRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isInheritedAssignment": {
            "type": "boolean"
          }
        }
      },
      "LearningStatuses": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "learningProduct": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "occurredAt": {
            "type": "string",
            "format": "date-time"
          },
          "isOverdue": {
            "type": "boolean",
            "nullable": true
          },
          "isAssigned": {
            "type": "boolean",
            "nullable": true
          },
          "isGraded": {
            "type": "boolean",
            "nullable": true
          },
          "isLatest": {
            "type": "boolean",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "eventName": {
            "type": "string",
            "nullable": true
          },
          "eventSessionName": {
            "type": "string",
            "nullable": true
          },
          "learningProgressId": {
            "type": "string",
            "nullable": true
          },
          "lessonId": {
            "type": "string",
            "nullable": true
          },
          "lessonVersionId": {
            "type": "string",
            "nullable": true
          },
          "pathId": {
            "type": "string",
            "nullable": true
          },
          "learningJourneyId": {
            "type": "string",
            "nullable": true
          },
          "learningJourneyStepId": {
            "type": "string",
            "nullable": true
          },
          "sourceProgressId": {
            "type": "string",
            "nullable": true
          },
          "assignmentId": {
            "type": "string",
            "nullable": true
          },
          "instructorLedTrainingEventId": {
            "type": "string",
            "nullable": true
          },
          "instructorLedTrainingEventSessionId": {
            "type": "string",
            "nullable": true
          },
          "skillAssessmentRequestName": {
            "type": "string",
            "nullable": true
          },
          "skillRequestId": {
            "type": "string",
            "nullable": true
          },
          "skillReviewId": {
            "type": "string",
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "Lessons": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifierId": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "archivedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "archivedByUserId": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isArchived": {
            "type": "boolean"
          },
          "estimatedSecondsToComplete": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "workspaceId": {
            "type": "string",
            "nullable": true
          },
          "workspaceName": {
            "type": "string",
            "nullable": true
          },
          "lessonVersionId": {
            "type": "string",
            "nullable": true
          },
          "retakeScore": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string"
          },
          "positiveRatings": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "negativeRatings": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "skippedRatings": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contentId": {
            "type": "string"
          },
          "teamsiteId": {
            "type": "string"
          }
        }
      },
      "LessonTags": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "lessonId": {
            "type": "string"
          },
          "tagName": {
            "type": "string"
          },
          "libraryVisibilityStatus": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LessonVersions": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "lessonId": {
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "estimatedSecondsToComplete": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "workspaceId": {
            "type": "string",
            "nullable": true
          },
          "retakeScore": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "isValidVersion": {
            "type": "boolean"
          }
        }
      },
      "Paths": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifierId": {
            "type": "string",
            "nullable": true
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "archivedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "archivedByUserId": {
            "type": "string",
            "nullable": true
          },
          "isArchived": {
            "type": "boolean",
            "nullable": true
          },
          "publishedat": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "publisherId": {
            "type": "string",
            "nullable": true
          },
          "workspaceId": {
            "type": "string",
            "nullable": true
          },
          "workspaceName": {
            "type": "string",
            "nullable": true
          },
          "certificationId": {
            "type": "string",
            "nullable": true
          },
          "isCertification": {
            "type": "boolean"
          },
          "estimatedSecondsToComplete": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "PathContents": {
        "type": "object",
        "properties": {
          "lessonId": {
            "type": "string"
          },
          "lessonTitle": {
            "type": "string"
          },
          "lessonDescription": {
            "type": "string",
            "nullable": true
          },
          "pathId": {
            "type": "string"
          },
          "pathTitle": {
            "type": "string"
          },
          "pathDescription": {
            "type": "string",
            "nullable": true
          },
          "pathCreatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "pathCreatorId": {
            "type": "string"
          },
          "pathCreatorFullName": {
            "type": "string",
            "nullable": true
          },
          "pathModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "pathModifierId": {
            "type": "string",
            "nullable": true
          },
          "pathModifierFullName": {
            "type": "string",
            "nullable": true
          },
          "pathTagList": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PathTags": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "pathId": {
            "type": "string"
          },
          "tagName": {
            "type": "string"
          },
          "libraryVisibilityStatus": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ProficiencyLevels": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "companyId": {
            "type": "string"
          },
          "ratingDefinitionsKey": {
            "type": "string"
          },
          "ratingDefinitionsName": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "isDeleted": {
            "type": "boolean"
          }
        }
      },
      "Questions": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "rawChoices": {
            "type": "string",
            "nullable": true
          },
          "isRequired": {
            "type": "boolean"
          },
          "isGradable": {
            "type": "boolean"
          },
          "isPractice": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          },
          "lessonId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          }
        }
      },
      "Skills": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "companyId": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string"
          },
          "skillCategoryId": {
            "type": "string"
          },
          "skillCategoryName": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "isDeleted": {
            "type": "boolean"
          }
        }
      },
      "SkillAssessments": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "skillName": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "assessmentId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "evaluatorId": {
            "type": "string",
            "nullable": true
          },
          "rating": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "isShared": {
            "type": "boolean"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SkillProfiles": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "companyId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "isPublished": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          }
        }
      },
      "SkillProfileDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "companyId": {
            "type": "string"
          },
          "skillProfileId": {
            "type": "string"
          },
          "skillProfileName": {
            "type": "string"
          },
          "skillId": {
            "type": "string"
          },
          "skillCategoryName": {
            "type": "string"
          },
          "skillName": {
            "type": "string"
          },
          "skillDescription": {
            "type": "string"
          },
          "proficiencyLevelName": {
            "type": "string"
          },
          "proficiencyLevelBehaviors": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "isDeleted": {
            "type": "boolean"
          }
        }
      },
      "SkillRatings": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "reviewId": {
            "type": "string"
          },
          "ratableType": {
            "type": "string"
          },
          "ratableId": {
            "type": "string"
          },
          "isSkipped": {
            "type": "boolean",
            "nullable": true
          },
          "rating": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "scale": {
            "type": "integer",
            "format": "int32"
          },
          "ratingPercentage": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "benchmark": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SkillRequests": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "createdBy": {
            "type": "string"
          },
          "reviewTypes": {
            "type": "string",
            "nullable": true
          },
          "isPublished": {
            "type": "boolean"
          },
          "isRatingRequired": {
            "type": "boolean"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "scheduledAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isScheduled": {
            "type": "boolean"
          }
        }
      },
      "SkillReviews": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "reviewerId": {
            "type": "string"
          },
          "skillProfileId": {
            "type": "string",
            "nullable": true
          },
          "isPublished": {
            "type": "boolean"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SkillTags": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "companyId": {
            "type": "string"
          },
          "skillId": {
            "type": "string"
          },
          "taggableId": {
            "type": "string"
          },
          "taggableType": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "isDeleted": {
            "type": "boolean"
          }
        }
      },
      "SkillUserProfiles": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "skillProfileId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "isDeleted": {
            "type": "boolean"
          }
        }
      },
      "TrainingGroups": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "TrainingGroupMembers": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "groupName": {
            "type": "string"
          }
        }
      },
      "ContentProfiles": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "versionId": {
            "type": "string",
            "nullable": true
          },
          "isPredictiveOnly": {
            "type": "boolean"
          },
          "isPublished": {
            "type": "boolean"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "teamsiteId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isStagingProfile": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "ContentProfileAssignments": {
        "type": "object",
        "properties": {
          "contentProfileId": {
            "type": "string"
          },
          "libraryContentVersionId": {
            "type": "string"
          },
          "contentProfileVersionId": {
            "type": "string"
          },
          "isPredictiveOnly": {
            "type": "boolean"
          },
          "isPublished": {
            "type": "boolean"
          },
          "contentProfileName": {
            "type": "string"
          },
          "contentProfileType": {
            "type": "string"
          },
          "libraryContentId": {
            "type": "string"
          },
          "addToProfileAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "contentStatus": {
            "type": "string",
            "nullable": true
          },
          "contentLastPublishedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ContentProfileAssignmentsHistory": {
        "type": "object",
        "properties": {
          "contentProfileId": {
            "type": "string"
          },
          "libraryContentVersionId": {
            "type": "string"
          },
          "contentProfileVersionId": {
            "type": "string"
          },
          "isPredictiveOnly": {
            "type": "boolean"
          },
          "isPublished": {
            "type": "boolean"
          },
          "contentProfileName": {
            "type": "string"
          },
          "contentProfileType": {
            "type": "string"
          },
          "libraryContentId": {
            "type": "string"
          },
          "addToProfileAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "contentStatus": {
            "type": "string",
            "nullable": true
          },
          "contentLastPublishedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ContentProperties": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "hasDomainOfValues": {
            "type": "boolean"
          },
          "isRequired": {
            "type": "boolean"
          },
          "listOrder": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "teamsiteId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "ContentPropertyAssignments": {
        "type": "object",
        "properties": {
          "contentPropertyId": {
            "type": "string"
          },
          "libraryContentId": {
            "type": "string"
          },
          "contentPropertyName": {
            "type": "string"
          },
          "contentPropertyType": {
            "type": "string"
          },
          "contentPropertyValue": {
            "type": "string"
          },
          "contentPropertyValueBoolean": {
            "type": "boolean",
            "nullable": true
          },
          "contentPropertyValueDatetime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "contentPropertyValueInteger": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contentPropertyValueFloat": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        }
      },
      "CustomContents": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "libraryContentId": {
            "type": "string"
          },
          "libraryContentVersionId": {
            "type": "string"
          },
          "customContentTypeId": {
            "type": "string"
          },
          "customContentTypeVersionId": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CustomContentTypes": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "versionId": {
            "type": "string"
          },
          "versionTag": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "userModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          }
        }
      },
      "CustomContentTypeFields": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "customContentTypeId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "fieldType": {
            "type": "string"
          },
          "isOptional": {
            "type": "boolean"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DigitalSalesRoomTemplates": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isPublished": {
            "type": "boolean"
          },
          "publishedVersionExpiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "latestVersionCreatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "latestVersionCreatedBy": {
            "type": "string",
            "nullable": true
          },
          "latestVersionCreatedByUserName": {
            "type": "string",
            "nullable": true
          },
          "latestVersionId": {
            "type": "string"
          },
          "libraryUrl": {
            "type": "string"
          },
          "userModifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DigitalSalesRoomTemplateVersions": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "createdByUsername": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isPublished": {
            "type": "boolean"
          },
          "digitalSalesRoomTemplateId": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "ExternalContentDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "libraryContentId": {
            "type": "string"
          },
          "libraryContentVersionId": {
            "type": "string"
          },
          "originType": {
            "type": "string"
          },
          "externalId": {
            "type": "string"
          },
          "externalURL": {
            "type": "string",
            "format": "date-time"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isAutoUpdated": {
            "type": "boolean"
          },
          "isAutoPublished": {
            "type": "boolean"
          },
          "syncOwnerId": {
            "type": "string"
          },
          "syncOwnerUserName": {
            "type": "string"
          },
          "syncTimeStamp": {
            "type": "string"
          }
        }
      },
      "FavoriteStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "occurredAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "string"
          },
          "userFullName": {
            "type": "string"
          },
          "contentId": {
            "type": "string"
          },
          "contentName": {
            "type": "string"
          }
        }
      },
      "FollowStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "userFullName": {
            "type": "string"
          },
          "occurredAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "followedObject": {
            "type": "string"
          },
          "contentId": {
            "type": "string",
            "nullable": true
          },
          "contentName": {
            "type": "string",
            "nullable": true
          },
          "contentOwnerId": {
            "type": "string",
            "nullable": true
          },
          "contentOwnerUsername": {
            "type": "string",
            "nullable": true
          },
          "contentOwnerEmail": {
            "type": "string",
            "nullable": true
          },
          "teamsiteName": {
            "type": "string",
            "nullable": true
          },
          "folderId": {
            "type": "string",
            "nullable": true
          },
          "folderName": {
            "type": "string",
            "nullable": true
          },
          "profileId": {
            "type": "string",
            "nullable": true
          },
          "profileName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "LibraryContents": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "latestVersion": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string"
          },
          "format": {
            "type": "string",
            "nullable": true
          },
          "isCheckedOut": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedByUserId": {
            "type": "string",
            "nullable": true
          },
          "deletedByUserName": {
            "type": "string",
            "nullable": true
          },
          "isPublished": {
            "type": "boolean"
          },
          "isAvailableInProfile": {
            "type": "boolean"
          },
          "publishedVersionExpiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "latestLibraryContentVersionCreatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "latestLibraryContentVersionCreatedBy": {
            "type": "string",
            "nullable": true
          },
          "latestLibraryContentVersionCreatedByUsername": {
            "type": "string",
            "nullable": true
          },
          "latestLibraryContentVersionId": {
            "type": "string"
          },
          "latestLibraryContentVersionSize": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "latestLibraryContentVersionStatus": {
            "type": "string",
            "nullable": true
          },
          "latestLibraryContentVersionExpiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "libraryUrl": {
            "type": "string"
          },
          "docCenterUrl": {
            "type": "string",
            "nullable": true
          },
          "newsCenterUrl": {
            "type": "string",
            "nullable": true
          },
          "ownerId": {
            "type": "string"
          },
          "ownerUsername": {
            "type": "string"
          },
          "ownerEmail": {
            "type": "string",
            "nullable": true
          },
          "teamsiteId": {
            "type": "string"
          },
          "teamsiteName": {
            "type": "string",
            "nullable": true
          },
          "previewImageId": {
            "type": "string"
          },
          "previewImageUrl": {
            "type": "string"
          },
          "thumbnailImageId": {
            "type": "string"
          },
          "thumbnailImageUrl": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "shortId": {
            "type": "string",
            "nullable": true
          },
          "parentFolderLibraryContentId": {
            "type": "string",
            "nullable": true
          },
          "libraryPath": {
            "type": "string"
          },
          "hasPlannerAssociations": {
            "type": "boolean"
          },
          "hasProgramAssociations": {
            "type": "boolean"
          },
          "associatedProgramLibraryContentId": {
            "type": "string"
          },
          "originType": {
            "type": "string",
            "nullable": true
          },
          "lastModified": {
            "type": "string",
            "format": "date-time"
          },
          "contentStatus": {
            "type": "string",
            "nullable": true
          },
          "publishedVersionId": {
            "type": "string",
            "nullable": true
          },
          "publishedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "publishedByUserId": {
            "type": "string",
            "nullable": true
          },
          "publishedByUsername": {
            "type": "string",
            "nullable": true
          },
          "addLibraryContentToProfileAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "unpublishedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "LibraryContentExpertAssociations": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "libraryContentId": {
            "type": "string"
          },
          "contentExpertId": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LibraryContentVersions": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "createdByUsername": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedByUserId": {
            "type": "string",
            "nullable": true
          },
          "deletedByUserName": {
            "type": "string",
            "nullable": true
          },
          "isPublished": {
            "type": "boolean"
          },
          "isAvailableInProfile": {
            "type": "boolean"
          },
          "libraryContentId": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "previewImageId": {
            "type": "string"
          },
          "previewImageUrl": {
            "type": "string"
          },
          "thumbnailImageId": {
            "type": "string"
          },
          "thumbnailImageUrl": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "version": {
            "type": "string"
          },
          "versionStatus": {
            "type": "string",
            "nullable": true
          },
          "teamsiteId": {
            "type": "string"
          },
          "uploadedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "publishedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "publishedByUserId": {
            "type": "string",
            "nullable": true
          },
          "unpublishedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "Programs": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "createdByUsername": {
            "type": "string"
          },
          "systemModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "userModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string"
          },
          "modifiedByUsername": {
            "type": "string"
          },
          "programManagerId": {
            "type": "string",
            "nullable": true
          },
          "programManagerUsername": {
            "type": "string",
            "nullable": true
          },
          "plannedStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "plannedEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "plannedDurationDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "actualStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "actualEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "actualDurationDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isOverdue": {
            "type": "boolean"
          },
          "templateId": {
            "type": "string",
            "nullable": true
          },
          "copyFromId": {
            "type": "string",
            "nullable": true
          },
          "creationMethod": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "shortId": {
            "type": "string"
          },
          "programAudience": {
            "type": "string",
            "nullable": true
          },
          "programArchived": {
            "type": "boolean",
            "nullable": true
          },
          "programLaunchDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "programOnboardingGroup": {
            "type": "string",
            "nullable": true
          },
          "programOutcomeKpiFirst": {
            "type": "string",
            "nullable": true
          },
          "programOutcomeKpiSecond": {
            "type": "string",
            "nullable": true
          },
          "programOutcomeKpiThird": {
            "type": "string",
            "nullable": true
          },
          "programType": {
            "type": "string",
            "nullable": true
          },
          "programTopics": {
            "type": "string",
            "nullable": true
          },
          "programTrackers": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProgramAssociations": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "libraryContentId": {
            "type": "string",
            "nullable": true
          },
          "taskId": {
            "type": "string",
            "nullable": true
          },
          "programId": {
            "type": "string",
            "nullable": true
          },
          "taskShortId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProgramDates": {
        "type": "object",
        "properties": {
          "programId": {
            "type": "string"
          },
          "dateType": {
            "type": "string"
          },
          "programDate": {
            "type": "string",
            "format": "date-time"
          },
          "programShortId": {
            "type": "string"
          }
        }
      },
      "ProgramItems": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "priority": {
            "type": "string",
            "nullable": true
          },
          "rank": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "systemModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "userModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "plannedStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "plannedDueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "plannedDurationDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "actualStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "actualCompletedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "actualDurationDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isOverdue": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "shortId": {
            "type": "string"
          }
        }
      },
      "ProgramRequests": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "priority": {
            "type": "string",
            "nullable": true
          },
          "rank": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "createdByUsername": {
            "type": "string"
          },
          "systemModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "userModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string"
          },
          "modifiedByUsername": {
            "type": "string"
          },
          "requestorId": {
            "type": "string",
            "nullable": true
          },
          "requestorUsername": {
            "type": "string",
            "nullable": true
          },
          "assigneeId": {
            "type": "string",
            "nullable": true
          },
          "assigneeUsername": {
            "type": "string",
            "nullable": true
          },
          "plannedStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "plannedDueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "plannedDurationDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isOverdue": {
            "type": "boolean"
          },
          "programId": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "shortId": {
            "type": "string"
          }
        }
      },
      "ProgramRequestDates": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string"
          },
          "requestDate": {
            "type": "string",
            "format": "date-time"
          },
          "dateType": {
            "type": "string"
          },
          "requestShortId": {
            "type": "string"
          }
        }
      },
      "ProgramTasks": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string"
          },
          "priority": {
            "type": "string",
            "nullable": true
          },
          "rank": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "createdByUsername": {
            "type": "string"
          },
          "systemModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "userModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string"
          },
          "modifiedByUsername": {
            "type": "string"
          },
          "requestorId": {
            "type": "string",
            "nullable": true
          },
          "requestorUsername": {
            "type": "string",
            "nullable": true
          },
          "assigneeId": {
            "type": "string",
            "nullable": true
          },
          "assigneeUsername": {
            "type": "string",
            "nullable": true
          },
          "plannedStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "plannedDueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "plannedDurationDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "actualStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "actualCompletedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "actualDurationDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isOverdue": {
            "type": "boolean"
          },
          "isFromProgramTemplate": {
            "type": "boolean"
          },
          "copyFromId": {
            "type": "string",
            "nullable": true
          },
          "programId": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "shortId": {
            "type": "string"
          }
        }
      },
      "ProgramTaskDates": {
        "type": "object",
        "properties": {
          "taskId": {
            "type": "string"
          },
          "dateType": {
            "type": "string"
          },
          "taskDate": {
            "type": "string",
            "format": "date-time"
          },
          "taskShortId": {
            "type": "string"
          }
        }
      },
      "PublishingApprovalWorkflows": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "contentId": {
            "type": "string"
          },
          "contentVersionId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "activeStepOrder": {
            "type": "integer",
            "format": "int64"
          },
          "durationSeconds": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "endedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isVersionApproved": {
            "type": "boolean"
          },
          "isVersionRejected": {
            "type": "boolean"
          },
          "status": {
            "type": "string"
          },
          "totalSteps": {
            "type": "integer",
            "format": "int64"
          },
          "contentLibraryURL": {
            "type": "string"
          },
          "contentName": {
            "type": "string"
          },
          "systemModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "submitterId": {
            "type": "string"
          },
          "submitterUsername": {
            "type": "string"
          },
          "submitWithAcknowledgements": {
            "type": "boolean"
          }
        }
      },
      "PublishingApprovalWorkflowAcknowledgements": {
        "type": "object",
        "properties": {
          "workflowId": {
            "type": "string"
          },
          "acknowledgementId": {
            "type": "string"
          },
          "acknowledgementName": {
            "type": "string"
          },
          "acknowledgementTitle": {
            "type": "string"
          },
          "acknowledgementMessage": {
            "type": "string"
          },
          "systemModifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PublishingApprovalWorkflowStepsHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "durationSeconds": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "endedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isLatest": {
            "type": "boolean"
          },
          "isRevoked": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "approverUserId": {
            "type": "string",
            "nullable": true
          },
          "approverUsername": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string"
          },
          "stepOrder": {
            "type": "integer",
            "format": "int64"
          },
          "systemModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "contentVersionId": {
            "type": "string"
          },
          "workflowid": {
            "type": "string"
          },
          "workflowName": {
            "type": "string"
          }
        }
      },
      "Teamsites": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean"
          }
        }
      },
      "GeneratedLivedocs": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "contentId": {
            "type": "string"
          },
          "contentVersionId": {
            "type": "string"
          },
          "libraryContentId": {
            "type": "string",
            "nullable": true
          },
          "libraryContentVersionId": {
            "type": "string",
            "nullable": true
          },
          "workspaceContentId": {
            "type": "string",
            "nullable": true
          },
          "workspaceContentVersionId": {
            "type": "string",
            "nullable": true
          },
          "contentProfileId": {
            "type": "string",
            "nullable": true
          },
          "contentProfileName": {
            "type": "string",
            "nullable": true
          },
          "libraryContentName": {
            "type": "string",
            "nullable": true
          },
          "instanceName": {
            "type": "string"
          },
          "normalizedName": {
            "type": "string"
          },
          "processingTimeSecs": {
            "type": "number",
            "format": "double"
          },
          "previewImageId": {
            "type": "string",
            "nullable": true
          },
          "previewImageUrl": {
            "type": "string"
          },
          "thumbnailImageId": {
            "type": "string",
            "nullable": true
          },
          "thumbnailImageUrl": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "flow": {
            "type": "string"
          },
          "application": {
            "type": "string"
          },
          "productArea": {
            "type": "string"
          }
        }
      },
      "GeneratedLivedocComponents": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "format": {
            "type": "string",
            "nullable": true
          },
          "componentType": {
            "type": "string"
          },
          "generatedLivedocId": {
            "type": "string"
          },
          "insertMethod": {
            "type": "string",
            "nullable": true
          },
          "insertSource": {
            "type": "string",
            "nullable": true
          },
          "insertStatus": {
            "type": "string"
          },
          "contentId": {
            "type": "string",
            "nullable": true
          },
          "contentVersionId": {
            "type": "string",
            "nullable": true
          },
          "libraryContentId": {
            "type": "string",
            "nullable": true
          },
          "libraryContentVersionId": {
            "type": "string",
            "nullable": true
          },
          "workspaceContentId": {
            "type": "string",
            "nullable": true
          },
          "workspaceContentVersionId": {
            "type": "string",
            "nullable": true
          },
          "contentProfileId": {
            "type": "string",
            "nullable": true
          },
          "contentProfileName": {
            "type": "string",
            "nullable": true
          },
          "libraryContentName": {
            "type": "string",
            "nullable": true
          },
          "instanceName": {
            "type": "string",
            "nullable": true
          },
          "normalizedName": {
            "type": "string",
            "nullable": true
          },
          "parentComponentId": {
            "type": "string",
            "nullable": true
          },
          "thumbnailImageId": {
            "type": "string",
            "nullable": true
          },
          "thumbnailImageUrl": {
            "type": "string",
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "GeneratedLivedocFields": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "generatedLivedocId": {
            "type": "string"
          },
          "fieldType": {
            "type": "string"
          },
          "fieldName": {
            "type": "string"
          },
          "fieldValue": {
            "type": "string",
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "GeneratedLivedocOutputFormats": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "generatedLivedocId": {
            "type": "string"
          },
          "format": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string"
          },
          "imageDpi": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hasClearNotes": {
            "type": "boolean"
          },
          "outputLayout": {
            "type": "string",
            "nullable": true
          },
          "compatibility": {
            "type": "string",
            "nullable": true
          },
          "hasOwnerPassword": {
            "type": "boolean"
          },
          "hasOpenPassword": {
            "type": "boolean"
          },
          "hasOwnerOptions": {
            "type": "boolean"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "GeneratedLivedocSlides": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "generatedLivedocId": {
            "type": "string"
          },
          "pageShortId": {
            "type": "string",
            "nullable": true
          },
          "parentComponentId": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "originContentRepository": {
            "type": "string",
            "nullable": true
          },
          "originContentId": {
            "type": "string",
            "nullable": true
          },
          "originContentVersionId": {
            "type": "string",
            "nullable": true
          },
          "originContentPageIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "insertMethod": {
            "type": "string",
            "nullable": true
          },
          "thumbnailImageUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "LivedocCustomContentDataSourceRetrieveDataRequests": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "requestTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dataSourceLibraryContentId": {
            "type": "string"
          },
          "dataSourceLibraryContentVersionId": {
            "type": "string",
            "nullable": true
          },
          "dataSourceLibraryContentName": {
            "type": "string"
          },
          "customContentId": {
            "type": "string"
          },
          "customContentName": {
            "type": "string"
          },
          "customContentVersion": {
            "type": "string",
            "nullable": true
          },
          "customContentTypeName": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LivedocDataSourceInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "libraryContentId": {
            "type": "string"
          },
          "libraryContentVersionId": {
            "type": "string",
            "nullable": true
          },
          "libraryContentName": {
            "type": "string"
          },
          "libraryContentType": {
            "type": "string"
          },
          "libraryContentVersion": {
            "type": "string"
          },
          "teamsiteId": {
            "type": "string"
          },
          "isReturnOneRow": {
            "type": "boolean"
          },
          "salesforceVersion": {
            "type": "string",
            "nullable": true
          },
          "salesforceBaseObject": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifiedBy": {
            "type": "string",
            "nullable": true
          },
          "systemModifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LivedocDataSourceRetrieveDataRequests": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "requestTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "duration": {
            "type": "integer",
            "format": "int64"
          },
          "dataSourceLibraryContentId": {
            "type": "string"
          },
          "dataSourceLibraryContentVersionId": {
            "type": "string",
            "nullable": true
          },
          "dataSourceLibraryContentName": {
            "type": "string"
          },
          "dataSourceLibraryContentType": {
            "type": "string"
          },
          "dataSourceLibraryContentVersion": {
            "type": "string"
          },
          "responseStatus": {
            "type": "boolean",
            "nullable": true
          },
          "isSeismicCertificate": {
            "type": "boolean",
            "nullable": true
          },
          "certificateId": {
            "type": "string",
            "nullable": true
          },
          "certificateThumbprint": {
            "type": "string",
            "nullable": true
          },
          "tokenIsSeismicCertificate": {
            "type": "boolean",
            "nullable": true
          },
          "tokenCertificateId": {
            "type": "string",
            "nullable": true
          },
          "tokenCertificateThumbprint": {
            "type": "string",
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LivedocGlobalVariableRequests": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "requestType": {
            "type": "string"
          },
          "requestTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "variableType": {
            "type": "string"
          },
          "variableOutputDataType": {
            "type": "string"
          },
          "variableFormat": {
            "type": "string"
          },
          "variableVersion": {
            "type": "string"
          },
          "operatorId": {
            "type": "string",
            "nullable": true
          },
          "operatorName": {
            "type": "string",
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DigitalSalesRooms": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "digitalSalesRoomTemplateId": {
            "type": "string",
            "nullable": true
          },
          "digitalSalesRoomTemplateVersionId": {
            "type": "string",
            "nullable": true
          },
          "createdBy": {
            "type": "string"
          },
          "createdByUsername": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "userModifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DigitalSalesRoomViewingSessions": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "digitalSalesRoomId": {
            "type": "string"
          },
          "roomDurationSeconds": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "engagementUserEmail": {
            "type": "string",
            "nullable": true
          },
          "isEngagementUserInternal": {
            "type": "boolean",
            "nullable": true
          },
          "sessionStartedAt": {
            "type": "string",
            "format": "date-time"
          },
          "sessionEndedAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "ipAddress": {
            "type": "string",
            "nullable": true
          },
          "geolocationLatitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "geoLocationLongitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "LivesendComments": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "livesendViewingSessionId": {
            "type": "string"
          },
          "livesendLinkId": {
            "type": "string"
          },
          "engagementUserEmail": {
            "type": "string"
          },
          "engagementUserName": {
            "type": "string",
            "nullable": true
          },
          "isInternalUser": {
            "type": "boolean"
          },
          "isHidden": {
            "type": "boolean"
          },
          "isRemoved": {
            "type": "boolean"
          },
          "hasMentions": {
            "type": "boolean"
          },
          "hasReactions": {
            "type": "boolean"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LivesendCommentMentions": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "livesendCommentId": {
            "type": "string"
          },
          "mentionedUserEmail": {
            "type": "string",
            "nullable": true
          },
          "mentionedLivesendLinkContentId": {
            "type": "string",
            "nullable": true
          },
          "mentionedLivesendLinkContentName": {
            "type": "string",
            "nullable": true
          },
          "isRemoved": {
            "type": "boolean"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LivesendCommentReactions": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "livesendCommentId": {
            "type": "string"
          },
          "reaction": {
            "type": "string"
          },
          "reactionName": {
            "type": "string"
          },
          "engagementUserEmail": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "isRemoved": {
            "type": "boolean"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LivesendContentViewingSessions": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "livesendLinkContentId": {
            "type": "string"
          },
          "livesendLinkId": {
            "type": "string"
          },
          "livesendViewingSessionId": {
            "type": "string"
          },
          "interactionId": {
            "type": "string",
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "engagementUserEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "isInternalUser": {
            "type": "boolean"
          },
          "sessionStartedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sessionEndedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationSeconds": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "LivesendLinks": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "allowDownload": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "expireAfterView": {
            "type": "boolean"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isSeparateSend": {
            "type": "boolean"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "notificationMode": {
            "type": "string"
          },
          "hasPassword": {
            "type": "boolean"
          },
          "urlPath": {
            "type": "string"
          },
          "isRoomCustomized": {
            "type": "boolean"
          },
          "isDigitalRoom": {
            "type": "boolean"
          },
          "loginEnabled": {
            "type": "boolean"
          },
          "interactionGroupName": {
            "type": "string",
            "nullable": true
          },
          "interactionGroupId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "LivesendLinkContents": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "livesendLinkId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "libraryContentId": {
            "type": "string",
            "nullable": true
          },
          "interactionGroupId": {
            "type": "string"
          },
          "wasViewed": {
            "type": "boolean"
          },
          "numberOfSessions": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "livesendLinkMeetingContentId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "LivesendLinkMeetingContents": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "meetingClipId": {
            "type": "string",
            "nullable": true
          },
          "meetingRecordingId": {
            "type": "string"
          },
          "meetingId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "livesendLinkId": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "interactionGroupId": {
            "type": "string"
          },
          "wasViewed": {
            "type": "boolean"
          },
          "numberOfSessions": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "LivesendLinkMembers": {
        "type": "object",
        "properties": {
          "externalUserId": {
            "type": "string"
          },
          "livesendLinkId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "internalUserId": {
            "type": "string",
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "isInternalUser": {
            "type": "boolean"
          }
        }
      },
      "LivesendPageViews": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "duration": {
            "type": "integer",
            "format": "int64"
          },
          "livesendLinkContentId": {
            "type": "string"
          },
          "livesendViewingSessionId": {
            "type": "string"
          },
          "occurredAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "sessionEndedAt": {
            "type": "string",
            "format": "date-time"
          },
          "sessionStartedAt": {
            "type": "string",
            "format": "date-time"
          },
          "livesendContentViewingSessionId": {
            "type": "string"
          }
        }
      },
      "LivesendViewingSessions": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "livesendLinkId": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "sessionEndedAt": {
            "type": "string",
            "format": "date-time"
          },
          "sessionStartedAt": {
            "type": "string",
            "format": "date-time"
          },
          "roomDurationSeconds": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "userWasLoggedIn": {
            "type": "boolean",
            "nullable": true
          },
          "userLoginType": {
            "type": "string",
            "nullable": true
          },
          "geolocationLatitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "geolocationLongitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ipAddress": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "engagementUserEmail": {
            "type": "string",
            "nullable": true
          },
          "isInternalUser": {
            "type": "boolean",
            "nullable": true
          },
          "interactionId": {
            "type": "string",
            "nullable": true
          },
          "interactionGroupId": {
            "type": "string",
            "nullable": true
          },
          "totalContentViewingDurationSeconds": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "MicroappScreens": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "layout": {
            "type": "string"
          },
          "orientation": {
            "type": "string"
          },
          "libraryContentId": {
            "type": "string"
          },
          "libraryContentVersionId": {
            "type": "string"
          },
          "libraryContentName": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "screenType": {
            "type": "string"
          },
          "thumbnailImageUrl": {
            "type": "string",
            "nullable": true
          },
          "screenIndex": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "MicroappScreenViews": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "livesendContentViewingSessionId": {
            "type": "string"
          },
          "livesendLinkContentId": {
            "type": "string"
          },
          "microappScreenId": {
            "type": "string"
          },
          "durationSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "occurredAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "sessionStartedAt": {
            "type": "string",
            "format": "date-time"
          },
          "sessionEndedAt": {
            "type": "string",
            "format": "date-time"
          },
          "engagementUserEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "isInternalUser": {
            "type": "boolean"
          }
        }
      },
      "SearchClicks": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "occurredAt": {
            "type": "string",
            "format": "date-time"
          },
          "searchCycleId": {
            "type": "string"
          },
          "searchHistoryId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "clickedUserId": {
            "type": "string",
            "nullable": true
          },
          "resultIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "viewMode": {
            "type": "string"
          },
          "clickType": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "application": {
            "type": "string"
          },
          "contentId": {
            "type": "string",
            "nullable": true
          },
          "contentVersionId": {
            "type": "string",
            "nullable": true
          },
          "instanceName": {
            "type": "string",
            "nullable": true
          },
          "normalizedName": {
            "type": "string",
            "nullable": true
          },
          "libraryContentId": {
            "type": "string",
            "nullable": true
          },
          "libraryContentVersionId": {
            "type": "string",
            "nullable": true
          },
          "workspaceContentId": {
            "type": "string",
            "nullable": true
          },
          "workspaceContentVersionId": {
            "type": "string",
            "nullable": true
          },
          "contentProfileId": {
            "type": "string",
            "nullable": true
          },
          "contentProfileName": {
            "type": "string",
            "nullable": true
          },
          "externalContentId": {
            "type": "string",
            "nullable": true
          },
          "externalSystemType": {
            "type": "string",
            "nullable": true
          },
          "externalEntityType": {
            "type": "string",
            "nullable": true
          },
          "externalContentUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SearchClickMatchDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "searchClickId": {
            "type": "string"
          },
          "field": {
            "type": "string"
          },
          "fieldType": {
            "type": "string"
          },
          "matchedValue": {
            "type": "string"
          },
          "matchType": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SearchFacets": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "searchHistoryId": {
            "type": "string"
          },
          "searchCycleId": {
            "type": "string"
          },
          "facetType": {
            "type": "string"
          },
          "contentPropertyId": {
            "type": "string",
            "nullable": true
          },
          "facetName": {
            "type": "string"
          },
          "facetValue": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SearchHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "occurredAt": {
            "type": "string",
            "format": "date-time"
          },
          "activeScope": {
            "type": "string",
            "nullable": true
          },
          "application": {
            "type": "string"
          },
          "resultCount": {
            "type": "integer",
            "format": "int32"
          },
          "resultCountContentManager": {
            "type": "integer",
            "format": "int32"
          },
          "resultCountControlCenter": {
            "type": "integer",
            "format": "int32"
          },
          "resultCountDocCenter": {
            "type": "integer",
            "format": "int32"
          },
          "resultCountNewsCenter": {
            "type": "integer",
            "format": "int32"
          },
          "resultCountWorkspace": {
            "type": "integer",
            "format": "int32"
          },
          "resultCountSuggestedDoc": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "resultCountSuggestedFacet": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "resultCountSuggestedFolder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "resultCountSuggestedKeyword": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "searchCycleId": {
            "type": "string"
          },
          "searchTermNormalized": {
            "type": "string"
          },
          "searchTermRaw": {
            "type": "string"
          },
          "searchType": {
            "type": "string"
          },
          "sortBy": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "stepIndex": {
            "type": "integer",
            "format": "int32"
          },
          "stepType": {
            "type": "string"
          },
          "wasClicked": {
            "type": "boolean",
            "nullable": true
          },
          "facetValues": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SearchWords": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "occurredAt": {
            "type": "string",
            "format": "date-time"
          },
          "searchCycleId": {
            "type": "string"
          },
          "searchHistoryId": {
            "type": "string"
          },
          "word": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EntitlementRoles": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "roleName": {
            "type": "string"
          },
          "isPredefined": {
            "type": "boolean"
          },
          "roleDescription": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean"
          }
        }
      },
      "ExternalUsers": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailDomain": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Groups": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "parentGroupId": {
            "type": "string"
          }
        }
      },
      "GroupManagers": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string"
          },
          "managerId": {
            "type": "string"
          },
          "managerUserId": {
            "type": "string"
          },
          "groupName": {
            "type": "string"
          }
        }
      },
      "GroupMembers": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string"
          },
          "groupName": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "IndirectGroupManagers": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "groupName": {
            "type": "string"
          },
          "indirectManagerId": {
            "type": "string"
          }
        }
      },
      "IndirectGroupMembers": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "groupName": {
            "type": "string"
          },
          "indirectUserId": {
            "type": "string"
          }
        }
      },
      "TrainingGroupManagers": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string"
          },
          "managerId": {
            "type": "string"
          },
          "managerUserId": {
            "type": "string"
          },
          "groupName": {
            "type": "string"
          }
        }
      },
      "Users": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "groupMembersUserId": {
            "type": "string"
          },
          "userPropertyAssignmentsUserId": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "emailDomain": {
            "type": "string"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "latestActivityDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "organization": {
            "type": "string",
            "nullable": true
          },
          "department": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "isDeactivated": {
            "type": "boolean"
          },
          "deactivatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "licenseType": {
            "type": "string",
            "nullable": true
          },
          "isSeismicEmployee": {
            "type": "boolean"
          },
          "isSystemAdmin": {
            "type": "boolean"
          },
          "defaultContentProfileId": {
            "type": "string",
            "nullable": true
          },
          "defaultContentProfileName": {
            "type": "string",
            "nullable": true
          },
          "managerId": {
            "type": "string"
          },
          "managerName": {
            "type": "string"
          },
          "hireDate": {
            "type": "string",
            "format": "date-time"
          },
          "location": {
            "type": "string"
          },
          "ssoUserId": {
            "type": "string",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "nullable": true
          },
          "isSeismicEnabled": {
            "type": "boolean"
          },
          "isLessonlyEnabled": {
            "type": "boolean"
          },
          "businessUnit": {
            "type": "string"
          },
          "languageCode": {
            "type": "string"
          }
        }
      },
      "UserEntitlementRoleAssignments": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "roleId": {
            "type": "string"
          },
          "roleName": {
            "type": "string"
          },
          "assigneeId": {
            "type": "string"
          },
          "assignedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserGroupsList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "groupNameList": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserProperties": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "UserPropertyAssignments": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "userPropertyId": {
            "type": "string"
          },
          "userPropertyName": {
            "type": "string"
          },
          "userPropertyType": {
            "type": "string"
          },
          "userPropertyValue": {
            "type": "string",
            "nullable": true
          },
          "userPropertyValueBoolean": {
            "type": "boolean",
            "nullable": true
          },
          "userPropertyValueDatetime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userPropertyValueInteger": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userPropertyValueFloat": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "WorkspaceContents": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "isCartContent": {
            "type": "boolean"
          },
          "isContextualFolderContent": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "latestWorkspaceContentVersionCreatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "latestWorkspaceContentVersionId": {
            "type": "string"
          },
          "latestWorkspaceContentVersionSize": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "originContentProfileId": {
            "type": "string",
            "nullable": true
          },
          "libraryContentId": {
            "type": "string",
            "nullable": true
          },
          "materializedPath": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "previewImageId": {
            "type": "string"
          },
          "previewImageUrl": {
            "type": "string"
          },
          "thumbnailImageId": {
            "type": "string"
          },
          "thumbnailImageUrl": {
            "type": "string"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "contextId": {
            "type": "string",
            "nullable": true
          },
          "contextName": {
            "type": "string",
            "nullable": true
          },
          "contextType": {
            "type": "string",
            "nullable": true
          },
          "contextSystemType": {
            "type": "string",
            "nullable": true
          },
          "originApplication": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WorkspaceContentVersions": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "format": {
            "type": "string",
            "nullable": true
          },
          "libraryContentVersionId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "previewImageId": {
            "type": "string"
          },
          "previewImageUrl": {
            "type": "string"
          },
          "thumbnailImageId": {
            "type": "string"
          },
          "thumbnailImageUrl": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "versionCreationMethod": {
            "type": "string"
          },
          "workspaceContentId": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "generatedLivedocId": {
            "type": "string",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "JWTBearerToken": {
        "type": "apiKey",
        "description": "A JWT Bearer token in the Authorization header identifying the Seismic user making the request.",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}